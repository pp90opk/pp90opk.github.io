{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/send/send-card-section.tsx","webpack:///./src/services/server-api-types.ts","webpack:///./src/components/editor/content-viewer.tsx","webpack:///./src/components/common/editable-pairs.tsx","webpack:///./src/services/desktop-api.ts","webpack:///./src/model/http/sources.ts","webpack:///./src/components/common/loading-card.tsx","webpack:///./src/model/rules/rule-serialization.ts","webpack:///./src/components/common/inputs.tsx","webpack:///./src/components/common/format-button.tsx","webpack:///./src/components/common/editable-params.tsx","webpack:///./src/components/editor/image-viewer.tsx","webpack:///./src/model/events/body-formatting.ts","webpack:///./src/components/common/text-content.tsx","webpack:///./src/model/http/har.ts","webpack:///./src/model/http/exchange.ts","webpack:///./src/metrics.ts","webpack:///./src/routing.tsx","webpack:///./src/model/websockets/websocket-stream.ts","webpack:///./src/model/filters/syntax-matching.ts","webpack:///./src/model/filters/syntax-parts.ts","webpack:///./src/model/filters/search-filters.ts","webpack:///./src/model/ui/context-menu.ts","webpack:///./src/model/ui/ui-store.ts","webpack:///./src/model/account/account-store.ts","webpack:///./src/model/network.ts","webpack:///./src/model/proxy-store.ts","webpack:///./src/model/tls/failed-tls-connection.ts","webpack:///./src/model/tls/tls-tunnel.ts","webpack:///./src/model/webrtc/rtc-connection.ts","webpack:///./src/model/webrtc/rtc-data-channel.ts","webpack:///./src/model/webrtc/rtc-media-track.ts","webpack:///./src/model/events/events-store.ts","webpack:///./src/components/component-utils.tsx","webpack:///./src/components/common/close-button.tsx","webpack:///./src/components/common/docs-link.tsx","webpack:///./src/components/intercept/intercept-option.tsx","webpack:///./src/components/intercept/config/manual-intercept-config.tsx","webpack:///./src/components/common/copy-button.tsx","webpack:///./src/components/intercept/config/existing-terminal-config.tsx","webpack:///./src/components/intercept/config/electron-config.tsx","webpack:///./src/components/intercept/config/android-device-config.tsx","webpack:///./src/components/intercept/config/android-adb-config.tsx","webpack:///./src/components/intercept/config/existing-browser-config.tsx","webpack:///./src/components/intercept/config/intercept-target-list.tsx","webpack:///./src/components/intercept/config/jvm-config.tsx","webpack:///./src/components/intercept/config/docker-attach-config.tsx","webpack:///./src/components/intercept/config/manual-ios-config.tsx","webpack:///./src/model/interception/interceptors.ts","webpack:///./src/model/interception/interceptor-store.ts","webpack:///./src/model/api/api-store.ts","webpack:///./src/services/ui-update-worker.ts","webpack:///./src/services/update-management.ts","webpack:///./src/components/sidebar.tsx","webpack:///./src/components/intercept/connected-sources.tsx","webpack:///./src/components/common/search-box.tsx","webpack:///./src/components/intercept/intercept-page.tsx","webpack:///./src/components/split-pane.tsx","webpack:///./src/components/common/empty-state.tsx","webpack:///./src/components/editor/focus-wrapper.tsx","webpack:///./src/components/editor/editor-context-menu.ts","webpack:///./src/components/editor/base-editor.tsx","webpack:///./src/model/rules/rule-descriptions.ts","webpack:///./src/components/common/status-code.tsx","webpack:///./src/components/view/view-event-list-buttons.tsx","webpack:///./src/model/filters/filter-matching.ts","webpack:///./src/components/view/filters/filter-tag.tsx","webpack:///./src/components/view/filters/filter-suggestion-row.tsx","webpack:///./src/components/view/filters/save-filters-row.tsx","webpack:///./src/components/view/filters/filter-input.tsx","webpack:///./src/components/view/filters/search-filter.tsx","webpack:///./src/components/view/view-event-list-footer.tsx","webpack:///./src/components/view/view-event-list.tsx","webpack:///./src/model/ui/export.ts","webpack:///./src/components/view/view-context-menu-builder.ts","webpack:///./src/components/view/view-details-pane.tsx","webpack:///./src/components/view/stream-message-rows.tsx","webpack:///./src/components/view/stream-message-list-card.tsx","webpack:///./src/components/common/collapsible-section.tsx","webpack:///./src/components/view/websocket-close-card.tsx","webpack:///./src/components/common/optional-image.tsx","webpack:///./src/components/account/pro-placeholders.tsx","webpack:///./src/components/view/http/http-api-card.tsx","webpack:///./src/components/common/source-icon.tsx","webpack:///./src/components/common/http-version-pill.tsx","webpack:///./src/components/view/http/set-cookie-header-description.tsx","webpack:///./src/components/view/http/user-agent-header-description.tsx","webpack:///./src/components/view/http/header-details.tsx","webpack:///./src/components/view/url-breakdown.tsx","webpack:///./src/components/view/http/http-request-card.tsx","webpack:///./src/components/view/http/http-response-card.tsx","webpack:///./src/components/view/http/http-aborted-card.tsx","webpack:///./src/model/http/caching.ts","webpack:///./src/components/common/duration-pill.tsx","webpack:///./src/components/view/http/http-performance-card.tsx","webpack:///./src/components/view/http/http-export-card.tsx","webpack:///./src/components/view/header-card.tsx","webpack:///./src/components/view/http/http-error-header.tsx","webpack:///./src/components/view/http/http-details-footer.tsx","webpack:///./src/components/view/http/http-breakpoint-header.tsx","webpack:///./src/components/common/editable-headers.tsx","webpack:///./src/components/view/http/http-breakpoint-request-card.tsx","webpack:///./src/components/common/editable-status.tsx","webpack:///./src/components/view/http/http-breakpoint-response-card.tsx","webpack:///./src/components/view/http/http-breakpoint-body-card.tsx","webpack:///./src/components/view/http/http-details-pane.tsx","webpack:///./src/components/view/tls/tls-failure-details-pane.tsx","webpack:///./src/components/view/tls/tls-tunnel-details-pane.tsx","webpack:///./src/components/view/rtc/rtc-data-channel-card.tsx","webpack:///./src/components/view/rtc/rtc-connection-header.tsx","webpack:///./src/components/view/rtc/rtc-data-channel-details-pane.tsx","webpack:///./src/components/common/send-recieve-graph.tsx","webpack:///./src/components/view/rtc/rtc-media-card.tsx","webpack:///./src/components/view/rtc/rtc-media-details-pane.tsx","webpack:///./src/components/view/rtc/rtc-connection-card.tsx","webpack:///./src/components/view/rtc/sdp-card.tsx","webpack:///./src/components/view/rtc/rtc-connection-details-pane.tsx","webpack:///./src/components/view/view-page.tsx","webpack:///./src/components/mock/mock-drag-handle.tsx","webpack:///./src/components/mock/mock-item-menu.tsx","webpack:///./src/components/mock/mock-rule-group.tsx","webpack:///./src/components/mock/matcher-config.tsx","webpack:///./src/components/mock/matcher-selection.tsx","webpack:///./src/components/mock/handler-selection.tsx","webpack:///./src/components/mock/handler-config.tsx","webpack:///./src/components/mock/mock-rule-title.tsx","webpack:///./src/components/mock/mock-rule-row.tsx","webpack:///./src/components/mock/mock-rule-list.tsx","webpack:///./src/components/mock/mock-page.tsx","webpack:///./src/model/http/editable-request-parts.ts","webpack:///./src/components/send/send-request-line.tsx","webpack:///./src/components/send/send-request-headers-card.tsx","webpack:///./src/components/send/send-request-body-card.tsx","webpack:///./src/components/send/request-pane.tsx","webpack:///./src/components/send/sent-response-status.tsx","webpack:///./src/components/send/sent-response-headers.tsx","webpack:///./src/components/send/response-pane.tsx","webpack:///./src/components/send/send-page.tsx","webpack:///./src/components/common/tabbed-options.tsx","webpack:///./src/components/settings/settings-components.tsx","webpack:///./src/components/settings/string-settings-list.tsx","webpack:///./src/components/settings/proxy-settings-card.tsx","webpack:///./src/components/settings/connection-settings-card.tsx","webpack:///./src/components/settings/api-settings-card.tsx","webpack:///./src/components/settings/settings-page.tsx","webpack:///./src/components/account/modal-overlay.tsx","webpack:///./src/components/account/plan-picker.tsx","webpack:///./src/components/account/checkout-spinner.tsx","webpack:///./src/components/html-context-menu.tsx","webpack:///./src/components/app.tsx","webpack:///./src/components/style-provider.tsx","webpack:///./src/components/error-boundary.tsx","webpack:///./src/index.tsx","webpack:///./src/util/headers.ts","webpack:///./src/model/http/methods.ts","webpack:///./src/model/rules/rules-structure.ts","webpack:///./src/model/rules/definitions/http-rule-definitions.ts","webpack:///./src/model/http/editable-body.ts","webpack:///./src/styles.ts","webpack:///./src/components/common/card.tsx","webpack:///./src/util/index.ts","webpack:///./src/util/ui.ts","webpack:///./src/util/error.ts","webpack:///./src/model/events/stream-message.ts","webpack:///./src/model/rules/definitions/ethereum-abi.ts","webpack:///./src/model/api/openapi.ts","webpack:///./src/util/json-schema.ts","webpack:///./src/amiusing.html","webpack:///./src/model/rules/rule-migrations.ts","webpack:///./src/util/streams.ts","webpack:///./src/errors.ts","webpack:///./src/model/http/exchange-breakpoint.ts","webpack:///./src/model/send/send-request-model.ts","webpack:///./src/components/common/pill.tsx","webpack:///./src/model/rules/rules.ts","webpack:///./src/model/events/categorization.ts","webpack:///./src/services/server-rest-api.ts","webpack:///./src/components/view/http/http-body-card.tsx","webpack:///./src/util/observable.ts","webpack:///./src/model/rules/definitions/ipfs-rule-definitions.ts","webpack:///./src/components/common/icon-button.tsx","webpack:///./src/model/rules/definitions/ethereum-rule-definitions.ts","webpack:///./src/util/mobx-persist/storage.ts","webpack:///./src/util/mobx-persist/types.ts","webpack:///./src/util/mobx-persist/persist-object.ts","webpack:///./src/util/mobx-persist/persist.ts","webpack:///./src/components/common/card-error-banner.tsx","webpack:///./src/components/editor/body-card-components.tsx","webpack:///./src/model/http/http-docs.ts","webpack:///./src/model/events/content-types.ts","webpack:///./src/model/serialization.ts","webpack:///./src/model/events/bodies.ts","webpack:///./src/model/rules/definitions/websocket-rule-definitions.ts","webpack:///./src/services/ui-worker.ts","webpack:///./src/model/rules/definitions/rtc-rule-definitions.ts","webpack:///./src/util/promise.ts","webpack:///./src/services/ui-worker-api.ts","webpack:///./src/model/api/jsonrpc.ts","webpack:///./src/model/rules/rules-store.ts","webpack:///./src/model/send/send-store.ts","webpack:///./src/images/logo-icon.svg","webpack:///./src/services/server-graphql-api.ts","webpack:///./src/services/server-api.ts","webpack:///./src/util/text.ts","webpack:///./src/components/send/sent-response-body.tsx","webpack:///./src/model/rules/rule-creation.ts","webpack:///./src/icons.ts","webpack:///./src/images/custom-spinner.ts","webpack:///./src/images/brave-browser-logo.ts","webpack:///./src/images/arc-browser-logo.ts","webpack:///./src/model/ui/markdown.ts","webpack:///./src/services/service-versions.ts","webpack:///./src/model/events/event-base.ts","webpack:///./src/components/common/collapsing-buttons.tsx","webpack:///./src/components/common/expand-shrink-button.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","installedWasmModules","wasmImportObjects","1670","p0i32","exports","p1i32","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","p","jsonpScriptSrc","error","Error","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","message","name","request","undefined","setTimeout","head","appendChild","forEach","wasmModuleId","installedWasmModuleData","importObject","req","fetch","WebAssembly","compileStreaming","all","then","items","instantiate","instantiateStreaming","x","arrayBuffer","bytes","res","w","instance","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","this","oldJsonpFunction","slice","SendCardSection","theme","boxShadowAlpha","SendBodyCardSection","collapsed","ApiError","operationName","errorCode","super","ScrollableContentContainer","div","expanded","CenteredContentViewerContainer","ContentViewer","props","editorOptions","readOnly","renderedContent","newValue","requestAnimationFrame","onContentRendered","fireImmediately","contentType","text","children","formatter","cache","cacheKey","cachedValue","renderingContent","render","contentBuffer","set","state","formatterConfig","FormatterContainer","layout","Component","content","rawContentType","height","contentId","node","editorNode","options","language","schema","toString","ReadOnlyPairsContainer","EditablePairsContainer","PairDeleteButton","textSize","ReadOnlyPairs","pairs","className","spellCheck","EditablePairs","containerRef","values","lastValuesLength","convert","convertResult","onChangeValues","transformInput","onChange","addedNewRow","container","current","lastInput","querySelector","scrollIntoView","block","behavior","keyTitle","keyPattern","keyPlaceholder","valuePlaceholder","allowEmptyValues","ref","disabled","required","pattern","title","reportValidity","onClick","icon","concat","placeholder","getDesktopInjectedValue","window","addEventListener","DesktopApi","globalThis","desktopApi","formatVersion","version","split","join","replace","getSummary","useragent","hasOS","os","some","hasBrowser","browser","clientName","ua","osDescription","getArticle","nextWord","firstLetter","toLowerCase","getDescription","device","browserDescription","engine","hardwareDescription","vendor","model","cpuDescription","cpu","architecture","deviceDescription","isValidIconName","getIcon","browserName","uaStrings","match","recognizedUaPart","map","Unknown","UNKNOWN_SOURCE","summary","MANUALLY_SENT_SOURCE","description","color","parseSource","userAgentHeader","getResult","userAgent","electronVersion","major","checkForElectron","LoadingCardContent","spin","size","LoadingCard","deserializeByType","lookup","args","typeKey","clazz","MockRuleSerializer","rule","matchers","matcher","steps","step","handler","completionChecker","context","id","activated","CompletionCheckerLookup","MockItemSerializer","item","MockRuleGroupSchema","serializer","oldValue","done","group","deserializer","MockRulesetSchema","isRoot","serializeRules","rules","deserializeRules","SERIALIZED_RULES_MIME_TYPE","interactiveMouseoverStyles","UnstyledButton","button","attrs","UnstyledButtonLink","withComponent","BaseButtonStyles","fontFamily","headingSize","Button","primaryInputColor","containerWatermark","primaryInputBackground","defaultProps","ButtonLink","SecondaryButton","secondaryInputColor","secondaryInputBorder","invalidTextCss","warningColor","warningBackground","mainColor","TextInput","input","textInputFontSize","inputBorder","inputBackground","inputHoverBackground","inputColor","invalid","Select","select","FormatButton","format","onFormatted","canFormat","includes","ImageViewer","isEditorFormatter","buildAsyncRenderer","formatKey","observable","Formatters","raw","byteLength","trimRight","base64","markdown","yaml","html","xml","json","inputAsString","JSON","stringify","parse","javascript","css","paramPairs","URLSearchParams","image","ContentLabel","h2","lowlightTextOpacity","ContentValue","ContentLabelBlock","ContentMonoValue","monoFontFamily","ContentMonoValueInline","CopyableMonoValue","span","BlankContentPlaceholder","ExternalContent","Content","dangerouslySetInnerHTML","linkColor","visitedLinkColor","Markdown","UTF8Decoder","TextDecoder","fatal","generateHar","events","bodySizeLimit","exchanges","otherEvents","isHttp","errors","filter","isTlsFailure","sourcePages","exchangesBySource","source","sourceStartTime","Math","min","timingEvents","startTime","Date","now","startedDateTime","pageTimings","getSourcesAsHarPages","entries","exchange","sendDuration","bodyReceivedTimestamp","startTimestamp","waitDuration","headersSentTimestamp","receiveDuration","responseSentTimestamp","endTimestamp","wsClosedTimestamp","abortedTimestamp","totalDuration","pageref","time","generateHarRequest","response","generateHarResponse","timings","blocked","dns","connect","ssl","send","max","wait","receive","_pinned","pinned","isWebSocket","_resourceType","_webSocketMessages","messages","direction","opcode","isBinary","timestamp","generateHarWebSocketMessage","_webSocketClose","closeState","code","closeCode","reason","closeReason","generateHarHttpEntry","errorEntries","generateHarTlsError","log","creator","pages","_tlsErrors","asHarHeaders","headers","headerValue","headerKey","asHtkHeaders","keyBy","header","mapKeys","_","headerName","mapValues","waitForDecoding","body","decodedPromise","requestEntry","method","url","parsedUrl","httpVersion","cookies","queryString","Array","from","searchParams","paramKey","paramValue","headersSize","bodySize","encoded","decoded","_requestBodyStatus","comment","postData","mimeType","parsedBody","params","generateHarParamsFromParsedQuery","generateHarPostBody","decode","TypeError","_content","encoding","query","innerValue","status","statusText","redirectURL","responseContent","statusCode","statusMessage","assign","failureDuration","failureTimestamp","connectTimestamp","cause","failureCause","hostname","upstreamHostname","clientIPAddress","remoteIpAddress","clientPort","remotePort","sumTimings","keys","k","v","Number","parseHar","harContents","har","entry","serverIPAddress","contentLengthHeader","parseInt","page","cleanRawHarData","baseId","pinnedIds","getTime","wsAcceptedTimestamp","URL","tags","matchedRuleId","protocol","path","pathname","rawHeaders","h","parseHarRequestContents","parseHarPostData","encodedLength","parseHarRequest","parseHarResponse","streamId","Buffer","eventTimestamp","closeEvent","isEncoding","groupBy","valueOf","tryParseUrl","parseable","getFallbackUrl","HttpBody","_decoded","encodedBuffer","_encoded","_contentEncoding","inputBuffer","decodingError","buffer","emptyBuffer","HttpExchange","apiStore","_apiPromise","apiMetadata","_apiMetadataPromise","isCompletedRequest","Map","deep","addRequestMetadata","searchIndex","search","getApi","matchedRule","isCompletedExchange","isSuccessfulExchange","handlerStepTypes","abortMessage","requestBreakpoint","_requestBreakpoint","responseBreakpoint","_responseBreakpoint","addResponseMetadata","requestApiPromise","api","updateWithResponse","clear","cleanup","breakpoint","waitForCompletedResult","responseResult","respondDirectly","bound","today","storedFirstRunDate","localStorage","getItem","firstRunDate","setItem","isFirstRunToday","INITIAL_PARAMS","location","appHistory","latestState","history","latestLocation","throttledPushState","pushState","leading","trailing","throttledReplaceState","replaceState","removeEventListener","uri","buildThrottledHistorySource","navigate","to","pathString","searchString","accepted","subprotocolHeader","subprotocol","closeData","wasAccepted","markAborted","msg","matchSyntax","syntax","initialIndex","syntaxIndex","stringIndex","fullyConsumed","wasFullMatch","lastConsumingPartSyntaxIndex","lastConsumingPartStringIndex","partMatch","consumed","partiallyConsumed","partsMatched","getSuggestions","syntaxOptions","syntaxMatches","fullMatches","partialMatches","finalSyntaxIndex","suggestion","maxMatchedParts","bestPartialMatches","suggestionsWithMatches","syntaxPartIndex","nextPartToMatch","isLastPart","matchType","canExtend","originalSuggestion","sawTemplate","suggestions","singleSuggestion","updatedText","applySuggestionToText","nextSuggestions","nextSuggestion","showAs","index","matchedAllParts","charRange","charA","charB","charCodeAt","ALPHABETICAL","NUMERIC","ALPHANUMERIC","matchesRange","charCode","range","getNumberAt","getStringAt","NUMBER_CHARS","allowedCharRanges","nextChar","substring","getParsedValue","part","filterContextualSuggestions","existingInput","suggestionGenerator","lowercaseInput","startsWith","FixedStringSyntax","expected","consumedChars","StringSyntax","templateText","allowedChars","AnyAsciiExceptSpaces","allowEmpty","matchingString","SyntaxWrapperSyntax","wrapper","wrappedSyntax","optional","startIndex","isWrapped","endChar","nextEndCharIndex","indexOf","valueToMatch","submatch","hasStartWrapper","wrappedSyntaxStartPosition","needsWrapper","shouldAddStartWrapper","valueSuffix","shownSuffix","extendedValue","extendedShowAs","hasEndWrapper","NumberSyntax","stringSyntax","valueAsString","matches","option","bestMatches","matchingOptions","fullyMatchingOptions","StringOptionsSyntax","subParts","subMatch","parsed","parsedValue","Filter","filterString","constructor","filterDescription","emptyFilterSet","StringFilter","toLocaleLowerCase","operations","numberOperations","stringOperations","endsWith","bufferOperations","equals","operationDescriptions","sizeOperationDescriptions","parseFilter","filterClass","parts","filterSyntax","tryParseFilter","tryParseFilterParts","syntaxParts","parsedParts","op","describeStatus","predicate","requiredLength","matchingNumber","extendedNumber","_v","_i","uniq","Boolean","sort","filterName","CompletedFilter","PendingFilter","AbortedFilter","ErrorFilter","tag","PinnedFilter","category","categoryString","expectedCategory","MethodFilter","toUpperCase","expectedMethod","HttpVersionFilter","versionString","expectedVersion","ProtocolFilter","expectedProtocol","HostnameFilter","expectedHostname","PROTOCOL_DEFAULT_PORTS","PortFilter","port","expectedPort","explicitPort","PathFilter","expectedPath","QueryFilter","isTemplate","expectedQuery","opIndex","lastIndexOf","getAllHeaders","expectedHeaderValue","flatMap","_k","_hn","isArray","flatten","valueMatchSyntax","expectedHeaderName","headerNameIndex","subPartMatch","subPartSuggestions","expectedSize","requestBody","responseBody","totalSize","bodyContent","expectedBody","hasRequestBody","hasResponseBody","matchesRequestBody","matchesResponseBody","Infinity","ContainsFilter","expectedContent","isRTCConnection","clientURL","remoteURL","isRTCDataChannel","label","isTlsTunnel","upstreamPort","BaseSearchFilterClasses","bestMatch","filterValue","matchingFilterClass","innerFilter","innerFilterSyntax","f","innerValues","trim","innerDescriptions","valuePart","partIsTemplate","innerFilters","delimiterString","minimumRepetitions","placeholderName","delimiterSyntax","matchCount","lastPartMatchEndIndex","nextDelimiterIndex","delimiterMatch","matchSyntaxOnly","wrappedMatch","unshift","SelectableSearchFilterClasses","buildNativeContextMenuItems","callback","EXPANDABLE_VIEW_CARD_KEYS","isExpandableViewCard","isSendRequestCard","isSentResponseCard","EXPANDABLE_SEND_REQUEST_CARD_KEYS","EXPANDABLE_SENT_RESPONSE_CARD_KEYS","isExpandableSendCard","accountStore","initialized","style","backgroundColor","containerBackground","isPaidUser","setTheme","store","darkThemeMq","matchMedia","_setPrefersDarkTheme","_themeName","_prefersDarkTheme","customTheme","viewCardStates","sendCardStates","settingsCardStates","previousElectronAppPaths","activeFilterSet","_customFilters","preferredShell","themeNameOrObject","themeName","animatedExpansionCard","expandedViewCard","onCollapseToggled","toggleViewCardCollapsed","onExpandToggled","toggleViewCardExpanded","cardState","expandedState","expandedSendRequestCard","expandedSentResponseCard","toggleSendCardCollapsed","toggleSendCardExpanded","expandedCardField","toggleSettingsCardCollapsed","preventDefault","openContextMenu","position","pageX","y","pageY","contextMenuState","catch","persist","goToSettings","on","refreshToken","rememberLastLogin","subscriptionPlans","authResult","initialEmailResult","idTokenPayload","email","selectedPlan","updateUser","emit","logIn","setInterval","user","accountDataLastUpdated","isAccountUpdateInProcess","banned","alert","close","getPro","pickPlan","isLoggedIn","userHasSubscription","isPastDueUser","purchasePlan","modal","initialModal","loggedIn","sku","waitForUserUpdate","completedCheck","focused","setFocused","setUnfocused","ticksSinceCheck","focus","cancelSubscription","subscription","featureFlags","subscriptionExpiry","expiry","expiryMargin","isStatusUnexpired","plan","userSubscription","canManageSubscription","isValidPort","isValidHost","host","subnetDescriptionOverrides","getReadableIP","ip","parsedIp","ipaddr","kind","isIPv6","isIPv4MappedAddress","toIPv4Address","subnetType","subnetDescription","toNormalizedString","isValidPortConfiguration","portConfig","endPort","startPort","mockRTCRequestBuilder","externalNetworkAddresses","dnsServers","ruleParameterKeys","loadSettings","startIntercepting","serverVersion","adminClient","AdminClient","adminServerUrl","_http2CurrentlyEnabled","http2Enabled","_currentTlsPassthroughConfig","tlsPassthroughConfig","monitorRemoteClientConnection","startServer","config","maxDelay","delayMs","start","webrtc","http","cors","suggestChanges","http2","https","tlsPassthrough","mockttpRequestBuilder","MockttpAdminRequestBuilder","httpProxyPort","certPath","certificatePath","certContent","certificateContent","certFingerprint","certificateFingerprint","setNetworkAddresses","networkInterfaces","systemProxyConfig","systemProxy","stop","setRequestRules","adminStream","sendQuery","buildAddRequestRulesQuery","setWebSocketRules","buildAddWebSocketRulesQuery","setRTCRules","buildSetRulesQuery","onMockttpEvent","subRequest","buildSubscriptionRequest","subscribe","warn","onMockRTCEvent","refreshNetworkAddresses","setPortConfig","client","_portConfig","metadata","addresses","iface","a","internal","family","address","failureEvent","openEvent","open","disconnectTimestamp","candidateToUrl","candidate","connectionEvent","sessionId","streams","array","peerId","localSessionDescription","remoteSessionDescription","sourceURL","selectedRemoteCandidate","attachEvent","otherHalf","attachedConnection","externalConnection","ourExternalConnection","theirExternalConnection","ourExternalAddress","selectedLocalCandidate","ourRemoteAddress","theirExternalAddress","remoteCandidate","stream","remove","connection","channelId","rtcConnection","channelLabel","channelProtocol","mid","stats","_totalBytesSent","_totalBytesReceived","trackMid","trackDirection","trackType","previousEvent","round","sentDelta","receivedDelta","totalBytesSent","totalBytesReceived","mockttpEventTypes","mockRTCEventTypes","proxyStore","rulesStore","eventName","eventData","isPaused","eventQueue","queueEventFlush","orphanedEvents","isFlushQueued","updateFromQueuedEvent","queuedEvent","addInitiatedRequest","checkForOrphan","addCompletedRequest","setResponse","addWebSocketRequest","addAcceptedWebSocketResponse","addWebSocketMessage","markWebSocketClosed","markRequestAborted","addTlsTunnel","markTlsTunnelClosed","addFailedTlsRequest","addClientError","addRTCPeerConnection","attachExternalRTCPeer","markRTCPeerDisconnected","addRTCDataChannel","addRTCDataChannelMessage","markRTCDataChannelClosed","addRTCMediaTrack","addRTCMediaTrackStats","markRTCMediaTrackClosed","flushQueuedUpdates","isRTCMediaTrack","uniqBy","orphanEvent","matchedItem","existingEventIndex","updateFromCompletedRequest","getMatchedRule","websockets","setAccepted","addMessage","markClosed","tunnel","conn","rtcConnections","find","isOtherHalfOf","attachExternalPeer","connectOtherHalf","dc","addStream","channel","rtcDataChannels","track","rtcMediaTracks","addStats","removeStream","deleteEvent","clearPinned","pinnedEvents","unpinnedEvents","ex","gc","harParseError","initialEvents","updateEvents","struct","filterProps","clickOnEnter","currentTarget","dispatchEvent","MouseEvent","bubbles","noPropagation","stopPropagation","inputValidation","checkFn","errorMessage","inputValue","setCustomValidity","validity","valid","CloseButton","tabIndex","onClose","onKeyPress","inverted","mainBackground","top","right","ExternalLinkIcon","popColor","DocsA","DocsLink","href","rel","BackgroundIcons","InterceptOptionCard","uiConfig","width","columnWidth","gridWidth","rowHeight","LoadingOverlay","StatusPill","cardRef","onActivationStarted","interceptor","activateInterceptor","activationOptions","interceptorStore","onActivationSuccessful","showRequests","isDisabled","isActivable","ConfigComponent","configComponent","icons","iconProps","onKeyDown","reportStarted","reportSuccess","closeSelf","descParagraph","customPill","CustomPill","isActive","isSupported","notAvailableHelpUrl","getStatusPill","inProgress","InstructionsContainer","InstructionsStep","Nowrap","ManualInterceptPill","ExportCertificateButton","ManualInterceptCustomUi","CopyIconButton","useTemporaryFlag","flagResetTimer","setFlagResetTimer","flagged","setFlagged","CopyButtonIcon","success","showSuccess","fixedWidth","CopyButtonPill","CopyableCommand","onCopy","containerBorder","mainLowlightBackground","ConfigContainer","reportedActivated","shellCommands","command","selectedShell","multipleShellsMaybeSupported","multipleShellsMaybeAvailable","shell","uiStore","commands","intervalId","refreshInterceptors","clearInterval","reportActivated","shellDescription","shouldShowDropdown","selectShell","interceptCommand","ExistingTerminalCustomUi","Spacer","Hr","hr","SelectAndInterceptButton","RememberedOption","InterceptButton","ForgetPathButton","platform","navigator","selectApplication","appPicker","pathToApplication","runApplication","rememberElectronPath","forgetElectronPath","binary","binaryArticle","binaryName","pathParts","appPart","getReadablePath","ElectronCustomUi","getConfigRequestIds","eventsStore","setUpAndroidCertificateRule","onNextConfigRequest","ensureRuleExists","GET","SimplePathMatcher","Always","certificate","previousConfigRequestIds","setupParams","serializedSetupParams","AndroidDeviceCustomUi","DeviceList","ul","AdbDevice","li","AdbDeviceButton","inProgressIds","onSuccess","deviceIds","interceptDevice","activating","deviceId","activationPromise","finally","AndroidAdbCustomUi","closeConfirmRequired","confirm","closeConfirmed","ExistingBrowserCustomUi","SpinnerBlock","Spinner","ListScrollContainer","TargetList","Target","TargetButton","TargetIcon","TargetText","ellipseDirection","targetName","targets","interceptTarget","jvmTargets","updateTargets","inProgressPids","updateInterval","interestingTargets","proxyPort","pid","alreadyIntercepted","interceptedByProxy","interceptedByUs","contextName","mainName","packageParts","reverse","packageName","filePath","dirParts","dirPath","PackageName","ClassName","Footer","targetPid","shallow","JvmCustomUi","labels","containerName","names","containerDescription","ContainerName","ImageName","containerId","DockerAttachCustomUi","previousIOSRequestIds","getIOSRequestIds","iOS","ManualIOSCustomUi","BROWSER_TAGS","JVM_TAGS","MOBILE_TAGS","ANDROID_TAGS","IOS_TAGS","TERMINAL_TAGS","androidInterceptIconProps","transform","Android","recoloured","getChromiumOptions","webExtensionEnabled","INTERCEPT_OPTIONS","Docker","Chrome","getActivationOptions","Chromium","Brave","Firefox","checkRequirements","interceptorVersion","Arc","Safari","Edge","Opera","Java","Terminal","clientOnly","Network","Desktop","Electron","getInterceptOptions","serverInterceptorArray","serverInterceptors","serverInterceptor","refreshInterceptorInterval","interceptorId","interceptors","supportedInterceptors","apiMetadataSchema","serializr","spec","serverMatcher","requestMatchers","pathMatcher","queryMatcher","pathSpec","paths","EXTRA_APIS","customOpenApiSpecs","storage","jsonify","publicApiCache","baseUrl","info","rawUrl","urlA","_apiA","urlB","_apiB","apiBaseUrl","customOpenApiSpecsByUrl","specId","fetchApiMetadata","apiSpecId","privateSpec","getPrivateApi","publicSpecId","openApiId","matchingExtraApiKey","apiPrefix","findPublicApi","publicSpecs","getPublicApi","apis","matchingApis","matched","findBestMatchingApi","ServiceWorkerNoSupportError","setPrototypeOf","attemptServerUpdate","showPleaseUpdateMessage","SidebarNav","nav","sidebarItemStyles","SidebarLogo","img","alt","SidebarSelectableItem","selected","Separator","SidebarLink","highlight","SidebarButton","Sidebar","itemContent","component","dedent","ConnectedSource","ConnectedSources","activeSources","SearchInput","ClearSearchButton","visible","SearchBox","autoFocus","onSearch","iconSize","InterceptPageContainer","section","InterceptInstructions","loudHeadingSize","InterceptSearchBox","gridRef","visibleInterceptOptions","onSearchInput","sortBy","StyledInterceptPage","SplitPane","hiddenPane","EmptyState","focusableElementSelector","getFocusableChildren","element","querySelectorAll","offsetParent","buildContextMenuCallback","isReadOnly","baseEditorRef","mouseEvent","editor","selection","getSelection","enabled","isEmpty","getModel","getValueInRange","executeEdits","forceMoveMarkers","clipboard","readText","handleContextMenuEvent","MonacoEditor","rmeModulePromise","loadMonacoEditor","retries","rmeModule","monacoEditorModule","onDidChangeMarkers","modelUris","markers","getModelMarkers","modelsMarkers","marker","modelUri","resource","markersSoFar","default","EditorMaxHeightContainer","onResize","relayout","resizeObserver","ResizeObserver","contentHeight","contentUpdate","observe","disconnect","onContextMenu","monacoTheme","onContentSizeChange","ContainerSizedEditorContainer","EditorFocusWrapper","thisElement","shiftKey","allFocusableElements","elementLastChild","currentTabIndex","nextTabbableElement","firstFocussableChild","contains","activeElement","onFocus","parentElement","monacoEditorLoaded","registeredSchemaUri","resetUIState","getContribution","cb","originalFocusMethod","monaco","setSelection","Selection","getMarkerController","onDidChangeModel","newModelUrl","onDidContentSizeChange","withoutFocusingEditor","showAtMarker","structural","existingOptions","languages","jsonDefaults","diagnosticsOptions","newSchemaMappings","schemas","uriString","newSchema","existingMapping","sm","fileMatch","validate","setDiagnosticsOptions","newOptions","showFoldingControls","scrollbar","alwaysConsumeMouseWheel","quickSuggestions","parameterHints","codeLens","minimap","contextmenu","scrollBeyondLastLine","colorDecorators","renderValidationDecorations","fontSize","wordWrap","editorDidMount","onEditorDidMount","withFirstCharUppercased","summarizeMatcherClass","isMethod","nameHandlerClass","summarizeMatcher","explain","summarizeHandler","stepExplanations","StatusCode","ClearAllButton","onClear","ExportAsHarButton","harContent","filename","ImportHarButton","uploadedFile","loadFromHar","PlayPauseButton","togglePause","ScrollToEndButton","onScrollToEnd","matchFilters","filterClasses","remainingString","filters","firstFullMatch","fm","matchedString","trimLeft","applySuggestionToFilters","filterSet","FilterTagDelete","FilterTagName","FilterTagContainer","ignoreTripleClick","detail","FilterTag","isSelected","onMouseDown","onDelete","ExistingText","SuggestedText","SuggestionRowContainer","isHighlighted","highlightBackground","SuggestionRowPart","SuggestionDetails","SuggestionDeleteButton","SuggestionDescription","FilterSuggestionRow","partiallyMatchedChars","existingText","suggestedAddition","isSaveFiltersSuggestion","saveFilters","SaveFiltersContainer","SaveFiltersRow","filterCount","FilterInputField","highlightColor","FilterSuggestionsBox","renderInputField","renderSuggestionsBox","containerProps","areSuggestionsVisible","autosuggestRef","autosuggestRoot","listbox","FilterInput","getFilterSuggestions","availableFilters","suggestionContext","considerSuggestion","onFiltersConsidered","activeFilters","updatedFilters","selectSuggestion","onFiltersSaved","onFiltersChanged","clearSuggestions","autosuggest","justSelectedSuggestion","revealSuggestions","resetHighlightedSuggestion","shouldRenderSuggestions","getSuggestionTextValue","onInputChange","inputProps","searchInputRef","shouldShowSave","shouldHighlightFirst","suggestionsWithSave","rowRenderer","buildRowRenderer","onDeleteCustomFilter","onCustomFilterDeleted","isCustomFilter","multiSection","highlightFirstSuggestion","onSuggestionsFetchRequested","onSuggestionsClearRequested","onSuggestionHighlighted","onSuggestionSelected","getSuggestionValue","renderSuggestion","renderInputComponent","renderSuggestionsContainer","SearchFilterBox","hasContents","FloatingSearchButtonStyles","FloatingClearFiltersButton","FloatingFilterDocsButtonLink","boxRef","tagRefs","selectedFilters","undoer","updateSelectedTags","getSelectedFilters","filterBox","selectedFilterElements","isCollapsed","containsNode","getSelectedFilterElements","removeAllRanges","selectAllFilterTags","redo","undo","filterTagElements","filterInput","filterElements","focusedElement","focusedElementIndex","lastCursorPosition","setSelectionRange","elementToSelect","cursorPosition","lastSelectedIndex","deleteSelectedFilters","inputEndPosition","ctrlKey","altKey","metaKey","inputCursorPosition","selectionStart","selectionEnd","inputCursorIndex","isInputSelected","filterIndexToDelete","nextFilter","filtersToCopy","serialization","serialize","onCut","onPaste","pastedFilters","clipboardData","getData","pastedStringInput","currentTextInput","updatedTextInput","endOfPastedContent","onInputChanged","onFiltersCleared","textInput","builtInFilters","customFilters","parsedFilters","filtersToInsert","buildCustomFilter","currentlySelectedFilters","tagElement","delete","setBaseAndExtent","remainingInputText","filterSuggestionContext","stringFilter","otherFilters","textInputValue","RequestCounter","filteredEventCount","eventCount","ButtonsContainer","ViewEventListFooter","allEvents","filteredCount","filteredEvents","EmptyStateOverlay","ListContainer","Column","RowPin","RowMarker","MarkerHeader","Method","Status","Source","Host","PathAndQuery","EventTypeColumn","RTCEventLabel","RTCEventDetails","RTCConnectionDetails","BuiltInApiRequestDetails","EventListRow","TrafficEventListRow","TlsListRow","TableHeader","EventRow","selectedEvent","contextMenuBuilder","TlsRow","tlsEvent","isBuiltInApi","matchedOperation","BuiltInApiRow","ExchangeRow","RTCConnectionRow","RTCStreamRow","role","getContextMenuCallback","isBreakpointed","ConnectedSpinnerIcon","service","shortName","operation","parameters","param","isOpen","listBodyRef","listRef","KeyBoundListWindow","focusSelectedEvent","onListMouseDown","isSelectedEventVisible","selectedEventId","listBody","focusEvent","wasListAtBottom","updateScrolledState","isListAtBottom","row","ariaRowIndex","getAttribute","eventIndex","onEventSelected","onEventDeselected","innerRef","outerElementType","itemCount","itemSize","itemData","listItemData","onScroll","rowElement","listWindow","scrollTop","scrollHeight","offsetHeight","scrollToItem","targetIndex","list","rowCount","windowHeight","clientHeight","halfHeight","rowOffset","maxOffset","targetOffset","scrollTo","onSelected","moveSelection","exportHar","generateCodeSnippet","snippetFormat","waitForBodyDecoding","harRequest","harSnippetBase","simplifyHarForSnippetExport","snippetExportOptions","clients","link","getCodeSnippetFormatKey","getCodeSnippetOptionFromKey","getCodeSnippetFormatName","onPin","onBuildRuleFromExchange","BaseOptions","Pin","Delete","preferredExportFormat","exportSnippetFormat","snippetGroupName","snippetOption","PaneOuterContainer","PaneScrollOuterContainer","PaneScrollInnerContainer","PaneScrollContainer","visualDirection","StreamMessageCollapsedRow","CollapsedStreamRowContainer","messageDirection","nextElementSibling","previousElementSibling","MessageArrow","CollapsedStreamContent","onEditorContentRendered","setContentType","onMessageChanged","prevProps","messageIndex","selectedContentType","onExportMessage","compatibleContentTypes","EditorRowContainer","EditorRowHeader","nameFormatter","RowEditorContent","getFilename","filenamePrefix","someBinary","expandedRow","exportMessages","someBinaryMessages","exportMessage","streamType","streamLabel","StreamMessagesList","expandRow","CollapsibleSectionWrapper","withinGrid","SummaryWrapper","SummaryAsSpacer","prefixTrigger","sectionSummary","sectionBody","otherChildren","toArray","hasBody","bodyElement","trigger","CollapsibleTrigger","canOpen","toggleOpen","OPEN_ICON","CLOSED_ICON","CollapsibleSectionSummary","CollapsibleSectionBody","WebSocketCloseCard","closeCodeDocs","responseDetails","showOnceLoaded","display","ProPill","ProHeaderPill","GetProButton","CardSalesPitch","CardSalesPitchContainer","BlurOverlay","OverlayContainer","OverlayGetProButton","buttonRef","createRef","inert","ServiceLogo","onLoad","ParametersGrid","ParameterKeyValue","ParamName","UnsetValue","ParamMetadata","in","defaultValue","enum","WarningIcon","Warning","formatValue","getDetailsWithWarnings","details","warnings","warning","ObjectParamContainer","ObjectParamKey","ObjectParamValue","pre","ObjectParamDetails","ApiRequestDetails","setParameters","relevantParameters","operationDetails","hasOperationDetails","docsUrl","logoUrl","HttpApiCard","apiName","apiExchange","HttpApiPlaceholderCard","SourceIcon","HttpVersionPill","getExpiryExplanation","date","exactTime","relativeTime","CookieHeaderDescription","requestPath","requestUrl","cookie","sameSite","secure","domain","httpOnly","maxAge","expires","UserAgentHeaderDescription","HeadersGrid","HeaderKeyValue","HeaderName","HeaderDescriptionContainer","HeaderDocsLink","HeaderDetails","sortedHeaders","docs","headerDocs","getHeaderDescription","BreakdownContainer","BreakdownKey","BreakdownValue","ParameterSeparator","UrlBreakdown","decodedPathname","decodeURIComponent","username","password","MatchedRulePill","stepTypes","ruleData","stepDescription","RawRequestDetails","methodDocs","methodDetails","HttpRequestCard","matchedRuleData","onRuleClicked","noopRule","every","HttpResponseCard","apiResponseDescription","statusDocs","ErrorContent","HttpAbortedResponseCard","cardProps","CACHEABLE_METHODS","CACHEABLE_STATUSES","PERMANENTLY_CACHEABLE_STATUSES","CORS_SIMPLE_METHODS","CORS_SIMPLE_HEADERS","formatHeader","THE_DAWN_OF_TIME","formatDuration","seconds","parseCCDirectives","reduce","directive","ALL_CACHES","PRIVATE_ONLY","explainValidCacheTypes","explanation","responseCCDirectives","explainCacheMatching","allowedMethods","allowedHeaders","allowsCredentials","varyHeaders","hasVaryHeaders","varySummary","varyExplanation","realHeaderValue","explainCacheLifetime","maxAgeHeader","dateHeader","expiresHeader","sharedMaxAge","hasExplicitLifetime","lifetime","hasNegativeLifetime","explainSharedCacheLifetime","explainLifetime","staleBonusBehaviourSummary","revalidationSummary","staleBonusBehaviour","explainRevalidation","shouldSuggestImmutable","sigFig","num","figs","parseFloat","toFixed","DurationPill","duration","durationMs","doneTimestamp","HttpPerformanceCard","CompressionPerformance","CachingPerformance","getEncodingName","CompressionDescription","encodings","encodedBodyLength","decodedBodyLength","compressionRatio","CompressionResultsContainer","CompressionResultsPill","CompressionOptions","encodingTestResults","realCompressionRatio","omitBy","_size","testedCompressionRatio","CompressionOptionsContainer","PerformanceExplanation","CompressionOptionsTips","clientAcceptedEncodings","messageType","getEncodings","encodedBody","decodedBody","decodedBodySize","encodedBodySize","bestOtherEncoding","betterEncodingAvailable","cacheability","cacheable","hasRevalidationOptions","revalidationSuggestion","postExplanation","contentLocationUrl","hasFreshnessInfo","contentLocationIsCurrentUri","responseDateHeader","abs","isDefaultCacheableStatus","cacheableReason","explainCacheability","cacheDetails","SnippetDescriptionContainer","SnippetDetailButtons","SnippetEditorContainer","snippetEditorOptions","hover","ExportSnippetEditor","exportOption","snippet","ExportHarPill","setSnippetOption","optGroups","keyFormatter","optionKey","HeaderCard","HeaderButtonStyles","HeaderText","HeaderButton","SecondaryHeaderButton","typeCheck","types","isInitialRequestError","isClientBug","wasNotForwarded","wasResponseIssue","wasTimeout","isWhitelistable","isMockable","HttpErrorHeader","advancedHeaderOverflowSupported","semver","ignoreError","mockRequest","ScrollToButton","PinButton","DeleteButton","MockButton","isExchange","HttpDetailsFooter","onScrollToEvent","HttpRequestBreakpointHeader","onCreateResponse","onResume","HttpResponseBreakpointHeader","outputToRawHeaders","output","stripPseudoHeaders","stripPseudoHeadersAndLowercase","EditableRawHeaders","preserveKeyCase","withH2HeadersDisabled","convertToRawHeaders","newInput","convertFromRawHeaders","onInvalidState","onChangeRawHeaders","UrlInput","validMethods","MethodSelect","inProgressResult","onMethodChanged","methodOption","onUrlChanged","onHeadersChanged","isHttp2","StatusContainer","isDefaultMessage","EditableStatus","newStatusCode","newStatusMessage","newMessage","InlineEditableStatus","onStatusChange","NaN","onBodyChange","textEncoding","contentTypeHeader","exchangeId","bodyString","onBodyFormatted","contentTypeOptions","onChangeContentType","CardDivider","viewCardProps","rawName","cleanedName","makeFriendlyApiName","headerCard","renderHeaderCard","renderExpandedCard","cards","renderBreakpointCards","renderNormalCards","respondToBreakpointedRequest","resume","errorHeaderProps","tagsToErrorType","expandedCard","renderRequestBody","renderResponseBody","renderWebSocketMessages","updateMetadata","renderApiCard","jumpToRule","webSocketClose","performance","export","requestBodyParams","updateBody","apiBodySchema","bodySchema","responseBodyParams","urlParts","baseName","webSocketMessages","streamMessageEditor","requestEditor","responseEditor","draftRules","currentRuleDraft","currentStepTypes","AndroidIcon","failure","sourceDetailParts","sourceIp","sourceDetails","RTCDataChannelCard","dataChannel","RTCConnectionHeader","hideConnection","jumpToConnection","isConnectionHidden","SentDataColour","ReceivedDataColour","GraphSvg","svg","SendReceiveGraph","graphPaddingPx","bottom","innerHeight","axisMargin","innerWidth","xScale","dataMax","sent","received","sentYScale","receivedYScale","sentData","receivedData","Group","left","GraphArea","yScale","fill","AxisLeft","scale","labelOffset","labelClassName","tickFormat","tickClassName","numTicks","AreaClosed","curve","LinePath","stroke","strokeWidth","RTCMediaCard","mediaTrack","StatsGraphWrapper","stat","ParentSize","parent","graphData","hasData","hasVideo","hasAudio","sessionDescription","sdp","dataChannelEditors","dataChannels","streamCardState","offerEditor","answerEditor","locallyInitiated","offerDescription","answerDescription","offerCardProps","rtcSessionOffer","answerCardProps","rtcSessionAnswer","mediaTracks","toggleCollapse","expandStream","ViewPageKeyboardShortcuts","onStartSearch","EDITOR_KEYS","editors","searchFiltersUnderConsideration","confirmedSearchFilters","currentSearchFilters","eventId","splitDirection","scrollToEvent","newFilteredEvents","oldFilteredEvents","filteredEventState","rightPane","streamMessage","onScrollToCenterEvent","minSize","onForceClear","primary","defaultSize","maxSize","LeftPane","onSearchFiltersConsidered","distance","currentIndex","targetEvent","rowIndex","wasSelected","nextEvent","confirmRequired","someEventsPinned","allEventsPinned","clearInterceptedData","scrollToCenterEvent","scrollToEnd","StyledViewPage","FloatingDragHandle","DragHandle","IconMenu","topOffset","IconMenuButton","CollapsedItemPlaceholder","borderColor","TitleButtonContainer","TitleButton","RuleGroupMenu","onClone","toggleState","onToggleActivation","GroupHeaderContainer","depth","editingTitle","extendGroupDraggableStyles","snapshot","overrideStyles","transition","combineWith","opacity","isFullyActiveGroup","GroupHeader","isEditing","setEditing","unsavedTitle","setUnsavedTitle","toggleCollapsed","startEditing","editTitle","resetTitle","saveTitle","updateGroupTitle","allRulesActivated","toggleActivation","deleteGroup","cloneGroup","draggableId","provided","draggableProps","dragHandleProps","initialMatcher","MethodMatcher","GroupTailPlaceholder","GroupTail","isDragDisabled","InitialMatcherConfiguration","matcherKey","configProps","matcherIndex","AdditionalMatcherConfiguration","matcherClass","ConfigLabel","MatcherConfigContainer","fieldId","methodName","methodValues","isNaN","htmlFor","interaction","interactionName","HostMatcher","urlMatch","exec","fullMatch","ensurePathIsValid","ExactQueryMatcher","RegexInput","containsLiteralQuestionMark","regexSource","examples","regex","RegExp","exp","defaultRange","subtract","gen","example","RegexPathMatcher","pairsArrayToQueryObject","queryPairs","queryParams","queryObject","QueryMatcher","convertInput","HeaderMatcher","BodyContainer","RawBodyMatcher","RawBodyIncludesMatcher","JsonBodyMatcher","JsonBodyFlexibleMatcher","matcherContent","parsedContent","arg","argValue","argType","onJsonChange","getMatcherKey","MatcherRow","MatcherInputsContainer","MatcherButton","InitialMatcherConfigContainer","InitialMatcherRow","availableInitialMatchers","httpMatchers","otherMatchers","MatcherCls","MatcherOptions","NewMatcherConfigContainer","form","LowlightedOption","draftMatchers","invalidMatcherState","dropdownRef","updateDraftMatcher","onAdd","dropdown","availableMatchers","markMatcherInvalid","saveMatcher","selectMatcher","onSubmit","getHandlerKey","HandlerOptions","handlers","summarizeHandlerClass","HandlerSelect","HandlerSelector","allowedHandlers","needProHandlers","availableHandlers","handlerClass","ruleType","handlerKey","instantiateHandler","ConfigExplanation","HandlerConfiguration","SectionLabel","ConfigSelect","WideTextInput","BodyHeader","updateHandler","detectedContentType","previousContentType","newContentType","expectedContentType","previousBody","newBody","lengthHeader","bodyAsString","setStatus","setBody","BodyFileContainer","BodyFileButton","BodyFilePath","selectFile","updateHostHeader","targetHost","forwarding","onTargetChange","onUpdateHeaderChange","savedTargetHost","urlWithoutProtocol","protocolMatch","validProtocols","HandlerClass","TransformSectionLabel","TransformSectionSeparator","TransformConfig","active","TransformDetails","SelectTransform","transformRequest","transformResponse","transformField","objName","MethodTransformConfig","replacementMethod","replaceMethod","StatusTransformConfig","replacementStatus","replaceStatus","convertResultFromRawHeaders","onTransformTypeChange","clearValues","FIELDS","field","setHeadersValue","selectBodyReplacementFile","replaceBody","bodyReplacementBuffer","setBodyReplacement","setJsonBodyUpdate","RawBodyTransfomConfig","replaceBodyFromFile","JsonUpdateTransformConfig","updateJsonBody","StandaloneFormatButton","setError","setBodyString","NATIVE_ETH_TYPES_PATTERN","typeValuePairs","outputTypes","stringValues","encodedData","newPairs","parsedValues","argument","test","valueString","valueGetter","handlerStringValue","normalizedCurrentValue","explanationPart","newContent","handlerFactory","receiptValue","blockValue","errorData","errorName","onChangeMessage","onChangeCode","onChangeData","onChangeName","resultPairs","Name","Hash","Type","Cid","messageAsString","setChannelLabel","setMessage","RuleTitle","EditableTitleContainer","TitleInput","TitleEditButton","EditableRuleTitle","onEditTitle","onSave","onCancel","RowContainer","deactivated","AddRuleRow","MatcherOrHandler","Summary","h1","ArrowIcon","Details","DetailsHeader","RuleMenuContainer","RuleMenu","isEditingTitle","onSetCustomTitle","hasUnsavedChanges","isNewRule","onReset","onToggleCollapse","extendRowDraggableStyles","initialMatcherSelect","saveRule","stopEditingTitle","resetRule","deleteRule","cloneRule","empty","toggleRuleCollapsed","ruleColour","ruleHandlers","shouldShowSummary","titleEditState","startEnteringCustomTitle","originalTitle","cancelEditingTitle","setInitialMatcher","ms","updateMatcher","deleteMatcher","existingMatchers","addMatcher","ruleHandler","handlerIndex","currentRuleType","newRuleType","newHandler","getRuleDefaultHandler","newTitle","demoHandler","shownHandler","isHandlerDemo","MockRuleListContainer","ol","buildDragEndListener","indexMapping","destination","combine","currentlyDraggingRuleId","sourcePath","isTail","targetId","targetPath","targetItem","moveRule","combineRulesAsGroup","wasGroupOpenBeforeDrag","sourceIndex","destinationIndex","displacedItemPath","pathComparison","displacedItemParent","displacedItemIndex","displacedItem","sourceParentPath","targetParentPath","targetParentParentPath","offset","getDragTarget","activeRules","addRule","deleteItem","cloneItem","collapsedRulesMap","beforeDrag","ruleRows","buildRuleRows","allDraftRules","allActiveRules","ruleGroup","ruleGroupPath","overallStartIndex","rowEventHandlers","itemPath","subResult","changed","draftRule","draftPath","activePath","draftParent","activeParent","activeRule","activeCommonSiblings","draftCommonSiblings","getChangedState","onBeforeCapture","onDragEnd","isCombineEnabled","droppableId","droppableProps","MockPageContainer","MockPageScrollContainer","MockPageHeader","MockHeading","SaveButton","OtherButton","initialRuleId","importRules","loadSavedRules","exportRules","rulesetContent","ruleIds","ruleMapIds","extraIds","missingIds","extraId","missingId","ruleElement","areSomeRulesUnsaved","areSomeRulesNonDefault","deleteDraftItem","moveDraftRule","combineDraftRulesAsGroup","resetToDefaults","resetRuleDrafts","saveAll","ruleId","savedRule","saveItem","clonedItem","existingChildIndex","addDraftItem","saveRules","collapseAll","resetRulesToDefault","newRule","InjectedMockPage","getExpectedHost","SendRequestLineContainer","MethodSelectArrow","MethodSelectContainer","SendButton","SendRequestLine","updateMethodFromEvent","changeEvent","updateMethod","updateUrlFromEvent","updateUrl","prepopulateUrl","inputField","sendRequest","isSending","HeaderFieldsContainer","SendRequestHeadersCard","updateHeaders","headerAlignment","onBodyUpdated","RequestPaneContainer","hasExpandedChild","requestInput","sendCardProps","getUrl","getHeaders","lastHost","initialUrl","hostHeader","newHost","prepend","syncUrlToHeaders","requestHeaders","rawBody","updateDecodedBody","ResponseStatusSectionCard","ResponseStatusSection","SentResponseHeaderSection","ResponsePaneContainer","renderSuccessfulResponse","renderAbortedResponse","renderInProgressResponse","responseHeaders","SendPageContainer","requestEditorNode","attributes","responseEditorNode","requestInputs","sentExchange","sendStore","TabbedOptionsContainer","TabsContainer","tabValue","tab","Tab","SettingsButtonCss","SettingsButton","SettingsButtonLink","SettingsExplanation","SettingsSubheading","StringListContainer","ConfigValueRow","changeInput","addHost","validationFn","RestartApp","reload","UnsavedIcon","ProxyPortsContainer","ProxyPortStateExplanation","Http2Select","hostnameValidation","minPortValue","maxPortValue","updatePortConfig","isCurrentPortConfigValid","hostnameIndex","passthroughItem","http2CurrentlyEnabled","currentTlsPassthroughConfig","isCurrentPortInRange","onMinPortChange","onMaxPortChange","addTlsPassthroughHostname","removeTlsPassthroughHostname","UpstreamProxySettings","UpstreamProxyDropdown","validateHost","isValidProxyHost","validateProxyHost","proxyType","upstreamProxyType","proxyHostInput","upstreamProxyHost","upstreamNoProxyHosts","effectiveSystemProxyConfig","savedProxyType","savedProxyHost","noProxyHosts","setProxyType","setProxyHostInput","saveProxyHost","addNoProxyHost","removeNoProxyHost","proxyUrl","ClientCertificatesList","CertificateFilename","DecryptionInput","DecryptionSpinner","clientCertHostInput","certFileInputRef","decryptClientCertData","pfx","passphrase","clientCertData","clientCertState","clientCertError","handleClientCertValidationResult","clientCertificateHostMap","files","file","fileReader","FileReader","readAsArrayBuffer","thisConfig","cert","removeClientCertificate","click","accept","onClientCertSelected","dropClientCertData","addClientCertificate","AdditionalCertificateList","CertificateDescription","AddCertificateButton","certFileButtonRef","addCertificate","rawData","additionalCaCertificates","rawPEM","subject","org","serial","removeCertificate","whitelistedCertificateHosts","hostIndex","addHostToWhitelist","unwhitelistHost","UploadSpecButton","BaseUrlInput","SavedBaseUrl","Spec","UndoButton","AddButton","ApiRows","updateValidationMessage","uploadSpecButtonRef","specProcessingInProgress","enteredBaseUrl","baseUrlInputRef","uploadSpec","openApiSpec","swagger","patch","openapi","selectedSpec","servers","variables","variableName","variable","onBaseUrl","saveApi","addCustomApi","customOpenApiInfo","deleteApi","resetApiInputs","baseUrlError","hash","existingBaseUrls","protocollessUrl","validateBaseUrl","deleteCustomApi","SettingsPagePlaceholder","SettingsPageScrollContainer","SettingPageContainer","SettingsHeading","AccountDetailsContainer","AccountControls","AccountContactFooter","ThemeColors","ThemeColorBlock","themeColor","EditorContainer","AccountUpdateSpinner","confirmSubscriptionCancellation","planName","cancelEffect","userEmail","logOut","settingsCardProps","sub","account","addSuffix","partialMethod","lastReceiptUrl","updateBillingDetailsUrl","proxy","themes","InjectedSettingsPage","ModalOverlay","modalGradient","ModalButton","PlanPickerModal","dialog","PlanPickerDetails","PlanPickerHeading","PlanCycleToggle","PlanCycle","PlanPickerButtons","PlanSecondaryButton","PricingTable","PricingTier","highlighted","TierHeader","TierPriceBlock","TierPrice","largeHeadingSize","TierPriceCaveats","small","TierLicense","TierFeatures","FeatureHeading","Feature","SubFeature","SubFeatures","PricingCTA","PlanSmallPrint","SpinnerModal","planCycle","getPlanMonthlyPrice","tierCode","isPricingAvailable","plans","getSKU","prices","monthly","buyPlan","onPlanPicked","closePicker","toggleCycle","CheckoutSpinner","renderItem","menuState","onVisibilityChange","onHidden","show","ThemedMenu","AppContainer","Route","pageComponent","otherProps","AppKeyboardShortcuts","canVisitSettings","canVisitSend","listen","setSelectedPlan","cancelCheckout","clearHtmlContextMenu","removeAttribute","menuItems","noThrow","AppWithStoreInjected","InjectedStyleProvider","disableVendorPrefixes","ErrorOverlay","screamingHeadingSize","ButtonContainer","ErrorOutput","errorInfo","withScope","scope","setExtra","captureException","stack","Event","authToken","enforceActions","registration","mapScriptUrlOrOptions","targetScriptUrl","maybeOptions","serviceWorker","register","update","runtimeDependencies","hasShownUpdateMessage","desktopVersion","checkForOutdatedComponents","stores","appStartupPromise","race","isTimeout","currentVersion","HEADER_NAME_PATTERN","HEADER_NAME_REGEX","headersToRawHeaders","acc","rawHeadersToHeaders","headersObj","existingValue","getHeaderValue","headerPair","getHeaderValues","setHeaderValue","lowercaseHeaderKey","removeHeader","headerIndex","withHeaderValue","headerAdditions","lastHeader","val","asHeaderArray","sep","headersToFlatHeaders","MethodNames","isRuleGroup","isRuleRoot","comparePaths","pathA","pathB","diff","getItemParentByPath","getItemAtPath","updateItemAtPath","newItem","parentPath","childIndex","parentItems","deleteItemAtPath","itemIndex","findItem","findItemPath","currentPath","flattenRules","mapRules","fn","totalIndex","areItemsEqual","b","areGroupsEqual","areRulesEqual","CUSTOM_RULE_EQUALS","isEqual","MethodMatchers","uiType","WildcardMatcher","DefaultWildcardMatcher","AmIUsingMatcher","StaticResponseHandler","SimpleHandlerDefinition","serializedData","FromFileResponseHandler","FileHandlerDefinition","PassThroughHandler","PassThroughHandlerDefinition","activePassthroughOptions","ForwardToHostHandler","forwardToLocation","TransformingHandler","activeRequestTransforms","activeResponseTransforms","handlerA","handlerB","RequestBreakpointHandler","beforeRequest","triggerRequestBreakpoint","ResponseBreakpointHandler","beforeResponse","triggerResponseBreakpoint","RequestAndResponseBreakpointHandler","TimeoutHandler","TimeoutHandlerDefinition","CloseConnectionHandler","CloseConnectionHandlerDefinition","ResetConnectionHandler","ResetConnectionHandlerDefinition","HttpMatcherLookup","MatcherLookup","HttpInitialMatcherClasses","HttpHandlerLookup","HandlerDefinitionLookup","EditableBody","initialDecodedBody","initialEncodedBody","updateEncodedBody","encodeBodyPromise","contentEncodings","_decodedBody","_encodingPromise","_encodedBody","throttleDuration","fontSizes","subHeadingSize","NARROW_LAYOUT_BREAKPOINT","lightTheme","pillContrast","globalCss","darkTheme","highContrastTheme","Themes","monacoColorOverrides","monacoThemes","defineMonacoThemes","defineTheme","base","inherit","colors","styled","createGlobalStyle","keyframes","ThemeProvider","StyleSheetManager","GlobalStyles","CollapseIcon","Card","LittleCard","MediumCard","BigCard","CollapsibleCard","CollapsibleCardContainer","renderChildren","showCollapseIcon","child","CollapsibleCardHeading","RUNNING_IN_WORKER","firstMatch","tests","longestPrefix","baseString","strings","prefix","shortestLength","char","fakeBuffer","encoder","TextEncoder","strictDecoder","laxDecoder","binaryLaxDecoder","isProbablyUtf8","dataToCheck","stringToBuffer","encode","bufferToString","isSerializedBuffer","obj","asBuffer","isBuffer","byteOffset","Blob","tryParseJson","recursiveMapValues","innerObj","isReactElement","$$typeof","windowSize","Ctrl","isCmdCtrlPressed","isEditable","tagName","isContentEditable","useHotkeys","deps","saveFile","objectUrl","createObjectURL","removeChild","revokeObjectURL","uploadFile","acceptedMimeTypes","promptResult","prompt","fileInput","readAsText","useSize","spaceAvailable","setSpaceAvailable","clientWidth","copyToClipboard","textToCopy","writeText","textArea","execCommand","isErrorLike","asError","UnreachableCheck","getValue","unreachableCheck","StreamMessage","inputMessage","startOfMessage","encodeAbi","NATIVE_ETH_TYPES","bits","paramValidator","coerceTypes","strict","strictSchema","formats","Proxy","getBodySchema","bodyDefinition","schemasByType","mediaTypeKeys","schemaKey","components","getDummyPath","serverMatch","stripTags","OpenApiExchange","OpenApiService","_spec","_opSpec","matchOpenApiOperation","OpenApiOperation","OpenApiRequest","OpenApiResponse","externalDocs","matchingPath","expectedValue","queryValues","getAll","getPath","__html","deprecated","commonFields","specParam","allowEmptyValue","serializationStyle","explode","valueWrapper","getParameters","bodySpec","responses","root","formatAjvError","pathTransform","instancePath","keyword","allowedValues","migrateRuleData","defaultRules","otherRules","migrateRuleItem","migrateRule","byteStreamToLines","newlineMatcher","decoder","reader","currentLine","ReadableStream","getReader","controller","read","enqueue","pop","cancel","parseJsonLinesStream","emptyStream","sentryInitialized","initSentry","dsn","release","ignoreErrors","beforeSend","hint","exception","originalException","fingerprint","addErrorTag","getClient","getOptions","randomId","setUser","logErrorsAsUser","setTag","logError","getBody","getRequestBreakpoint","RequestBreakpoint","getDummyResponseBreakpoint","ResponseBreakpoint","getResponseBreakpoint","Breakpoint","deferred","resultMetadata","editableBody","previousEncodedLength","newEncodedLength","oldContentLength","newContentLength","latestEncodedLength","RequestInput","requestContentType","requestInputSchema","base64Data","RULE_PARAM_REF_KEY","getDefaultColor","pillStyles","baseColor","bgColor","lightOption","darkOption","getTextColor","getBackgroundColor","Pill","PillButton","getNonTransparentBackground","PillSelector","asKey","asName","groupName","getRulePartKey","PartVersionRequirements","serverSupports","versionRequirement","MatchersByType","isCompatibleMatcher","MatcherClassKeyLookup","HandlersByType","HandlerLookup","HandlerSteps","HandlerClassKeyLookup","isCompatibleHandler","getRuleTypeFromInitialMatcher","equivalentHandler","matcherCheck","MatcherLimitedHandlers","InitialMatcherClasses","getInitialMatchers","matcherCls","HiddenMatchers","getAvailableAdditionalMatchers","isHiddenMatcherKey","HiddenHandlers","getAvailableHandlers","FinalHandlerSteps","isFinalHandler","PaidHandlerClasses","isPaidHandler","cls","isPaidHandlerClass","matchRuleType","matchRule","isHttpCompatibleType","isHttpBasedRule","isWebSocketRule","isRTCRule","isStepPoweredRule","getMessageBaseAcceptTypes","acceptType","getMessageBaseContentType","isMutatativeExchange","DATA_CONTENT_TYPES","EventCategories","getEventCategory","requestAcceptTypes","isImageExchange","isCSSExchange","isHTMLExchange","isFontExchange","isDataExchange","describeEventCategory","categoryColour","getSummaryColour","highlights","black","grey","red","lightGreen","brightGreen","orange","yellow","lightBlue","darkBlue","purple","pink","exchangeOrCategory","getStatusColor","getWebSocketCloseColor","getMethodColor","RestApiClient","ok","errorBody","apiRequest","apiJsonRequest","interceptorMetadata","requestDefinition","requestOptions","requestDefinitionData","requestOptionsData","clientCertificate","responseDataStream","apiNdJsonRequest","dataStreamReader","ENCODED_DATA_CONTENT_TYPES","HttpBodyCard","decodedContentType","downloadFilename","encodedDataContentType","observablePromise","originalThen","arguments","originalCatch","isObservablePromise","lazyObservablePromise","triggerPromise","lazyPromise","originalMethod","box","newState","debounced","timeoutMs","atom","reportObserved","reportChanged","debounceComputed","cbOrTimeout","optionsOrTimeout","computedOptions","descriptor","IpfsInteractions","IpfsInteractionMatcher","IpfsArgDescription","shouldSuggestArgMatcher","IpfsArgMatcher","buildIpfsFixedValueDefaultHeaders","toUTCString","buildIpfsStreamDefaultHeaders","simpleHandlerSchema","IpfsCatTextHandler","IpfsCatFileHandler","IpfsAddResultHandler","IpnsResolveResultHandler","Path","IpnsPublishResultHandler","Value","IpfsPinsResultHandler","Pins","IpfsPinLsResultHandler","IpfsMatcherLookup","ProtocolMatcher","HostnameMatcher","PortMatcher","CookieMatcher","IpfsInitialMatcherClasses","IpfsHandlerLookup","IconButton","IconButtonLink","EthereumMethods","EthereumMethodMatcher","jsonrpc","EthereumParamsMatcher","EthereumCallResultHandler","EthereumNumberResultHandler","EthereumHashResultHandler","EthereumReceiptResultHandler","transactionHash","blockNumber","blockHash","cumulativeGasUsed","gasUsed","effectiveGasPrice","contractAddress","logs","logsBloom","EthereumBlockResultHandler","EthereumErrorHandler","EthereumMatcherLookup","EthereumInitialMatcherClasses","EthereumHandlerLookup","removeItem","_walk","persistObject","createModel","hydrate","dataTransform","customArgs","CardErrorBanner","EditorCardContent","ContainerSizedEditorCardContent","getBodyDownloadFilename","contentDisposition","filenameMatch","suggestedFilename","urlBaseName","ReadonlyBodyCardHeader","EditableBodyCardHeader","EncodingErrorMessage","BodyDecodingErrorBanner","STATUSES","WEBSOCKET_CLOSE_CODES","1000","1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012","1013","1014","1015","HEADERS","METHODS","getDocs","docsInfo","mdnSlug","getHeaderDocs","getStatusDocs","getWebSocketCloseCodeDocs","getMethodDocs","getStatusMessage","statusData","getBaseContentType","typeWithoutParams","combinedSubTypes","possibleTypes","st","mimeTypeToContentTypeMap","EditableContentTypes","getContentType","baseContentType","getEditableContentType","viewableContentType","getContentEditorName","getDefaultMimeType","isValidBase64Byte","byte","getCompatibleTypes","Set","firstChar","add","serializeAsTag","getTag","serializeRegex","flags","serializeBuffer","serializeWithUndefineds","syncDeserialize","propSchema","serializeMap","keySchema","valueSchema","mapAsArray","_oldValue","hasSerializrSchema","getReadableSize","siUnits","thresh","units","unitIndex","floor","unitName","pow","EncodedSizesCacheKey","testEncodings","encodedSizesCache","existingObservable","sizesObservable","testResults","EchoWebSocketHandlerDefinition","RejectWebSocketHandlerDefinition","ListenWebSocketHandlerDefinition","WebSocketWildcardMatcher","DefaultWebSocketWildcardMatcher","WebSocketMethodMatcher","WebSocketPassThroughHandler","PassThroughWebSocketHandlerDefinition","WebSocketForwardToHostHandler","WebSocketMatcherLookup","WebSocketInitialMatcherClasses","WebSocketHandlerLookup","WsHandlerDefinitionLookup","Worker_fn","Worker","Serializable","Serialization","RTCWildcardMatcher","HasDataChannelMatcherDefinition","HasVideoTrackMatcherDefinition","HasAudioTrackMatcherDefinition","HasMediaTrackMatcherDefinition","RTCMatcherLookup","MatcherDefinitionLookup","RTCInitialMatcherClasses","DynamicProxyStepDefinition","EchoStepDefinition","CloseStepDefinition","WaitForMediaStepDefinition","WaitForDurationStepDefinition","WaitForChannelStepDefinition","WaitForMessageStepDefinition","CreateChannelStepDefinition","SendStepDefinition","RTCStepLookup","StepDefinitionLookup","delay","numberMs","attempt","getDeferred","resolveCb","rejectCb","worker","messageId","emitter","callApi","transfer","postMessage","once","decodeBody","decodedBuffer","encodeBody","testEncodingsAsync","encodingSizes","buildApiMetadataAsync","baseUrlOverrides","validatePKCS","parseCert","formatBufferAsync","formatted","parseRpcApiExchange","methodSpec","JsonRpcApiExchange","_api","_exchange","_rpcMethod","JsonRpcApiService","JsonRpcApiOperation","JsonRpcApiRequest","JsonRpcApiResponse","rpcMethod","methodDocsBaseUrl","capitalizeFirst","charAt","oneOf","subschema","resultSpec","properties","clientCertificateSchema","reloadRules","ruleRoot","dockerProxyRuleParamName","RulesStore","jumpToExchange","triggerBreakpoint","getEditedEvent","rawStoreData","draftWhitelistedCertificateHosts","draftClientCertificateHostMap","mightBePaidUser","ensureRuleDoesNotExist","forwardingConfig","sourceHost","forwardingRule","ignoreHostHttpsErrors","trustAdditionalCAs","proxyConfig","lookupOptions","simulateConnectionErrors","parsedProxyUrl","systemConfig","noProxy","userProxyConfig","dockerProxyConfig","draftItemPath","activeRulePath","currentDraftParent","targetDraftParent","missingParents","missingParentsActivePath","nextActiveParent","targetDraftParentParent","missingGroup","newGroup","targetSiblingIndex","targetPredecessor","draftSiblings","activeSiblings","targetCommonIndex","draftItemToFollow","draftItem","targetActiveParent","activeItemPath","updatedItem","activeItem","currentActiveParent","updatedCurrentParentPath","draftDeletedRules","sortedItems","previousIndex","childPosition","currentParent","targetParent","sourceItem","groupId","draftGroup","activeGroup","draftRulePath","draftDefaultGroupPath","savedData","SendStore","eventStore","addRequestInput","passthroughOptions","effectivePort","getEffectivePort","hostWithPort","getProxyConfig","responseStream","recordSentRequest","trackResponseEvents","responseHead","responseBodyParts","paramRef","errorCount","graphql","activationResult","getAuthToken","serverReady","announceServerReady","waitUntilServerReady","apiClient","restClient","graphQLClient","getServerVersion","getConfig","getNetworkInterfaces","getInterceptors","getDetailedInterceptorMetadata","triggerServerUpdate","truncate","str","joinAnd","initialSep","finalSep","VOWEL_ISH","aOrAn","uppercaseFirst","SentResponseBodyCard","getNewRule","getRuleDefaultMatchers","updateRuleAfterInitialMatcherChange","ipfsInteraction","argMatcherIndex","findIndex","newArgMatcher","ruleStore","buildRequestMatchers","bodyMatcher","buildRuleFromRequest","buildRuleFromExchange","mockRuleHeaders","buildDefaultGroupWrapper","buildDefaultGroupRules","buildDefaultRulesRoot","buildForwardingRuleIntegration","iconName","faArrowLeft","faSpinner","faTrashAlt","faSearch","faPlug","faNetworkWired","faDesktop","faTerminal","faQuestion","faTimes","faChevronUp","faChevronDown","faBan","faComment","faToggleOn","faToggleOff","faCopy","faExternalLinkAlt","faPlus","faMinus","faExclamationTriangle","faLightbulb","faCog","faStar","faMagic","faSun","faMoon","faAdjust","faUpload","faDownload","faPlay","faPause","faGem","faTheaterMasks","faGripVertical","faUndo","faSave","faFolderOpen","faUnlock","faEdit","faWindowMaximize","faMobileAlt","faExpand","faCompressArrowsAlt","faThumbtack","faEye","faCaretDown","faAlignLeft","faClone","faCheck","faLevelDownAlt","faPaperPlane","faChrome","faFirefox","faDocker","faAndroid","faApple","faSafari","faEdge","faInternetExplorer","faOpera","faCodeBranch","faNpm","faNodeJs","faPhp","faPython","faAtom","faGlobe","faJava","SourceIcons","IE","Git","Php","Ruby","Faraday","Excon","Typhoeus","Rubybindings","Npm","Node","Got","Axios","Nodebindings","Pip","Python","Urlfetch","Pycurl","Pythonbindings","Reactornetty","Jetty","Jakarta","Akka","Intellij","Ktor","Ahc","Okhttp","Fbandroidsdk","Iphone","Ios","Ipad","Darwin","Icon","SuggestionIcon","suggestionIconHtml","iconHtml","styles","margin","warningIconHtml","iconLookup","md","linkify","linkTarget","fromMarkdown","unsafeMarkdown","hasAttribute","UI_VERSION","lastServerVersion","versionSatisfies","includePrerelease","DESKTOP_HEADER_LIMIT_CONFIGURABLE","PORT_RANGE_SERVER_RANGE","MOCK_SERVER_RANGE","HOST_MATCHER_SERVER_RANGE","CLIENT_CERT_SERVER_RANGE","FROM_FILE_HANDLER_SERVER_RANGE","DETAILED_CONFIG_RANGE","INTERCEPTOR_METADATA","INITIAL_HTTP2_RANGE","BODY_MATCHING_RANGE","WEBSOCKET_RULE_RANGE","DETAILED_METADATA","PASSTHROUGH_TRANSFORMS_RANGE","PROXY_CONFIG_RANGE","CLOSE_IN_BREAKPOINT","DNS_AND_RULE_PARAM_CONFIG_RANGE","CUSTOM_CA_TRUST_RANGE","MULTIPLE_EXISTING_TERMINAL_RANGE","RAW_BODY_SUPPORTED","WEBSOCKET_MESSAGING_RULES_SUPPORTED","WEBRTC_GLOBALLY_ENABLED","JSONRPC_RESPONSE_RULE_SUPPORTED","RTC_RULES_SUPPORTED","TLS_PASSTHROUGH_SUPPORTED","CONNECTION_RESET_SUPPORTED","SERVER_REST_API_SUPPORTED","SERVER_SEND_API_SUPPORTED","HTKEventBase","VisibleButtonsContainer","HiddenButtonsWrapper","HiddenButtonsContainer","MenuButton","unfocus","blur","CollapsingButtons","childElements","itemWidth","itemSpacesAvailable","visibleChildren","hiddenChildren","ExpandShrinkButton"],"mappings":"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","file":"app.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({\"1\":\"react-monaco-editor\",\"3\":\"zstd\"}[chunkId]||chunkId) + \".bundle.js\"\n \t}\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \tfunction promiseResolve() { return Promise.resolve(); }\n\n \tvar wasmImportObjects = {\n \t\t1670: function() {\n \t\t\treturn {\n \t\t\t\t\"./brotli_wasm_bg.js\": {\n \t\t\t\t\t\"__wbindgen_is_undefined\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[1561].exports[\"e\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_is_object\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[1561].exports[\"d\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_string_new\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[1561].exports[\"i\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_json_serialize\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[1561].exports[\"f\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_new_59cb74e423758ede\": function() {\n \t\t\t\t\t\treturn installedModules[1561].exports[\"b\"]();\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_stack_558ba5917b466edd\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[1561].exports[\"c\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_error_4bb6c2a97407129a\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[1561].exports[\"a\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_object_drop_ref\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[1561].exports[\"g\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_rethrow\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[1561].exports[\"h\"](p0i32);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t};\n \t\t},\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n\n \t\t// Fetch + compile chunk loading for webassembly\n\n \t\tvar wasmModules = {\"4\":[1670]}[chunkId] || [];\n\n \t\twasmModules.forEach(function(wasmModuleId) {\n \t\t\tvar installedWasmModuleData = installedWasmModules[wasmModuleId];\n\n \t\t\t// a Promise means \"currently loading\" or \"already loaded\".\n \t\t\tif(installedWasmModuleData)\n \t\t\t\tpromises.push(installedWasmModuleData);\n \t\t\telse {\n \t\t\t\tvar importObject = wasmImportObjects[wasmModuleId]();\n \t\t\t\tvar req = fetch(__webpack_require__.p + \"\" + {\"1670\":\"79cebba2bf1d37e07303\"}[wasmModuleId] + \".module.wasm\");\n \t\t\t\tvar promise;\n \t\t\t\tif(importObject instanceof Promise && typeof WebAssembly.compileStreaming === 'function') {\n \t\t\t\t\tpromise = Promise.all([WebAssembly.compileStreaming(req), importObject]).then(function(items) {\n \t\t\t\t\t\treturn WebAssembly.instantiate(items[0], items[1]);\n \t\t\t\t\t});\n \t\t\t\t} else if(typeof WebAssembly.instantiateStreaming === 'function') {\n \t\t\t\t\tpromise = WebAssembly.instantiateStreaming(req, importObject);\n \t\t\t\t} else {\n \t\t\t\t\tvar bytesPromise = req.then(function(x) { return x.arrayBuffer(); });\n \t\t\t\t\tpromise = bytesPromise.then(function(bytes) {\n \t\t\t\t\t\treturn WebAssembly.instantiate(bytes, importObject);\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t\tpromises.push(installedWasmModules[wasmModuleId] = promise.then(function(res) {\n \t\t\t\t\treturn __webpack_require__.w[wasmModuleId] = (res.instance || res).exports;\n \t\t\t\t}));\n \t\t\t}\n \t\t});\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \t// object with all WebAssembly.instance exports\n \t__webpack_require__.w = {};\n\n \tvar jsonpArray = this[\"webpackJsonp\"] = this[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1484,2]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { styled } from \"../../styles\";\nimport { CollapsibleCard } from \"../common/card\";\n\nexport const SendCardSection = styled(CollapsibleCard)`\n    border-radius: 0;\n    margin-bottom: 0;\n\n    flex-basis: auto;\n    flex-shrink: 1;\n    flex-grow: 0; /* Overridden below, so only the bodies expand */\n    min-height: 0;\n\n    box-shadow: 0 -2px 5px 0 rgba(0,0,0,${p => p.theme.boxShadowAlpha});\n`;\n\nexport const SendBodyCardSection = styled(SendCardSection)`\n    /* This is required to force the editor to shrink to fit, instead of going\n       beyond the limits of the column when other item is expanded and pushes it down */\n    overflow-y: hidden;\n\n    flex-grow: ${p =>\n        // Collapsed cards should not expand into unused space\n        p.collapsed ? '0' : '1'\n    };\n\n    ${p => !p.collapsed && `\n        /* When we're open, we want space more than any siblings */\n        flex-grow: 9999999;\n\n        /* If we're open, never let us get squeezed to nothing: */\n        min-height: 25vh;\n\n        /* Fixed size required to avoid editor resize thrashing */\n        flex-basis: 50%;\n    `\n    }\n`;","import { NetworkInterfaceInfo } from 'os';\nimport { ProxySetting } from 'mockttp';\n\nexport interface ServerInterceptor {\n    id: string;\n    version: string;\n    isActivable: boolean;\n    isActive: boolean;\n    metadata?: any;\n}\n\nexport interface NetworkInterfaces {\n    [index: string]: NetworkInterfaceInfo[];\n}\n\nexport interface ServerConfig {\n    certificatePath: string;\n    certificateContent?: string;\n    certificateFingerprint?: string;\n    networkInterfaces: NetworkInterfaces;\n    systemProxy: ProxySetting | undefined;\n    dnsServers: string[];\n    ruleParameterKeys: string[];\n}\n\nexport class ApiError extends Error {\n\n    constructor(\n        message: string,\n        readonly operationName: string,\n        readonly errorCode?: string | number\n    ) {\n        super(`API error during ${operationName}: ${message}`);\n    }\n\n}","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { reaction, computed } from 'mobx';\nimport { observer } from 'mobx-react';\nimport { SchemaObject } from 'openapi3-ts';\nimport * as portals from 'react-reverse-portal';\n\nimport { styled } from '../../styles';\nimport { ObservablePromise, isObservablePromise } from '../../util/observable';\nimport { asError, unreachableCheck } from '../../util/error';\nimport { stringToBuffer } from '../../util';\n\nimport { ViewableContentType } from '../../model/events/content-types';\nimport { Formatters, isEditorFormatter } from '../../model/events/body-formatting';\n\nimport { ContainerSizedEditor, SelfSizedEditor } from './base-editor';\nimport { LoadingCardContent } from '../common/loading-card';\n\ninterface ContentViewerProps {\n    children: Buffer | string;\n    schema?: SchemaObject;\n    expanded: boolean;\n    rawContentType?: string;\n    contentType: ViewableContentType;\n    editorNode: portals.HtmlPortalNode<typeof SelfSizedEditor | typeof ContainerSizedEditor>;\n    cache: Map<Symbol, unknown>;\n\n    // See BaseEditor.props.contentid\n    contentId: string | null;\n\n    // Called after content was successfully rendered into the editor. This may be immediate and uninteresting in\n    // simple cases, or it may take longer if the content is large with a complex format (1MB of formatted JSON).\n    onContentRendered?: () => void;\n}\n\nconst ScrollableContentContainer = styled.div<{\n    expanded: boolean\n}>`\n    overflow-y: auto;\n    max-height: ${p => p.expanded\n        ? '100%'\n        : '560px' // Same as editor container\n    }\n`;\n\nconst CenteredContentViewerContainer = styled.div<{\n    expanded: boolean\n}>`\n    display: flex;\n    justify-content: center;\n\n    ${p => p.expanded\n        ? `\n            position: absolute;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            align-items: stretch;\n        `\n        : `\n            height: 100%;\n            align-items: center;\n        `\n    }\n`;\n\n@observer\nexport class ContentViewer extends React.Component<ContentViewerProps> {\n\n    constructor(props: ContentViewerProps) {\n        super(props);\n\n        // Every time the rendered content changes, as long as it's not a 'loading' promise,\n        // we fire a callback to notify that the content has been rendered.\n        reaction(() => {\n            try {\n                return this.renderedContent;\n            } catch (e) {}\n        }, (newValue) => {\n            if (newValue && !isObservablePromise(newValue)) {\n                requestAnimationFrame(() => {\n                    this.props.onContentRendered?.();\n                });\n            }\n        }, { fireImmediately: true });\n    }\n\n    @computed\n    private get formatter() {\n        return Formatters[this.props.contentType] || Formatters.text!;\n    }\n\n    @computed\n    private get contentBuffer() {\n        return _.isString(this.props.children)\n            ? stringToBuffer(this.props.children)\n            : this.props.children;\n    }\n\n    // Returns a string, if the rendered content is immediately available or has previously been generated\n    // and cached. Returns an observable promise if rendering is still in progress.\n    @computed\n    private get renderedContent() {\n        if (!isEditorFormatter(this.formatter)) return;\n\n        const { cache } = this.props;\n        const cacheKey = this.formatter.cacheKey;\n        const cachedValue = cache.get(cacheKey) as ObservablePromise<string> | string | undefined;\n\n        const renderingContent = cachedValue ||\n            this.formatter.render(this.contentBuffer) as ObservablePromise<string> | string;\n        if (!cachedValue) cache.set(cacheKey, renderingContent);\n\n        if (typeof renderingContent === 'string') {\n            return renderingContent;\n        } else {\n            if (renderingContent.state === 'fulfilled') {\n                return renderingContent.value as string;\n            } else if (renderingContent.state === 'rejected') {\n                throw renderingContent.value;\n            } else {\n                return renderingContent;\n            }\n        }\n    }\n\n    private readonly editorOptions = {\n        readOnly: true\n    };\n\n    render() {\n        if (isEditorFormatter(this.formatter)) {\n            try {\n                const content = this.renderedContent;\n                if (isObservablePromise<string>(content)) {\n                    return <LoadingCardContent height='500px' />;\n                } else {\n                    return <portals.OutPortal<typeof SelfSizedEditor>\n                        contentId={this.props.contentId}\n                        node={this.props.editorNode}\n                        options={this.editorOptions}\n                        language={this.formatter.language}\n                        value={content!}\n                        schema={this.props.schema}\n                        expanded={this.props.expanded}\n                    />;\n                }\n            } catch (e) {\n                return <div>\n                    Failed to render {this.props.contentType} content:<br/>\n                    { asError(e).toString() }\n                </div>;\n            }\n        } else {\n            const formatterConfig = this.formatter;\n\n\n            // Formatter components should all be either scrollable (top aligned, extending\n            // downwards, scrolling if there's no space) or centered (in the middle, scaling\n            // down to match if the container is ever smaller than the content size):\n            const FormatterContainer = formatterConfig.layout === 'scrollable'\n                    ? ScrollableContentContainer\n                : formatterConfig.layout === 'centered'\n                    ? CenteredContentViewerContainer\n                : unreachableCheck(formatterConfig.layout);\n\n            return <FormatterContainer expanded={this.props.expanded}>\n                <formatterConfig.Component\n                    content={this.contentBuffer}\n                    rawContentType={this.props.rawContentType}\n                />\n            </FormatterContainer>;\n        }\n    }\n}\n","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { action, observable, reaction } from 'mobx';\nimport { disposeOnUnmount, observer } from 'mobx-react';\n\nimport { styled } from '../../styles';\n\nimport { clickOnEnter } from '../component-utils';\nimport { Button, TextInput } from './inputs';\nimport { Icon } from '../../icons';\n\nexport type Pair = { key: string, value: string, disabled?: true };\nexport type PairsArray = Array<Pair>;\n\ninterface EditablePairsProps<R = PairsArray> {\n    pairs: PairsArray;\n\n    onChange: (pairs: R) => void;\n\n    // Optionally, transform values before they're passed to onChange. If not set,\n    // R must be PairsArray. This is useful because it's also used to ignore irrelevant\n    // updates, preserving information lost in conversion with 2-way binding, for example\n    // ordering of the pairs. Without this, duplicate keys in EditableHeaders and similar\n    // result in the pairs reordering themselves while you're typing.\n    convertResult?: (pairs: PairsArray) => R;\n\n    // While convertResult defines transformations that don't update the UI, this\n    // callback defines transforms that do - e.g. lowercasing input as it's typed.\n    transformInput?: (pairs: PairsArray) => PairsArray;\n\n    keyTitle?: string;\n    keyPattern?: string;\n\n    keyPlaceholder: string;\n    valuePlaceholder: string;\n\n    // Disabled by default, but can be useful in some cases\n    allowEmptyValues?: boolean;\n}\n\nconst ReadOnlyPairsContainer = styled.div`\n    display: grid;\n    grid-gap: 5px;\n    grid-template-columns: 1fr 2fr;\n`;\n\nconst EditablePairsContainer = styled(ReadOnlyPairsContainer)`\n    grid-template-columns: 1fr 2fr min-content;\n\n    > :last-child {\n        grid-column: 2 / span 2;\n    }\n`;\n\nconst PairDeleteButton = styled(Button)`\n    font-size: ${p => p.theme.textSize};\n    padding: 3px 10px 5px;\n`;\n\n@observer\nexport class ReadOnlyPairs extends React.Component<{\n    className?: string,\n    pairs: PairsArray\n}> {\n\n    render() {\n        const { pairs, className } = this.props;\n\n        return <ReadOnlyPairsContainer className={className}>\n            { _.flatMap(pairs, ({ key, value }, i) => [\n                <TextInput\n                    value={key}\n                    readOnly={true}\n                    spellCheck={false}\n                    key={`${i}-key`}\n                />,\n                <TextInput\n                    value={value}\n                    readOnly={true}\n                    spellCheck={false}\n                    key={`${i}-val`}\n                />\n            ]) }\n        </ReadOnlyPairsContainer>\n    }\n}\n\n@observer\nexport class EditablePairs<R> extends React.Component<EditablePairsProps<R>> {\n\n    private containerRef = React.createRef<HTMLDivElement>();\n\n    @observable\n    private values: PairsArray = _.cloneDeep(this.props.pairs);\n\n    // Track the last value length. This is used to detect manually added new rows, and\n    // manage the UX around that.\n    private lastValuesLength = this.values.length;\n\n    componentDidMount() {\n        disposeOnUnmount(this, reaction(\n            () => this.props.pairs,\n            (pairs) => {\n                if (!_.isEqual(this.convert(pairs), this.convert(this.values))) {\n                    // Only updates values if some data changes other than their order.\n                    // We treat order as a UI concern only for these pairs, and\n                    // this avoids reordering due to conversion elsewhere, e.g. when entering\n                    // duplicate header keys in EditableHeaders.\n                    this.values = _.cloneDeep(pairs);\n                    this.lastValuesLength = this.values.length;\n                }\n            }\n        ));\n    }\n\n    private convert = (pairs: PairsArray): R => {\n        if (this.props.convertResult) {\n            return this.props.convertResult(pairs);\n        } else {\n            return pairs as unknown as R;\n        }\n    };\n\n    private onChangeValues = (pairs: PairsArray) => {\n        const { props: { transformInput, onChange }, convert } = this;\n\n        if (transformInput) {\n            this.values = transformInput(pairs);\n        } else {\n            this.values = pairs;\n        }\n\n        // If we've just manually added a new row, make sure the parent scrolls\n        // to show it (note we ignore this for external updates).\n        const addedNewRow = this.values.length === this.lastValuesLength + 1;\n        this.lastValuesLength = this.values.length;\n        if (addedNewRow) {\n            requestAnimationFrame(() => {\n                const container = this.containerRef.current;\n                const lastInput = container?.querySelector<HTMLElement>('input:last-child');\n                lastInput?.scrollIntoView({\n                    block: 'nearest',\n                    behavior: 'smooth'\n                });\n            });\n        }\n\n        onChange(convert(this.values));\n    };\n\n    render() {\n        const {\n            keyTitle,\n            keyPattern,\n            keyPlaceholder,\n            valuePlaceholder,\n            allowEmptyValues\n        } = this.props;\n\n        const { values, onChangeValues, containerRef } = this;\n\n        return <EditablePairsContainer\n            ref={containerRef}\n        >\n            { _.flatMap(values, ({ key, value, disabled }, i) => [\n                <TextInput\n                    value={key}\n                    required\n                    pattern={keyPattern}\n                    title={keyTitle}\n                    disabled={disabled}\n                    spellCheck={false}\n                    key={`${i}-key`}\n                    onChange={action((event: React.ChangeEvent<HTMLInputElement>) => {\n                        event.target.reportValidity();\n                        values[i].key = event.target.value;\n                        onChangeValues(values);\n                    })}\n                />,\n                <TextInput\n                    value={value}\n                    required={!allowEmptyValues}\n                    disabled={disabled}\n                    spellCheck={false}\n                    key={`${i}-val`}\n                    onChange={action((event: React.ChangeEvent<HTMLInputElement>) => {\n                        event.target.reportValidity();\n                        values[i].value = event.target.value;\n                        onChangeValues(values);\n                    })}\n                />,\n                <PairDeleteButton\n                    key={`${i}-del`}\n                    disabled={disabled}\n                    onClick={action(() => {\n                        values.splice(i, 1);\n                        onChangeValues(values);\n                    })}\n                >\n                    <Icon icon={['far', 'trash-alt']} />\n                </PairDeleteButton>\n            ]).concat([\n                <TextInput\n                    value=''\n                    pattern={keyPattern}\n                    placeholder={keyPlaceholder}\n                    spellCheck={false}\n                    key={`${values.length}-key`}\n                    onChange={action((event: React.ChangeEvent<HTMLInputElement>) => {\n                        let key = event.target.value;\n                        if (key) values.push({ key: key, value: '' });\n                        onChangeValues(values);\n                    })}\n                />,\n                <TextInput\n                    value=''\n                    placeholder={valuePlaceholder}\n                    spellCheck={false}\n                    key={`${values.length}-val`}\n                    onChange={action((event: React.ChangeEvent<HTMLInputElement>) => {\n                        let value = event.target.value;\n                        if (value) values.push({ key: '', value: event.target.value });\n                        onChangeValues(values);\n                    })}\n                />\n            ]) }\n        </EditablePairsContainer>\n    }\n}","type DesktopInjectedKey =\n    | 'httpToolkitDesktopVersion'\n    | 'httpToolkitForwardingDefault';\n\nexport async function getDesktopInjectedValue(key: DesktopInjectedKey): Promise<string> {\n    // In the SW, it's tricky to check the desktop version, as we don't get it injected.\n    // For now, just treat it as a different environment\n    if (typeof window === 'undefined') return 'service-worker';\n\n    if (key in window) {\n        // If it's already been set, just return it\n        return window[key as keyof Window];\n    } else {\n        return new Promise<string>((resolve) => {\n            // If not, it might still be coming (there's race here), so listen out\n            window.addEventListener('message', (message) => {\n                if (message.data[key]) resolve(message.data[key]);\n            });\n        });\n    }\n    // Note that if we're running in a browser, not the desktop shell, this _never_ resolves.\n}\n\ndeclare global {\n    interface Window {\n        desktopApi?: DesktopApi;\n    }\n}\n\ninterface DesktopApi {\n    selectApplication?: () => Promise<string | undefined>;\n    openContextMenu?: (options: NativeContextMenuDefinition) => Promise<string | undefined>;\n}\n\ninterface NativeContextMenuDefinition {\n    position: { x: number; y: number };\n    items: readonly NativeContextMenuItem[];\n}\n\nexport type NativeContextMenuItem =\n    | NativeContextMenuOption\n    | NativeContextMenuSubmenu\n    | { type: 'separator' };\n\ninterface NativeContextMenuOption {\n    type: 'option';\n    id: string;\n    label: string;\n    enabled?: boolean;\n}\n\ninterface NativeContextMenuSubmenu {\n    type: 'submenu';\n    label: string;\n    enabled?: boolean;\n    items: readonly NativeContextMenuItem[];\n}\n\n// Quick fix to avoid this file crashing the update SW which doesn't have 'window' available, without\n// also breaking old Electron that doesn't have globalThis:\nconst global = typeof globalThis !== 'undefined'\n        ? globalThis as unknown as Window\n    : typeof window !== 'undefined'\n        ? window\n    : {} as Window;\n\nexport const DesktopApi: DesktopApi = global.desktopApi ?? {};","import * as _ from 'lodash';\nimport { UAParser } from 'ua-parser-js';\nimport { get } from 'typesafe-get';\n\nimport { popColor } from '../../styles';\nimport { SourceIcons, IconProps, SourceIconName } from '../../icons';\n\nexport interface TrafficSource {\n    ua: string;\n    summary: string;\n    description?: string;\n    icon: IconProps;\n}\n\nfunction formatVersion(version: string | undefined): string {\n    if (!version) return '';\n\n    // Space-prefixed, first two parts only, trim 0s so that '10.0' -> '10'\n    return ' ' + version.split('.').slice(0, 2).join('.').replace(/\\.0$/, '');\n}\n\nconst getSummary = (useragent: IUAParser.IResult) => {\n    const hasOS = _(useragent.os).values().some();\n    const hasBrowser = _(useragent.browser).values().some();\n\n    const clientName = _.upperFirst(useragent.ua.split(' ')[0]);\n\n    if (hasOS || hasBrowser) {\n        const osDescription = hasOS ?\n            ` (${_.upperFirst(useragent.os.name)}${formatVersion(useragent.os.version)})`\n        : '';\n        const browserDescription = hasBrowser ?\n            (useragent.browser.name || '') + formatVersion(useragent.browser.version)\n        : clientName;\n\n        return browserDescription + osDescription;\n    } else {\n        return clientName;\n    }\n};\n\nfunction getArticle(nextWord: string): string {\n    const firstLetter = nextWord[0].toLowerCase();\n    // This isn't exactly right (really its vowel _sounds_, not vowels),\n    // but it's an ok approximation.\n    return (\n        firstLetter === 'a' ||\n        firstLetter === 'e' ||\n        firstLetter === 'i' ||\n        firstLetter === 'o' ||\n        firstLetter === 'u'\n    ) ? 'an ' : 'a ';\n}\n\nconst getDescription = (useragent: IUAParser.IResult): string | undefined => {\n    if (\n        !useragent.browser.name &&\n        !useragent.os.name &&\n        !useragent.device.type\n    ) return;\n\n    const browserDescription = useragent.browser.name ?\n        useragent.browser.name + formatVersion(useragent.browser.version)\n        + (useragent.engine.name ?\n            `, based on the ${useragent.engine.name}${\n                useragent.engine.name !== 'Blink' // Blink duplicates the Chrome version, noisy\n                    ? formatVersion(useragent.engine.version)\n                    : ''\n             } engine` : '')\n    : useragent.engine.name ?\n        `a browser built on the ${useragent.engine.name}${\n            formatVersion(useragent.engine.version)\n        } engine`\n    : '';\n\n    const hardwareDescription =\n            (useragent.device.vendor ? `${useragent.device.vendor} ` : '') +\n            (useragent.device.model ? `${useragent.device.model} ` : '') +\n            (useragent.device.type ?\n                (useragent.device.type === 'mobile' ?\n                    'mobile phone' : useragent.device.type\n                + ' ')\n            : '');\n\n    const osDescription = useragent.os.name ?\n        `running ${useragent.os.name}${formatVersion(useragent.os.version)}` : '';\n\n    const cpuDescription = useragent.cpu.architecture ?\n        `${getArticle(\n            useragent.cpu.architecture\n        )}${useragent.cpu.architecture} CPU` : '';\n\n    const deviceDescription = (hardwareDescription ? `${getArticle(\n            hardwareDescription\n        )}${hardwareDescription}` : '') +\n        (hardwareDescription && osDescription ? ', ' : '') +\n        osDescription +\n        (cpuDescription ?\n            ((hardwareDescription || osDescription) ? ', with ' : ' using ') +\n            cpuDescription : '');\n\n    return `This request came from ${\n        browserDescription ?\n            browserDescription +\n            (deviceDescription ? '. The device is ' + deviceDescription : '')\n        : hardwareDescription ? // = starts with an article\n            deviceDescription : 'a device ' + deviceDescription\n    }.`;\n}\n\nconst isValidIconName = (name: string | undefined): name is SourceIconName => {\n    return !!(name && _.has(SourceIcons, name));\n}\n\nconst getIcon = (useragent: IUAParser.IResult) => {\n    const browserName = get(useragent, 'browser', 'name');\n    if (isValidIconName(browserName)) return SourceIcons[browserName];\n\n    const uaStrings = useragent.ua.match(/[A-Za-z]+/g) || [];\n\n    const recognizedUaPart = _.find(\n        uaStrings.map((s) => _.upperFirst(s.toLowerCase())),\n        (s) => isValidIconName(s)\n    ) as SourceIconName;\n\n    if (recognizedUaPart) {\n        return SourceIcons[recognizedUaPart];\n    } else {\n        return SourceIcons.Unknown;\n    }\n};\n\nfunction checkForElectron(userAgent: IUAParser.IResult) {\n    const electronVersion = userAgent.ua.match(/Electron\\/(\\S+)/);\n\n    if (electronVersion) {\n        // If we have a browser & an engine, treat the browser as the engine\n        userAgent.engine = userAgent.browser || userAgent.engine;\n        // Treat Electron as the 'browser', replacing any existing browser\n        userAgent.browser = {\n            name: 'Electron',\n            version: electronVersion[1],\n            major: electronVersion[1].split('.')[0]\n        };\n    }\n}\n\nexport const UNKNOWN_SOURCE = {\n    ua: '',\n    summary: 'Unknown client',\n    icon: SourceIcons.Unknown\n};\n\nexport const MANUALLY_SENT_SOURCE = {\n    ua: '',\n    summary: 'HTTP Toolkit',\n    description: 'Sent manually from HTTP Toolkit',\n    icon: {\n        icon: ['far', 'paper-plane'],\n        color: popColor\n    }\n};\n\nexport const parseSource = (userAgentHeader: string | undefined): TrafficSource => {\n    if (!userAgentHeader) return UNKNOWN_SOURCE;\n\n    const useragent = new UAParser(userAgentHeader).getResult();\n\n    checkForElectron(useragent);\n\n    return {\n        ua: useragent.ua,\n        summary: getSummary(useragent),\n        description: getDescription(useragent),\n        icon: getIcon(useragent),\n    };\n}","import * as React from 'react';\n\nimport { styled, css } from '../../styles';\nimport { Icon } from '../../icons';\n\nimport {\n    CollapsibleCard,\n    CollapsibleCardProps\n} from './card'\n\nexport const LoadingCardContent = styled((props: { height?: string, className?: string }) =>\n    <div className={props.className}>\n        <Icon spin icon={['fac', 'spinner-arc']} size='8x' />\n    </div>\n)`\n    ${p => p.height && css`\n        height: ${p.height};\n    `}\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport const LoadingCard = (props:\n    CollapsibleCardProps & {\n        height?: string,\n        children?: React.ReactNode\n    }\n) => <CollapsibleCard {...props}>\n    { props.children }\n    <LoadingCardContent height={\n        props.height\n            ? props.height\n        : props.expanded\n            ? 'auto'\n        // Not expanded, no explicit height, set a default size (matches body editor max):\n            : '550px'\n    } />\n</CollapsibleCard>;","import * as _ from 'lodash';\nimport { toJS } from 'mobx';\nimport { completionCheckers } from 'mockttp';\nimport * as serializr from 'serializr';\n\nimport { hasSerializrSchema, serializeAsTag } from '../serialization';\n\nimport { RulesStore } from './rules-store';\nimport { HtkMockRule, MatcherLookup, HandlerLookup, getRulePartKey } from './rules';\nimport {\n    HtkMockItem,\n    HtkMockRuleRoot,\n    isRuleGroup,\n    HtkMockRuleGroup\n} from './rules-structure';\nimport { migrateRuleData } from './rule-migrations';\n\nexport type DeserializationArgs = {\n    rulesStore: RulesStore\n};\n\nconst deserializeByType = <T extends { type: string, uiType?: string }>(\n    data: T,\n    lookup: _.Dictionary<any>,\n    args: DeserializationArgs\n) => {\n    const typeKey = getRulePartKey(data);\n    const clazz = lookup[typeKey];\n\n    if (!clazz) throw new Error(`Can't load unrecognized rule type: ${typeKey}`);\n\n    if (hasSerializrSchema(clazz)) {\n        return serializr.deserialize(clazz, data, () => {}, args);\n    } else {\n        return _.create(clazz.prototype, data);\n    }\n}\n\nconst MockRuleSerializer = serializr.custom(\n    (rule: HtkMockRule): HtkMockRule => {\n        const data = _.cloneDeep(toJS(rule));\n\n        // Allow matchers & handlers to override default serialization using serializr\n        data.matchers = data.matchers.map((matcher) => {\n            if (hasSerializrSchema(matcher)) {\n                return serializr.serialize(matcher);\n            } else {\n                return matcher;\n            }\n        });\n\n        if ('steps' in data) {\n            data.steps = data.steps.map((step) => {\n                if (hasSerializrSchema(step)) {\n                    return serializr.serialize(step);\n                } else {\n                    return step;\n                }\n            });\n        } else {\n            if (hasSerializrSchema(data.handler)) {\n                data.handler = serializr.serialize(data.handler);\n            }\n\n            if ('completionChecker' in data && hasSerializrSchema(data.completionChecker)) {\n                data.completionChecker = serializr.serialize(data.completionChecker);\n            }\n        }\n\n        return data;\n    },\n    (data: HtkMockRule, context: { args: DeserializationArgs }) => {\n        return {\n            id: data.id,\n            type: data.type,\n            title: data.title,\n            activated: data.activated,\n            matchers: data.matchers.map((m) =>\n                deserializeByType(m, MatcherLookup, context.args)\n            ),\n            ...('steps' in data\n                ? {\n                    steps: data.steps.map((s) => deserializeByType(s, HandlerLookup, context.args))\n                }\n                : {\n                    handler: deserializeByType(data.handler, HandlerLookup, context.args),\n                }\n            ),\n            completionChecker: 'completionChecker' in data &&\n                deserializeByType(\n                    data.completionChecker,\n                    completionCheckers.CompletionCheckerLookup,\n                    context.args\n                )\n        };\n    }\n);\n\nconst MockItemSerializer: serializr.PropSchema = serializr.custom(\n    (item: HtkMockItem) => {\n        if (isRuleGroup(item)) {\n            return serializr.serialize(MockRuleGroupSchema, item);\n        } else {\n            return MockRuleSerializer.serializer(item);\n        }\n    },\n    (data: HtkMockItem, context: any, oldValue: any, done: (err: any, result: any) => any) => {\n        if (isRuleGroup(data)) {\n            const group = serializr.deserialize(MockRuleGroupSchema, data, done, context.args);\n            group.collapsed = true; // Groups always start collapsed when unpersisted/imported.\n            return group;\n        } else {\n            return MockRuleSerializer.deserializer(data, done, context, oldValue);\n        }\n    }\n);\n\nconst MockRuleGroupSchema = serializr.createSimpleSchema<HtkMockRuleGroup>({\n    id: serializr.primitive(),\n    title: serializr.primitive(),\n    items: serializr.list(MockItemSerializer)\n});\n\ninterface MockRuleset extends HtkMockRuleRoot {\n    version: undefined;\n}\n\nexport const MockRulesetSchema = serializr.createSimpleSchema<MockRuleset>({\n    id: serializr.primitive(),\n    title: serializr.primitive(),\n    version: serializeAsTag(() => undefined), // All compatible, so we don't version yet, but we _could_.\n    isRoot: serializr.optional(serializr.primitive()),\n    items: serializr.list(MockItemSerializer)\n});\n\nexport const serializeRules = (rules: HtkMockRuleRoot): MockRuleset => {\n    return serializr.serialize(MockRulesetSchema, rules);\n}\n\nexport const deserializeRules = (data: any, args: DeserializationArgs): HtkMockRuleRoot => {\n    return (\n        serializr.deserialize(MockRulesetSchema, migrateRuleData(data), undefined, args)\n    ) as HtkMockRuleRoot;\n}\n\nexport const SERIALIZED_RULES_MIME_TYPE = 'application/htkrules+json;charset=utf-8';","import { StyledComponent } from \"styled-components\";\nimport { styled, Theme, css } from \"../../styles\";\n\nexport const interactiveMouseoverStyles = css`\n    &[disabled] {\n        cursor: default;\n    }\n\n    &:not([disabled]) {\n        cursor: pointer;\n        &:hover {\n            background-image: linear-gradient(transparent, rgba(0,0,0,.05) 40%, rgba(0,0,0,.1));\n        }\n\n        &:active {\n            background-image: linear-gradient(rgba(0,0,0,.1), rgba(0,0,0,.05) 40%, transparent);\n        }\n    }\n`;\n\nexport const UnstyledButton = styled.button.attrs(() => ({\n    // 'submit' is the default, which makes 'enter' behaviour super wacky:\n    'type': 'button'\n}))`\n    /* Reset styles that get broken because <button> overrides them: */\n    border: none;\n    background: none;\n    font-family: inherit;\n    font-size: inherit;\n    color: inherit;\n\n    &[disabled] {\n        cursor: default;\n    }\n\n    &:not([disabled]) {\n        cursor: pointer;\n    }\n` as StyledComponent<\"button\", Theme>;\nexport const UnstyledButtonLink = UnstyledButton.withComponent('a');\n\nconst BaseButtonStyles = css`\n    -webkit-appearance: none;\n    cursor: pointer;\n    padding: 15px 36px;\n    border-radius: 4px;\n    border: none;\n\n    font-family: ${p => p.theme.fontFamily};\n    font-size: ${p => p.theme.headingSize};\n\n    display: block;\n    text-decoration: none;\n    text-align: center;\n    font-weight: inherit;\n    line-height: normal;\n\n    ${interactiveMouseoverStyles}\n`;\n\nexport const Button = styled.button`\n    ${BaseButtonStyles}\n\n    /*\n     * Need both to ensure link button colours have higher\n     * specificity than the a:visited default.\n     */\n    &, &:visited {\n        color: ${p => p.theme.primaryInputColor};\n    }\n\n    &[disabled] {\n        background-color: ${p => p.theme.containerWatermark};\n    }\n\n    &:not([disabled]) {\n        background-color: ${p => p.theme.primaryInputBackground};\n    }\n`;\n// 'submit' is the default, which makes 'enter' behaviour super wacky:\nButton.defaultProps = { type: \"button\" };\n\nexport const ButtonLink = Button.withComponent('a');\n\nexport const SecondaryButton = styled.button.attrs(() => ({\n    // 'submit' is the default, which makes 'enter' behaviour super wacky:\n    'type': 'button'\n}))`\n    ${BaseButtonStyles}\n\n    background-color: transparent;\n\n    &, &:visited {\n        color: ${p => p.theme.secondaryInputColor};\n    }\n\n    border-width: 2px;\n    border-style: solid;\n\n    &[disabled] {\n        color: ${p => p.theme.containerWatermark};\n        border-color: ${p => p.theme.containerWatermark};\n    }\n\n    &:not([disabled]) {\n        border-color: ${p => p.theme.secondaryInputBorder};\n    }\n`;\n\nconst invalidTextCss = css`\n    border-color: ${p => p.theme.warningColor};\n    background-color: ${p => p.theme.warningBackground};\n    color: ${p => p.theme.mainColor};\n`;\n\ntype TextInputProps = React.InputHTMLAttributes<HTMLInputElement> & {\n    invalid?: boolean\n}\n\nexport const TextInput = styled.input.attrs((p: { type?: string }) => ({\n    type: p.type || \"text\"\n}))`\n    font-size: ${p => p.theme.textInputFontSize};\n    padding: 5px 10px;\n    border-radius: 4px;\n    border: solid 1px ${p => p.theme.inputBorder};\n\n    min-width: 20px; /* Without this, editable headers especially refuse to shrink */\n\n    background-color: ${p => p.theme.inputBackground};\n    &:hover:not(:disabled) {\n        background-color: ${p => p.theme.inputHoverBackground};\n    }\n\n    color: ${p => p.theme.inputColor};\n\n    &:disabled {\n        opacity: 0.6;\n    }\n\n    &:invalid {\n        ${invalidTextCss}\n    }\n\n    &:read-only {\n        cursor: default;\n        outline: none;\n    }\n\n    ${(p: TextInputProps) => p.invalid && invalidTextCss}\n` as StyledComponent<'input', Theme, TextInputProps>;\n\nexport const Select = styled.select`\n    ${interactiveMouseoverStyles}\n\n    font-size: ${p => p.theme.headingSize};\n    font-family: ${p => p.theme.fontFamily};\n\n    width: 100%;\n    border-radius: 4px;\n`;","import * as React from 'react';\n\nimport {\n    Formatters,\n    isEditorFormatter,\n    EditorFormatter\n} from '../../model/events/body-formatting';\nimport { getContentEditorName } from '../../model/events/content-types';\n\nimport { IconButton } from './icon-button';\n\nexport const FormatButton = (props: {\n    className?: string,\n    format: keyof typeof Formatters,\n    content: Buffer,\n    onFormatted: (content: string) => void\n}) => {\n    const { format, content, onFormatted } = props;\n\n    const formatter = Formatters[format];\n    const canFormat = !!formatter &&\n        isEditorFormatter(formatter) &&\n        [\n            'json',\n            'html',\n            'xml',\n            'javascript',\n            'css'\n        ].includes(format);\n\n    return <IconButton\n        className={props.className}\n        title={canFormat\n            ? `Format as ${getContentEditorName(props.format)}`\n            : \"\"\n        }\n        disabled={!canFormat}\n        icon={['fas', 'align-left']}\n        onClick={async () => {\n            // This is often async, and in that case it'll have a race condition: if you\n            // format content and then keep editing, when its formatted you lose your edits.\n            // That gap should be very short though, and arguably this is expected,\n            // so we ignore it.\n            onFormatted(\n                await (formatter as EditorFormatter).render(content)\n            );\n        }}\n    />;\n}\n","import * as React from 'react';\n\nimport { ReadOnlyPairs } from './editable-pairs';\n\nexport const ReadOnlyParams = (props: { content: string, className?: string }) => {\n    const params = new URLSearchParams(props.content);\n    const paramPairs = [...params].map(([key, value]) => ({ key, value }));\n    return <ReadOnlyPairs\n        className={props.className}\n        pairs={paramPairs}\n    />;\n}","import * as React from 'react';\n\nimport { styled } from '../../styles';\n\n// The image viewer, as used in content viewer editors when the image format\n// is selected from the dropdown:\nexport const ImageViewer = styled((p: {\n    className?: string\n    content: Buffer,\n    rawContentType: string\n}) => <img\n    className={p.className}\n    src={`data:${p.rawContentType || ''};base64,${p.content.toString('base64')}`}\n/>)`\n    display: block;\n    max-width: 100%;\n    margin: 0 auto;\n    object-fit: scale-down;\n`;","import { styled } from '../../styles';\n\nimport { ViewableContentType } from '../events/content-types';\nimport { ObservablePromise, observablePromise } from '../../util/observable';\nimport { bufferToString } from '../../util';\n\nimport type { WorkerFormatterKey } from '../../services/ui-worker-formatters';\nimport { formatBufferAsync } from '../../services/ui-worker-api';\nimport { ReadOnlyParams } from '../../components/common/editable-params';\nimport { ImageViewer } from '../../components/editor/image-viewer';\n\nexport interface EditorFormatter {\n    language: string;\n    cacheKey: Symbol;\n    render(content: Buffer): string | ObservablePromise<string>;\n}\n\ntype FormatComponentProps = {\n    content: Buffer;\n    rawContentType: string | undefined;\n};\n\ntype FormatComponent = React.ComponentType<FormatComponentProps>;\n\ntype FormatComponentConfig = {\n    layout: 'scrollable' | 'centered';\n    Component: FormatComponent;\n};\n\ntype Formatter = EditorFormatter | FormatComponentConfig;\n\nexport function isEditorFormatter(input: any): input is EditorFormatter {\n    return !!input.language;\n}\n\nconst buildAsyncRenderer = (formatKey: WorkerFormatterKey) =>\n    (input: Buffer) => observablePromise(\n        formatBufferAsync(input, formatKey)\n    );\n\nexport const Formatters: { [key in ViewableContentType]: Formatter } = {\n    raw: {\n        language: 'text',\n        cacheKey: Symbol('raw'),\n        render: (input: Buffer) => {\n            if (input.byteLength < 2000) {\n                try {\n                    // For short-ish inputs, we return synchronously - conveniently this avoids\n                    // showing the loading spinner that churns the layout in short content cases.\n                    return input.toString('hex')\n                        .replace(/(\\w\\w)/g, '$1 ')\n                        .trimRight();\n                        // ^ Same logic as in UI-worker-formatter\n                } catch (e) {\n                    return observablePromise(Promise.reject(e));\n                }\n            } else {\n                return observablePromise(\n                    formatBufferAsync(input, 'raw')\n                );\n            }\n        }\n    },\n    text: {\n        language: 'text',\n        cacheKey: Symbol('text'),\n        render: (input: Buffer) => {\n            return bufferToString(input);\n        }\n    },\n    base64: {\n        language: 'text',\n        cacheKey: Symbol('base64'),\n        render: buildAsyncRenderer('base64')\n    },\n    markdown: {\n        language: 'markdown',\n        cacheKey: Symbol('markdown'),\n        render: buildAsyncRenderer('markdown')\n    },\n    yaml: {\n        language: 'yaml',\n        cacheKey: Symbol('yaml'),\n        render: buildAsyncRenderer('yaml')\n    },\n    html: {\n        language: 'html',\n        cacheKey: Symbol('html'),\n        render: buildAsyncRenderer('html')\n    },\n    xml: {\n        language: 'xml',\n        cacheKey: Symbol('xml'),\n        render: buildAsyncRenderer('xml')\n    },\n    json: {\n        language: 'json',\n        cacheKey: Symbol('json'),\n        render: (input: Buffer) => {\n            if (input.byteLength < 10000) {\n                const inputAsString = bufferToString(input);\n\n                try {\n                    // For short-ish inputs, we return synchronously - conveniently this avoids\n                    // showing the loading spinner that churns the layout in short content cases.\n                    return JSON.stringify(\n                        JSON.parse(inputAsString),\n                    null, 2);\n                    // ^ Same logic as in UI-worker-formatter\n                } catch (e) {\n                    // Fallback to showing the raw un-formatted JSON:\n                    return inputAsString;\n                }\n            } else {\n                return observablePromise(\n                    formatBufferAsync(input, 'json')\n                );\n            }\n        }\n    },\n    javascript: {\n        language: 'javascript',\n        cacheKey: Symbol('javascript'),\n        render: buildAsyncRenderer('javascript')\n    },\n    css: {\n        language: 'css',\n        cacheKey: Symbol('css'),\n        render: buildAsyncRenderer('css')\n    },\n    'url-encoded': {\n        layout: 'scrollable',\n        Component: styled(ReadOnlyParams).attrs((p: FormatComponentProps) => ({\n            content: bufferToString(p.content)\n        }))`\n            padding: 5px;\n        ` as FormatComponent\n    },\n    image: {\n        layout: 'centered',\n        Component: ImageViewer\n    }\n};\n","import * as _ from 'lodash';\nimport * as React from 'react';\n\nimport { styled } from \"../../styles\";\nimport { Html } from '../../types';\nimport { suggestionIconHtml, warningIconHtml } from '../../icons';\n\nimport { fromMarkdown } from '../../model/ui/markdown';\n\nexport const ContentLabel = styled.h2`\n    text-transform: uppercase;\n    opacity: ${p => p.theme.lowlightTextOpacity};\n\n    display: inline-block;\n    margin-right: 5px;\n`;\n\nexport const ContentValue = styled.div`\n    display: inline-block;\n`;\n\nexport const ContentLabelBlock = styled(ContentLabel)`\n    padding: 3px 0 0;\n    margin: 0 0 5px 0;\n    min-height: 26px;\n    display: block;\n    box-sizing: border-box;\n`;\n\nexport const ContentMonoValue = styled.div`\n    padding: 3px 0 11px;\n    width: 100%;\n\n    &:last-child {\n        padding-bottom: 0;\n    }\n\n    font-family: ${p => p.theme.monoFontFamily};\n    word-break: break-all;\n    line-height: 1.1;\n`;\n\nexport const ContentMonoValueInline = styled(ContentMonoValue)`\n    display: inline;\n`;\n\nexport const CopyableMonoValue = styled.span`\n    font-family: ${p => p.theme.monoFontFamily};\n    font-size: 90%;\n    user-select: all;\n    font-weight: bold;\n\n    word-break: break-all; /* Fallback for anybody without break-word */\n    word-break: break-word;\n`;\n\nexport const BlankContentPlaceholder = styled.div`\n    opacity: ${p => p.theme.lowlightTextOpacity};\n    font-style: italic;\n    display: inline-block;\n`;\n\n// Takes some HTML (in an __html object) and renders it with nice\n// default formatting. THIS MUST ONLY BE CALLED WITH SANITIZED HTML.\n// The __html format is intended to enforce this - those objects\n// should only be created during sanitization.\nexport const ExternalContent = (p:  React.HTMLAttributes<HTMLDivElement> & {\n    content: Html\n}) => <Content {..._.omit(p, 'content')} dangerouslySetInnerHTML={p.content} />\n\n// Format blocks of readable text/docs/etc.\nexport const Content = styled.div`\n    line-height: 1.3;\n\n    p, li, ul, ol, table, h1, h2, h3, h4, h5, h6, pre {\n        margin-bottom: 10px;\n    }\n\n    p::first-letter,\n    li::first-letter,\n    h1::first-letter,\n    h2::first-letter,\n    h3::first-letter,\n    h4::first-letter,\n    h5::first-letter,\n    h6::first-letter {\n        text-transform: capitalize;\n    }\n\n    ol, ul {\n        padding-left: 20px;\n    }\n\n    ol {\n        list-style: decimal;\n    }\n\n    ul {\n        list-style: circle;\n    }\n\n    table {\n        border-collapse: unset;\n        border-spacing: 5px;\n        margin-left: -5px;\n    }\n\n    th {\n        min-width: 80px;\n    }\n\n    code {\n        word-break: break-all; /* Fallback for anybody without break-word */\n        word-break: break-word;\n        font-family: ${p => p.theme.monoFontFamily};\n    }\n\n    h1, h2, h3, h4, h5, h6 {\n        font-weight: bold;\n        margin-bottom: 10px;\n    }\n\n    pre {\n        white-space: pre-wrap;\n        display: block;\n        border-left: 3px solid ${p => p.theme.containerWatermark};\n        padding-left: 8px;\n    }\n\n    img {\n        max-width: 100%;\n    }\n\n    a[href] {\n        color: ${p => p.theme.linkColor};\n\n        &:visited {\n            color: ${p => p.theme.visitedLinkColor};\n        }\n    }\n\n    :last-child :last-child {\n        margin-bottom: 0;\n    }\n`;\n\nexport const Markdown = (p: { content: string | undefined }) =>\n    p.content ?\n        <ExternalContent content={fromMarkdown(\n            p.content\n                .replace(/:suggestion:/g, suggestionIconHtml)\n                .replace(/:warning:/g, warningIconHtml)\n        )} />\n    : null;","import * as _ from 'lodash';\nimport * as dateFns from 'date-fns';\nimport * as HarFormat from 'har-format';\nimport * as HarValidator from 'har-validator';\nimport * as querystring from 'querystring';\n\nimport {\n    Headers,\n    HtkRequest,\n    HarRequest,\n    HarResponse,\n    HttpExchange,\n    CollectedEvent,\n    TimingEvents,\n    FailedTlsConnection,\n    InputWebSocketMessage,\n    InputTlsFailure\n} from '../../types';\n\nimport { stringToBuffer } from '../../util';\nimport { lastHeader } from '../../util/headers';\nimport { ObservablePromise } from '../../util/observable';\nimport { unreachableCheck } from '../../util/error';\n\nimport { UI_VERSION } from '../../services/service-versions';\nimport { getStatusMessage } from './http-docs';\nimport { StreamMessage } from '../events/stream-message';\nimport { QueuedEvent } from '../events/events-store';\n\n// We only include request/response bodies that are under 500KB\nconst HAR_BODY_SIZE_LIMIT = 500000;\nconst UTF8Decoder = new TextDecoder('utf8', { fatal: true });\n\nexport interface Har extends HarFormat.Har {\n    log: HarLog;\n}\n\nexport interface HarGenerationOptions {\n    bodySizeLimit: number;\n}\n\ninterface HarLog extends HarFormat.Log {\n    // Custom field to expose failed TLS connections\n    _tlsErrors: HarTlsErrorEntry[];\n\n    // Our extended version of HAR entries:\n    entries: HarEntry[];\n}\n\nexport type RequestContentData = {\n    text: string;\n    size: number;\n    encoding?: 'base64';\n    comment?: string;\n};\n\nexport interface ExtendedHarRequest extends HarFormat.Request {\n    _requestBodyStatus?:\n        | 'discarded:too-large'\n        | 'discarded:not-representable'\n        | 'discarded:not-decodable';\n    _content?: RequestContentData;\n}\n\nexport interface HarEntry extends HarFormat.Entry {\n    _resourceType?: 'websocket';\n    _webSocketMessages?: HarWebSocketMessage[];\n    _webSocketClose?: {\n        code?: number;\n        reason?: string;\n        timestamp?: number;\n    } | 'aborted'\n    _pinned?: true;\n}\n\nexport interface HarWebSocketMessage {\n    type: 'send' | 'receive';\n    opcode: 1 | 2;\n    data: string;\n    time: number; // Epoch timestamp, as a float in seconds\n}\n\nexport type HarTlsErrorEntry = {\n    startedDateTime: string;\n    time: number; // Floating-point high-resolution duration, in ms\n    hostname?: string; // Undefined if connection fails before hostname received\n    cause: FailedTlsConnection['failureCause'];\n\n    clientIPAddress: string;\n    clientPort: number;\n}\n\nexport async function generateHar(\n    events: CollectedEvent[],\n    options: HarGenerationOptions = { bodySizeLimit: HAR_BODY_SIZE_LIMIT }\n): Promise<Har> {\n    const [exchanges, otherEvents] = _.partition(events, e => e.isHttp()) as [\n        HttpExchange[], CollectedEvent[]\n    ];\n\n    const errors = otherEvents.filter(e => e.isTlsFailure()) as FailedTlsConnection[];\n\n    const sourcePages = getSourcesAsHarPages(exchanges);\n    const entries = await Promise.all(exchanges.map(e => generateHarHttpEntry(e, options)));\n    const errorEntries = errors.map(generateHarTlsError);\n\n    return {\n        log: {\n            version: \"1.2\",\n            creator: {\n                name: \"HTTP Toolkit\",\n                version: UI_VERSION\n            },\n            pages: sourcePages,\n            entries,\n            _tlsErrors: errorEntries\n        }\n    };\n}\n\nfunction asHarHeaders(headers: Headers) {\n    return _.map(headers, (headerValue, headerKey) => ({\n        name: headerKey,\n        value: _.isArray(headerValue)\n            ? headerValue.join(',')\n            : headerValue!\n    }))\n}\n\nfunction asHtkHeaders(headers: HarFormat.Header[]) {\n    return _(headers)\n        .keyBy((header) => header.name)\n        .mapKeys((_, headerName) => headerName.toLowerCase())\n        .mapValues((header) => header.value)\n        .value() as Headers;\n}\n\nexport function generateHarRequest(\n    request: HtkRequest,\n    waitForDecoding: false,\n    options: HarGenerationOptions\n): ExtendedHarRequest;\nexport function generateHarRequest(\n    request: HtkRequest,\n    waitForDecoding: true,\n    options: HarGenerationOptions\n): ExtendedHarRequest | ObservablePromise<ExtendedHarRequest>;\nexport function generateHarRequest(\n    request: HtkRequest,\n    waitForDecoding: boolean,\n    options: HarGenerationOptions\n): ExtendedHarRequest | ObservablePromise<ExtendedHarRequest> {\n    if (waitForDecoding && (\n        !request.body.decodedPromise.state ||\n        request.body.decodedPromise.state === 'pending'\n    )) {\n        return request.body.decodedPromise.then(() =>\n            generateHarRequest(request, false, options)\n        );\n    }\n\n    const requestEntry: ExtendedHarRequest = {\n        method: request.method,\n        url: request.parsedUrl.toString(),\n        httpVersion: `HTTP/${request.httpVersion || '1.1'}`,\n        cookies: [],\n        headers: asHarHeaders(request.headers),\n        queryString: Array.from(request.parsedUrl.searchParams.entries()).map(\n            ([paramKey, paramValue]) => ({\n                name: paramKey,\n                value: paramValue\n            })\n        ),\n        headersSize: -1,\n        bodySize: request.body.encoded.byteLength\n    };\n\n    if (request.body.decoded) {\n        if (request.body.decoded.byteLength > options.bodySizeLimit) {\n            requestEntry._requestBodyStatus = 'discarded:too-large';\n            requestEntry.comment = `Body discarded during HAR generation: longer than limit of ${\n                options.bodySizeLimit\n            } bytes`;\n        } else {\n            try {\n                requestEntry.postData = generateHarPostBody(\n                    UTF8Decoder.decode(request.body.decoded),\n                    lastHeader(request.headers['content-type']) || 'application/octet-stream'\n                );\n            } catch (e) {\n                if (e instanceof TypeError) {\n                    requestEntry._requestBodyStatus = 'discarded:not-representable';\n                    requestEntry._content = {\n                        text: request.body.decoded.toString('base64'),\n                        size: request.body.decoded.byteLength,\n                        encoding: 'base64',\n                    }\n                } else {\n                    throw e;\n                }\n            }\n        }\n    } else {\n        requestEntry._requestBodyStatus = 'discarded:not-decodable';\n    }\n\n    return requestEntry;\n}\n\ntype TextBody = {\n    mimeType: string,\n    text: string\n};\n\ntype ParamBody = {\n    mimeType: string,\n    params: HarFormat.Param[]\n}\n\nfunction generateHarPostBody(body: string | false, mimeType: string): TextBody | ParamBody | undefined {\n    if (!body) return;\n\n    if (mimeType === 'application/x-www-form-urlencoded') {\n        let parsedBody: querystring.ParsedUrlQuery | undefined;\n\n        try {\n            parsedBody = querystring.parse(body);\n        } catch (e) {\n            console.log('Failed to parse url encoded body', body);\n        }\n\n        if (parsedBody) {\n            // URL encoded data - expose this explicitly\n            return {\n                mimeType,\n                params: generateHarParamsFromParsedQuery(parsedBody),\n                // The spec says we shouldn't export params & text at the same time, but Chrome & FF do,\n                // it's required for full imports there in some cases, and it's useful to ensure we're\n                // perfectly reproducing the original body format.\n                text: body\n            };\n        } else {\n            // URL encoded but not parseable so just use the raw data\n            return {\n                mimeType,\n                text: body\n            };\n        }\n    } else {\n        // Not URL encoded, so just use the raw data\n        return {\n            mimeType,\n            text: body\n        };\n    }\n}\n\nfunction generateHarParamsFromParsedQuery(query: querystring.ParsedUrlQuery): HarFormat.Param[] {\n    const queryEntries = _.flatMap(Object.entries(query), ([key, value]): Array<[string, string]> => {\n        if (_.isString(value)) return [[key, value]];\n        else return value!.map((innerValue) => [\n            key, innerValue\n        ]);\n    });\n\n    return queryEntries.map(([key, value]) => ({\n        name: key,\n        value\n    }));\n}\n\nasync function generateHarResponse(\n    exchange: HttpExchange,\n    options: HarGenerationOptions\n): Promise<HarFormat.Response> {\n    const { request, response } = exchange;\n\n    if (!response || response === 'aborted') {\n        return {\n            status: 0,\n            statusText: \"\",\n            httpVersion: \"\",\n            headers: [],\n            cookies: [],\n            content: { size: 0, mimeType: \"application/x-unknown\" },\n            redirectURL: \"\",\n            headersSize: -1,\n            bodySize: -1\n        };\n    }\n\n    const decoded = await response.body.decodedPromise;\n\n    let responseContent: { text: string, encoding?: string } | { comment: string};\n    try {\n        if (!decoded || decoded.byteLength > options.bodySizeLimit) {\n            // If no body or the body is too large, don't include it\n            responseContent = {\n                comment: `Body discarded during HAR generation: longer than limit of ${\n                    options.bodySizeLimit\n                } bytes`\n            };\n        } else {\n            // If body decodes as text, keep it as text\n            responseContent = { text: UTF8Decoder.decode(decoded) };\n        }\n    } catch (e) {\n        // If body doesn't decode as text, base64 encode it\n        responseContent = {\n            text: decoded!.toString('base64'),\n            encoding: 'base64'\n        };\n    }\n\n    return {\n        status: response.statusCode,\n        statusText: response.statusMessage,\n        httpVersion: `HTTP/${request.httpVersion || '1.1'}`,\n        cookies: [],\n        headers: asHarHeaders(response.headers),\n        content: Object.assign(\n            {\n                mimeType: lastHeader(response.headers['content-type']) ||\n                    'application/octet-stream',\n                size: response.body.decoded?.byteLength || 0\n            },\n            responseContent\n        ),\n        redirectURL: \"\",\n        headersSize: -1,\n        bodySize: response.body.encoded.byteLength || 0\n    };\n}\n\nfunction getSourcesAsHarPages(exchanges: HttpExchange[]): HarFormat.Page[] {\n    const exchangesBySource = _.groupBy(exchanges, (e) =>\n        e.request.source.summary\n    );\n\n    return _.map(exchangesBySource, (exchanges, source) => {\n        const sourceStartTime = Math.min(...exchanges.map(e =>\n            e.timingEvents.startTime ?? Date.now()\n        ), Date.now());\n\n        return {\n            id: source,\n            title: source,\n            startedDateTime: dateFns.format(sourceStartTime),\n            pageTimings: {}\n        }\n    });\n}\n\nasync function generateHarHttpEntry(\n    exchange: HttpExchange,\n    options: HarGenerationOptions\n): Promise<HarEntry> {\n    const { timingEvents } = exchange;\n\n    const startTime = timingEvents.startTime ?? Date.now();\n\n    const sendDuration = timingEvents.bodyReceivedTimestamp\n        ? timingEvents.bodyReceivedTimestamp! - timingEvents.startTimestamp!\n        : 0;\n    const waitDuration = timingEvents.bodyReceivedTimestamp && timingEvents.headersSentTimestamp\n        ? timingEvents.headersSentTimestamp - timingEvents.bodyReceivedTimestamp\n        : 0;\n    const receiveDuration = timingEvents.responseSentTimestamp\n        ? timingEvents.responseSentTimestamp! - timingEvents.headersSentTimestamp!\n        : 0;\n\n    const endTimestamp = timingEvents.wsClosedTimestamp ??\n        timingEvents.responseSentTimestamp ??\n        timingEvents.abortedTimestamp;\n\n    const totalDuration = endTimestamp\n        ? endTimestamp - timingEvents.startTimestamp!\n        : -1;\n\n    return {\n        pageref: exchange.request.source.summary,\n        startedDateTime: dateFns.format(startTime),\n        time: totalDuration,\n        request: await generateHarRequest(exchange.request, true, options),\n        response: await generateHarResponse(exchange, options),\n        cache: {},\n        timings: {\n            blocked: -1,\n            dns: -1,\n            connect: -1,\n            ssl: -1,\n            // These can be negative when events overlap. E.g. if we mock a response we may\n            // send the response before the request has been completed. In that case, we\n            // just 0 the values for now, because these 3 are required >= 0 by the HAR spec\n            // TODO: In future, more clearly express that.\n            send: Math.max(sendDuration, 0),\n            wait: Math.max(waitDuration, 0),\n            receive: Math.max(receiveDuration, 0)\n        },\n        _pinned: exchange.pinned || undefined,\n\n        ...(exchange.isWebSocket() ? {\n            _resourceType: 'websocket',\n            _webSocketMessages: exchange.messages.map((message) =>\n                generateHarWebSocketMessage(message, timingEvents)\n            ),\n            _webSocketClose: exchange.closeState && exchange.closeState !== 'aborted'\n                ? {\n                    code: exchange.closeState.closeCode,\n                    reason: exchange.closeState.closeReason,\n                    timestamp: timingEvents.wsClosedTimestamp\n                        ? timingEvents.wsClosedTimestamp / 1000 // Match _webSocketMessage format\n                        : undefined\n                }\n                : exchange.closeState\n        } : {})\n    };\n}\n\nfunction generateHarWebSocketMessage(\n    message: StreamMessage,\n    timingEvents: Partial<TimingEvents>\n): HarWebSocketMessage {\n    return {\n        // Note that msg.direction is from the perspective of Mockttp, not the client.\n        type: message.direction === 'sent'\n                ? 'receive'\n            : message.direction === 'received'\n                ? 'send'\n            : unreachableCheck(message.direction),\n\n        opcode: message.isBinary ? 2 : 1,\n        data: message.isBinary\n            ? message.content.toString('base64')\n            : message.content.toString('utf8'),\n\n        // N.b. timestamp is precise but relative, startTime is epoch-based but imprecise,\n        // eventual result here has to be in seconds as a float.\n        time: (timingEvents.startTime! + (message.timestamp - timingEvents.startTimestamp!)) / 1000\n    };\n}\n\nfunction generateHarTlsError(event: FailedTlsConnection): HarTlsErrorEntry {\n    const timingEvents = event.timingEvents ?? {};\n\n    const startTime = 'startTime' in timingEvents\n        ? timingEvents.startTime\n        : new Date();\n\n    const failureDuration = 'failureTimestamp' in timingEvents\n        ? timingEvents.failureTimestamp - timingEvents.connectTimestamp\n        : 0;\n\n    return {\n        startedDateTime: dateFns.format(startTime),\n        time: failureDuration,\n        cause: event.failureCause,\n        hostname: event.upstreamHostname,\n        clientIPAddress: event.remoteIpAddress,\n        clientPort: event.remotePort\n    };\n}\n\nexport interface ParsedHar {\n    events: QueuedEvent[];\n    pinnedIds: string[];\n};\n\nconst sumTimings = (\n    timings: HarFormat.Timings,\n    ...keys: Array<keyof HarFormat.Timings>\n): number =>\n    _.sumBy(keys, (k) => {\n        const v = Number(timings[k]);\n        if (!v || v < 0) return 0;\n        else return v;\n    });\n\nexport async function parseHar(harContents: unknown): Promise<ParsedHar> {\n    const har = await HarValidator.har(cleanRawHarData(harContents)) as Har;\n\n    const baseId = _.random(1_000_000) + '-';\n\n    const events: QueuedEvent[] = [];\n    const pinnedIds: string[] = []\n\n    har.log.entries.forEach((entry, i) => {\n        const id = baseId + i;\n        const isWebSocket = entry._resourceType === 'websocket';\n\n        const timingEvents: TimingEvents = {\n            startTime: dateFns.parse(entry.startedDateTime).getTime(),\n            startTimestamp: 0,\n            bodyReceivedTimestamp: sumTimings(entry.timings,\n                'blocked',\n                'dns',\n                'connect',\n                'send'\n            ),\n            headersSentTimestamp: sumTimings(entry.timings,\n                'blocked',\n                'dns',\n                'connect',\n                'send',\n                'wait'\n            )\n        };\n\n        Object.assign(timingEvents,\n            entry.response.status !== 0\n                ? { responseSentTimestamp: entry.time }\n                : { abortedTimestamp: entry.time },\n\n            isWebSocket\n                ? {\n                    wsAcceptedTimestamp: timingEvents.headersSentTimestamp,\n                    wsClosedTimestamp: entry.time\n                }\n                : {}\n        );\n\n\n        const request = parseHarRequest(id, entry.request, timingEvents);\n\n        events.push({\n            type: isWebSocket ? 'websocket-request' : 'request',\n            event: request\n        });\n\n        if (entry.response.status !== 0) {\n            events.push({\n                type: isWebSocket && entry.response.status === 101\n                    ? 'websocket-accepted'\n                    : 'response',\n                event: parseHarResponse(id, entry.response, timingEvents)\n            });\n        } else {\n            events.push({ type: 'abort', event: request });\n        }\n\n        if (isWebSocket) {\n            events.push(...entry._webSocketMessages?.map(message => ({\n                type: `websocket-message-${message.type === 'send' ? 'received' : 'sent'}` as const,\n                event: {\n                    streamId: request.id,\n                    direction: message.type === 'send' ? 'received' : 'sent',\n                    isBinary: message.opcode === 2,\n                    content: Buffer.from(message.data, message.opcode === 2 ? 'base64' : 'utf8'),\n                    eventTimestamp: (message.time * 1000) - timingEvents.startTime,\n                    timingEvents: timingEvents,\n                    tags: []\n                } satisfies InputWebSocketMessage\n            })) ?? []);\n\n            const closeEvent = entry._webSocketClose;\n\n            if (closeEvent && closeEvent !== 'aborted') {\n                events.push({\n                    type: 'websocket-close',\n                    event: {\n                        streamId: request.id,\n                        closeCode: closeEvent.code,\n                        closeReason: closeEvent.reason ?? \"\",\n                        timingEvents: timingEvents,\n                        tags: []\n                    }\n                });\n            } else {\n                // N.b. WebSockets can abort _after_ the response event!\n                events.push({ type: 'abort', event: request });\n            }\n        }\n\n        if (entry._pinned) pinnedIds.push(id);\n    });\n\n    if (har.log._tlsErrors) {\n        events.push(...har.log._tlsErrors.map((entry) => ({\n            type: 'tls-client-error' as const,\n            event: {\n                failureCause: entry.cause,\n                hostname: entry.hostname,\n                remoteIpAddress: entry.clientIPAddress,\n                remotePort: entry.clientPort,\n                tags: [],\n                timingEvents: {\n                    startTime: dateFns.parse(entry.startedDateTime).getTime(),\n                    connectTimestamp: 0,\n                    failureTimestamp: entry.time\n                }\n            }\n        })));\n    }\n\n    return { events, pinnedIds };\n}\n\n// Mutatively cleans & returns the HAR, to tidy up irrelevant but potentially\n// problematic details & ensure we can parse it, if at all possible.\nfunction cleanRawHarData(harContents: any) {\n    const entries = harContents?.log?.entries ?? [];\n\n    entries.forEach((entry: any) => {\n        // Some HAR exports include invalid serverIPAddresses, which fail validation.\n        // Somebody is wrong here, but we don't really care, we never use this data;\n        // just drop it entirely instead.\n        delete entry.serverIPAddress;\n\n        // FF fails to write headersSize or writes null for req/res that has no headers.\n        // We don't use it anyway - set it to -1 if it's missing\n        if (entry.request) {\n            entry.request.headersSize ??= -1;\n            if (entry.request.postData) {\n                // Charles sets this to null, but the spec requires a string\n                entry.request.postData.mimeType ??= 'application/octet-stream';\n            }\n\n            // Cookie data is often messed up (Charles adds extra \"\"/null pairs, sets bad expires datastring format)\n            // and it's optional and we don't use it, so it's better to drop it entirely.\n            entry.request.cookies = [];\n        }\n\n        // Firefox fails to write timing data for some requests, e.g. requests blocked\n        // by adblocker extensions: https://bugzilla.mozilla.org/show_bug.cgi?id=1716335\n        if (entry.timings) {\n            entry.timings.send ??= -1;\n            entry.timings.wait ??= -1;\n            entry.timings.receive ??= -1;\n        }\n\n        if (entry.response) {\n            entry.response.redirectURL ??= \"\"; // Charles sets this to null, but the spec requires a string\n            entry.response.headersSize ??= -1;\n\n            if (entry.response.statusText == null) {\n                // Charles omits the status message in some cases\n                entry.response.statusText = getStatusMessage(entry.response.status);\n            }\n\n            if (entry.response.bodySize === null) {\n                // Firefox sometimes sets bodySize to null, even when there is clearly a body being received.\n                // Fall back to content-length if available, or use -1 if not.\n                // We do want to use this where it's available so this is a bit annoying, but c'est la vie:\n                // it's not super important data (just used to compare compression perf) and there's not much\n                // we can do when the imported file contains invalid data like this.\n                const contentLengthHeader = _.find(entry.response.headers || [],\n                    ({ name }) => name.toLowerCase() === 'content-length'\n                );\n                if (contentLengthHeader) {\n                    entry.response.bodySize = parseInt(contentLengthHeader.value, 10);\n                } else {\n                    entry.response.bodySize = -1;\n                }\n            }\n\n            if (entry.response.content) {\n                // Similarly, when there's no actual response some fields can be missing. Note that\n                // 'content' is response only, but we don't use these fields anyway:\n                entry.response.content.size ??= -1;\n                entry.response.content.mimeType ??= 'application/octet-stream';\n            }\n\n            // Cookie data is often messed up (Charles adds extra \"\"/null pairs, expires datastring format is often wrong)\n            // and it's optional and we don't use it, so it's better to drop it entirely.\n            entry.response.cookies = [];\n        }\n\n        // We never use the 'cache' field, and it can be annoyingly invalid, so drop it.\n        entry.cache = {};\n    });\n\n    const pages = harContents?.log?.pages ?? [];\n    pages.forEach((page: HarFormat.Page) => {\n        // FF doesn't give pages their (required) titles:\n        if (page.title === undefined) page.title = page.id;\n\n        // All timings fields are optional, but some sources provide 'null' values (instead of -1)\n        // to mark missing data, which isn't valid. Fortunately, we never use this data, so we can\n        // just drop it entirely:\n        page.pageTimings = {};\n    });\n\n    return harContents;\n}\n\nfunction parseHarRequest(\n    id: string,\n    request: ExtendedHarRequest,\n    timingEvents: TimingEvents\n): HarRequest {\n    const parsedUrl = new URL(request.url);\n\n    return {\n        id,\n        timingEvents,\n        tags: [],\n        matchedRuleId: false,\n        protocol: request.url.split(':')[0],\n        method: request.method,\n        url: request.url,\n        path: parsedUrl.pathname,\n        hostname: parsedUrl.hostname,\n        // We need to promise it has a 'host' header (i.e. the headers are\n        // legal for an HTTP request):\n        headers: asHtkHeaders(request.headers) as Headers & { host: string },\n        rawHeaders: request.headers.map(h => [h.name, h.value]),\n        body: {\n            decoded: request._content\n                ? parseHarRequestContents(request._content)\n                : parseHarPostData(request.postData),\n            encodedLength: request.bodySize\n        }\n    }\n}\n\nfunction parseHarRequestContents(data: RequestContentData): Buffer {\n    if (data.encoding && Buffer.isEncoding(data.encoding)) {\n        return Buffer.from(data.text, data.encoding);\n    }\n\n    throw TypeError(\"Invalid encoding\");\n}\n\nfunction parseHarPostData(data: HarFormat.PostData | undefined): Buffer {\n    if (data?.text) {\n        // Prefer raw exported 'text' data, when available\n        return stringToBuffer(data.text, 'utf8');\n    } else if (data?.params) {\n        // If only 'params' is available, stringify and use that.\n        return stringToBuffer(\n            // Go from array of key-value objects to object of key -> value array:\n            querystring.stringify(_(data.params)\n                .groupBy(({ name }) => name)\n                .mapValues((params) => params.map(p => p.value || ''))\n                .valueOf()\n            )\n        );\n    } else {\n        return stringToBuffer('');\n    }\n}\n\nfunction parseHarResponse(\n    id: string,\n    response: HarFormat.Response,\n    timingEvents: TimingEvents\n): HarResponse {\n    return {\n        id,\n        timingEvents,\n        tags: [],\n        statusCode: response.status,\n        statusMessage: response.statusText,\n        headers: asHtkHeaders(response.headers),\n        rawHeaders: response.headers.map(h => [h.name, h.value]),\n        body: {\n            decoded: Buffer.from(\n                response.content.text || '',\n                response.content.encoding as BufferEncoding || 'utf8'\n            ),\n            encodedLength: (!response.bodySize || response.bodySize === -1)\n                ? 0 // If bodySize is missing or inaccessible, just zero it\n                : response.bodySize\n        }\n    }\n}\n","import * as _ from 'lodash';\nimport { observable, computed, action, runInAction, when } from 'mobx';\n\nimport {\n    HtkRequest,\n    HtkResponse,\n    Headers,\n    MessageBody,\n    InputRequest,\n    InputResponse,\n    InputFailedRequest,\n    TimingEvents,\n    InputMessage,\n    MockttpBreakpointedRequest,\n    MockttpBreakpointedResponse,\n    InputCompletedRequest,\n    MockttpBreakpointResponseResult,\n} from \"../../types\";\nimport {\n    fakeBuffer,\n    FakeBuffer,\n    stringToBuffer,\n} from '../../util';\nimport { UnreachableCheck } from '../../util/error';\nimport { lazyObservablePromise, ObservablePromise, observablePromise } from \"../../util/observable\";\nimport {\n    asHeaderArray,\n    lastHeader\n} from '../../util/headers';\n\nimport { logError } from '../../errors';\n\nimport { MANUALLY_SENT_SOURCE, parseSource } from './sources';\nimport { getContentType } from '../events/content-types';\nimport { HTKEventBase } from '../events/event-base';\n\nimport { HandlerClassKey, HtkMockRule, getRulePartKey } from '../rules/rules';\n\nimport { ApiStore } from '../api/api-store';\nimport { ApiExchange } from '../api/api-interfaces';\nimport { OpenApiExchange } from '../api/openapi';\nimport { parseRpcApiExchange } from '../api/jsonrpc';\nimport { ApiMetadata } from '../api/api-interfaces';\n\nimport { decodeBody } from '../../services/ui-worker-api';\nimport {\n    RequestBreakpoint,\n    ResponseBreakpoint,\n    getRequestBreakpoint,\n    getResponseBreakpoint,\n    getDummyResponseBreakpoint\n} from './exchange-breakpoint';\n\nfunction tryParseUrl(request: InputRequest): (URL & { parseable: true }) | undefined  {\n    try {\n        return Object.assign(\n            new URL(request.url, `${request.protocol}://${request.hostname || 'unknown.invalid'}`),\n            { parseable: true } as const\n        );\n    } catch (e) {\n        console.log('Unparseable URL:', request.url);\n        // There are many unparseable URLs, especially when unintentionally intercepting traffic\n        // from non-HTTP sources, so we don't report this - we just log locally & return undefined.\n    }\n}\n\nfunction getFallbackUrl(request: InputRequest): URL & { parseable: false } {\n    try {\n        return Object.assign(\n            new URL(\"/[unparseable]\", `${request.protocol}://${request.hostname || 'unknown.invalid'}`),\n            { parseable: false } as const\n        );\n    } catch (e) {\n        return Object.assign(\n            new URL(\"http://unparseable.invalid/\"),\n            { parseable: false } as const\n        );\n    }\n}\n\nfunction addRequestMetadata(request: InputRequest): HtkRequest {\n    try {\n        return Object.assign(request, {\n            parsedUrl: tryParseUrl(request) || getFallbackUrl(request),\n            source: request.tags.includes('httptoolkit:manually-sent-request')\n                ? MANUALLY_SENT_SOURCE\n                : parseSource(request.headers['user-agent']),\n            body: new HttpBody(request, request.headers),\n            contentType: getContentType(lastHeader(request.headers['content-type'])) || 'text',\n            cache: observable.map(new Map<symbol, unknown>(), { deep: false })\n        }) as HtkRequest;\n    } catch (e) {\n        console.log(`Failed to parse request for ${request.url} (${request.protocol}://${request.hostname})`);\n        throw e;\n    }\n}\n\nfunction addResponseMetadata(response: InputResponse): HtkResponse {\n    return Object.assign(response, {\n        body: new HttpBody(response, response.headers),\n        contentType: getContentType(\n            // There should only ever be one. If we get multiple though, just use the last.\n            lastHeader(response.headers['content-type'])\n        ) || 'text',\n        cache: observable.map(new Map<symbol, unknown>(), { deep: false })\n    }) as HtkResponse;\n}\n\nexport class HttpBody implements MessageBody {\n\n    constructor(\n        message: InputMessage,\n        headers: Headers\n    ) {\n        if (!('body' in message) || !message.body) {\n            this._encoded = stringToBuffer(\"\");\n        } else if ('buffer' in message.body) {\n            this._encoded = message.body.buffer;\n        } else {\n            this._encoded = fakeBuffer(message.body.encodedLength);\n            this._decoded = message.body.decoded;\n        }\n\n        this._contentEncoding = asHeaderArray(headers['content-encoding']);\n    }\n\n    private _contentEncoding: string[];\n    private _encoded: FakeBuffer | Buffer;\n    get encoded() {\n        return this._encoded;\n    }\n\n    private _decoded: Buffer | undefined;\n\n    @observable\n    decodingError: Error | undefined;\n\n    decodedPromise: ObservablePromise<Buffer | undefined> = lazyObservablePromise(async () => {\n        // Exactly one of _encoded & _decoded is a buffer, never neither/both.\n        if (this._decoded) return this._decoded;\n        const encodedBuffer = this.encoded as Buffer;\n\n        // Temporarily change to a fake buffer, while the web worker takes the data to decode\n        const encodedLength = encodedBuffer.byteLength;\n        this._encoded = fakeBuffer(encodedLength);\n\n        try {\n            const { decoded, encoded } = await decodeBody(encodedBuffer, this._contentEncoding);\n            this._encoded = encoded;\n            return decoded;\n        } catch (e: any) {\n            logError(e);\n\n            // In most cases, we get the encoded data back regardless, so recapture it here:\n            if (e.inputBuffer) {\n                this._encoded = e.inputBuffer;\n            }\n            runInAction(() => {\n                this.decodingError = e;\n            });\n\n            return undefined;\n        }\n    });\n\n    get decoded() {\n        // We exclude 'Error' from the value - errors should always become undefined\n        return this.decodedPromise.value as Buffer | undefined;\n    }\n\n    // Must only be called when the exchange & body will no longer be used. Ensures that large data is\n    // definitively unlinked, since some browser issues can result in exchanges not GCing immediately.\n    // Important: for safety, this leaves the body in a *VALID* but reset state - not a totally blank one.\n    cleanup() {\n        const emptyBuffer = Buffer.from([]);\n\n        // Set to a valid state for an un-decoded but totally empty body.\n        this._decoded = undefined;\n        this._encoded = emptyBuffer;\n        this.decodingError = undefined;\n        this.decodedPromise = observablePromise(Promise.resolve(emptyBuffer));\n    }\n}\n\nexport type CompletedRequest = Omit<HttpExchange, 'request'> & {\n    matchedRule: { id: string, handlerRype: HandlerClassKey } | false\n};\nexport type CompletedExchange = Omit<HttpExchange, 'response'> & {\n    response: HtkResponse | 'aborted'\n};\nexport type SuccessfulExchange = Omit<HttpExchange, 'response'> & {\n    response: HtkResponse\n};\n\nexport class HttpExchange extends HTKEventBase {\n\n    constructor(apiStore: ApiStore, request: InputRequest) {\n        super();\n\n        this.request = addRequestMetadata(request);\n\n        this.timingEvents = request.timingEvents;\n        this.tags = this.request.tags;\n\n        this.id = this.request.id;\n        this.searchIndex = [\n            this.request.url,\n            this.request.parsedUrl.protocol + '//' +\n                this.request.parsedUrl.hostname +\n                this.request.parsedUrl.pathname +\n                this.request.parsedUrl.search\n        ]\n        .concat(..._.map(this.request.headers, (value, key) => `${key}: ${value}`))\n        .concat(this.request.method)\n        .join('\\n')\n        .toLowerCase();\n\n        // Start loading the relevant Open API specs for this request, if any.\n        this._apiMetadataPromise = apiStore.getApi(this.request);\n    }\n\n    public readonly request: HtkRequest;\n    public readonly id: string;\n\n    @observable\n    // Undefined initially, defined for completed requests, false for 'not available'\n    public matchedRule: { id: string, handlerStepTypes: HandlerClassKey[] } | false | undefined;\n\n    @observable\n    public tags: string[];\n\n    @computed\n    get httpVersion() {\n        return this.request.httpVersion === '2.0' ? 2 : 1;\n    }\n\n    isHttp(): this is HttpExchange {\n        return true;\n    }\n\n    isCompletedRequest(): this is CompletedRequest {\n        return this.matchedRule !== undefined;\n    }\n\n    isCompletedExchange(): this is CompletedExchange {\n        return !!this.response;\n    }\n\n    isSuccessfulExchange(): this is SuccessfulExchange {\n        return this.isCompletedExchange() && this.response !== 'aborted';\n    }\n\n    hasRequestBody(): this is CompletedRequest {\n        return this.isCompletedRequest() && this.request.body.encoded.byteLength > 0;\n    }\n\n    hasResponseBody(): this is SuccessfulExchange {\n        return this.isSuccessfulExchange() &&\n            (this.response as HtkResponse).body.encoded.byteLength > 0;\n    }\n\n    @observable\n    public readonly timingEvents: Partial<TimingEvents>; // May be {} if using an old server (<0.1.7)\n\n    @observable.ref\n    public response: HtkResponse | 'aborted' | undefined;\n\n    @observable\n    public abortMessage: string | undefined;\n\n    updateFromCompletedRequest(request: InputCompletedRequest, matchedRule: HtkMockRule | false) {\n        if (request.body instanceof HttpBody) {\n            // If this request was used in new HttpExchange, it's mutated in some ways, and this\n            // will cause problems. Shouldn't happen, but we check against it here just in case:\n            throw new Error(\"Can't update from already-processed request\");\n        }\n\n        this.request.body = new HttpBody(request, request.headers);\n\n        this.matchedRule = !matchedRule\n                ? false\n            : 'handler' in matchedRule\n                ? {\n                    id: matchedRule.id,\n                    handlerStepTypes: [getRulePartKey(matchedRule.handler)] as HandlerClassKey[]\n                }\n            // MatchedRule has multiple steps\n                : {\n                    id: matchedRule.id,\n                    handlerStepTypes: matchedRule.steps.map(getRulePartKey) as HandlerClassKey[]\n                };\n\n        Object.assign(this.timingEvents, request.timingEvents);\n        this.tags = _.union(this.tags, request.tags);\n    }\n\n    markAborted(request: InputFailedRequest) {\n        this.response = 'aborted';\n        this.searchIndex += '\\naborted';\n\n        Object.assign(this.timingEvents, request.timingEvents);\n        this.tags = _.union(this.tags, request.tags);\n\n        if ('error' in request && request.error?.message) {\n            this.abortMessage = request.error.message;\n        }\n\n        if (this.requestBreakpoint) {\n            this.requestBreakpoint.reject(\n                new Error('Request aborted whilst breakpointed at request')\n            );\n            this._requestBreakpoint = undefined;\n        }\n        if (this.responseBreakpoint) {\n            this.responseBreakpoint.reject(\n                new Error('Request aborted whilst breakpointed at response')\n            );\n            this._responseBreakpoint = undefined;\n        }\n    }\n\n    setResponse(response: InputResponse) {\n        this.response = addResponseMetadata(response);\n\n        Object.assign(this.timingEvents, response.timingEvents);\n        this.tags = _.union(this.tags, response.tags);\n\n        this.searchIndex = [\n            this.searchIndex,\n            response.statusCode.toString(),\n            response.statusMessage.toString(),\n            ..._.map(response.headers, (value, key) => `${key}: ${value}`)\n        ].join('\\n').toLowerCase();\n\n        // Wrap the API promise to also add this response data (but lazily)\n        const requestApiPromise = this._apiPromise;\n        this._apiPromise = lazyObservablePromise(() =>\n            requestApiPromise.then((api) => {\n                if (api) api.updateWithResponse(this.response!);\n                return api;\n            })\n        );\n    }\n\n    // Must only be called when the exchange will no longer be used. Ensures that large data is\n    // definitively unlinked, since some browser issues can result in exchanges not GCing immediately.\n    // Important: for safety, this leaves the exchange in a *VALID* but reset state - not a totally blank one.\n    cleanup() {\n        this.cache.clear();\n\n        this.request.cache.clear();\n        this.request.body.cleanup();\n\n        if (this.isSuccessfulExchange()) {\n            this.response.cache.clear();\n            this.response.body.cleanup();\n        }\n    }\n\n    // API metadata:\n\n    // A convenient reference to the service-wide spec for this API - starts loading immediately\n    private _apiMetadataPromise: Promise<ApiMetadata | undefined>;\n\n    // Parsed API info for this specific request, loaded & parsed lazily, only if it's used\n    @observable.ref\n    private _apiPromise = lazyObservablePromise(async () => {\n        const apiMetadata = await this._apiMetadataPromise;\n\n        if (apiMetadata) {\n            // We load the spec, but we don't try to parse API requests until we've received\n            // the whole thing (because e.g. JSON-RPC requests aren't parseable without the body)\n            await when(() => this.isCompletedRequest());\n\n            try {\n                if (apiMetadata.type === 'openapi') {\n                    return new OpenApiExchange(apiMetadata, this);\n                } else if (apiMetadata.type === 'openrpc') {\n                    return await parseRpcApiExchange(apiMetadata, this);\n                } else {\n                    console.log('Unknown API metadata type for host', this.request.parsedUrl.hostname);\n                    console.log(apiMetadata);\n                    throw new UnreachableCheck(apiMetadata, m => m.type);\n                }\n            } catch (e) {\n                logError(e);\n                throw e;\n            }\n        } else {\n            return undefined;\n        }\n    });\n\n    // Fixed value for the parsed API data - returns the data or undefined, observably.\n    get api() {\n        if (this._apiPromise.state === 'fulfilled') {\n            return this._apiPromise.value as ApiExchange | undefined;\n        }\n    }\n\n    // Breakpoint data:\n\n    @observable.ref\n    private _requestBreakpoint?: RequestBreakpoint;\n\n    get requestBreakpoint() {\n        return this._requestBreakpoint;\n    }\n\n    @observable.ref\n    private _responseBreakpoint?: ResponseBreakpoint;\n\n    get responseBreakpoint() {\n        return this._responseBreakpoint;\n    }\n\n    @computed\n    get isBreakpointed() {\n        return this.requestBreakpoint || this.responseBreakpoint;\n    }\n\n    async triggerRequestBreakpoint(request: MockttpBreakpointedRequest) {\n        const breakpoint = await getRequestBreakpoint(request);\n        runInAction(() => { this._requestBreakpoint = breakpoint; });\n\n        const result = await breakpoint.waitForCompletedResult();\n\n        if (this._requestBreakpoint === breakpoint) {\n            runInAction(() => { this._requestBreakpoint = undefined; });\n        }\n\n        return result;\n    }\n\n    async triggerResponseBreakpoint(response: MockttpBreakpointedResponse) {\n        const breakpoint = await getResponseBreakpoint(response);\n        runInAction(() => { this._responseBreakpoint = breakpoint; });\n\n        const result = await breakpoint.waitForCompletedResult();\n\n        if (this._responseBreakpoint === breakpoint) {\n            runInAction(() => { this._responseBreakpoint = undefined; });\n        }\n\n        return result;\n    }\n\n    @action.bound\n    respondToBreakpointedRequest() {\n        // Replace the request breakpoint with an empty response breakpoint\n        this._responseBreakpoint = getDummyResponseBreakpoint(this.httpVersion);\n\n        const requestBreakpoint = this.requestBreakpoint!;\n        this._requestBreakpoint = undefined;\n\n        // When the response resumes, return it as the request result's response\n        this._responseBreakpoint.waitForCompletedResult().then(\n            action((responseResult: MockttpBreakpointResponseResult) => {\n                requestBreakpoint.respondDirectly(responseResult);\n                this._responseBreakpoint = undefined;\n            })\n        );\n    }\n\n}","import { posthog } from 'posthog-js';\nimport { format as formatDate } from 'date-fns';\n\nimport { serverVersion, desktopVersion, UI_VERSION } from './services/service-versions';\n\nconst POSTHOG_KEY = process.env.POSTHOG_KEY;\nconst enabled = !!POSTHOG_KEY && navigator.doNotTrack !== \"1\";\n\n// Note that all metrics here are fully anonymous.\n// No user information is tracked, no events are\n// sent including anything personally identifiable,\n// and all Posthog data (soon: all data) is sent\n// via an anonymizing proxy so no IP is exposed.\n\n// Metrics are used only to monitor real world\n// performance, work out which features of the app\n// are used, and detect issues (e.g. % failure for\n// different types of interception).\n\nexport function initMetrics() {\n    if (enabled) {\n        posthog.init(POSTHOG_KEY, {\n            api_host: 'https://events.httptoolkit.tech',\n            autocapture: false, // No automatic event capture please\n\n            capture_pageview: false, // We manually capture pageview (to sanitize & dedupe URLs)\n\n            advanced_disable_decide: true, // We don't need dynamic features, skip checking\n            disable_session_recording: false, // Disabled server-side, but disable explicitly here too\n\n            persistence: 'memory' // No cookies/local storage tracking - just anon session metrics\n        });\n    }\n}\n\n// Log the first run date for users, which gives us just enough data to count new vs existing installs, and overall\n// retention (do people keep using the tool) and user stats, but at day resolution so it's not actually identifiable:\nconst today = formatDate(new Date(), 'YYYY-MM-DD');\nconst isFirstRun = localStorage.getItem('first-run-date') === null &&\n    localStorage.getItem('theme-background-color') === null; // Extra check, for people who pre-date first-run-date\n\nconst storedFirstRunDate = localStorage.getItem('first-run-date');\nconst firstRunDate = storedFirstRunDate ?? today;\nif (!storedFirstRunDate) {\n    localStorage.setItem('first-run-date', firstRunDate);\n}\n\n// Track last run too, which gives us some idea of how many users use HTTP Toolkit per day.\nconst isFirstRunToday = localStorage.getItem('last-run-date') !== today;\nif (isFirstRunToday) localStorage.setItem('last-run-date', today);\n\n// (Of course, Posthog does have retention tools to track this kind of thing in depth, but we avoid using them here\n// as they require tracking individual users & storing persistent ids etc - rough & anon is good enough).\n\n// This is passed via $set_once on all Posthog events, and the session collects metadata once it's\n// available. These values never change as all metrics are anonymous - there's no connection between\n// sessions, so the desktop/server version is always fixed.\nconst sessionData = () => ({\n    'first-run': isFirstRun,\n    'first-run-today': isFirstRunToday,\n    'ui-version': UI_VERSION,\n    'server-version': serverVersion.state === 'fulfilled' ? serverVersion.value : undefined,\n    'desktop-version': desktopVersion.state === 'fulfilled' ? desktopVersion.value : undefined,\n});\n\nconst normalizeUrl = (url: string) =>\n    url\n    .replace(/\\/view\\/[a-z0-9\\-]+/, '/view') // Strip row ids\n    .replace(/\\/mock\\/[a-z0-9\\-]+/, '/mock') // Strip mock rule ids\n    .replace(/\\?.*/, ''); // Strip any query & hash params\n\nlet seenPages: string[] = [];\n\nexport function trackPage(location: Window['location']) {\n    if (!enabled) return;\n\n    const currentUrl = normalizeUrl(location.href);\n\n    if (seenPages.includes(currentUrl)) return;\n    seenPages.push(currentUrl);\n\n    posthog.capture('$pageview', {\n        $current_url: currentUrl,\n        $set_once: { ...sessionData() }\n    });\n}\n\nexport function trackEvent(event: {\n    category: string,\n    action: string,\n    value?: string\n}) {\n    if (!enabled) return;\n\n    const currentUrl = normalizeUrl(location.href);\n\n    posthog.capture(`${event.category}:${event.action}`, {\n        value: event.value,\n        $current_url: currentUrl,\n        $set_once: { ...sessionData() }\n    });\n}","import * as _ from 'lodash';\nimport * as querystring from 'querystring';\nimport { createHistory, WindowLocation, NavigateOptions } from \"@reach/router\";\n\n// Whatever params we're given at the initial load, we want to save & preserve\n// them, so they persist across all future navigations.\nconst INITIAL_PARAMS = querystring.parse(\n    window.location.search.replace(/^\\?/, '')\n);\n\n// Builds a history source backed by the real browser history API, but throttling\n// updates to that API, and covering that up by also tracking the current location\n// in memory on top.\nconst buildThrottledHistorySource = () => {\n    let latestState = window.history.state;\n    let latestLocation = window.location;\n\n    window.addEventListener('popstate', () => {\n        latestState = window.history.state;\n        latestLocation = window.location;\n    });\n\n    // Throttle the state update calls - this is important because Chrome will complain &\n    // rate limit calls if we go too fast, and we can at times (when scrolling events).\n    const throttledPushState = _.throttle(\n        (...args: any) => window.history.pushState.apply(window.history, args),\n        250,\n        { leading: true, trailing: true }\n    );\n    const throttledReplaceState = _.throttle(\n        (...args: any) => window.history.replaceState.apply(window.history, args),\n        250,\n        { leading: true, trailing: true }\n    );\n\n    return {\n        get location() {\n            return latestLocation as WindowLocation;\n        },\n        addEventListener: window.addEventListener.bind(window),\n        removeEventListener: window.removeEventListener.bind(window),\n        history: {\n            get state() {\n                return latestState;\n            },\n            pushState(state: any, title: string, uri: string) {\n                throttledPushState(state, title, uri);\n                let [pathname, search = \"\"] = uri.split(\"?\");\n                latestLocation = Object.assign({}, window.location, { pathname, search });\n            },\n            replaceState(state: any, title: string, uri: string) {\n                throttledReplaceState(state, title, uri);\n                let [pathname, search = \"\"] = uri.split(\"?\");\n                latestLocation = Object.assign({}, window.location, { pathname, search });\n            }\n        }\n    };\n};\n\n// Throttlesafe: even with Chrome's throttling us, it'll still work nicely.\nexport const appHistory = createHistory(buildThrottledHistorySource());\n\n// Wrap navigate(), to always preserve our query params:\nconst navigate = appHistory.navigate.bind(appHistory);\nappHistory.navigate = function (to: string, options: NavigateOptions<{}> = {}) {\n    const [pathString, searchString] = to.split(\"?\");\n    const params = querystring.parse(searchString);\n\n    return navigate(pathString + \"?\" + querystring.stringify({\n        ...params,\n        ...INITIAL_PARAMS\n    }), options);\n};","import * as _ from 'lodash';\nimport { observable, action } from 'mobx';\n\nimport {\n    InputInitiatedRequest,\n    InputRequest,\n    InputResponse,\n    InputWebSocketMessage,\n    InputWebSocketClose,\n    InputFailedRequest\n} from '../../types';\n\nimport { ApiStore } from '../api/api-store';\nimport { StreamMessage } from '../events/stream-message';\nimport { HttpExchange } from '../http/exchange';\n\n// A websocket stream is an HTTP exchange (the initial setup, or even rejection), but\n// may include a series of many ongoing messages and a final websocket close event,\n// if the initial websocket connection is successful.\nexport class WebSocketStream extends HttpExchange {\n    constructor(apiStore: ApiStore, request: InputRequest) {\n        super(apiStore, request);\n        this.searchIndex += '\\nwebsocket';\n    }\n\n    isWebSocket(): this is WebSocketStream {\n        return true;\n    }\n\n    @observable\n    private accepted = false;\n\n    @observable\n    private subprotocol: string | undefined;\n\n    @action\n    setAccepted(response: InputResponse) {\n        const subprotocolHeader = response.headers['sec-websocket-protocol'];\n        if (_.isString(subprotocolHeader)) this.subprotocol = subprotocolHeader;\n\n        this.accepted = true;\n        Object.assign(this.timingEvents, response.timingEvents);\n    }\n\n    wasAccepted() {\n        return this.accepted;\n    }\n\n    get selectedSubprotocol() {\n        return this.subprotocol;\n    }\n\n    @observable\n    readonly messages: Array<StreamMessage> = [];\n\n    @action\n    addMessage(message: InputWebSocketMessage) {\n        this.messages.push(new StreamMessage(message, this.messages.length));\n    }\n\n    @observable\n    private closeData: InputWebSocketClose | 'aborted' | undefined;\n\n    @action\n    markClosed(closeData: InputWebSocketClose) {\n        this.closeData = closeData;\n        Object.assign(this.timingEvents, closeData.timingEvents);\n    }\n\n    get closeState() {\n        return this.closeData;\n    }\n\n    markAborted(request: InputFailedRequest) {\n        if (!this.wasAccepted()) {\n            // An abort before accept acts exactly as in normal HTTP\n            return super.markAborted(request);\n        } else {\n            // Unlike normal HTTP, websockets can get an abort *after* a successful HTTP\n            // response. We handle that as a separate case:\n            this.closeData = 'aborted';\n            this.searchIndex += '\\naborted';\n            // Note that we *don't* update this.response - that was still a complete response.\n\n            Object.assign(this.timingEvents, request.timingEvents);\n            this.tags = _.union(this.tags, request.tags);\n        }\n    }\n\n    cleanup() {\n        super.cleanup();\n\n        // Clear all websocket message data too\n        this.messages.forEach(msg => msg.cleanup());\n        this.messages.length = 0;\n    }\n}","import * as _ from 'lodash';\n\nexport interface SyntaxPart<PartValue = string | number, Context extends any = never> {\n    /**\n     * Checks whether the syntax part matches, or _could_ match if\n     * some text were appended to the string.\n     *\n     * This will return undefined if the value could not match, e.g.\n     * a number is required and there's a non-number entered already.\n     * If will return a full match if the part is completely present,\n     * and will consume everything it can, and it will return a partial\n     * match if the end of the string was reached without breaking any\n     * rules, but without successfully completing the matcher.\n     */\n    match(value: string, index: number): undefined | SyntaxPartMatch;\n\n    /**\n     * Given that there was a full or partial match, this returns a list of\n     * possible values that would make this syntax part match fully.\n     *\n     * Don't call it without a match, as the behaviour is undefined.\n     */\n    getSuggestions(value: string, index: number, context?: Context): SyntaxSuggestion[];\n\n    /**\n     * For a part that fully matches, this will return the fully matched\n     * content in a content-appropriate type, e.g. strings for strings,\n     * numbers for numbers.\n     *\n     * If the part does not fully match, this throws an error.\n     */\n    parse(value: string, index: number): PartValue;\n};\n\n// The value a syntax part will return when parsed\nexport type SyntaxPartValue<SP> = SP extends SyntaxPart<infer V> ? V : never;\n// The values that an array of syntax parts will return\nexport type SyntaxPartValues<SPs extends readonly SyntaxPart<any, any>[]> = {\n    [i in keyof SPs]: SyntaxPartValue<SPs[i]>\n};\n\n// The context a syntax part would like to generate suggestions\nexport type SyntaxPartContext<SP> = SP extends SyntaxPart<any, infer C> ? C : never;\n\n/**\n * A suggestion for some content to insert to complete a single part\n * of syntax.\n *\n * Syntax suggestions may be concatenated, by simply concatenating their showAs\n * and value strings directly.\n */\nexport interface SyntaxSuggestion {\n    /**\n     * The text that should show as the autocompleted example\n     */\n    showAs: string;\n\n    /**\n     * The position at which this suggestion should be placed in the\n     * input text.\n     *\n     * For single part suggestions, this is usually trivial: it's the\n     * index that was passed to getSuggestions, where they start matching.\n     * For multi-part suggestions though it can be more complicated in\n     * some cases.\n     */\n    index: number;\n\n    /**\n     * The text that should actually insert if you select the example.\n     *\n     * If this is not a template suggestion, then inserting the suggestion\n     * must result in a string that fully matches this syntax part.\n     */\n    value: string;\n\n    /**\n     * The type of match that this suggestion would create.\n     *\n     * 'full' means that applying this suggestion to the given input will\n     * create a value that would fully match the input.\n     *\n     * 'template' and 'partial' both mean that this wouldn't fully match\n     * the input, in slightly different ways.\n     *\n     * 'template' means that this wouldn't fully match the input, but the showAs\n     * value will be a placeholder. User input would be required, but suggestion\n     * values could be appended to showAs to provide context.\n     *\n     * 'partial' means that this wouldn't fully match the input, and the\n     * showAs property would also be incomplete, so no further suggestions\n     * should be appended - we'd need to stop and prompt the user first.\n     *\n     * Either way, all suggestions are recommendations that the user could\n     * sensibly apply, it's just that template/partial suggestions require\n     * further input on this specific part before the syntax part is matched.\n     */\n    matchType: 'full' | 'template' | 'partial';\n}\n\n/**\n * The result of matching a single syntax part within a string\n */\nexport type SyntaxPartMatch = {\n    /**\n     * If full, this part was completely matched and would be valid as-is\n     * If partial, this part could become valid, iff more content was appended\n     *\n     * Note that the exact end of the string should be a partial match for all\n     * syntax parts, since you should always be able to append content to match\n     * that part.\n     */\n    type: 'partial' | 'full';\n\n    /**\n     * How many characters were matched successfully.\n     */\n    consumed: number;\n};\n\n/**\n * The result of matching an array of syntax parts against a string.\n */\n export type SyntaxMatch = {\n    /**\n     * If full, this syntax completely matches the text shown.\n     * If partial, this syntax could match, iff more content was appended.\n     *\n     * Note that the exact end of the string should be a partial match for any\n     * syntax, since you should always be able to append content to match there.\n     */\n    type: 'partial' | 'full';\n\n    /**\n     * The number of characters fully matched by completed parts of the syntax.\n     */\n    fullyConsumed: number;\n\n    /**\n     * The number of characters fully or partially matched by parts of the syntax.\n     */\n    partiallyConsumed: number;\n\n    /**\n     * For full matches, this = the total number of parts available.\n     * For partial matches, this-1 is the index of the partially matched part.\n     */\n    partsMatched: number;\n\n    /**\n     * The index of the last syntax part that consumed >0 characters. In effect,\n     * this is the work-in-progress part: it's the first part that should be\n     * allowed to make suggestions.\n     */\n    lastConsumingPartSyntaxIndex: number;\n\n    /**\n     * The string index to the latest work-in-progress part of the input.\n     *\n     * For full matches, the string index at the start of the last part.\n     * For partial matches, the string index at the start of the full or partially\n     * matching part (i.e. the last *matched* part, not the last part overall),\n     * iff it matched more than 0 chars.\n     */\n    lastConsumingPartStringIndex: number;\n};\n\n\n\n// ^ That's all the core types, defining the syntax structure\n// -----------------------------------------------------------------------------------------\n// v This is all the generic syntax parsing & matching logic that uses it\n\n\n\n/**\n * Match a series of syntax parts at a position in a string. This tests each part, stepping\n * through the consumed string as it's matched, and returning full/partial according to\n * the final match, with details of how much of the string & syntax was matched en route.\n */\n export function matchSyntax(\n    syntax: readonly SyntaxPart<unknown, unknown>[],\n    value: string,\n    initialIndex: number\n): SyntaxMatch | undefined {\n    let stringIndex = initialIndex;\n    let fullyConsumed = 0;\n    let syntaxIndex: number;\n    let wasFullMatch = true;\n\n    let lastConsumingPartSyntaxIndex = 0;\n    let lastConsumingPartStringIndex = initialIndex;\n\n    for (\n        syntaxIndex = 0;\n        syntaxIndex < syntax.length && stringIndex <= value.length && wasFullMatch;\n        syntaxIndex++\n    ) {\n        const partMatch = syntax[syntaxIndex].match(value, stringIndex);\n        if (!partMatch) return;\n\n        wasFullMatch = partMatch.type === 'full';\n\n        if (partMatch.consumed > 0) {\n            lastConsumingPartSyntaxIndex = syntaxIndex;\n            lastConsumingPartStringIndex = stringIndex;\n        }\n\n        stringIndex += partMatch.consumed;\n        fullyConsumed += wasFullMatch ? partMatch.consumed : 0;\n    }\n\n    return {\n        type: syntaxIndex === syntax.length && wasFullMatch\n            ? 'full'\n            : 'partial',\n        fullyConsumed,\n        partiallyConsumed: stringIndex - initialIndex,\n        partsMatched: syntaxIndex,\n        lastConsumingPartSyntaxIndex,\n        lastConsumingPartStringIndex\n    };\n}\n\n/**\n * Takes a full string, and given a list of syntax parts, returns an\n * appropriate list of suggestions to show the user.\n *\n * Syntax part inputs are linked to a key, so that you can conveniently\n * work out which input created with suggestion later on.\n *\n * Optionally also takes context, which may be used by some syntax\n * parts to provide more specific context-driven suggestions.\n */\n export function getSuggestions<C, K = unknown>(\n    syntaxOptions: Array<{ key: K, syntax: readonly SyntaxPart<any, C>[] }>,\n    value: string,\n    initialIndex: number,\n    options: {\n        context: C,\n        canExtend?: boolean\n    }\n): Array<{ key: K, suggestion: SyntaxSuggestion }> {\n    const syntaxMatches = syntaxOptions.map(({ key: key, syntax }) => ({\n        key,\n        syntax,\n        match: matchSyntax(syntax, value, initialIndex)\n    })).filter(({ match }) => {\n        // We only show suggestions for syntax that does/might match, and which matches\n        // the whole of the input - so \"status=40\" suggests 404, but \"status=hello\" shows\n        // nothing (it doesn't suggest 404 at the start of hello).\n        // Maybe later we could show suggestions in such cases given a space separator?\n        return !!match && (initialIndex + match.partiallyConsumed) === value.length\n    });\n\n    const [fullMatches, partialMatches] = _.partition(syntaxMatches, ({ match }) =>\n        match!.type === 'full'\n    );\n\n    if (fullMatches.length) {\n        // If we have full matches (what you've typed fully matches a syntax option) then\n        // we should rematch just the final part, to get a final completion suggestion.\n        // E.g. Given status=404, we want a suggestion for just '404' after the =.\n        return _.flatMap(fullMatches, ({ key, syntax, match }) => {\n            const finalSyntaxIndex = syntax.length - 1;\n            const didLastPartConsumeChars = finalSyntaxIndex === match!.lastConsumingPartSyntaxIndex;\n\n            const stringIndex = didLastPartConsumeChars\n                // If last consuming part is the last part, then we rerun that in the same place\n                // to get a final suggestion for the whole set of syntax.\n                ? match!.lastConsumingPartStringIndex\n                // If last consuming part is not the last part, there must be final full-matching\n                // but zero-consuming part(s), like an optional suffix. We want to rerun the last\n                // part but in that case we just rerun it at the very end of the string.\n                : value.length;\n\n            return syntax[finalSyntaxIndex]\n                .getSuggestions(value, stringIndex, options.context)\n                .map((suggestion) => ({\n                    key,\n                    suggestion\n                }));\n        });\n    }\n\n    // Otherwise, we're looking at partial matches. Let's find the best ones:\n    const maxMatchedParts = _.max(\n        partialMatches.map(({ match }) => match!.partsMatched)\n    );\n\n    const bestPartialMatches = partialMatches.filter(m =>\n        m.match!.partsMatched === maxMatchedParts\n    );\n\n    // We have some syntax that partially matches. For each set of syntax, get the next suggestions\n    // that should be offered to extend (and _maybe_ complete) a match.\n    const suggestionsWithMatches = _.flatMap(bestPartialMatches, ({\n        key, syntax, match\n    }) => {\n        // We want to get suggestions from the last part that consumed any input. That means\n        // for a last-part half-match, we want that partial last part, but for a last part\n        // 0-char-match, we want the preceeding full part, because there might still be\n        // useful suggestions there to extend that part.\n        const syntaxPartIndex = match!.lastConsumingPartSyntaxIndex;\n        const stringIndex = match!.lastConsumingPartStringIndex;\n\n        // For partially matched syntax, partsMatched is always the index+1\n        // of partially matched part (the part we're waiting to complete)\n        const nextPartToMatch = syntax[syntaxPartIndex];\n        const isLastPart = syntaxPartIndex === syntax.length - 1;\n\n        return nextPartToMatch.getSuggestions(value, stringIndex, options.context)\n            .map((suggestion) => ({\n                key,\n                syntax,\n                syntaxPartIndex,\n                suggestion: {\n                    ...suggestion,\n                    matchType: (\n                        suggestion.matchType === 'full'\n                        ? (isLastPart ? 'full' : 'partial')\n                        : suggestion.matchType\n                    ) as 'full' | 'template' | 'partial'\n                }\n            }));\n    });\n\n    // If we have multiple suggestions at this stage, we're done. Return those\n    // as the options to show the user.\n    if (suggestionsWithMatches.length !== 1 || options.canExtend === false) {\n        return suggestionsWithMatches.map(({ key, suggestion }) => ({\n            key,\n            suggestion\n        }));\n    }\n\n    // If we have exactly one option, we should try to keep extending it, to\n    // provide more interesting options by making more jumps in one go.\n\n    const { key, syntax, suggestion: originalSuggestion } = suggestionsWithMatches[0];\n    let syntaxPartIndex = suggestionsWithMatches[0].syntaxPartIndex + 1;\n\n    // Iteratively expand the suggestion to include future parts, if possible, until we\n    // have either >1 option or a template option:\n    let suggestions = [originalSuggestion];\n\n    // If we've reached a template suggestion, this is the template that we'll eventually\n    // return. We keep looping a little further just to nicely complete the showAs.\n    let sawTemplate: SyntaxSuggestion | undefined;\n\n    while (suggestions.length === 1 && syntaxPartIndex < syntax.length) {\n        const singleSuggestion = suggestions[0];\n        sawTemplate ||= singleSuggestion.matchType === 'template'\n            ? singleSuggestion\n            : undefined;\n\n        const updatedText = applySuggestionToText(value, singleSuggestion);\n\n        const nextSuggestions = syntax[syntaxPartIndex]\n            .getSuggestions(updatedText, updatedText.length, options.context);\n\n        // After we hit a template we keep collecting suggestions until they're ambiguous\n        if (sawTemplate && nextSuggestions.length > 1) break;\n\n        suggestions = nextSuggestions.map((nextSuggestion) => ({\n            value: singleSuggestion.value + nextSuggestion.value,\n            showAs: singleSuggestion.showAs + nextSuggestion.showAs,\n            index: singleSuggestion.index,\n            matchType: nextSuggestion.matchType\n        }));\n\n        // We never extend partial suggestions - partial means user input will be required\n        if (suggestions.some(s => s.matchType === 'partial')) break;\n\n        syntaxPartIndex += 1;\n    }\n\n    const matchedAllParts = syntaxPartIndex === syntax.length;\n\n    if (!sawTemplate) {\n        return suggestions.map((suggestion) => ({\n            key,\n            suggestion: {\n                ...suggestion,\n                matchType: suggestion.matchType === 'full' && !matchedAllParts\n                    // Not a full *filter* match if all parts weren't matched\n                    ? 'partial'\n                    : suggestion.matchType\n            }\n        }));\n    } else {\n        return [{\n            key: key,\n            suggestion: {\n                ...sawTemplate,\n                showAs: suggestions[0].showAs\n            }\n        }];\n    }\n}\n\nexport function applySuggestionToText(value: string, suggestion: SyntaxSuggestion) {\n    return value.slice(0, suggestion.index) + suggestion.value;\n}","import * as _ from 'lodash';\n\nimport {\n    getSuggestions,\n    matchSyntax,\n    SyntaxPart,\n    SyntaxPartContext,\n    SyntaxPartMatch,\n    SyntaxPartValue,\n    SyntaxSuggestion\n} from './syntax-matching';\n\ntype CharRange = readonly [number, number];\n\nexport function charRange(charA: string, charB?: string): CharRange {\n    if (charB) {\n        return [charA.charCodeAt(0), charB.charCodeAt(0)];\n    } else {\n        return [charA.charCodeAt(0), charA.charCodeAt(0)];\n    }\n}\n\nexport const ALPHABETICAL = [charRange(\"a\", \"z\"), charRange(\"A\", \"Z\")];\nexport const NUMERIC = charRange(\"0\", \"9\");\nexport const ALPHANUMERIC = [...ALPHABETICAL, NUMERIC];\n\nexport function matchesRange(charCode: number, range: CharRange) {\n    return charCode >= range[0] && charCode <= range[1];\n}\n\n// Note that our definition of 'number' is very simplistic: no decimal points,\n// no thousand separators, no negative numbers, just 0+ integers.\nconst getNumberAt = (value: string, index: number) =>\n    getStringAt(value, index, [NUMBER_CHARS]);\n\n/**\n * Match a string at a given position, allowing only characters from\n * the given range\n */\nfunction getStringAt(value: string, index: number, allowedCharRanges: CharRange[]) {\n    let i: number;\n\n    // Keep reading chars until we either hit the end of the\n    // string (maybe immediately) or hit an invalid character\n    for (i = index; i < value.length; i++) {\n        const nextChar = value.charCodeAt(i);\n        if (!_.some(allowedCharRanges, r => matchesRange(nextChar, r))) break;\n    }\n\n    if (i !== index) {\n        // We found at least one character, that's a match:\n        return value.substring(index, i);\n    } else if (i === value.length) {\n        // We were at the end of the string, that's an empty partial match:\n        return \"\";\n    } else {\n        // We found no characters, and no end of string: fail\n        return undefined;\n    }\n}\n\nconst NUMBER_CHARS = [48, 57] as const; // 0-9 ascii codes\n\nfunction getParsedValue(part: SyntaxPart, value: string, index: number): string {\n    const match = part.match(value, index);\n    if (!match || match.type !== 'full') {\n        console.log(\"Unparseable expected-parseable input\", value);\n        throw new Error(\"Can't parse expected-parseable value\");\n    }\n    return value.slice(index, index + match.consumed);\n}\n\nfunction filterContextualSuggestions<S>(\n    value: string,\n    index: number,\n    context: S | undefined,\n    existingInput: string | undefined,\n    suggestionGenerator: ((value: string, index: number, context: S) => string[]) | undefined,\n    filter: (suggestion: string) => boolean\n): SyntaxSuggestion[] {\n    if (!context || !suggestionGenerator) return [];\n\n    const lowercaseInput = (existingInput || '').toLowerCase();\n    return suggestionGenerator(value, index, context)\n        .filter((suggestion) =>\n            (\n                !lowercaseInput ||\n                suggestion.toLowerCase().startsWith(lowercaseInput)\n            ) && filter\n        )\n        .slice(0, 10) // Max 10 results\n        .map(s => ({\n            showAs: s,\n            index,\n            value: s,\n            matchType: 'full'\n        }));\n}\n\nexport class FixedStringSyntax<OptionsType extends string = string> implements SyntaxPart<OptionsType> {\n\n    constructor(\n        private matcher: OptionsType\n    ) {}\n\n    match(value: string, index: number): undefined | SyntaxPartMatch {\n        const expected = this.matcher.toLowerCase();\n        let i: number;\n\n        // Compare char by char over the common size\n        for (i = index; (i - index) < this.matcher.length && i < value.length; i++) {\n            if (expected[i - index] !== value[i].toLowerCase()) return undefined;\n        }\n\n        const consumedChars = i - index;\n\n        // We ran out of a string without a mismatch. Which?\n        return {\n            type: (consumedChars === this.matcher.length)\n                ? 'full'\n                : 'partial',\n            consumed: consumedChars\n        };\n    }\n\n    getSuggestions(value: string, index: number): SyntaxSuggestion[] {\n        return [{\n            showAs: this.matcher,\n            index,\n            value: this.matcher,\n            matchType: 'full'\n        }];\n    }\n\n    parse(value: string, index: number): OptionsType {\n        // Ensure the parsing matches correctly\n        getParsedValue(this, value, index);\n        // Return the expected string (ignoring input case) not the matched text:\n        return this.matcher;\n    }\n\n}\n\nexport class StringSyntax<C = never> implements SyntaxPart<string, C> {\n\n    static AnyAsciiExceptSpaces = [charRange('!', '~')];\n\n    private allowedCharRanges: CharRange[];\n    private allowEmpty: (value: string, index: number) => boolean;\n\n    constructor(\n        private templateText: string,\n        private options: {\n            allowEmpty?: (value: string, index: number) => boolean,\n            allowedChars?: CharRange[],\n            suggestionGenerator?: (value: string, index: number, context: C) => string[]\n        } = {}\n    ) {\n        this.allowedCharRanges = options.allowedChars ||\n            StringSyntax.AnyAsciiExceptSpaces;\n        this.allowEmpty = options.allowEmpty || (() => false);\n    }\n\n    match(value: string, index: number): undefined | SyntaxPartMatch {\n        const matchingString = getStringAt(value, index, this.allowedCharRanges);\n        if (matchingString === undefined) return;\n\n        const consumedChars = matchingString.length;\n\n        // Any string is a full match, any empty space is a potential string\n        return {\n            type: (consumedChars > 0 || this.allowEmpty(value, index))\n                ? 'full'\n                : 'partial',\n            consumed: consumedChars\n        };\n    }\n\n    getSuggestions(value: string, index: number, context?: C): SyntaxSuggestion[] {\n        const matchingString = getStringAt(value, index, this.allowedCharRanges);\n\n        const suggestions = filterContextualSuggestions(value, index, context,\n            matchingString,\n            this.options.suggestionGenerator,\n            (suggestion) =>\n                // Suggestion chars must match one of the given char ranges\n                ![...suggestion].map(c => c.charCodeAt(0)).some(c =>\n                    !this.allowedCharRanges.some(r => matchesRange(c, r))\n                )\n        );\n\n        if (!matchingString) {\n            return [\n                {\n                    showAs: `{${this.templateText}}`,\n                    index,\n                    value: \"\",\n                    matchType: 'template'\n                },\n                ...(this.allowEmpty(value, index) && matchingString === \"\"\n                    ? [{\n                        showAs: '',\n                        index,\n                        value: '',\n                        matchType: 'full'\n                    } as const]\n                    : []\n                ),\n                ...suggestions\n            ];\n        } else {\n            return [\n                {\n                    showAs: matchingString,\n                    index,\n                    value: matchingString,\n                    matchType: 'full'\n                },\n                ...suggestions.filter(s => s.value !== matchingString)\n            ];\n        }\n    }\n\n    parse(value: string, index: number): string {\n        return getParsedValue(this, value, index);\n    }\n\n}\n\nexport class SyntaxWrapperSyntax<P> implements SyntaxPart<P> {\n\n    private optional: boolean;\n\n    constructor(\n        private wrapper: [start: string, end: string],\n        private wrappedSyntax: SyntaxPart<P>,\n        options: {\n            /**\n             * If set, the wrapper is optional, and should only be required & suggested\n             * if a input/suggestion contains a space.\n             */\n            optional?: boolean\n        } = {}\n    ) {\n        this.optional = !!options.optional;\n    }\n\n    match(value: string, startIndex: number): SyntaxPartMatch | undefined {\n        let isWrapped: boolean;\n        let index = startIndex;\n\n        // Check for the wrapper start character first:\n        if (value[index] === undefined) {\n            return { type: 'partial', consumed: 0 };\n        } else if (value[index] === this.wrapper[0]) {\n            index += 1;\n            isWrapped = true;\n        } else if (this.optional) {\n            isWrapped = false;\n        } else {\n            return; // No wrapped, not optional - no match\n        }\n\n        // Check the syntax within:\n        const endChar = isWrapped ? this.wrapper[1] : ' ';\n        const nextEndCharIndex = value.slice(index).indexOf(endChar);\n        const valueToMatch = nextEndCharIndex !== -1\n            // Don't allow the wrapped syntax to read beyond the wrapper end\n            ? value.slice(0, index + nextEndCharIndex)\n            : value;\n\n        const submatch = this.wrappedSyntax.match(\n            valueToMatch,\n            index\n        );\n        if (!submatch) return;\n\n        index += submatch.consumed;\n\n        if (submatch.type !== 'full') {\n            return {\n                type: 'partial',\n                consumed: index - startIndex\n            };\n        }\n\n        // Check for the wrapper close character:\n        if (isWrapped) {\n            if (value[index] === undefined) {\n                return { type: 'partial', consumed: index - startIndex };\n            } else if (value[index] !== this.wrapper[1]) {\n                // Missing closing wrapper after open wrapper - no match\n                return;\n            } else {\n                index += 1;\n            }\n        }\n\n        return {\n            type: 'full',\n            consumed: index - startIndex\n        };\n    }\n\n    getSuggestions(value: string, index: number, context?: never): SyntaxSuggestion[] {\n        const hasStartWrapper = value[index] === this.wrapper[0];\n\n        const endChar = !this.optional || hasStartWrapper\n            ? this.wrapper[1]\n            : ' ';\n\n        // Don't allow the wrapped syntax to include the wrapper end in suggestions:\n        const nextEndCharIndex = value.slice(index).indexOf(endChar);\n        const valueToMatch = nextEndCharIndex !== -1\n            ? value.slice(0, index + nextEndCharIndex)\n            : value;\n\n        const wrappedSyntaxStartPosition = hasStartWrapper\n            ? index + 1\n            : index;\n\n        const suggestionsToWrap = this.wrappedSyntax.getSuggestions(\n            valueToMatch,\n            wrappedSyntaxStartPosition,\n            context\n        );\n\n        return suggestionsToWrap.map(suggestion => {\n            // Suggestions need a wrapper when it's required or when it's optional but\n            // the value would be invalid unwrapped (because it has space)\n            const needsWrapper = !this.optional ||\n                suggestion.value.includes(' ');\n\n            const shouldAddStartWrapper = needsWrapper && !hasStartWrapper;\n\n            const shouldAddEndWrapper = (needsWrapper || hasStartWrapper) &&\n                // We only actually append the end wrapper when the child is totally done\n                suggestion.matchType === 'full';\n            const valueSuffix = shouldAddEndWrapper ? this.wrapper[1] : '';\n\n            const shouldShowEndWrapper = (needsWrapper || hasStartWrapper) &&\n                // We do show the end wrapper for templates though, since it looks nicer\n                (suggestion.matchType === 'full' || suggestion.matchType === 'template');\n            const shownSuffix = shouldShowEndWrapper ? this.wrapper[1] : '';\n\n            if (!shouldAddStartWrapper) {\n                // If the start wrapper is already sorted, we just return the suggestion,\n                // maybe with an end wrapper if appropriate\n                return {\n                    ...suggestion,\n                    showAs: suggestion.showAs + shownSuffix,\n                    value: suggestion.value + valueSuffix\n                };\n            } else {\n                // If we want a start wrapper, things get more complicated, because we need\n                // to backtrack the suggestion, as it might be a suggestion later in the\n                // value ('abc', suggest appending ' def' at index 3)\n                const extendedValue = this.wrapper[0] + value.slice(\n                    wrappedSyntaxStartPosition,\n                    suggestion.index\n                ) + suggestion.value + valueSuffix;\n\n                const extendedShowAs = this.wrapper[0] + value.slice(\n                    wrappedSyntaxStartPosition,\n                    suggestion.index\n                ) + suggestion.showAs + shownSuffix;\n\n                return {\n                    ...suggestion,\n                    showAs: extendedShowAs,\n                    value: extendedValue,\n                    index: wrappedSyntaxStartPosition\n                };\n            }\n        });\n    }\n\n    parse(value: string, index: number): P {\n        const hasStartWrapper = value[index] === this.wrapper[0];\n        const hasEndWrapper = value.slice(index).indexOf(this.wrapper[1]) !== -1;\n        const isWrapped = !this.optional || (hasStartWrapper && hasEndWrapper);\n\n        const endChar = isWrapped\n            ? this.wrapper[1]\n            : ' ';\n\n        // Don't allow the wrapped syntax to read beyond the wrapper end:\n        const nextEndCharIndex = value.slice(index).indexOf(endChar);\n        const valueToMatch = nextEndCharIndex !== -1\n            ? value.slice(0, index + nextEndCharIndex)\n            : value;\n\n        return this.wrappedSyntax.parse(\n            valueToMatch,\n            isWrapped ? index + 1 : index\n        );\n    }\n\n}\n\n/**\n * Vararg syntax, including a minimum repetitions. This allows you to create\n * syntax like \"any number of numbers, separated by a comma\". Separators may be\n * followed by any number of spaces, which will be ignored.\n */\nexport class SyntaxRepeaterSyntax<\n    Part extends SyntaxPart<any, any>,\n    V extends SyntaxPartValue<Part>,\n    C extends SyntaxPartContext<Part>\n> implements SyntaxPart<V[], C> {\n\n    private minimumRepetitions: number;\n    private placeholderName: string;\n\n    private delimiterSyntax: FixedStringSyntax;\n\n    constructor(\n        private delimiterString: string,\n        private wrappedSyntax: Part,\n        options: {\n            minimumRepetitions?: number,\n            placeholderName?: string\n        } = {}\n    ) {\n        this.minimumRepetitions = options.minimumRepetitions ?? 2;\n        this.placeholderName = options.placeholderName ?? 'value';\n\n        this.delimiterSyntax = new FixedStringSyntax(this.delimiterString);\n    }\n\n    // Handles the raw wrapper + delimiter matching, without worrying about\n    // minimum repetitions at all.\n    private matchSyntaxOnly(\n        value: string,\n        startIndex: number\n    ): (SyntaxPartMatch & { matchCount: number }) {\n        const { wrappedSyntax, delimiterString, delimiterSyntax } = this;\n\n        let index = startIndex;\n        let matchCount = 0;\n        let lastPartMatchEndIndex = 0;\n\n        while (true) {\n            // Check the syntax within:\n            const nextDelimiterIndex = value.slice(index).indexOf(delimiterString);\n            const valueToMatch = value.slice(0,\n                // Don't allow the wrapped syntax to read beyond the next delimiter\n                nextDelimiterIndex !== -1\n                    ? index + nextDelimiterIndex\n                    : undefined\n            );\n\n            const submatch = wrappedSyntax.match(\n                valueToMatch,\n                index\n            );\n\n            // If we run into non-matching values, we're done. Return everything up\n            // to the last matching part:\n            if (!submatch) {\n                return {\n                    matchCount,\n                    type: 'full',\n                    consumed: lastPartMatchEndIndex - startIndex\n                };\n            }\n\n            index += submatch.consumed;\n            lastPartMatchEndIndex = index;\n\n            if (submatch.type === 'partial') {\n                // An incomplete match means we're done, we stop here and return\n                // what we have so far as a partially complete value\n                return {\n                    matchCount,\n                    type: 'partial',\n                    consumed: index - startIndex\n                };\n            }\n\n            matchCount += 1;\n\n            const delimiterMatch = delimiterSyntax.match(value, index);\n            if (!delimiterMatch || delimiterMatch.consumed === 0) {\n                // If we have a non-delimiter (or we're at the end of the string) stop.\n                return { matchCount, type: 'full', consumed: index - startIndex };\n            } else if (delimiterMatch.type === 'partial') {\n                // If we have part of a delimiter, we partially match it\n                return {\n                    matchCount,\n                    type: 'partial',\n                    consumed: delimiterMatch.consumed + (index - startIndex)\n                };\n            }\n\n            // Otherwise we must have a whole delimiter. We consume any following spaces too,\n            // and then we go around again.\n            index += delimiterMatch.consumed;\n            while (value[index] === ' ') index += 1;\n        }\n    }\n\n    match(value: string, startIndex: number): SyntaxPartMatch | undefined {\n        const { minimumRepetitions } = this;\n\n        const {\n            matchCount,\n            type: matchType,\n            consumed\n        } = this.matchSyntaxOnly(value, startIndex);\n\n        if (consumed === 0) {\n            if (minimumRepetitions <= 0) {\n                return { type: 'full', consumed };\n            } else {\n                return { type: 'partial', consumed };\n            }\n        } else if (matchType === 'full') {\n            if (matchCount >= minimumRepetitions) {\n                return { type: 'full', consumed };\n            } else if (startIndex + consumed === value.length) {\n                // If you have a full match with too few parts, but up to the\n                // end of the string, then it's a partial match (we can append to complete)\n                return { type: 'partial', consumed: consumed };\n            } else {\n                // If you have a full match that's too short, with subequent content\n                // present, then it's just a complete mismatch.\n                return;\n            }\n        } else {\n            return { type: matchType, consumed };\n        }\n    }\n\n    getSuggestions(value: string, initialIndex: number, context?: C): SyntaxSuggestion[] {\n        // getSuggestions requires a match. That means we can find the right suggestion\n        // by looping through part matches until we find the first partial match or a\n        // mismatch, and then ask the last matching part for suggestions.\n        const {\n            wrappedSyntax,\n            delimiterSyntax,\n            delimiterString,\n            minimumRepetitions\n        } = this;\n\n        let index = initialIndex;\n        let matchCount = 0;\n\n        while (true) {\n            const nextDelimiterIndex = value.slice(index).indexOf(delimiterString);\n            const valueToMatch = value.slice(0,\n                // Don't allow the wrapped syntax to read beyond the next delimiter\n                nextDelimiterIndex !== -1\n                    ? index + nextDelimiterIndex\n                    : undefined\n            );\n\n            const wrappedMatch = wrappedSyntax.match(valueToMatch, index);\n            if (!wrappedMatch) {\n                // Must be a full match on the parsed content up to the last delimiter\n                // (if any) because otherwise this is no match at all, and getSuggestions\n                // always requires a match first.\n                return [{\n                    matchType: 'full',\n                    index: matchCount > 0\n                        ? index - delimiterString.length\n                        : index,\n                    showAs: '',\n                    value: ''\n                }];\n            } else if (wrappedMatch.type === 'partial') {\n                // We have a partial match on our contents, so suggest continuining it\n                const suggestions = wrappedSyntax.getSuggestions(value, index, context);\n                if (matchCount + 1 < minimumRepetitions) {\n                    return suggestions.map(suggestion => ({\n                        ...suggestion,\n                        // Downgrade the match to partial if we still wouldn't have\n                        // enough repetitions yet\n                        matchType: suggestion.matchType === 'full'\n                            ? 'partial'\n                            : suggestion.matchType\n                    }));\n                } else {\n                    return suggestions;\n                }\n            }\n\n            // We have a full match, so we just keep going\n            index += wrappedMatch.consumed;\n            matchCount += 1;\n\n            const delimiterMatch = delimiterSyntax.match(value, index);\n            if (!delimiterMatch) {\n                // Non-delimiter after a valid value - we have to stop here.\n                return [{\n                    matchType: 'full',\n                    index: index,\n                    showAs: '',\n                    value: ''\n                }];\n            } else if (delimiterMatch.type === 'partial' || value[index + delimiterMatch.consumed] === undefined) {\n                // If we have a partial delimiter, no delimiter, or a delimiter but no following space at\n                // the end of the value: suggest completing a nice delimiter+space+template for the next value.\n                const suggestions: SyntaxSuggestion[] = [{\n                    showAs: `${delimiterString} {another ${this.placeholderName}}`,\n                    index,\n                    value: delimiterString + ' ',\n                    matchType: 'template'\n                }];\n\n                // If we could stop here, and there's no delimiter entered at all\n                // yet, suggest that too:\n                if (delimiterMatch.consumed === 0 && matchCount >= minimumRepetitions) {\n                    suggestions.unshift({\n                        showAs: \"\",\n                        index,\n                        value: \"\",\n                        matchType: 'full'\n                    });\n                }\n\n                return suggestions;\n            } else { // Full delimiter match before the end of the string:\n                // Consume the delimiter and any following spaces, then continue:\n                index += delimiterMatch.consumed;\n                while (value[index] === ' ') index += 1;\n            }\n        }\n    }\n\n    parse(value: string, index: number): V[] {\n        const match = this.match(value, index)!;\n\n        if (match.type === 'full' && match.consumed === 0) return [];\n\n        const matchedValue = value.slice(index, index + match.consumed);\n        const matchedValueParts = matchedValue.split(this.delimiterString);\n        return matchedValueParts.map((part) => this.wrappedSyntax.parse(part.trim(), 0));\n    }\n\n}\n\nexport class NumberSyntax implements SyntaxPart<number> {\n\n    private stringSyntax: StringSyntax;\n\n    constructor(name: string = \"number\") {\n        this.stringSyntax = new StringSyntax(name, { allowedChars: [NUMBER_CHARS] });\n    }\n\n    match(value: string, index: number): SyntaxPartMatch | undefined {\n        return this.stringSyntax.match(value, index);\n    }\n\n    getSuggestions(value: string, index: number): SyntaxSuggestion[] {\n        return this.stringSyntax.getSuggestions(value, index);\n    }\n\n    parse(value: string, index: number): number {\n        const valueAsString = this.stringSyntax.parse(value, index);\n        return parseInt(valueAsString, 10);\n    }\n\n}\n\nexport class FixedLengthNumberSyntax<S> implements SyntaxPart<number, S> {\n\n    constructor(\n        private requiredLength: number,\n        private options: {\n            suggestionGenerator?: (value: string, index: number, context: S) => string[]\n        } = {}\n    ) {}\n\n    match(value: string, index: number): undefined | SyntaxPartMatch {\n        const matchingNumber = getNumberAt(value, index);\n        if (matchingNumber === undefined) return;\n\n        const consumedChars = matchingNumber.length;\n\n        if (consumedChars === this.requiredLength) {\n            return { type: 'full', consumed: consumedChars };\n        } else if (consumedChars < this.requiredLength) {\n            return { type: 'partial', consumed: consumedChars };\n        } else {\n            return undefined; // Too many numbers - not a match\n        }\n    }\n\n    getSuggestions(value: string, index: number, context?: S): SyntaxSuggestion[] {\n        const matchingNumber = getNumberAt(value, index);\n\n        const suggestions = filterContextualSuggestions(value, index, context,\n            matchingNumber,\n            this.options.suggestionGenerator,\n            (suggestion) =>\n                // Suggestions must have the right length\n                suggestion.length === this.requiredLength &&\n                // and be numbers\n                ![...suggestion].map(c => c.charCodeAt(0)).some(c =>\n                    !matchesRange(c, NUMBER_CHARS)\n                )\n        );\n\n        if (!matchingNumber) {\n            return [{\n                showAs: `{${this.requiredLength}-digit number}`,\n                index,\n                value: \"\",\n                matchType: 'template'\n            }, ...suggestions];\n        } else if (suggestions.length) {\n            // If we have any suggestions, they're valid suffixes of the entered\n            // value, and so they're better suggestions than just extending\n            // the number with 00s, so use them directly\n            return suggestions;\n        } else {\n            // Otherwise, extend to the required length with 00s.\n            const extendedNumber = matchingNumber +\n                _.repeat(\"0\", this.requiredLength - matchingNumber.length);\n\n            return [{\n                showAs: extendedNumber,\n                index,\n                value: extendedNumber,\n                matchType: 'full'\n            }];\n        }\n    }\n\n    parse(value: string, index: number): number {\n        const valueAsString = getParsedValue(this, value, index);\n        return parseInt(valueAsString, 10);\n    }\n\n}\n\n/**\n * Matches one syntax from a list of possible options.\n */\nexport class OptionsSyntax<\n    Options extends readonly SyntaxPart<any, any>[],\n    V extends (Options extends Array<SyntaxPart<infer V, any>> ? V : never),\n    C extends (Options extends Array<SyntaxPart<any, infer C>> ? C : never),\n> implements SyntaxPart<V, C> {\n\n    private options: Options;\n\n    constructor(options: Options) {\n        this.options = options;\n    }\n\n    match(value: string, index: number): SyntaxPartMatch | undefined {\n        const matches = this.options.map((option) =>\n            option.match(value, index)\n        ).filter(m => !!m) as SyntaxPartMatch[];\n\n        const [fullMatches, partialMatches] = _.partition(matches, { type: 'full' });\n\n        // Use full matches by preference, if there is one available:\n        const bestMatches = fullMatches.length ? fullMatches : partialMatches;\n\n        // Return the longest match within that list:\n        return _.maxBy(bestMatches, m => m.consumed);\n    }\n\n    getSuggestions(\n        value: string,\n        index: number,\n        context?: C\n    ): SyntaxSuggestion[] {\n        const matchingOptions = this.options\n            .map((option) => ({ option, match: option.match(value, index) }))\n            .filter(({ match }) => !!match);\n\n        // If there's an exact match, suggest only that.\n        // If there's two (https -> http + https) suggest the longest\n        if (matchingOptions.some(({ match }) => match!.type === 'full')) {\n            const fullyMatchingOptions = matchingOptions\n                .filter(({ match }) => match!.type === 'full');\n\n            const longestFullMatch = _.maxBy(fullyMatchingOptions, ({ match }) =>\n                match!.consumed\n            )!;\n\n            return longestFullMatch.option.getSuggestions(value, index, context);\n        } else {\n            // Otherwise, combine all the options together\n            return _.flatMap(matchingOptions, ({ option }) => {\n                if (matchingOptions.length > 1 && option instanceof CombinedSyntax) {\n                    // If we already have many options, don't allow combined syntax to generate its\n                    // own options, or everything gets rapidly out of hand\n                    return option.getSuggestions(value, index, Object.assign({},\n                        context,\n                        { canExtend: false }\n                    ));\n                } else {\n                    return option.getSuggestions(value, index, context)\n                }\n            });\n        }\n    }\n\n    parse(value: string, index: number): V {\n        const fullMatches = this.options.map((option) => ({\n            option,\n            match: option.match(value, index)\n        })).filter(({ match }) => match?.type === 'full');\n\n        const bestMatch = _.maxBy(fullMatches, ({ match }) => match!.consumed);\n\n        return bestMatch!.option.parse(value, index);\n    }\n}\n\n/**\n * A convenient helper, when the options are all just fixed strings.\n */\nexport class StringOptionsSyntax<\n    V extends string\n> extends OptionsSyntax<Array<FixedStringSyntax<V>>, V, never> {\n\n    constructor(\n        values: readonly V[]\n    ) {\n        super(values.map(v => new FixedStringSyntax(v)));\n    }\n\n}\n\n/**\n * Matches a chunk of syntax, but also matches fully if that syntax does not\n * appear. In effect, this always matches. Either it fully matches nothing\n * if there's mismatch, it partially matches if it's a partial match at the\n * end of the string (but only there), or it fully matches if some\n * fully matching content for all parts within is present.\n */\nexport class OptionalSyntax<\n    Ps extends unknown[] = unknown[],\n    C = never,\n    SPs extends { [i in keyof Ps]: SyntaxPart<Ps[i], C> }\n        = { [i in keyof Ps]: SyntaxPart<Ps[i], C> }\n> implements SyntaxPart<Ps | [], C> {\n\n    private subParts: SPs;\n\n    constructor(...subParts: SPs) {\n        this.subParts = subParts; // Apparently ... isn't allowed in field params.\n    }\n\n    match(value: string, index: number): SyntaxPartMatch | undefined {\n        let currentIndex = index;\n\n        // Optional syntax matches and disappears if there's no content available\n        if (currentIndex >= value.length) {\n            return { type: 'full', consumed: 0 };\n        }\n\n        const subMatch = matchSyntax(this.subParts, value, index);\n\n        // Optional syntax matches and disappears if the sub-syntax doesn't match at all\n        if (!subMatch) {\n            return { type: 'full', consumed: 0 };\n        }\n\n        // Optional syntax matches full like normal syntax if the contained syntax matches\n        if (subMatch.type === 'full') {\n            return { type: 'full', consumed: subMatch.fullyConsumed };\n        }\n\n        // If the contained syntax partially matches, it's only a partial match if we're\n        // at the end of the string. If we're not, then we match 0 & disappear, and the\n        // filter's matching continues to the next part (if any)\n        if (index + subMatch.partiallyConsumed === value.length) {\n            return { type: 'partial', consumed: subMatch.partiallyConsumed };\n        } else {\n            return { type: 'full', consumed: 0 };\n        }\n    }\n\n    getSuggestions(value: string, index: number, context?: C): SyntaxSuggestion[] {\n        const subPartMatch = this.match(value, index);\n        const subPartSuggestions = getSuggestions(\n            [{ key: null, syntax: this.subParts }],\n            value,\n            index,\n            { context }\n        ).map(({ suggestion }) => suggestion);\n\n        const isEndOfValue = value.length === index;\n\n        if (isEndOfValue) {\n            // If we're at the end of the string, we offer all suggestions and no suggestion\n            return [\n                { showAs: \"\", index, value: \"\", matchType: 'full' },\n                ...subPartSuggestions\n            ];\n        } else if (subPartMatch?.type === 'full' && subPartMatch?.consumed === 0) {\n            // If the matcher doesn't match at all, we suggest skipping this optional\n            // part entirely. This effectively allows backtracking for suggestions\n            // so the suggestion is shown only if the next non-optional part _does_\n            // match this content correctly.\n            return [{\n                showAs: \"\",\n                index,\n                value: \"\",\n                matchType: 'full'\n            }];\n        } else {\n            return subPartSuggestions;\n        }\n    }\n\n    parse(value: string, index: number): Ps | [] {\n        const match = this.match(value, index);\n        if (!match || match.consumed === 0) return [];\n\n        // Parse implies a full match, and now know it's not empty, so we must\n        // have a full match for every part. Loop through, return them as an array.\n        return _.reduce(this.subParts, (parsed: Ps[], part: SyntaxPart<any>) => {\n            const parsedValue = part.parse(value, index);\n            index += parsedValue.toString().length;\n            parsed.push(parsedValue as any);\n            return parsed;\n        }, []) as Ps;\n    }\n}\n\n/**\n * Matches a series of pieces of syntax as a single syntax wrapper. This is useful to\n * compose with other nested syntax, allowing them to treat a chunk of syntax as a\n * single unit.\n */\nexport class CombinedSyntax<\n    Ps extends unknown[] = unknown[],\n    C = never,\n    SPs extends { [i in keyof Ps]: SyntaxPart<Ps[i], C> }\n        = { [i in keyof Ps]: SyntaxPart<Ps[i], C> }\n> implements SyntaxPart<Ps, C & { canExtend?: boolean }> {\n\n    private subParts: SPs;\n\n    constructor(...subParts: SPs) {\n        this.subParts = subParts; // Apparently ... isn't allowed in field params.\n    }\n\n    match(value: string, index: number): SyntaxPartMatch | undefined {\n        const subMatch = matchSyntax(this.subParts, value, index);\n        return subMatch\n            ? { type: subMatch?.type, consumed: subMatch?.partiallyConsumed }\n            : undefined;\n    }\n\n    getSuggestions(\n        value: string,\n        index: number,\n        context?: C & { canExtend?: boolean }\n    ): SyntaxSuggestion[] {\n        return getSuggestions(\n            [{ key: null, syntax: this.subParts }],\n            value,\n            index,\n            { context, canExtend: context?.canExtend }\n        ).map(({ suggestion }) => suggestion);\n    }\n\n    parse(value: string, index: number): Ps {\n        // Parse implies a full match, so we must have a full match for every part.\n        // Loop through, return the parsed parts as an array.\n        return _.reduce(this.subParts, (parsed: Ps[], part: SyntaxPart<any>) => {\n            const parsedValue = part.parse(value, index);\n            index += parsedValue.toString().length;\n            parsed.push(parsedValue as any);\n            return parsed;\n        }, []) as Ps;\n    }\n}","import * as _ from 'lodash';\n\nimport { CollectedEvent } from '../../types';\nimport { joinAnd } from '../../util/text';\nimport { stringToBuffer } from '../../util';\n\nimport { getStatusDocs } from '../http/http-docs';\nimport { getReadableSize } from '../events/bodies';\nimport { EventCategories } from '../events/categorization';\nimport { WebSocketStream } from '../websockets/websocket-stream';\n\nimport {\n    matchSyntax,\n    SyntaxPart,\n    SyntaxPartValues\n} from './syntax-matching';\nimport {\n    ALPHABETICAL,\n    ALPHANUMERIC,\n    charRange,\n    CombinedSyntax,\n    FixedLengthNumberSyntax,\n    FixedStringSyntax,\n    NumberSyntax,\n    OptionalSyntax,\n    OptionsSyntax,\n    StringOptionsSyntax,\n    StringSyntax,\n    SyntaxRepeaterSyntax,\n    SyntaxWrapperSyntax\n} from './syntax-parts';\n\nexport abstract class Filter {\n\n    abstract matches(event: CollectedEvent): boolean;\n    abstract toString(): string;\n\n    constructor(\n        private readonly filterString: string\n    ) {}\n\n    serialize() {\n        return this.filterString;\n    }\n\n    get filterDescription() {\n        const thisClass = (this.constructor as FilterClass<unknown>);\n        return thisClass.filterDescription(this.filterString, false);\n    }\n}\n\n// A full set of filters, in reverse-UI order\nexport type FilterSet = readonly [StringFilter, ...Filter[]];\n// A subset of filters\nexport type Filters = readonly Filter[];\nexport const emptyFilterSet = () => [new StringFilter('')] as const;\n\nexport type FilterClass<T extends unknown = never> = {\n    /**\n     * The constructor for the filter, which can take a string that fully matches\n     * all syntax parts of this filter.\n     *\n     * May return multiple filters only for custom filter aliases, where a single\n     * keyword expands to create a whole set of filters when created.\n     */\n    new (input: string): Filter | Filters;\n\n    /**\n     * A list of syntax parts that describe how to enter the filter as a string.\n     *\n     * Filter syntax parts may accept hint context data, of type T.\n     */\n    filterSyntax: readonly SyntaxPart<any, T>[];\n\n    /**\n     * A function which takes a string that fully or partially matches the\n     * syntax parts for this input, and returns a human readable descriptio\n     * of what the filter will do.\n     *\n     * If isTemplate is true, the description should assume that a template\n     * value (as yet unknown) will be appended to the input.\n     *\n     * This function can safely assume it will never be called with strings\n     * that do not match the syntax parts.\n     *\n     * Generally, this should get more precise as more input is entered.\n     */\n    filterDescription: (input: string, isTemplate: boolean) => string;\n\n    /**\n     * A very short string, just naming the type of filter, without any of\n     * the input parameters etc.\n     */\n    filterName: string;\n};\n\n/**\n * Special case: this is the standard string matching filter.\n * Always exactly one used, with the raw text input from the\n * filter field, never added as a filter tag.\n */\nexport class StringFilter extends Filter {\n    constructor(\n        public readonly filter: string = ''\n    ) {\n        super(filter);\n    }\n\n    matches(event: CollectedEvent): boolean {\n        if (this.filter === '') return true;\n        const filter = this.filter.toLocaleLowerCase();\n        return event.searchIndex.includes(filter);\n    }\n\n    toString() {\n        return `\"${this.filter}\"`;\n    }\n}\n\nconst operations = {\n    \"=\": (value: any, expected: any) => value === expected,\n    \"!=\": (value: any, expected: any) => value !== expected\n} as const;\n\nconst numberOperations = {\n    ...operations,\n    \">\": (value: number, expected: number) => value > expected,\n    \">=\": (value: number, expected: number) => value >= expected,\n    \"<\": (value: number, expected: number) => value < expected,\n    \"<=\": (value: number, expected: number) => value <= expected\n};\n\n// Note that all operations here are implicitly case-sensitive, but it's expected\n// that each matcher will lower/uppercase values for matching as part of parsing.\nconst stringOperations = {\n    ...operations,\n    \"*=\": (value: string, expected: string) => value.includes(expected),\n    \"^=\": (value: string, expected: string) => value.startsWith(expected),\n    \"$=\": (value: string, expected: string) => value.endsWith(expected)\n};\n\nconst bufferOperations = {\n    \"=\": (value: Buffer, expected: Buffer) => value.equals(expected),\n    \"!=\": (value: Buffer, expected: Buffer) => !value.equals(expected),\n    \"*=\": (value: Buffer, expected: Buffer) => value.includes(expected),\n    \"^=\": (value: Buffer, expected: Buffer) => value.slice(0, expected.length).equals(expected),\n    \"$=\": (value: Buffer, expected: Buffer) => value.slice(-expected.length).equals(expected)\n};\n\ntype EqualityOperation = keyof typeof operations;\ntype NumberOperation = keyof typeof numberOperations;\ntype StringOperation = keyof typeof stringOperations;\n\nconst operationDescriptions: { [key in NumberOperation | StringOperation]: string } = {\n    \"=\": \"equal to\",\n    \"!=\": \"not equal to\",\n    \">\": \"greater than\",\n    \">=\": \"greater than or equal to\",\n    \"<\": \"less than\",\n    \"<=\": \"less than or equal to\",\n    \"*=\": \"containing\",\n    \"^=\": \"starting with\",\n    \"$=\": \"ending with\"\n} as const;\n\nconst sizeOperationDescriptions: { [key in NumberOperation]: string } = {\n    ...operationDescriptions,\n    \">\": \"larger than\",\n    \">=\": \"larger than or equal to\",\n    \"<\": \"smaller than\",\n    \"<=\": \"smaller than or equal to\"\n} as const;\n\ntype FilterPartValues<F extends FilterClass> = SyntaxPartValues<F['filterSyntax']>;\n\n/**\n * Given that there's a full match for the given filter against the given input,\n * parse the input with the syntax array of the filter and return an array of\n * the parsed values.\n *\n * Throws an error if the value does not fully match the filter.\n */\nfunction parseFilter<F extends FilterClass>(\n    filterClass: F,\n    value: string\n): FilterPartValues<F> {\n    let index = 0;\n    const parts = [];\n\n    for (let part of filterClass.filterSyntax) {\n        parts.push(part.parse(value, index));\n        index += part.match(value, index)!.consumed;\n    }\n\n    return parts as unknown as FilterPartValues<F>;\n}\n\n/**\n * Try to parse the filter, returning an array of all syntax part values that can be\n * parsed successfully, but stopping as soon as a part does not match.\n */\nfunction tryParseFilter<F extends FilterClass>(\n    filterClass: F,\n    value: string\n): Partial<FilterPartValues<F>> {\n    return tryParseFilterParts<\n        F['filterSyntax']\n    >(value, ...filterClass.filterSyntax);\n}\n\n/**\n * Try to parse a specific list of filter parts, returning an array of all syntax\n * parts values that can be parsed successfully, but stopping as soon as a part\n * does not match.\n */\nfunction tryParseFilterParts<\n    SPs extends readonly SyntaxPart<any, any>[]\n>(\n    value: string,\n    ...syntaxParts: SPs\n): Partial<SyntaxPartValues<SPs>> {\n    let index = 0;\n    const parsedParts = [];\n\n    for (let part of syntaxParts) {\n        const match = part.match(value, index);\n        if (!match || match.type !== 'full') break;\n\n        parsedParts.push(part.parse(value, index));\n        index += match.consumed;\n    }\n\n    return parsedParts as unknown as Partial<SyntaxPartValues<SPs>>;\n}\n\nclass StatusFilter extends Filter {\n\n    static filterSyntax = [\n        new FixedStringSyntax(\"status\"),\n        new StringOptionsSyntax<NumberOperation>([\n            \"=\",\n            \"!=\",\n            \">=\",\n            \">\",\n            \"<=\",\n            \"<\"\n        ]),\n        new FixedLengthNumberSyntax(3, {\n            suggestionGenerator: (_v, _i, events: CollectedEvent[]) =>\n                _(events)\n                .map(e =>\n                    'response' in e &&\n                    e.isSuccessfulExchange() &&\n                    e.response.statusCode.toString()\n                )\n                .uniq()\n                .filter(Boolean)\n                .sort()\n                .valueOf() as string[]\n        })\n    ] as const;\n\n    static filterName = \"status\";\n\n    static filterDescription(value: string) {\n        const [, op, status] = tryParseFilter(StatusFilter, value);\n\n        if (!op || (op == '=' && !status)) {\n            return \"responses with a given status code\";\n        } else if (!status) {\n            return `responses with a status ${operationDescriptions[op]} a given value`\n        } else {\n            const statusMessage = getStatusDocs(status)?.message;\n\n            // For exact matches, include the status description for easy reference\n            const describeStatus = (op === '=' || op === '!=') && statusMessage\n                ? ` (${statusMessage})`\n                : '';\n\n            if (op === '=') {\n                // Simplify descriptions for the most common case\n                return `responses with status ${status}${describeStatus}`;\n            } else {\n                return `responses with a status ${\n                    operationDescriptions[op]\n                } ${status}${describeStatus}`\n            }\n        }\n    }\n\n    private status: number;\n    private op: NumberOperation;\n    private predicate: (status: number, expectedStatus: number) => boolean;\n\n    constructor(filter: string) {\n        super(filter);\n        [, this.op, this.status] = parseFilter(StatusFilter, filter);\n        this.predicate = numberOperations[this.op];\n    }\n\n    matches(event: CollectedEvent): boolean {\n        return event.isHttp() &&\n            event.isSuccessfulExchange() &&\n            this.predicate(event.response.statusCode, this.status);\n    }\n\n    toString() {\n        return `Status ${this.op} ${this.status}`;\n    }\n}\n\nclass CompletedFilter extends Filter {\n\n    static filterSyntax = [new FixedStringSyntax(\"completed\")] as const;\n\n    static filterName = \"completed\";\n\n    static filterDescription(value: string) {\n        return \"requests that have received a response\";\n    }\n\n    matches(event: CollectedEvent): boolean {\n        return event.isHttp() &&\n            event.isSuccessfulExchange();\n    }\n\n    toString() {\n        return `Completed`;\n    }\n}\n\nclass PendingFilter extends Filter {\n\n    static filterSyntax = [new FixedStringSyntax(\"pending\")];\n\n    static filterName = \"pending\";\n\n    static filterDescription(value: string) {\n        return \"requests that are still waiting for a response\";\n    }\n\n    matches(event: CollectedEvent): boolean {\n        return event.isHttp() &&\n            !event.isCompletedExchange();\n    }\n\n    toString() {\n        return `Pending`;\n    }\n}\n\nclass AbortedFilter extends Filter {\n\n    static filterSyntax = [new FixedStringSyntax(\"aborted\")] as const;\n\n    static filterName = \"aborted\";\n\n    static filterDescription(value: string) {\n        return \"requests whose connection failed before receiving a response\";\n    }\n\n    matches(event: CollectedEvent): boolean {\n        return event.isHttp() &&\n            event.response === 'aborted'\n    }\n\n    toString() {\n        return `Aborted`;\n    }\n}\n\nclass ErrorFilter extends Filter {\n\n    static filterSyntax = [new FixedStringSyntax(\"errored\")] as const;\n\n    static filterName = \"error\";\n\n    static filterDescription(value: string) {\n        return \"requests that weren't transmitted successfully\";\n    }\n\n    matches(event: CollectedEvent): boolean {\n        return !(event.isHttp()) || // TLS Error\n            event.tags.some(tag =>\n                tag.startsWith('client-error') ||\n                tag.startsWith('passthrough-error')\n            );\n    }\n\n    toString() {\n        return `Error`;\n    }\n}\n\nclass PinnedFilter extends Filter {\n\n    static filterSyntax = [new FixedStringSyntax(\"pinned\")] as const;\n\n    static filterName = \"pinned\";\n\n    static filterDescription(value: string) {\n        return \"exchanges that are pinned\";\n    }\n\n    matches(event: CollectedEvent): boolean {\n        return event.pinned;\n    }\n\n    toString() {\n        return `Pinned`;\n    }\n}\n\nclass CategoryFilter extends Filter {\n\n    static filterSyntax = [\n        new FixedStringSyntax(\"category\"),\n        new FixedStringSyntax(\"=\"), // Separate, so initial suggestions are names only\n        new StringOptionsSyntax(EventCategories)\n    ] as const;\n\n    static filterName = \"category\";\n\n    static filterDescription(value: string) {\n        const [, , category] = tryParseFilter(CategoryFilter, value);\n\n        if (!category) {\n            return \"exchanges by their general category\";\n        } else {\n            return `all ${category} exchanges`;\n        }\n    }\n\n    private expectedCategory: string;\n\n    constructor(filter: string) {\n        super(filter);\n        const [,, categoryString] = parseFilter(CategoryFilter, filter);\n        this.expectedCategory = categoryString;\n    }\n\n    matches(event: CollectedEvent): boolean {\n        return event.isHttp() &&\n            event.category === this.expectedCategory\n    }\n\n    toString() {\n        return _.startCase(this.expectedCategory);\n    }\n}\n\nclass MethodFilter extends Filter {\n\n    static filterSyntax = [\n        new FixedStringSyntax(\"method\"),\n        new StringOptionsSyntax<EqualityOperation>([\n            \"=\",\n            \"!=\"\n        ]),\n        new StringSyntax(\"method\", {\n            allowedChars: ALPHABETICAL,\n            suggestionGenerator: (_v, _i, events: CollectedEvent[]) =>\n                _(events)\n                .map(e => e.isHttp() && e.request.method)\n                .uniq()\n                .filter(Boolean)\n                .valueOf() as string[]\n        })\n    ] as const;\n\n    static filterName = \"method\";\n\n    static filterDescription(value: string) {\n        const [, op, method] = tryParseFilter(MethodFilter, value);\n\n        if (!op) {\n            return \"requests with a given method\";\n        } else if (op === '=') {\n            if (method) {\n                return `${method.toUpperCase()} requests`;\n            } else {\n                return `requests with a given method`;\n            }\n        } else {\n            if (method) {\n                return `non-${method.toUpperCase()} requests`;\n            } else {\n                return 'requests not sent with a given method';\n            }\n        }\n    }\n\n    private expectedMethod: string;\n    private op: EqualityOperation;\n    private predicate: (method: string, expectedMethod: string) => boolean;\n\n    constructor(filter: string) {\n        super(filter);\n        const [, op, method] = parseFilter(MethodFilter, filter);\n        this.op = op;\n        this.predicate = operations[this.op];\n        this.expectedMethod = method.toUpperCase();\n    }\n\n    matches(event: CollectedEvent): boolean {\n        return event.isHttp() &&\n            this.predicate(event.request.method.toUpperCase(), this.expectedMethod);\n    }\n\n    toString() {\n        return `Method ${this.op} ${this.expectedMethod}`;\n    }\n\n}\n\nclass HttpVersionFilter extends Filter {\n\n    static filterSyntax = [\n        new FixedStringSyntax(\"httpVersion\"),\n        new FixedStringSyntax(\"=\"), // Separate, so initial suggestions are names only\n        new StringOptionsSyntax([\"1\", \"2\"])\n    ] as const;\n\n    static filterName = \"httpVersion\";\n\n    static filterDescription(value: string) {\n        const [, , version] = tryParseFilter(HttpVersionFilter, value);\n\n        if (!version) {\n            return \"exchanges using a given version of HTTP\";\n        } else {\n            return `exchanges using HTTP/${version}`;\n        }\n    }\n\n    private expectedVersion: number;\n\n    constructor(filter: string) {\n        super(filter);\n        const [,, versionString] = parseFilter(HttpVersionFilter, filter);\n        this.expectedVersion = parseInt(versionString, 10);\n    }\n\n    matches(event: CollectedEvent): boolean {\n        return event.isHttp() &&\n            event.httpVersion === this.expectedVersion;\n    }\n\n    toString() {\n        return `HTTP ${this.expectedVersion}`;\n    }\n}\n\nclass WebSocketFilter extends Filter {\n\n    static filterSyntax = [\n        new FixedStringSyntax(\"websocket\")\n    ] as const;\n\n    static filterName = \"websocket\";\n\n    static filterDescription() {\n        return \"websocket streams\";\n    }\n\n    constructor(filter: string) {\n        super(filter);\n    }\n\n    matches(event: CollectedEvent): boolean {\n        return event instanceof WebSocketStream;\n    }\n\n    toString() {\n        return 'WebSocket';\n    }\n}\n\nclass ProtocolFilter extends Filter {\n\n    static filterSyntax = [\n        new FixedStringSyntax(\"protocol\"),\n        new FixedStringSyntax(\"=\"),\n        new StringOptionsSyntax([\n            \"http\",\n            \"https\",\n            \"ws\",\n            \"wss\"\n        ])\n    ] as const;\n\n    static filterName = \"protocol\";\n\n    static filterDescription(value: string) {\n        const [, , protocol] = tryParseFilter(ProtocolFilter, value);\n\n        if (!protocol) {\n            return \"exchanges using HTTP, HTTPS, WS or WSS\";\n        } else {\n            return `exchanges using ${protocol.toUpperCase()}`;\n        }\n    }\n\n    private expectedProtocol: string;\n\n    constructor(filter: string) {\n        super(filter);\n        const [,, protocol] = parseFilter(ProtocolFilter, filter);\n        this.expectedProtocol = protocol.toLowerCase();\n    }\n\n    matches(event: CollectedEvent): boolean {\n        if (!(event.isHttp())) return false;\n\n        // Parsed protocol is like 'http:', so we strip the colon\n        const protocol = event.request.parsedUrl.protocol.toLowerCase().slice(0, -1);\n        return protocol === this.expectedProtocol;\n    }\n\n    toString() {\n        return `${this.expectedProtocol.toUpperCase()}`;\n    }\n}\n\nclass HostnameFilter extends Filter {\n\n    static filterSyntax = [\n        new FixedStringSyntax(\"hostname\"),\n        new StringOptionsSyntax<StringOperation>([\n            \"=\",\n            \"!=\",\n            \"*=\",\n            \"^=\",\n            \"$=\"\n        ]),\n        new StringSyntax(\"hostname\", {\n            allowedChars: [\n                ...ALPHANUMERIC,\n                charRange(\"-\"),\n                charRange(\".\")\n            ],\n            suggestionGenerator: (_v, _i, events: CollectedEvent[]) =>\n                _(events)\n                .map(e => e.isHttp() && e.request.parsedUrl.hostname.toLowerCase())\n                .uniq()\n                .filter(Boolean)\n                .valueOf() as string[]\n        })\n    ] as const;\n\n    static filterName = \"hostname\";\n\n    static filterDescription(value: string) {\n        const [, op, hostname] = tryParseFilter(HostnameFilter, value);\n\n        if (!op || (!hostname && op === '=')) {\n            return \"requests sent to a given hostname\";\n        } else if (op === '=') {\n            return `requests to ${hostname}`;\n        } else {\n            return `requests to a hostname ${operationDescriptions[op]} ${hostname || 'a given value'}`;\n        }\n    }\n\n    private expectedHostname: string;\n    private op: StringOperation;\n    private predicate: (host: string, expectedHost: string) => boolean;\n\n    constructor(filter: string) {\n        super(filter);\n        const [, op, hostname] = parseFilter(HostnameFilter, filter);\n        this.op = op;\n        this.predicate = stringOperations[op];\n        this.expectedHostname = hostname.toLowerCase();\n    }\n\n    matches(event: CollectedEvent): boolean {\n        return event.isHttp() &&\n            this.predicate(\n                event.request.parsedUrl.hostname.toLowerCase(),\n                this.expectedHostname\n            );\n    }\n\n    toString() {\n        return `Hostname ${this.op} ${this.expectedHostname}`;\n    }\n}\n\nconst PROTOCOL_DEFAULT_PORTS = {\n    'http:': 80,\n    'https:': 443\n} as const;\n\nclass PortFilter extends Filter {\n\n    static filterSyntax = [\n        new FixedStringSyntax(\"port\"),\n        new StringOptionsSyntax<NumberOperation>([\n            \"=\",\n            \"!=\",\n            \">=\",\n            \">\",\n            \"<=\",\n            \"<\"\n        ]),\n        new NumberSyntax(\"port\")\n    ] as const;\n\n    static filterName = \"port\";\n\n    static filterDescription(value: string) {\n        const [, op, port] = tryParseFilter(PortFilter, value);\n\n        if (!op || (!port && op === '=')) {\n            return \"requests sent to a given port\";\n        } else if (op === '=') {\n            return `requests to port ${port}`;\n        } else {\n            return `requests to a port ${operationDescriptions[op]} ${port || 'a given port'}`;\n        }\n    }\n\n    private expectedPort: number;\n    private op: NumberOperation;\n    private predicate: (port: number, expectedPort: number) => boolean;\n\n    constructor(filter: string) {\n        super(filter);\n        [, this.op, this.expectedPort] = parseFilter(PortFilter, filter);\n        this.predicate = numberOperations[this.op];\n    }\n\n    matches(event: CollectedEvent): boolean {\n        if (!(event.isHttp())) return false;\n\n        const { protocol, port: explicitPort } = event.request.parsedUrl;\n        const port = parseInt((\n            explicitPort ||\n            PROTOCOL_DEFAULT_PORTS[protocol as 'http:' | 'https:'] ||\n            0\n        ).toString(), 10);\n\n        return event.isHttp() &&\n            this.predicate(port, this.expectedPort);\n    }\n\n    toString() {\n        return `Port ${this.op} ${this.expectedPort}`;\n    }\n}\n\nclass PathFilter extends Filter {\n\n    static filterSyntax = [\n        new FixedStringSyntax(\"path\"),\n        new StringOptionsSyntax<StringOperation>([\n            \"=\",\n            \"!=\",\n            \"*=\",\n            \"^=\",\n            \"$=\"\n        ]),\n        new StringSyntax(\"path\", {\n            suggestionGenerator: (_v, _i, events: CollectedEvent[]) =>\n                _(events)\n                .map(e => e.isHttp() && e.request.parsedUrl.pathname)\n                .uniq()\n                .filter(Boolean)\n                .valueOf() as string[]\n        })\n    ] as const;\n\n    static filterName = \"path\";\n\n    static filterDescription(value: string) {\n        const [, op, path] = tryParseFilter(PathFilter, value);\n\n        if (!op || (!path && op === '=')) {\n            return \"requests sent to a given path\";\n        } else if (op === '=') {\n            return `requests to ${path}`;\n        } else {\n            return `requests to a path ${operationDescriptions[op]} ${path || 'a given path'}`;\n        }\n    }\n\n    private expectedPath: string;\n    private op: StringOperation;\n    private predicate: (path: string, expectedPath: string) => boolean;\n\n    constructor(filter: string) {\n        super(filter);\n        [, this.op, this.expectedPath] = parseFilter(PathFilter, filter);\n        this.predicate = stringOperations[this.op];\n    }\n\n    matches(event: CollectedEvent): boolean {\n        return event.isHttp() &&\n            this.predicate(event.request.parsedUrl.pathname, this.expectedPath);\n    }\n\n    toString() {\n        return `Path ${this.op} ${this.expectedPath}`;\n    }\n}\n\nclass QueryFilter extends Filter {\n\n    static filterSyntax = [\n        new FixedStringSyntax(\"query\"),\n        new StringOptionsSyntax<StringOperation>([\n            \"=\",\n            \"!=\",\n            \"*=\",\n            \"^=\",\n            \"$=\"\n        ]),\n        new StringSyntax(\"query\", {\n            // We allow an empty query only with = and !=, which means we need to get the op:\n            allowEmpty: (value, index): boolean => {\n                // Slightly messy logic to roll backwards and find the index of the start\n                // of the string operation just before this.\n                const opIndex = value.slice(0, index).lastIndexOf(\"query\") + \"query\".length;\n                const op = QueryFilter.filterSyntax[1].parse(value, opIndex);\n\n                // You can pass an empty query only to = or !=\n                return op === \"=\" || op === \"!=\";\n            },\n            suggestionGenerator: (_v, _i, events: CollectedEvent[]) =>\n                _(events)\n                .map(e => e.isHttp() && e.request.parsedUrl.search)\n                .uniq()\n                .filter(Boolean)\n                .valueOf() as string[]\n        })\n    ] as const;\n\n    static filterName = \"query\";\n\n    static filterDescription(value: string, isTemplate: boolean) {\n        const [, op, query] = tryParseFilter(QueryFilter, value);\n\n        if (!op) {\n            return \"requests with a given query string\";\n        } else if (query === undefined || isTemplate) {\n            if (op === '=') {\n                return `requests with a given query string`;\n            } else {\n                return `requests with a query string ${\n                    operationDescriptions[op]\n                } a given query string`;\n            }\n        } else if (query === '') {\n            // Op must be '=' or '!=' - we don't allow empty string otherwise\n            if (op === '=') {\n                return 'requests with an empty query string';\n            } else {\n                return 'requests with a non-empty query string';\n            }\n        } else {\n            return `requests with a query string ${\n                operationDescriptions[op]\n            } ${\n                query\n            }`;\n        }\n    }\n\n    private expectedQuery: string;\n    private op: StringOperation;\n    private predicate: (query: string, expectedQuery: string) => boolean;\n\n    constructor(filter: string) {\n        super(filter);\n        [, this.op, this.expectedQuery] = parseFilter(QueryFilter, filter);\n        this.predicate = stringOperations[this.op];\n    }\n\n    matches(event: CollectedEvent): boolean {\n        return event.isHttp() &&\n            this.predicate(event.request.parsedUrl.search, this.expectedQuery);\n    }\n\n    toString() {\n        return `Query ${this.op} ${this.expectedQuery}`;\n    }\n}\n\nconst getAllHeaders = (e: CollectedEvent): [string, string | string[]][] => {\n    if (!(e.isHttp())) return [];\n    return [\n        ...Object.entries(e.request.headers),\n        ...(e.isSuccessfulExchange()\n            ? Object.entries(e.response.headers)\n            : []\n        )\n    ] as [string, string | string[]][];\n}\n\nclass HeadersFilter extends Filter {\n\n    static filterSyntax = [\n        new FixedStringSyntax(\"headers\"),\n        new StringOptionsSyntax([\n            \"=\",\n            \"*=\",\n            \"^=\",\n            \"$=\"\n        ]),\n        // N.b. this is v similar to but not the same as HeaderFilter below!\n        new SyntaxWrapperSyntax(\n            ['[', ']'],\n            new StringSyntax(\"header value\", {\n                allowedChars: [[0, 255]], // Any ASCII! Wrapper guards against spaces for us.\n                suggestionGenerator: (value, index, events: CollectedEvent[]) => {\n                    return _(events)\n                        .map(e =>\n                            _(getAllHeaders(e))\n                            .map(([_hn, headerValue]) => Array.isArray(headerValue)\n                                ? headerValue\n                                : [headerValue]\n                            )\n                            .flatten()\n                            .valueOf()\n                        )\n                        .flatten()\n                        .uniq()\n                        .valueOf();\n                }\n            }),\n            // [] should be required/suggested only if value contains a space\n            { optional: true }\n        )\n    ] as const;\n\n    static filterName = \"headers\";\n\n    static filterDescription(value: string): string {\n        const [, op, headerValue] = tryParseFilter(HeadersFilter, value);\n\n        if (!op) {\n            return \"exchanges by all header values\";\n        } else {\n            return `exchanges with any header value ${\n                operationDescriptions[op]\n            } ${headerValue ? `'${headerValue}'` : 'a given string'}`;\n        }\n    }\n\n    private expectedHeaderValue: string;\n    private op: StringOperation;\n    private predicate: ((headerValue: string, expectedValue: string) => boolean);\n\n    constructor(filter: string) {\n        super(filter);\n        const [, op, headerValue] = parseFilter(HeadersFilter, filter);\n\n        this.op = op;\n        this.predicate = stringOperations[op];\n        this.expectedHeaderValue = headerValue.toLowerCase();\n    }\n\n    matches(event: CollectedEvent): boolean {\n        if (!(event.isHttp())) return false;\n\n        const headers = getAllHeaders(event);\n\n        const { predicate, expectedHeaderValue } = this;\n\n        return _(headers)\n            .flatMap(([_k, value]) => value ?? []) // Flatten our array/undefined values\n            .some((value) => predicate(value.toLowerCase(), expectedHeaderValue));\n    }\n\n    toString() {\n        return `Any header ${this.op} ${this.expectedHeaderValue!}`;\n    }\n}\n\nclass HeaderFilter extends Filter {\n\n    // Separated out so we can do subparsing here ourselves\n    private static valueMatchSyntax = [\n        new StringOptionsSyntax([\n            \"=\",\n            \"!=\",\n            \"*=\",\n            \"^=\",\n            \"$=\"\n        ]),\n        new SyntaxWrapperSyntax(\n            ['[', ']'],\n            new StringSyntax(\"header value\", {\n                allowedChars: [[0, 255]], // Any ASCII! Wrapper guards against spaces for us.\n                suggestionGenerator: (value, index, events: CollectedEvent[]) => {\n                    // Find the start of the wrapped header name text that preceeds this\n                    const headerNameIndex = value.slice(0, index - 1).lastIndexOf('[');\n\n                    const headerNamePart = HeaderFilter.filterSyntax[1];\n                    const expectedHeaderName = headerNamePart\n                        .parse(value, headerNameIndex)\n                        .toLowerCase();\n\n                    return _(events)\n                        .map(e =>\n                            _(getAllHeaders(e))\n                            .filter(([headerName]): boolean =>\n                                headerName.toLowerCase() === expectedHeaderName\n                            )\n                            .map(([_hn, headerValue]) => Array.isArray(headerValue)\n                                ? headerValue\n                                : [headerValue]\n                            )\n                            .flatten()\n                            .valueOf()\n                        )\n                        .flatten()\n                        .uniq()\n                        .valueOf();\n                }\n            }),\n            // [] should be required/suggested only if value contains a space\n            { optional: true }\n        )\n    ] as const;\n\n    static filterSyntax = [\n        new FixedStringSyntax(\"header\"),\n        new SyntaxWrapperSyntax(\n            ['[', ']'],\n            new StringSyntax(\"header name\", {\n                suggestionGenerator: (_v, _i, events: CollectedEvent[]) =>\n                    _(events)\n                    .map(e =>\n                        getAllHeaders(e).map(([headerName]) =>\n                            headerName.toLowerCase()\n                        )\n                    )\n                    .flatten()\n                    .uniq()\n                    .valueOf() as string[]\n            }),\n        ),\n        new OptionalSyntax<[StringOperation, string]>(...HeaderFilter.valueMatchSyntax)\n    ] as const;\n\n    static filterName = \"header\";\n\n    static filterDescription(value: string): string {\n        const [, headerName] = tryParseFilter(HeaderFilter, value);\n\n        // We have to manually parse optional parts unfortunately, since otherwise\n        // any half-optional matches are treated as non-matches and left undefined.\n        const [op, headerValue] = tryParseFilterParts(\n            value.slice(\"header[]\".length + (headerName || '').length),\n            ...HeaderFilter.valueMatchSyntax\n        );\n\n        if (!headerName) {\n            return \"exchanges by a specific header\";\n        } else if (!op) {\n            return `exchanges with a '${headerName}' header`;\n        } else {\n            return `exchanges with a '${headerName}' header ${\n                operationDescriptions[op]\n            } ${headerValue ? `'${headerValue}'` : 'a given value'}`;\n        }\n    }\n\n    private expectedHeaderName: string;\n\n    private expectedHeaderValue: string | undefined;\n\n    private op: StringOperation | undefined;\n    private predicate: ((headerValue: string, expectedValue: string) => boolean) | undefined;\n\n    constructor(filter: string) {\n        super(filter);\n        const [, headerName, [op, headerValue]] = parseFilter(HeaderFilter, filter);\n\n        this.expectedHeaderName = headerName.toLowerCase();\n\n        if (op && headerValue) {\n            this.op = op;\n            this.predicate = stringOperations[op];\n            this.expectedHeaderValue = headerValue.toLowerCase();\n        }\n    }\n\n    matches(event: CollectedEvent): boolean {\n        if (!(event.isHttp())) return false;\n\n        const headers = getAllHeaders(event);\n\n        const { predicate, expectedHeaderValue } = this;\n        if (!predicate || !expectedHeaderValue) {\n            return headers.some(([key]) => key.toLowerCase() === this.expectedHeaderName);\n        }\n\n        return _(headers)\n            .filter(([key]) => key.toLowerCase() === this.expectedHeaderName)\n            .flatMap(([_k, value]) => value ?? []) // Flatten our array/undefined values\n            .some((value) => predicate(value.toLowerCase(), expectedHeaderValue));\n    }\n\n    toString() {\n        if (!this.op) return `Has ${this.expectedHeaderName} header`;\n        return `${this.expectedHeaderName} ${this.op} ${this.expectedHeaderValue!}`;\n    }\n}\n\nclass BodySizeFilter extends Filter {\n\n    static filterSyntax = [\n        new FixedStringSyntax(\"bodySize\"),\n        new StringOptionsSyntax<NumberOperation>([\n            \"=\",\n            \"!=\",\n            \">=\",\n            \">\",\n            \"<=\",\n            \"<\"\n        ]),\n        new NumberSyntax(\"size\")\n    ] as const;\n\n    static filterName = \"bodySize\";\n\n    static filterDescription(value: string) {\n        const [, op, size] = tryParseFilter(BodySizeFilter, value);\n\n        if (!op) {\n            return \"exchanges by body size\";\n        } else {\n            return `exchanges with a body ${\n                sizeOperationDescriptions[op]\n            } ${\n                size !== undefined\n                ? getReadableSize(size)\n                : 'a given size'\n            }`;\n        }\n    }\n\n    private expectedSize: number;\n    private op: NumberOperation;\n    private predicate: (size: number, expectedSize: number) => boolean;\n\n    constructor(filter: string) {\n        super(filter);\n        [, this.op, this.expectedSize] = parseFilter(BodySizeFilter, filter);\n        this.predicate = numberOperations[this.op];\n    }\n\n    matches(event: CollectedEvent): boolean {\n        if (!(event.isHttp())) return false;\n\n        const requestBody = event.request.body;\n        const responseBody = event.isSuccessfulExchange()\n            ? event.response.body\n            : undefined;\n        const totalSize = requestBody.encoded.byteLength +\n            (responseBody?.encoded.byteLength || 0);\n\n        return event.isHttp() &&\n            this.predicate(totalSize, this.expectedSize);\n    }\n\n    toString() {\n        return `Size ${this.op} ${this.expectedSize}`;\n    }\n}\n\nclass BodyFilter extends Filter {\n\n    static filterSyntax = [\n        new FixedStringSyntax(\"body\"),\n        new StringOptionsSyntax<StringOperation>([\n            \"=\",\n            \"!=\",\n            \"*=\",\n            \"^=\",\n            \"$=\"\n        ]),\n        new SyntaxWrapperSyntax(\n            ['[', ']'],\n            new StringSyntax(\"body content\", {\n                allowedChars: [[0, Infinity]] // Match all characters, all unicode included\n            }),\n            // [] should be required/suggested only if value contains a space\n            { optional: true }\n        )\n    ] as const;\n\n    static filterName = \"body\";\n\n    static filterDescription(value: string) {\n        const [, op, bodyContent] = tryParseFilter(BodyFilter, value);\n\n        if (!op) {\n            return \"exchanges by body content\";\n        } else {\n            return `exchanges with a body ${operationDescriptions[op]} ${bodyContent || 'a given value'}`;\n        }\n    }\n\n    private expectedBody: Buffer;\n\n    private op: StringOperation;\n    private predicate: (body: Buffer, expectedBody: Buffer) => boolean;\n\n    constructor(filter: string) {\n        super(filter);\n        const [, op, expectedBody] = parseFilter(BodyFilter, filter);\n        this.op = op;\n\n        this.expectedBody = stringToBuffer(expectedBody);\n        this.predicate = bufferOperations[this.op];\n    }\n\n    matches(event: CollectedEvent): boolean {\n        if (!event.isHttp()) return false;\n        if (!event.hasRequestBody() && !event.hasResponseBody()) return false; // No body, no match\n\n        // Accessing .decoded on both of these touches a lazy promise, starting decoding for all bodies:\n        const requestBody = event.request.body.decoded;\n        const responseBody = event.isSuccessfulExchange()\n            ? event.response.body.decoded\n            : undefined;\n\n        const matchesRequestBody = !!requestBody && requestBody.byteLength > 0 &&\n            this.predicate(requestBody, this.expectedBody);\n\n        const matchesResponseBody = !!responseBody && responseBody.byteLength > 0 &&\n            this.predicate(responseBody, this.expectedBody);\n\n        return matchesRequestBody || matchesResponseBody;\n    }\n\n    toString() {\n        return `Body ${this.op} ${this.expectedBody}`;\n    }\n}\n\nclass ContainsFilter extends Filter {\n\n    static filterSyntax = [\n        new FixedStringSyntax(\"contains\"),\n        new SyntaxWrapperSyntax(\n            ['(', ')'],\n            new StringSyntax(\"content\", {\n                allowedChars: [[0, Infinity]] // Match all characters, all unicode included\n            })\n        )\n    ] as const;\n\n    static filterName = \"contains\";\n\n    static filterDescription(value: string) {\n        const [, content] = tryParseFilter(ContainsFilter, value);\n\n        return `exchanges that contain ${\n            content\n            ? `'${content.toLowerCase()}'`\n            : 'a given value'\n        } anywhere`;\n    }\n\n    private expectedContent: string;\n\n    constructor(filter: string) {\n        super(filter);\n        const [, expectedContent] = parseFilter(ContainsFilter, filter);\n\n        this.expectedContent = expectedContent.toLowerCase();\n    }\n\n    matches(event: CollectedEvent): boolean {\n        let content: Array<string | Buffer | number | undefined>;\n\n        if (event.isHttp()) {\n            content = [\n                event.request.method,\n                event.request.url,\n                ...Object.entries(\n                    event.request.rawHeaders\n                ).map(([key, value]) => `${key}: ${value}`),\n                // Accessing .decoded touches a lazy promise, starting decoding:\n                event.request.body.decoded,\n\n                ...(event.isSuccessfulExchange()\n                    ? [\n                        event.response.statusCode,\n                        event.response.statusMessage,\n                        ...Object.entries(\n                            event.response.rawHeaders\n                        ).map(([key, value]) => `${key}: ${value}`),\n                        // Accessing .decoded touches a lazy promise, starting decoding:\n                        event.response.body.decoded\n                    ] : []\n                ),\n\n                ...(event.isWebSocket()\n                    ? event.messages.map(msg => msg.content)\n                    : []\n                )\n            ];\n        } else if (event.isRTCConnection()) {\n            content = [\n                event.clientURL,\n                event.remoteURL\n            ];\n        } else if (event.isRTCDataChannel()) {\n            content = [\n                ...event.messages.map(msg => msg.content),\n                event.label,\n                event.protocol\n            ]\n        } else if (event.isTlsTunnel()) {\n            content = [\n                event.upstreamHostname,\n                event.upstreamPort\n            ];\n        } else if (event.isTlsFailure()) {\n            content = [\n                event.upstreamHostname\n            ];\n        } else {\n            content = [];\n        }\n\n        return content.some(content => {\n            if (!content) return false;\n            if ((content as string | Buffer).length === 0) return false;\n            return content\n                .toString()\n                .toLowerCase() // Case insensitive (expectedContent lowercased in constructor)\n                .includes(this.expectedContent);\n        });\n    }\n\n    toString() {\n        return `Contains(${this.expectedContent})`;\n    }\n}\n\nconst BaseSearchFilterClasses: FilterClass[] = [\n    MethodFilter,\n    HostnameFilter,\n    PathFilter,\n    QueryFilter,\n    StatusFilter,\n    HeadersFilter,\n    HeaderFilter,\n    BodyFilter,\n    BodySizeFilter,\n    ContainsFilter,\n    CompletedFilter,\n    PendingFilter,\n    AbortedFilter,\n    ErrorFilter,\n    PinnedFilter,\n    CategoryFilter,\n    PortFilter,\n    ProtocolFilter,\n    HttpVersionFilter,\n    WebSocketFilter\n];\n\n// Meta-filters, which can wrap the base filters above:\n\nclass NotFilter extends Filter {\n\n    private static innerFilterSyntax = new OptionsSyntax(\n        BaseSearchFilterClasses.map(f =>\n            new CombinedSyntax(...f.filterSyntax)\n        )\n    );\n\n    static filterSyntax = [\n        new FixedStringSyntax('not'),\n        new SyntaxWrapperSyntax(\n            ['(', ')'],\n            NotFilter.innerFilterSyntax\n        )\n    ] as const;\n\n    static filterName = \"not\";\n\n    static filterDescription(value: string, isTemplate: boolean) {\n        const innerValue = value.slice(4, -1);\n\n        if (innerValue.length === 0) {\n            return \"exchanges that do not match a given condition\"\n        } else {\n            const matches = BaseSearchFilterClasses.map((filter) => ({\n                filter,\n                match: matchSyntax(filter.filterSyntax, innerValue, 0)\n            })).filter(({ match }) => (match?.partiallyConsumed || 0) > 0);\n\n            const bestMatch = _.maxBy(matches, m => m.match!.partiallyConsumed);\n            const innerDescription = bestMatch\n                ? bestMatch.filter.filterDescription(innerValue, isTemplate)\n                : '...';\n\n            return `excluding ${innerDescription}`;\n        }\n    }\n\n    private innerFilter: Filter;\n\n    constructor(private filterValue: string) {\n        super(filterValue);\n\n        const innerValue = filterValue.slice(4, -1);\n\n        const matchingFilterClass = _.find(BaseSearchFilterClasses, (filter) =>\n            matchSyntax(filter.filterSyntax, innerValue, 0)?.type === 'full'\n        )!;\n        this.innerFilter = new matchingFilterClass(innerValue) as Filter; // Never Filters - we don't support filter aliases here\n    }\n\n    matches(event: CollectedEvent): boolean {\n        return !this.innerFilter.matches(event);\n    }\n\n    toString() {\n        return `not(${this.innerFilter.toString()})`;\n    }\n}\n\nclass OrFilter extends Filter {\n\n    private static innerFilterSyntax = new SyntaxRepeaterSyntax(\n        ',',\n        new OptionsSyntax(\n            BaseSearchFilterClasses.map(f =>\n                new CombinedSyntax(...f.filterSyntax)\n            )\n        ),\n        { placeholderName: 'condition' }\n    );\n\n    static filterSyntax = [\n        new FixedStringSyntax('or'),\n        new SyntaxWrapperSyntax(\n            ['(', ')'],\n            OrFilter.innerFilterSyntax\n        )\n    ] as const;\n\n    static filterName = \"or\";\n\n    static filterDescription(value: string, isTemplate: boolean) {\n        if (value[value.length - 1] === ')') value = value.slice(0, -1);\n\n        const innerValues = value.slice(3).split(',').map(v => v.trim());\n\n        if (innerValues.length === 1 && innerValues[0].length === 0) {\n            return \"exchanges that match any one of multiple conditions\"\n        } else {\n            const innerDescriptions = innerValues.map((valuePart, index) => {\n                const isLastPart = index === innerValues.length - 1;\n                const partIsTemplate = isTemplate && isLastPart;\n\n                const matches = BaseSearchFilterClasses.map((filter) => ({\n                    filter,\n                    match: matchSyntax(filter.filterSyntax, valuePart, 0)\n                })).filter(({ match }) => (match?.partiallyConsumed || 0) > 0);\n\n                const bestMatch = _.maxBy(matches, m => m.match!.partiallyConsumed);\n                if (bestMatch) {\n                    return bestMatch.filter.filterDescription(valuePart, partIsTemplate);\n                } else {\n                    return '...';\n                }\n            });\n\n            if (innerDescriptions.length < 2) {\n                innerDescriptions.push('...');\n            }\n\n            return joinAnd(innerDescriptions, ', ', ', or ');\n        }\n    }\n\n    private innerFilters: Filter[];\n\n    constructor(private filterValue: string) {\n        super(filterValue);\n\n        this.innerFilters = filterValue.slice(3, -1).split(',').map(v => v.trim()).map((valuePart) => {\n            const matchingFilterClass = _.find(BaseSearchFilterClasses, (filter) =>\n                matchSyntax(filter.filterSyntax, valuePart, 0)?.type === 'full'\n            )!;\n            return new matchingFilterClass(valuePart) as Filter; // Never Filters - we don't support filter aliases here\n        });\n    }\n\n    matches(event: CollectedEvent): boolean {\n        return this.innerFilters.some(f => f.matches(event));\n    }\n\n    toString() {\n        return joinAnd(this.innerFilters.map(f => f.toString()), ', ', ' or ');\n    }\n}\n\nexport const SelectableSearchFilterClasses: FilterClass[] = [\n    ...BaseSearchFilterClasses,\n    NotFilter,\n    OrFilter\n];","import { NativeContextMenuItem } from \"../../services/desktop-api\";\nimport { UnreachableCheck } from \"../../util/error\";\n\nexport interface ContextMenuState<T> {\n    data: T;\n    event: React.MouseEvent;\n    items: readonly ContextMenuItem<T>[];\n}\n\nexport type ContextMenuItem<T> =\n    | ContextMenuOption<T>\n    | ContextMenuSubmenu<T>\n    | { type: 'separator' };\n\nexport interface ContextMenuOption<T> {\n    type: 'option';\n    label: string;\n    enabled?: boolean;\n    callback: (data: T) => void;\n}\n\ninterface ContextMenuSubmenu<T> {\n    type: 'submenu';\n    label: string;\n    enabled?: boolean;\n    items: readonly ContextMenuItem<T>[];\n}\n\nexport function buildNativeContextMenuItems(\n    items: readonly ContextMenuItem<any>[],\n    path: Array<string | number> = []\n): NativeContextMenuItem[] {\n    return items.map((item, i) => {\n        if (item.type === 'separator') return item;\n        else if (item.type === 'submenu') return {\n            ...item,\n            items: buildNativeContextMenuItems(item.items, path.concat(`${i}.items`))\n        };\n        else if (item.type === 'option') return {\n            ...item,\n            callback: undefined, // Causes errors, as it can't be cloned\n            id: path.concat(i).join('.') // Id is the path to the item (as an _.get key like \"0.items.5\")\n        };\n        else throw new UnreachableCheck(item, i => i.type);\n    });\n}","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { observable, action, autorun, computed, observe } from 'mobx';\n\nimport { Theme, ThemeName, Themes } from '../../styles';\nimport { lazyObservablePromise } from '../../util/observable';\nimport { persist, hydrate } from '../../util/mobx-persist/persist';\nimport { unreachableCheck, UnreachableCheck } from '../../util/error';\n\nimport { AccountStore } from '../account/account-store';\nimport { emptyFilterSet, FilterSet } from '../filters/search-filters';\nimport { DesktopApi } from '../../services/desktop-api';\nimport {\n    ContextMenuState,\n    ContextMenuItem,\n    ContextMenuOption,\n    buildNativeContextMenuItems\n} from './context-menu';\n\nconst VIEW_CARD_KEYS = [\n    'api',\n\n    'request',\n    'requestBody',\n    'response',\n    'responseBody',\n\n    'webSocketMessages',\n    'webSocketClose',\n\n    'rtcConnection',\n    'rtcSessionOffer',\n    'rtcSessionAnswer',\n\n    'performance',\n    'export'\n] as const;\ntype ViewCardKey = typeof VIEW_CARD_KEYS[number];\n\nconst EXPANDABLE_VIEW_CARD_KEYS = [\n    'requestBody',\n    'responseBody',\n    'webSocketMessages'\n] as const;\nexport type ExpandableViewCardKey = typeof EXPANDABLE_VIEW_CARD_KEYS[number];\n\nconst isExpandableViewCard = (key: any): key is ExpandableViewCardKey =>\n    EXPANDABLE_VIEW_CARD_KEYS.includes(key);\n\nconst SEND_CARD_KEYS = [\n    'requestHeaders',\n    'requestBody',\n    'responseHeaders',\n    'responseBody'\n] as const;\ntype SendCardKey = typeof SEND_CARD_KEYS[number];\n\nconst isSendRequestCard = (key: SendCardKey): key is 'requestHeaders' | 'requestBody' =>\n    key.startsWith('request');\n\nconst isSentResponseCard = (key: SendCardKey): key is 'responseHeaders' | 'responseBody' =>\n    key.startsWith('response');\n\nconst EXPANDABLE_SEND_REQUEST_CARD_KEYS = [\n    'requestHeaders',\n    'requestBody',\n] as const;\ntype ExpandableSendRequestCardKey = typeof EXPANDABLE_SEND_REQUEST_CARD_KEYS[number];\n\nconst EXPANDABLE_SENT_RESPONSE_CARD_KEYS = [\n    'responseHeaders',\n    'responseBody'\n] as const;\ntype ExpandableSentResponseCardKey = typeof EXPANDABLE_SENT_RESPONSE_CARD_KEYS[number];\n\ntype ExpandableSendCardKey = ExpandableSendRequestCardKey | ExpandableSentResponseCardKey;\n\nconst isExpandableSendCard = (key: any): key is ExpandableSendCardKey =>\n    EXPANDABLE_SEND_REQUEST_CARD_KEYS.includes(key) ||\n    EXPANDABLE_SENT_RESPONSE_CARD_KEYS.includes(key);\n\nconst SETTINGS_CARD_KEYS =[\n    'account',\n    'proxy',\n    'connection',\n    'api',\n    'themes'\n] as const;\ntype SettingsCardKey = typeof SETTINGS_CARD_KEYS[number];\n\nexport class UiStore {\n\n    constructor(\n        private accountStore: AccountStore\n    ) { }\n\n    readonly initialized = lazyObservablePromise(async () => {\n        await this.accountStore.initialized;\n\n        autorun(() => {\n            // Any time the theme changes, update the HTML background to match\n            document.querySelector('html')!.style.backgroundColor = this.theme.containerBackground;\n\n            // Persist the background colour standalone, so we can easily access it\n            // from the index.html loading script, whether it's custom or computed\n            localStorage.setItem('theme-background-color', this.theme.containerBackground);\n        });\n\n        // Every time the user account data is updated from the server, consider resetting\n        // paid settings to the free defaults. This ensures that they're reset on\n        // logout & subscription expiration (even if that happened while the app was\n        // closed), but don't get reset when the app starts with stale account data.\n        observe(this.accountStore, 'accountDataLastUpdated', () => {\n            if (!this.accountStore.isPaidUser) {\n                this.setTheme('light');\n            }\n        });\n\n        await hydrate({\n            key: 'ui-store',\n            store: this\n        });\n\n        const darkThemeMq = window.matchMedia(\"(prefers-color-scheme: dark)\");\n        this._setPrefersDarkTheme(darkThemeMq.matches);\n        darkThemeMq.addEventListener('change', e => {\n            this._setPrefersDarkTheme(e.matches);\n        });\n\n        console.log('UI store initialized');\n    });\n\n    @action.bound\n    setTheme(themeNameOrObject: Theme | ThemeName | 'automatic') {\n        if (typeof themeNameOrObject === 'string') {\n            this._themeName = themeNameOrObject;\n            this.customTheme = undefined;\n        } else {\n            this._themeName = 'custom';\n            this.customTheme = themeNameOrObject;\n        }\n    }\n\n    @persist @observable\n    private _themeName: ThemeName | 'automatic' | 'custom' = 'light';\n\n    get themeName() {\n        return this._themeName;\n    }\n\n    /**\n     * Stores if user prefers a dark color theme (for example when set in system settings).\n     * Used if automatic theme is enabled.\n     */\n    @observable\n    private _prefersDarkTheme: boolean = false;\n\n    @action.bound\n    private _setPrefersDarkTheme(value: boolean) {\n        this._prefersDarkTheme = value;\n    }\n\n    @persist('object') @observable\n    private customTheme: Theme | undefined = undefined;\n\n    @computed\n    get theme(): Theme {\n        switch(this.themeName) {\n            case 'automatic':\n                return {...Themes[this._prefersDarkTheme ? 'dark' : 'light']}\n            case 'custom':\n                return this.customTheme!;\n            default:\n                return Themes[this.themeName];\n        }\n    }\n\n    // Set briefly at the moment any card expansion is toggled, to trigger animation for the expansion as it's\n    // applied, not always (to avoid animating expanded cards when they're rendered e.g. when selecting a request).\n    @observable\n    private animatedExpansionCard: string | undefined;\n\n    // Store the view details cards state here, so that they persist\n    // when moving away from the page or deselecting all traffic.\n    @observable\n    private readonly viewCardStates = {\n        'api': { collapsed: true },\n\n        'request': { collapsed: false },\n        'requestBody': { collapsed: false },\n        'response': { collapsed: false },\n        'responseBody': { collapsed: false },\n\n        'webSocketMessages': { collapsed: false },\n        'webSocketClose': { collapsed: false },\n\n        'rtcConnection': { collapsed: false },\n        'rtcSessionOffer': { collapsed: false },\n        'rtcSessionAnswer': { collapsed: false },\n\n        'performance': { collapsed: true },\n        'export': { collapsed: true }\n    };\n\n    @observable\n    expandedViewCard: ExpandableViewCardKey | undefined;\n\n    @computed\n    get viewCardProps() {\n        return _.mapValues(this.viewCardStates, (state, key) => ({\n            key,\n            expanded: key === this.animatedExpansionCard\n                ?  'starting' as const\n                : key === this.expandedViewCard,\n            collapsed: state.collapsed && key !== this.expandedViewCard,\n            onCollapseToggled: this.toggleViewCardCollapsed.bind(this, key as ViewCardKey),\n            onExpandToggled: isExpandableViewCard(key)\n                ? this.toggleViewCardExpanded.bind(this, key)\n                : _.noop\n        }));\n    }\n\n    @action\n    toggleViewCardCollapsed(key: ViewCardKey) {\n        const cardState = this.viewCardStates[key];\n        cardState.collapsed = !cardState.collapsed;\n        this.expandedViewCard = undefined;\n    }\n\n    @action\n    private toggleViewCardExpanded(key: ExpandableViewCardKey) {\n        if (this.expandedViewCard === key) {\n            this.expandedViewCard = undefined;\n        } else if (isExpandableViewCard(key)) {\n            this.viewCardStates[key].collapsed = false;\n            this.expandedViewCard = key;\n\n            // Briefly set animatedExpansionCard, to trigger animation for this expansion:\n            this.animatedExpansionCard = key;\n            requestAnimationFrame(action(() => {\n                this.animatedExpansionCard = undefined;\n            }));\n        }\n    }\n\n    // Store the send details cards state here\n    @observable\n    private readonly sendCardStates = {\n        'requestHeaders': { collapsed: false },\n        'requestBody': { collapsed: false },\n        'responseHeaders': { collapsed: false },\n        'responseBody': { collapsed: false }\n    };\n\n    @observable\n    expandedSendRequestCard: ExpandableSendRequestCardKey | undefined;\n\n    @observable\n    expandedSentResponseCard: ExpandableSentResponseCardKey | undefined;\n\n    @computed\n    get sendCardProps() {\n        return _.mapValues(this.sendCardStates, (state, key) => {\n            const expandedState = key === this.animatedExpansionCard\n                ?  'starting' as const\n                : key === this.expandedSendRequestCard || key === this.expandedSentResponseCard;\n\n            return {\n                key,\n                expanded: expandedState,\n                collapsed: state.collapsed && !expandedState,\n                onCollapseToggled: this.toggleSendCardCollapsed.bind(this, key as SendCardKey),\n                onExpandToggled: isExpandableSendCard(key)\n                    ? this.toggleSendCardExpanded.bind(this, key)\n                    : _.noop\n            };\n        });\n    }\n\n    @action\n    toggleSendCardCollapsed(key: SendCardKey) {\n        const cardState = this.sendCardStates[key];\n        cardState.collapsed = !cardState.collapsed;\n\n        if (isSendRequestCard(key)) {\n            this.expandedSendRequestCard = undefined;\n        } else if (isSentResponseCard(key)) {\n            this.expandedSentResponseCard = undefined;\n        } else {\n            throw new UnreachableCheck(key);\n        }\n    }\n\n    @action\n    private toggleSendCardExpanded(key: ExpandableSendCardKey) {\n        const expandedCardField = isSendRequestCard(key)\n                ? 'expandedSendRequestCard'\n            : isSentResponseCard(key)\n                ? 'expandedSentResponseCard'\n            : unreachableCheck(key);\n\n        if (this[expandedCardField] === key) {\n            this[expandedCardField] = undefined;\n        } else if (isExpandableSendCard(key)) {\n            this.sendCardStates[key].collapsed = false;\n            this[expandedCardField] = key as any; // We ensured key matches the field already above\n\n            // Briefly set animatedExpansionCard, to trigger animation for this expansion:\n            this.animatedExpansionCard = key;\n            requestAnimationFrame(action(() => {\n                this.animatedExpansionCard = undefined;\n            }));\n        }\n    }\n\n    @observable\n    private settingsCardStates = {\n        'account': { collapsed: false },\n        'proxy': { collapsed: false },\n        'connection': { collapsed: false },\n        'api': { collapsed: false },\n        'themes': { collapsed: false }\n    };\n\n    @computed\n    get settingsCardProps() {\n        return _.mapValues(this.settingsCardStates, (state, key) => ({\n            key,\n            collapsed: state.collapsed,\n            onCollapseToggled: this.toggleSettingsCardCollapsed.bind(this, key as SettingsCardKey)\n        }));\n    }\n\n    @action\n    toggleSettingsCardCollapsed(key: SettingsCardKey) {\n        const cardState = this.settingsCardStates[key];\n        cardState.collapsed = !cardState.collapsed;\n        this.expandedViewCard = undefined;\n    }\n\n    @action.bound\n    rememberElectronPath(path: string) {\n        if (!this.previousElectronAppPaths.includes(path)) {\n            this.previousElectronAppPaths.unshift(path);\n        }\n\n        // Keep only the most recent 3 electron paths used\n        this.previousElectronAppPaths = this.previousElectronAppPaths.slice(0, 3);\n    }\n\n    @action.bound\n    forgetElectronPath(path: string) {\n        this.previousElectronAppPaths = this.previousElectronAppPaths.filter(p => p != path);\n    }\n\n    @persist('list') @observable\n    previousElectronAppPaths: string[] = [];\n\n    @observable\n    activeFilterSet: FilterSet = emptyFilterSet();\n\n    @persist('object') @observable\n    _customFilters: { [name: string]: string } = {};\n\n    @computed\n    get customFilters() {\n        if (this.accountStore.isPaidUser) {\n            return this._customFilters;\n        } else {\n            return {};\n        }\n    }\n\n    @persist @observable\n    preferredShell: string | undefined = 'Bash';\n\n    @persist @observable\n    exportSnippetFormat: string | undefined;\n\n    /**\n     * This tracks the context menu state *only if it's not handled natively*. This state\n     * is rendered by React as a fallback when DesktopApi.openContextMenu is not available.\n     */\n    @observable.ref // This shouldn't be mutated\n    contextMenuState: ContextMenuState<any> | undefined;\n\n    handleContextMenuEvent<T>(\n        event: React.MouseEvent,\n        items: readonly ContextMenuItem<T>[],\n        data: T\n    ): void;\n    handleContextMenuEvent(\n        event: React.MouseEvent,\n        items: readonly ContextMenuItem<void>[]\n    ): void;\n    @action.bound\n    handleContextMenuEvent<T>(\n        event: React.MouseEvent,\n        items: readonly ContextMenuItem<T>[],\n        data?: T\n    ): void {\n        if (!items.length) return;\n\n        event.preventDefault();\n\n        if (DesktopApi.openContextMenu) {\n            const position = { x: event.pageX, y: event.pageY };\n            this.contextMenuState = undefined; // Should be set already, but let's be explicit\n\n            DesktopApi.openContextMenu({\n                position,\n                items: buildNativeContextMenuItems(items)\n            }).then((result) => {\n                if (result) {\n                    const selectedItem = _.get(items, result) as ContextMenuOption<T>;\n                    selectedItem.callback(data!);\n                }\n            }).catch((error) => {\n                console.log(error);\n                throw new Error('Error opening context menu');\n            });\n        } else {\n            event.persist();\n            this.contextMenuState = {\n                data,\n                event,\n                items\n            };\n        }\n    }\n\n    @action.bound\n    clearHtmlContextMenu() {\n        this.contextMenuState = undefined;\n    }\n\n}\n","import * as _ from 'lodash';\nimport { action, computed, flow, observable, when } from 'mobx';\n\nimport { logError, logErrorsAsUser } from '../../errors';\nimport { trackEvent } from '../../metrics';\nimport { ObservablePromise, lazyObservablePromise, observablePromise } from '../../util/observable';\nimport { delay } from '../../util/promise';\n\nimport {\n    RefreshRejectedError,\n\n    SKU,\n    SubscriptionPlans,\n    User,\n    cancelSubscription,\n    getLastUserData,\n    getLatestUserData,\n    initializeAuthUi,\n    loadPlanPricesUntilSuccess,\n    logOut,\n    loginEvents,\n    openNewCheckoutWindow,\n    prepareCheckout,\n    showLoginDialog\n} from '@httptoolkit/accounts';\n\nexport class AccountStore {\n\n    constructor(\n        private goToSettings: () => void\n    ) { }\n\n    readonly initialized = lazyObservablePromise(async () => {\n        // All async auth-related errors at any stage (bad tokens, invalid subscription data,\n        // misc failures) will come through here, so we can log & debug later.\n        loginEvents.on('app_error', logError);\n\n        initializeAuthUi({\n            // Proper indefinitely persistent session via refreshable token please\n            refreshToken: true,\n\n            // Don't persist logins for auto-login later. That makes sense for apps you log into\n            // every day, but it's weird otherwise (e.g. after logout -> one-click login? Very odd).\n            rememberLastLogin: false\n        });\n\n        this.subscriptionPlans = observablePromise(\n            loadPlanPricesUntilSuccess()\n        );\n\n        // Update account data automatically on login, logout & every 10 mins\n        loginEvents.on('authenticated', async (authResult) => {\n            // If a user logs in after picking a plan, they're going to go to the\n            // checkout imminently. The API has to query Paddle to build that checkout,\n            // so we ping here early to kick that process off ASAP:\n            const initialEmailResult = authResult?.idTokenPayload?.email;\n            if (initialEmailResult && this.selectedPlan) {\n                prepareCheckout(initialEmailResult, this.selectedPlan, 'app');\n            }\n\n            await this.updateUser();\n            loginEvents.emit('user_data_loaded');\n        });\n\n        loginEvents.on('authorization_error', (error) => {\n            if (error instanceof RefreshRejectedError) {\n                // If our refresh token ever becomes invalid (caused once by an Auth0 regression,\n                // or in general refresh tokens can be revoked), prompt for a fresh login.\n                logOut();\n                this.logIn();\n            }\n        });\n\n        this.updateUser();\n        setInterval(this.updateUser, 1000 * 60 * 10);\n        loginEvents.on('logout', this.updateUser);\n\n        console.log('Account store initialized');\n    });\n\n    @observable\n    private user: User = getLastUserData();\n\n    @observable\n    accountDataLastUpdated = 0;\n\n    // Set when we know a checkout/cancel is processing elsewhere:\n    @observable\n    isAccountUpdateInProcess = false;\n\n    @computed get userEmail() {\n        return this.user.email;\n    }\n\n    @computed get userSubscription() {\n        return this.isPaidUser || this.isPastDueUser\n            ? this.user.subscription\n            : undefined;\n    }\n\n    private updateUser = flow(function* (this: AccountStore) {\n        this.user = yield getLatestUserData();\n        this.accountDataLastUpdated = Date.now();\n\n        // Include the user email in error reports whilst they're logged in.\n        // Useful generally, but especially for checkout/subscription issues.\n        logErrorsAsUser(this.user.email);\n\n        if (this.user.banned) {\n            alert('Your account has been blocked for abuse. Please contact help@httptoolkit.com.');\n            window.close();\n        }\n    }.bind(this));\n\n    subscriptionPlans!: ObservablePromise<SubscriptionPlans>;\n\n    @observable\n    modal: 'login' | 'pick-a-plan' | 'post-checkout' | undefined;\n\n    @observable\n    private selectedPlan: SKU | undefined;\n\n    @computed get isLoggedIn() {\n        return !!this.user.email;\n    }\n\n    @computed get featureFlags() {\n        return _.clone(this.user.featureFlags);\n    }\n\n    @computed private get isStatusUnexpired() {\n        const subscriptionExpiry = this.user.subscription?.expiry;\n        const subscriptionStatus = this.user.subscription?.status;\n\n        const expiryMargin = subscriptionStatus === 'active'\n            // If we're offline during subscription renewal, and the sub was active last\n            // we checked, then we might just have outdated data, so leave extra slack.\n            // This gives a week of offline usage. Should be enough, given that most HTTP\n            // development needs network connectivity anyway.\n            ? 1000 * 60 * 60 * 24 * 7\n            : 0;\n\n        return !!subscriptionExpiry &&\n            subscriptionExpiry.valueOf() + expiryMargin > Date.now();\n    }\n\n    @computed get isPaidUser() {\n        // ------------------------------------------------------------------\n        // You could set this to true to become a paid user for free.\n        // I'd rather you didn't. HTTP Toolkit takes time & love to build,\n        // and I can't do that if it doesn't pay my bills!\n        //\n        // Fund open source - if you want Pro, help pay for its development.\n        // Can't afford it? Get in touch: tim@httptoolkit.com.\n        // ------------------------------------------------------------------\n\n        // If you're before the last expiry date, your subscription is valid,\n        // unless it's past_due, in which case you're in a strange ambiguous\n        // zone, and the expiry date is the next retry. In that case, your\n        // status is unexpired, but _not_ considered as valid for Pro features.\n        // Note that explicitly cancelled ('deleted') subscriptions are still\n        // valid until the end of the last paid period though!\n        return true\n    }\n\n    @computed get isPastDueUser() {\n        // Is the user a subscribed user whose payments are failing? Keep them\n        // in an intermediate state so they can fix it (for now, until payment\n        // retries fail, and their subscription cancels & expires completely).\n        return this.user.subscription?.status === 'past_due' &&\n            this.isStatusUnexpired;\n    }\n\n    @computed get userHasSubscription() {\n        return this.isPaidUser || this.isPastDueUser;\n    }\n\n    @computed get mightBePaidUser() {\n        // Like isPaidUser, but returns true for users who have subscription data\n        // locally that's expired, until we successfully make a first check.\n        return this.user.subscription?.status &&\n            this.user.subscription?.status !== 'past_due' &&\n            (this.isStatusUnexpired || this.accountDataLastUpdated === 0);\n    }\n\n    getPro = flow(function* (this: AccountStore, source: string) {\n        try {\n            trackEvent({ category: 'Account', action: 'Get Pro', value: source });\n\n            const selectedPlan: SKU | undefined = yield this.pickPlan();\n            if (!selectedPlan) return;\n\n            if (!this.isLoggedIn) yield this.logIn();\n\n            // If we cancelled login, or we've already got a plan, we're done.\n            if (!this.isLoggedIn || this.userHasSubscription) {\n                if (this.isPastDueUser) this.goToSettings();\n                return;\n            }\n\n            // It's checkout time, and the rest is in the hands of Paddle/PayPro\n            yield this.purchasePlan(this.user.email!, selectedPlan);\n        } catch (error: any) {\n            logError(error);\n            alert(`${error.message || error.code || 'Error'\n                }\\n\\nPlease check your email for details.\\nIf you need help, get in touch at billing@httptoolkit.com.`);\n            this.modal = undefined;\n        } finally {\n            this.selectedPlan = undefined;\n        }\n    }.bind(this));\n\n    logIn = flow(function* (this: AccountStore) {\n        let initialModal = this.modal;\n        this.modal = 'login';\n\n        trackEvent({ category: 'Account', action: 'Login' });\n        const loggedIn: boolean = yield showLoginDialog();\n\n        if (loggedIn) {\n            trackEvent({ category: 'Account', action: 'Login success' });\n            if (this.userHasSubscription) {\n                trackEvent({ category: 'Account', action: 'Paid user login' });\n                this.modal = undefined;\n\n                if (this.isPastDueUser) this.goToSettings();\n            } else {\n                this.modal = initialModal;\n            }\n        } else {\n            trackEvent({ category: 'Account', action: 'Login failed' });\n            this.modal = undefined;\n        }\n\n        return loggedIn;\n    }.bind(this));\n\n    @action.bound\n    logOut() {\n        logOut();\n    }\n\n    private pickPlan = flow(function* (this: AccountStore) {\n        this.selectedPlan = undefined;\n        this.modal = 'pick-a-plan';\n\n        yield when(() => this.modal === undefined || !!this.selectedPlan);\n\n        this.modal = undefined;\n\n        if (this.selectedPlan) {\n            trackEvent({ category: 'Account', action: 'Plan selected', value: this.selectedPlan });\n        } else if (!this.isPaidUser) {\n            // If you don't pick a plan via any route other than already having\n            // bought them, then you're pretty clearly rejecting them.\n            trackEvent({ category: 'Account', action: 'Plans rejected' });\n        }\n\n        return this.selectedPlan;\n    });\n\n    @action.bound\n    setSelectedPlan(plan: SKU | undefined) {\n        if (plan) {\n            this.selectedPlan = plan;\n        } else {\n            this.selectedPlan = this.modal = undefined;\n        }\n    }\n\n    private purchasePlan = flow(function* (this: AccountStore, email: string, sku: SKU) {\n        openNewCheckoutWindow(email, sku, 'app');\n\n        this.modal = 'post-checkout';\n        this.isAccountUpdateInProcess = true;\n        yield this.waitForUserUpdate(() => this.isPaidUser || !this.modal);\n        this.isAccountUpdateInProcess = false;\n        this.modal = undefined;\n\n        trackEvent({\n            category: 'Account',\n            action: this.isPaidUser ? 'Checkout complete' : 'Checkout cancelled',\n            value: sku\n        });\n    });\n\n    private waitForUserUpdate = flow(function* (\n        this: AccountStore,\n        completedCheck: () => boolean\n    ) {\n        let focused = true;\n\n        const setFocused = () => {\n            focused = true;\n            this.updateUser();\n        };\n\n        const setUnfocused = () => {\n            focused = false;\n        };\n\n        window.addEventListener('focus', setFocused);\n        window.addEventListener('blur', setUnfocused);\n\n        // Keep checking the user's subscription data at intervals, whilst other processes\n        // (browser checkout, update from payment provider) complete elsewhere...\n        yield this.updateUser();\n        let ticksSinceCheck = 0;\n        while (!completedCheck()) {\n            yield delay(1000);\n            ticksSinceCheck += 1;\n\n            if (focused || ticksSinceCheck > 10) {\n                // Every 10s while blurred or 500ms while focused, check the user data:\n                ticksSinceCheck = 0;\n                yield this.updateUser();\n            }\n        }\n\n        if (completedCheck() && !focused) window.focus(); // Jump back to the front after update\n\n        window.removeEventListener('focus', setFocused);\n        window.removeEventListener('blur', setUnfocused);\n    });\n\n    @action.bound\n    cancelCheckout() {\n        this.modal = this.selectedPlan = undefined;\n    }\n\n    get canManageSubscription() {\n        return !!this.userSubscription?.canManageSubscription;\n    }\n\n    cancelSubscription = flow(function* (this: AccountStore) {\n        try {\n            this.isAccountUpdateInProcess = true;\n            yield cancelSubscription();\n            yield this.waitForUserUpdate(() =>\n                !this.user.subscription ||\n                this.user.subscription.status === 'deleted'\n            );\n            console.log('Subscription cancellation confirmed');\n        } catch (e: any) {\n            console.log(e);\n            logError(`Subscription cancellation failed: ${e.message || e}`);\n            throw e;\n        } finally {\n            this.isAccountUpdateInProcess = false;\n        }\n    });\n\n}","import * as ipaddr from 'ipaddr.js';\nimport { logError } from '../errors';\n\nexport function isValidPort(port: number): boolean {\n    return port > 0 && port <= 65535;\n}\n\nexport function isValidHost(host: string | undefined): boolean {\n    return !!host?.match(/^[A-Za-z0-9\\-.]+(:\\d+)?$/);\n}\n\nexport function isValidHostname(hostname: string | undefined): boolean {\n    return !!hostname?.match(/^[A-Za-z0-9\\-.]+$/);\n}\n\nfunction isIPv6(ip: ipaddr.IPv4 | ipaddr.IPv6): ip is ipaddr.IPv6 {\n    return ip.kind() === 'ipv6';\n}\n\nconst subnetDescriptionOverrides: _.Dictionary<string> = {\n    'unspecified': 'unknown',\n    'loopback': 'this machine',\n    'private': 'a local network device',\n    'uniqueLocal': 'a local network device',\n    'unicast': '',\n};\n\n// Takes an IPv6 or IPv4 address, and makes it presentable\nexport function getReadableIP(ip: string) {\n    let parsedIp: ipaddr.IPv4 | ipaddr.IPv6\n    try {\n        parsedIp = ipaddr.parse(ip);\n    } catch (e) {\n        logError('Failed to parse IP', { ip: ip });\n        return ip;\n    }\n\n    if (isIPv6(parsedIp) && parsedIp.isIPv4MappedAddress()) {\n        parsedIp = parsedIp.toIPv4Address();\n    }\n\n    const subnetType = parsedIp.range();\n    const subnetDescription = (\n        subnetType in subnetDescriptionOverrides\n            ? subnetDescriptionOverrides[subnetType]\n            : subnetType\n    ).replace(/([A-Z])/g, ' $1') // camelCase to separate Words\n    .toLowerCase() // Lowercase everything\n    .replace(/^rfc/, 'see RFC ') // Highlight RFCs;\n\n    return parsedIp.toNormalizedString() + (\n        subnetDescription\n            ? ` (${subnetDescription})`\n            : ''\n    );\n}","import * as _ from 'lodash';\nimport {\n    observable,\n    action,\n    flow,\n    computed,\n    observe,\n    runInAction,\n} from 'mobx';\n\nimport {\n    PluggableAdmin,\n    MockttpPluggableAdmin,\n    ProxySetting,\n    RequestRuleData,\n    WebSocketRuleData,\n    MockttpHttpsOptions\n} from 'mockttp';\nimport * as MockRTC from 'mockrtc';\n\nimport {\n    InputHTTPEvent,\n    InputRTCEvent,\n    PortRange,\n} from '../types';\nimport {\n    getConfig,\n    announceServerReady,\n    getNetworkInterfaces,\n    NetworkInterfaces,\n} from '../services/server-api';\nimport { AccountStore } from './account/account-store';\n\nimport { delay } from '../util/promise';\nimport { logError } from '../errors';\nimport { lazyObservablePromise } from '../util/observable';\nimport { persist, hydrate } from '../util/mobx-persist/persist';\nimport { isValidPort } from './network';\nimport { serverVersion } from '../services/service-versions';\n\ntype HtkAdminClient =\n    // WebRTC is only supported for new servers:\n    | PluggableAdmin.AdminClient<{ http: MockttpPluggableAdmin.MockttpAdminPlugin, webrtc: MockRTC.MockRTCAdminPlugin }>\n    | PluggableAdmin.AdminClient<{ http: MockttpPluggableAdmin.MockttpAdminPlugin }>;\n\n// Start the server, with slowly decreasing retry frequency (up to a limit).\n// Note that this never fails - any timeout to this process needs to happen elsewhere.\nfunction startServer(\n    adminClient: HtkAdminClient,\n    config: Parameters<HtkAdminClient['start']>[0],\n    maxDelay = 500,\n    delayMs = 200\n): Promise<void> {\n    return adminClient.start(config as any).catch((e) => {\n        console.log('Server initialization failed', e);\n\n        if (e.response) {\n            // Server is listening, but failed to start as requested.\n            // This generally means that some of our config is bad.\n\n            if (e.message?.includes('unrecognized plugin: webrtc')) {\n                // We have webrtc enabled, and the server is new enough to recognize plugins and try to\n                // start them, but too old to actually support the WebRTC plugin. Skip that entirely then:\n                config = {\n                    ...config,\n                    webrtc: undefined\n                };\n            } else {\n                // Some other error - probably means that the HTTP port is in use.\n                // Drop the port config and try again:\n                config = {\n                    ...config,\n                    http: {\n                        ...config.http,\n                        port: undefined\n                    }\n                }\n            }\n\n            // Retry with our updated config after the tiniest possible delay:\n            return delay(100).then(() =>\n                startServer(adminClient, config, maxDelay, delayMs)\n            );\n        }\n\n        // For anything else (unknown errors, or more likely server not listening yet),\n        // wait briefly and then retry the same config:\n        return delay(Math.min(delayMs, maxDelay)).then(() =>\n            startServer(adminClient, config, maxDelay, delayMs * 1.2)\n        );\n    }) as Promise<void>;\n}\n\nexport function isValidPortConfiguration(portConfig: PortRange | undefined) {\n    return portConfig === undefined || (\n        portConfig.endPort >= portConfig.startPort &&\n        isValidPort(portConfig.startPort) &&\n        isValidPort(portConfig.endPort)\n    );\n}\n\nexport class ProxyStore {\n\n    constructor(\n        private readonly accountStore: AccountStore\n    ) { }\n\n    @observable.ref\n    private adminClient!: HtkAdminClient // Definitely set *after* initialization\n\n    private mockttpRequestBuilder!: MockttpPluggableAdmin.MockttpAdminRequestBuilder;\n    private mockRTCRequestBuilder = new MockRTC.MockRTCAdminRequestBuilder();\n\n    @observable\n    // !-asserted, because it's definitely set *after initialized*\n    certPath!: string;\n\n    @observable\n    certContent: string | undefined;\n\n    @observable\n    certFingerprint: string | undefined;\n\n    @observable\n    externalNetworkAddresses: string[] = [];\n\n    @observable\n    systemProxyConfig: ProxySetting | undefined;\n\n    @observable\n    dnsServers: string[] = [];\n\n    @observable\n    ruleParameterKeys: string[] = [];\n\n    @observable\n    serverVersion!: string; // Definitely set *after* initialization\n\n    readonly initialized = lazyObservablePromise(async () => {\n        await this.accountStore.initialized;\n\n        await this.loadSettings();\n        await this.startIntercepting();\n        this.serverVersion = await serverVersion;\n        console.log(`Proxy store initialized (server version ${this.serverVersion})`);\n    });\n\n    private async loadSettings() {\n        const { accountStore } = this;\n        // Every time the user account data is updated from the server, consider resetting\n        // paid settings to the free defaults. This ensures that they're reset on\n        // logout & subscription expiration (even if that happened while the app was\n        // closed), but don't get reset when the app starts with stale account data.\n        observe(accountStore, 'accountDataLastUpdated', () => {\n            if (!accountStore.isPaidUser) {\n                this.setPortConfig(undefined);\n                this.http2Enabled = 'fallback';\n                this.tlsPassthroughConfig = [];\n            }\n        });\n\n        // Load all persisted settings from storage\n        await hydrate({\n            key: 'server-store',\n            store: this\n        });\n\n        console.log('Proxy settings loaded');\n    }\n\n    private startIntercepting = flow(function* (this: ProxyStore) {\n        this.adminClient = new PluggableAdmin.AdminClient<{\n            http: any,\n            webrtc: any\n        }>({\n            adminServerUrl: 'http://127.0.0.1:45456'\n        });\n\n        this._http2CurrentlyEnabled = this.http2Enabled;\n        this._currentTlsPassthroughConfig = _.cloneDeep(this.tlsPassthroughConfig);\n\n        this.monitorRemoteClientConnection(this.adminClient);\n\n        yield startServer(this.adminClient, {\n            http: {\n                options: {\n                    cors: false,\n                    suggestChanges: false,\n                    // User configurable settings:\n                    http2: this._http2CurrentlyEnabled,\n                    https: {\n                        tlsPassthrough: this._currentTlsPassthroughConfig\n                    } as MockttpHttpsOptions // Cert/Key options are set by the server\n                },\n                port: this.portConfig\n            },\n            webrtc: {}\n        });\n\n        this.mockttpRequestBuilder = new MockttpPluggableAdmin.MockttpAdminRequestBuilder(\n            this.adminClient.schema\n        );\n\n        announceServerReady();\n        console.log('Server started');\n\n        yield getConfig(this.httpProxyPort).then((config) => {\n            this.certPath = config.certificatePath;\n            this.certContent = config.certificateContent;\n            this.certFingerprint = config.certificateFingerprint;\n            this.setNetworkAddresses(config.networkInterfaces);\n            this.systemProxyConfig = config.systemProxy;\n            this.dnsServers = config.dnsServers;\n            this.ruleParameterKeys = config.ruleParameterKeys;\n            console.log('Config loaded');\n        });\n\n        // Everything seems to agree that here we're 'done'\n        console.log(`Server started on port ${this.httpProxyPort}`);\n\n        window.addEventListener('beforeunload', () => {\n            this.adminClient.stop().catch(() => { });\n        });\n    });\n\n    private monitorRemoteClientConnection(client: PluggableAdmin.AdminClient<{}>) {\n        client.on('admin-client:stream-error', (err) => {\n            console.log('Admin client stream error');\n            logError(err.message ? err : new Error('Client stream error'), { cause: err });\n        });\n        client.on('admin-client:subscription-error', (err) => {\n            console.log('Admin client subscription error');\n            logError(err.message ? err : new Error('Client subscription error'), { cause: err });\n        });\n        client.on('admin-client:stream-reconnect-failed', (err) => {\n            logError(err.message ? err : new Error('Client reconnect error'), { cause: err });\n        });\n    }\n\n    @persist('object') @observable\n    private _portConfig: PortRange | undefined;\n\n    @computed get portConfig() {\n        return this._portConfig;\n    }\n\n    @action\n    setPortConfig(value: PortRange | undefined) {\n        if (!isValidPortConfiguration(value)) {\n            throw new TypeError(`Invalid port config: ${JSON.stringify(value)}`);\n        } else if (!value || (value.startPort === 8000 && value.endPort === 65535)) {\n            // If unset, or set to the default equivalent value, then\n            // we delegate to the server itself.\n            this._portConfig = undefined;\n        } else {\n            this._portConfig = value;\n        }\n    }\n\n    @computed get httpProxyPort() {\n        return this.adminClient.metadata.http.port;\n    }\n\n    @persist @observable\n    http2Enabled: true | false | 'fallback' = 'fallback';\n    private _http2CurrentlyEnabled = this.http2Enabled;\n    get http2CurrentlyEnabled() {\n        return this._http2CurrentlyEnabled;\n    }\n\n    @persist('list') @observable\n    tlsPassthroughConfig: Array<{ hostname: string }> = [];\n    private _currentTlsPassthroughConfig: Array<{ hostname: string }> = [];\n    get currentTlsPassthroughConfig() {\n        return this._currentTlsPassthroughConfig;\n    }\n\n    setRequestRules = (...rules: RequestRuleData[]) => {\n        const { adminStream } = this.adminClient;\n\n        return this.adminClient.sendQuery(\n            this.mockttpRequestBuilder.buildAddRequestRulesQuery(rules, true, adminStream)\n        );\n    }\n\n    setWebSocketRules = (...rules: WebSocketRuleData[]) => {\n        const { adminStream } = this.adminClient;\n\n        return this.adminClient.sendQuery(\n            this.mockttpRequestBuilder.buildAddWebSocketRulesQuery(rules, true, adminStream)\n        );\n    }\n\n    setRTCRules = (...rules: MockRTC.MockRTCRuleDefinition[]) => {\n        const { adminStream } = this.adminClient;\n\n        return this.adminClient.sendQuery(\n            this.mockRTCRequestBuilder.buildSetRulesQuery(rules, adminStream)\n        );\n    }\n\n    // Proxy event subscriptions through to the server instance:\n    onMockttpEvent = (event: InputHTTPEvent, callback: (data: any) => void) => {\n        const subRequest = this.mockttpRequestBuilder.buildSubscriptionRequest(event);\n\n        if (!subRequest) {\n            // We just return an immediately promise if we don't recognize the event, which will quietly\n            // succeed but never call the corresponding callback (the same as the server and most event\n            // sources in the same kind of situation). This is what happens when the *client* doesn't\n            // recognize the event. Subscribe() below handles the unknown-to-server case.\n            console.warn(`Ignoring subscription for event unrecognized by Mockttp client: ${event}`);\n            return Promise.resolve();\n        }\n\n        return this.adminClient.subscribe(subRequest, callback);\n    }\n\n    // Proxy event subscriptions through to the server instance:\n    onMockRTCEvent = (event: InputRTCEvent, callback: (data: any) => void) => {\n        const subRequest = this.mockRTCRequestBuilder.buildSubscriptionRequest(event);\n\n        if (!subRequest) {\n            // We just return an immediately promise if we don't recognize the event, which will quietly\n            // succeed but never call the corresponding callback (the same as the server and most event\n            // sources in the same kind of situation). This is what happens when the *client* doesn't\n            // recognize the event. Subscribe() below handles the unknown-to-server case.\n            console.warn(`Ignoring subscription for event unrecognized by MockRTC client: ${event}`);\n            return Promise.resolve();\n        }\n\n        return this.adminClient.subscribe(subRequest, callback);\n    }\n\n    private setNetworkAddresses(networkInterfaces: NetworkInterfaces) {\n        this.externalNetworkAddresses = _.flatMap(networkInterfaces, (addresses, iface) => {\n            return addresses\n                .filter(a =>\n                    !a.internal && // Loopback interfaces\n                    a.family === \"IPv4\" && // Android VPN app supports IPv4 only\n                    iface !== 'docker0' && // Docker default bridge interface\n                    !iface.startsWith('br-') && // More docker bridge interfaces\n                    !iface.startsWith('veth') // Virtual interfaces for each docker container\n                )\n                .map(a => a.address);\n        })\n    }\n\n    public refreshNetworkAddresses = flow(function* (this: ProxyStore) {\n        this.setNetworkAddresses(yield getNetworkInterfaces());\n    });\n\n}","import * as uuid from 'uuid/v4';\n\nimport { InputTlsFailure } from '../../types';\nimport { HTKEventBase } from '../events/event-base';\n\nexport class FailedTlsConnection extends HTKEventBase {\n\n    constructor(\n        private failureEvent: InputTlsFailure\n    ) {\n        super();\n\n        this.searchIndex = [failureEvent.hostname, failureEvent.remoteIpAddress]\n            .filter((x): x is string => !!x)\n            .join('\\n');\n    }\n\n    readonly id = uuid();\n\n    readonly upstreamHostname = this.failureEvent.hostname;\n    readonly remoteIpAddress = this.failureEvent.remoteIpAddress;\n    readonly remotePort = this.failureEvent.remotePort;\n    readonly failureCause = this.failureEvent.failureCause;\n    readonly tags = this.failureEvent.tags;\n    readonly timingEvents = this.failureEvent.timingEvents;\n\n    isTlsFailure(): this is FailedTlsConnection {\n        return true;\n    }\n\n}","import { observable } from 'mobx';\n\nimport { InputTlsPassthrough } from '../../types';\nimport { HTKEventBase } from '../events/event-base';\n\nexport class TlsTunnel extends HTKEventBase {\n\n    constructor(\n        private openEvent: InputTlsPassthrough\n    ) {\n        super();\n\n        this.searchIndex = [openEvent.hostname, openEvent.remoteIpAddress]\n            .filter((x): x is string => !!x)\n            .join('\\n');\n    }\n\n    readonly id = this.openEvent.id;\n\n    readonly remoteIpAddress = this.openEvent.remoteIpAddress;\n    readonly remotePort = this.openEvent.remotePort;\n\n    readonly upstreamHostname = this.openEvent.hostname;\n    readonly upstreamPort = this.openEvent.upstreamPort;\n\n    readonly tags = this.openEvent.tags;\n    readonly timingEvents = this.openEvent.timingEvents;\n\n    isTlsTunnel(): this is TlsTunnel {\n        return true;\n    }\n\n    @observable\n    private open = true;\n\n    markClosed(closeEvent: InputTlsPassthrough) {\n        this.timingEvents.disconnectTimestamp = closeEvent.timingEvents.disconnectTimestamp;\n        this.open = false;\n    }\n\n    isOpen() {\n        return this.open;\n    }\n\n}","/*\n * SPDX-FileCopyrightText: 2022 Tim Perry <tim@httptoolkit.com>\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { action, observable, computed } from \"mobx\";\nimport { SelectedRTCCandidate } from \"mockrtc\";\nimport {\n    InputRTCPeerConnected,\n    InputRTCExternalPeerAttached,\n    InputRTCPeerDisconnected,\n    RTCStream\n} from \"../../types\";\nimport { HTKEventBase } from \"../events/event-base\";\nimport { parseSource } from \"../http/sources\";\n\nconst candidateToUrl = (candidate: SelectedRTCCandidate) =>\n    `${candidate.protocol}://${candidate.address}:${candidate.port}`;\n\nexport class RTCConnection extends HTKEventBase {\n\n    constructor(\n        private connectionEvent: InputRTCPeerConnected\n    ) {\n        super();\n    }\n\n    readonly id = this.connectionEvent.sessionId;\n\n    isRTCConnection(): this is RTCConnection  {\n        return true;\n    }\n\n    get peerId() {\n        return this.connectionEvent.peerId;\n    }\n\n    get localSessionDescription() {\n        return this.connectionEvent.localSessionDescription;\n    }\n\n    get remoteSessionDescription() {\n        return this.connectionEvent.remoteSessionDescription;\n    }\n\n    @computed\n    get source() {\n        return parseSource(this.connectionEvent.metadata.userAgent);\n    }\n\n    @computed\n    get sourceURL() {\n        if (!this.connectionEvent.metadata.sourceURL) return undefined;\n\n        try {\n            return new URL(this.connectionEvent.metadata.sourceURL);\n        } catch (e) {\n            return undefined;\n        }\n    }\n\n    @computed\n    get clientURL() {\n        return candidateToUrl(this.connectionEvent.selectedRemoteCandidate);\n    }\n\n    @observable\n    private attachedConnection:\n        | {\n            externalConnection: InputRTCExternalPeerAttached['externalConnection'],\n            otherHalf?: RTCConnection\n        }\n        | undefined;\n\n    @action\n    attachExternalPeer(\n        attachEvent: InputRTCExternalPeerAttached,\n        otherHalf: RTCConnection | undefined\n    ) {\n        this.attachedConnection = {\n            externalConnection: attachEvent.externalConnection,\n            otherHalf\n        };\n    }\n\n    isOtherHalfOf(attachEvent: InputRTCExternalPeerAttached) {\n        if (!this.attachedConnection) return false;\n\n        const { externalConnection: ourExternalConnection } = this.attachedConnection;\n        const { externalConnection: theirExternalConnection } = attachEvent;\n\n        const ourExternalAddress = candidateToUrl(ourExternalConnection.selectedLocalCandidate);\n        const ourRemoteAddress = candidateToUrl(ourExternalConnection.selectedRemoteCandidate);\n\n        const theirExternalAddress = candidateToUrl(theirExternalConnection.selectedLocalCandidate);\n        const theirRemoteAddress = candidateToUrl(theirExternalConnection.selectedRemoteCandidate);\n\n        return ourExternalAddress === theirRemoteAddress &&\n            theirExternalAddress === ourRemoteAddress;\n    }\n\n    @action\n    connectOtherHalf(otherHalf: RTCConnection) {\n        this.attachedConnection!.otherHalf = otherHalf;\n    }\n\n    @computed\n    get remoteCandidate() {\n        if (!this.attachedConnection) return this.connectionEvent.selectedLocalCandidate;\n\n        const { externalConnection, otherHalf } = this.attachedConnection;\n\n        if (otherHalf) {\n            return otherHalf.connectionEvent.selectedRemoteCandidate;\n        } else {\n            return externalConnection.selectedRemoteCandidate;\n        }\n    }\n\n    @computed\n    get remoteURL() {\n        return candidateToUrl(this.remoteCandidate);\n    }\n\n    readonly streams = observable.array<RTCStream>([], { deep: false });\n\n    @action\n    addStream(stream: RTCStream) {\n        this.streams.push(stream);\n    }\n\n    @action\n    removeStream(stream: RTCStream) {\n        this.streams.remove(stream);\n    }\n\n    @observable\n    private closeData: InputRTCPeerDisconnected | undefined;\n\n    @action\n    markClosed(closeData: InputRTCPeerDisconnected) {\n        this.closeData = closeData;\n    }\n\n    get closeState() {\n        return this.closeData;\n    }\n\n}","/*\n * SPDX-FileCopyrightText: 2022 Tim Perry <tim@httptoolkit.com>\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { action, observable } from 'mobx';\n\nimport {\n    InputRTCDataChannelOpened,\n    InputRTCMessage,\n    InputRTCDataChannelClosed\n} from '../../types';\nimport { HTKEventBase } from '../events/event-base';\nimport { StreamMessage } from '../events/stream-message';\n\nimport { RTCConnection } from './rtc-connection';\n\nexport class RTCDataChannel extends HTKEventBase {\n\n    constructor(\n        private openEvent: InputRTCDataChannelOpened,\n        private connection: RTCConnection\n    ) {\n        super();\n    }\n\n    readonly id = this.sessionId + ':data:' + this.channelId;\n\n    isRTCDataChannel(): this is RTCDataChannel {\n        return true;\n    }\n\n    get rtcConnection() {\n        return this.connection;\n    }\n\n    get sessionId() {\n        return this.rtcConnection.id;\n    }\n\n    get channelId() {\n        return this.openEvent.channelId;\n    }\n\n    get label() {\n        return this.openEvent.channelLabel;\n    }\n\n    get protocol() {\n        return this.openEvent.channelProtocol;\n    }\n\n    @observable\n    readonly messages: Array<StreamMessage> = [];\n\n    @action\n    addMessage(message: InputRTCMessage) {\n        this.messages.push(new StreamMessage(message, this.messages.length));\n    }\n\n    @observable\n    private closeData: InputRTCDataChannelClosed | undefined;\n\n    @action\n    markClosed(closeData: InputRTCDataChannelClosed) {\n        this.closeData = closeData;\n    }\n\n    get closeState() {\n        return this.closeData;\n    }\n\n    cleanup() {\n        this.messages.forEach(msg => msg.cleanup());\n        this.messages.length = 0;\n    }\n\n    @observable\n    public pinned: boolean = false;\n\n}","/*\n * SPDX-FileCopyrightText: 2022 Tim Perry <tim@httptoolkit.com>\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport _ from 'lodash';\nimport { action, observable, computed } from 'mobx';\n\nimport {\n    InputRTCMediaTrackOpened,\n    InputRTCMediaStats,\n    InputRTCMediaTrackClosed\n} from '../../types';\nimport { HTKEventBase } from '../events/event-base';\n\nimport { RTCConnection } from './rtc-connection';\n\nexport interface RTCMediaStatEvent {\n    timestamp: number;\n\n    sentDelta: number;\n    receivedDelta: number;\n}\n\nexport class RTCMediaTrack extends HTKEventBase {\n\n    constructor(\n        private openEvent: InputRTCMediaTrackOpened,\n        private connection: RTCConnection\n    ) {\n        super();\n    }\n\n    readonly id = this.sessionId + ':media:' + this.mid;\n\n    isRTCMediaTrack(): this is RTCMediaTrack {\n        return true;\n    }\n\n    get rtcConnection() {\n        return this.connection;\n    }\n\n    get sessionId() {\n        return this.rtcConnection.id;\n    }\n\n    get mid() {\n        return this.openEvent.trackMid;\n    }\n\n    get direction() {\n        return this.openEvent.trackDirection;\n    }\n\n    get type() {\n        return this.openEvent.trackType;\n    }\n\n    @observable\n    readonly stats: Array<RTCMediaStatEvent> = [];\n\n    @action\n    addStats(event: InputRTCMediaStats) {\n        const previousEvent: RTCMediaStatEvent | undefined = this.stats[this.stats.length - 1];\n\n        if (previousEvent?.timestamp < event.eventTimestamp - 1500) { // If we've missed some events:\n            const skippedEventCount = Math.round((event.eventTimestamp - previousEvent.timestamp) / 1000) - 1;\n\n            if (skippedEventCount > 0) {\n                // No stats are sent when there's no traffic. If we now have traffic, we need to backfill\n                // skipped events with zeros to give us a complete timeline:\n                this.stats.push(\n                    ..._.range(previousEvent.timestamp + 1000, event.eventTimestamp - 500, 1000)\n                    .map(timestamp => ({ timestamp, sentDelta: 0, receivedDelta: 0 }))\n                );\n            }\n        }\n\n        this.stats.push({\n            timestamp: event.eventTimestamp,\n            sentDelta: event.totalBytesSent - this.totalBytesSent,\n            receivedDelta: event.totalBytesReceived - this.totalBytesReceived\n        });\n\n        this._totalBytesSent = event.totalBytesSent;\n        this._totalBytesReceived = event.totalBytesReceived;\n    }\n\n    @observable\n    private _totalBytesSent: number = 0;\n\n    get totalBytesSent() {\n        return this._totalBytesSent;\n    }\n\n    @observable\n    private _totalBytesReceived: number = 0;\n\n    get totalBytesReceived() {\n        return this._totalBytesReceived;\n    }\n\n    @observable\n    private closeData: InputRTCMediaTrackClosed | undefined;\n\n    @action\n    markClosed(closeData: InputRTCMediaTrackClosed) {\n        this.closeData = closeData;\n    }\n\n    get closeState() {\n        return this.closeData;\n    }\n\n    cleanup() {\n        this.stats.length = 0;\n    }\n\n    @observable\n    public pinned: boolean = false;\n\n}","import * as _ from 'lodash';\nimport {\n    observable,\n    action,\n    computed,\n} from 'mobx';\nimport { HarParseError } from 'har-validator';\n\nimport {\n    InputResponse,\n    InputTlsFailure,\n    InputTlsPassthrough,\n    InputInitiatedRequest,\n    InputCompletedRequest,\n    InputFailedRequest,\n    InputClientError,\n    CollectedEvent,\n    InputWebSocketMessage,\n    InputWebSocketClose,\n    InputRTCEvent,\n    InputRTCEventData,\n    InputRTCPeerConnected,\n    InputRTCDataChannelOpened,\n    InputRTCMessage,\n    InputRTCDataChannelClosed,\n    InputRTCPeerDisconnected,\n    InputRTCMediaTrackOpened,\n    InputRTCMediaStats,\n    InputRTCMediaTrackClosed,\n    InputRTCExternalPeerAttached,\n    TimingEvents\n} from '../../types';\n\nimport { lazyObservablePromise } from '../../util/observable';\nimport { logError } from '../../errors';\n\nimport { ProxyStore } from \"../proxy-store\";\nimport { ApiStore } from '../api/api-store';\nimport { RulesStore } from '../rules/rules-store';\nimport { findItem, isRuleGroup } from '../rules/rules-structure';\n\nimport { parseHar } from '../http/har';\n\nimport { FailedTlsConnection } from '../tls/failed-tls-connection';\nimport { TlsTunnel } from '../tls/tls-tunnel';\nimport { HttpExchange } from '../http/exchange';\nimport { WebSocketStream } from '../websockets/websocket-stream';\nimport { RTCConnection } from '../webrtc/rtc-connection';\nimport { RTCDataChannel } from '../webrtc/rtc-data-channel';\nimport { RTCMediaTrack } from '../webrtc/rtc-media-track';\n\n// Would be nice to magically infer this from the overloaded on() type, but sadly:\n// https://github.com/Microsoft/TypeScript/issues/24275#issuecomment-390701982\ntype EventTypesMap = {\n    // HTTP:\n    'request-initiated': InputInitiatedRequest\n    'request': InputCompletedRequest\n    'response': InputResponse\n    // WebSockets:\n    'websocket-request': InputCompletedRequest,\n    'websocket-accepted': InputResponse,\n    'websocket-message-received': InputWebSocketMessage,\n    'websocket-message-sent': InputWebSocketMessage,\n    'websocket-close': InputWebSocketClose,\n    // Mockttp misc:\n    'abort': InputInitiatedRequest,\n    'tls-client-error': InputTlsFailure,\n    'tls-passthrough-opened': InputTlsPassthrough,\n    'tls-passthrough-closed': InputTlsPassthrough,\n    'client-error': InputClientError,\n} & {\n    // MockRTC:\n    [K in InputRTCEvent]: InputRTCEventData[K];\n}\n\nconst mockttpEventTypes = [\n    'request-initiated',\n    'request',\n    'response',\n    'websocket-request',\n    'websocket-accepted',\n    'websocket-message-received',\n    'websocket-message-sent',\n    'websocket-close',\n    'abort',\n    'tls-client-error',\n    'tls-passthrough-opened',\n    'tls-passthrough-closed',\n    'client-error'\n] as const;\n\nconst mockRTCEventTypes = [\n    'peer-connected',\n    'peer-disconnected',\n    'external-peer-attached',\n    'data-channel-opened',\n    'data-channel-message-sent',\n    'data-channel-message-received',\n    'data-channel-closed',\n    'media-track-opened',\n    'media-track-stats',\n    'media-track-closed'\n] as const;\n\ntype MockttpEventType = typeof mockttpEventTypes[number];\ntype MockRTCEventType = typeof mockRTCEventTypes[number]\n\ntype EventType =\n    | MockttpEventType\n    | MockRTCEventType;\n\nexport type QueuedEvent = ({\n    [T in EventType]: { type: T, event: EventTypesMap[T] }\n}[EventType]);\n\ntype OrphanableQueuedEvent<T extends\n    | 'response'\n    | 'abort'\n    | 'websocket-accepted'\n    | 'websocket-message-received'\n    | 'websocket-message-sent'\n    | 'websocket-close'\n    | 'peer-disconnected'\n    | 'external-peer-attached'\n    | 'data-channel-opened'\n    | 'data-channel-message-sent'\n    | 'data-channel-message-received'\n    | 'data-channel-closed'\n    | 'media-track-opened'\n    | 'media-track-stats'\n    | 'media-track-closed'\n    | 'tls-passthrough-closed'\n> = { type: T, event: EventTypesMap[T] };\n\nexport class EventsStore {\n\n    constructor(\n        private proxyStore: ProxyStore,\n        private apiStore: ApiStore,\n        private rulesStore: RulesStore\n    ) { }\n\n    readonly initialized = lazyObservablePromise(async () => {\n        await Promise.all([\n            this.proxyStore.initialized,\n            this.apiStore.initialized,\n            this.rulesStore.initialized\n        ]);\n\n        mockttpEventTypes.forEach(<T extends MockttpEventType>(eventName: T) => {\n            this.proxyStore.onMockttpEvent(eventName, ((eventData: EventTypesMap[T]) => {\n                if (this.isPaused) return;\n                this.eventQueue.push({ type: eventName, event: eventData } as any);\n                this.queueEventFlush();\n            }));\n        });\n\n        mockRTCEventTypes.forEach(<T extends MockRTCEventType>(eventName: T) => {\n            this.proxyStore.onMockRTCEvent(eventName, ((eventData: EventTypesMap[T]) => {\n                if (this.isPaused) return;\n                this.eventQueue.push({ type: eventName, event: eventData } as any);\n                this.queueEventFlush();\n            }));\n        });\n\n        console.log('Events store initialized');\n    });\n\n    @observable\n    isPaused = false;\n\n    private eventQueue: Array<QueuedEvent> = [];\n    private orphanedEvents: { [id: string]: OrphanableQueuedEvent<any> } = {};\n\n    private isFlushQueued = false;\n    private queueEventFlush() {\n        if (!this.isFlushQueued) {\n            this.isFlushQueued = true;\n            requestAnimationFrame(this.flushQueuedUpdates);\n        }\n    }\n\n    readonly events = observable.array<CollectedEvent>([], { deep: false });\n\n    @computed.struct\n    get exchanges(): Array<HttpExchange> {\n        return this.events.filter((e): e is HttpExchange => e.isHttp());\n    }\n\n    @computed.struct\n    get websockets(): Array<WebSocketStream> {\n        return this.exchanges.filter((e): e is WebSocketStream => e.isWebSocket());\n    }\n\n    @computed.struct\n    get rtcConnections(): Array<RTCConnection> {\n        return this.events.filter((e): e is RTCConnection => e.isRTCConnection());\n    }\n\n    @computed.struct\n    get rtcDataChannels(): Array<RTCDataChannel> {\n        return this.events.filter((e): e is RTCDataChannel => e.isRTCDataChannel());\n    }\n\n    @computed.struct\n    get rtcMediaTracks(): Array<RTCMediaTrack> {\n        return this.events.filter((e): e is RTCMediaTrack => e.isRTCMediaTrack());\n    }\n\n    @computed.struct\n    get activeSources() {\n        return _(this.exchanges)\n            .map(e => e.request.source)\n            .uniqBy(s => s.summary)\n            .value();\n    }\n\n    @action.bound\n    private flushQueuedUpdates() {\n        this.isFlushQueued = false;\n\n        // We batch request updates until here. This runs in a mobx transaction and\n        // on request animation frame, so batches get larger and cheaper if\n        // the frame rate starts to drop.\n\n        this.eventQueue.forEach(this.updateFromQueuedEvent);\n        this.eventQueue = [];\n    }\n\n    private updateFromQueuedEvent = (queuedEvent: QueuedEvent) => {\n        try {\n            switch (queuedEvent.type) {\n                case 'request-initiated':\n                    this.addInitiatedRequest(queuedEvent.event);\n                    return this.checkForOrphan(queuedEvent.event.id);\n                case 'request':\n                    this.addCompletedRequest(queuedEvent.event);\n                    return this.checkForOrphan(queuedEvent.event.id);\n                case 'response':\n                    return this.setResponse(queuedEvent.event);\n                case 'websocket-request':\n                    this.addWebSocketRequest(queuedEvent.event);\n                    return this.checkForOrphan(queuedEvent.event.id);\n                case 'websocket-accepted':\n                    return this.addAcceptedWebSocketResponse(queuedEvent.event);\n                case 'websocket-message-received':\n                case 'websocket-message-sent':\n                    return this.addWebSocketMessage(queuedEvent.event);\n                case 'websocket-close':\n                    return this.markWebSocketClosed(queuedEvent.event);\n                case 'abort':\n                    return this.markRequestAborted(queuedEvent.event);\n                case 'tls-passthrough-opened':\n                    this.addTlsTunnel(queuedEvent.event);\n                    return this.checkForOrphan(queuedEvent.event.id);\n                case 'tls-passthrough-closed':\n                    return this.markTlsTunnelClosed(queuedEvent.event);\n                case 'tls-client-error':\n                    return this.addFailedTlsRequest(queuedEvent.event);\n                case 'client-error':\n                    return this.addClientError(queuedEvent.event);\n\n                case 'peer-connected':\n                    return this.addRTCPeerConnection(queuedEvent.event);\n                case 'external-peer-attached':\n                    return this.attachExternalRTCPeer(queuedEvent.event);\n                case 'peer-disconnected':\n                    return this.markRTCPeerDisconnected(queuedEvent.event);\n                case 'data-channel-opened':\n                    return this.addRTCDataChannel(queuedEvent.event);\n                case 'data-channel-message-sent':\n                case 'data-channel-message-received':\n                    return this.addRTCDataChannelMessage(queuedEvent.event);\n                case 'data-channel-closed':\n                    return this.markRTCDataChannelClosed(queuedEvent.event);\n                case 'media-track-opened':\n                    return this.addRTCMediaTrack(queuedEvent.event);\n                case 'media-track-stats':\n                    return this.addRTCMediaTrackStats(queuedEvent.event);\n                case 'media-track-closed':\n                    return this.markRTCMediaTrackClosed(queuedEvent.event);\n            }\n        } catch (e) {\n            // It's possible we might fail to parse an input event. This shouldn't happen, but if it\n            // does it's better to drop that one event and continue instead of breaking completely.\n            logError(e);\n        }\n    }\n\n    private checkForOrphan(id: string) {\n        // Sometimes we receive events out of order (response/abort before request).\n        // They could be later in the same batch, or in a previous batch. If that happens,\n        // we store them separately, and we check later whether they're valid when subsequent\n        // completed/initiated request events come in. If so, we re-queue them.\n\n        const orphanEvent = this.orphanedEvents[id];\n\n        if (orphanEvent) {\n            delete this.orphanedEvents[id];\n            this.updateFromQueuedEvent(orphanEvent);\n        }\n    }\n\n    @action.bound\n    togglePause() {\n        this.isPaused = !this.isPaused;\n    }\n\n    @action\n    private addInitiatedRequest(request: InputInitiatedRequest) {\n        // Due to race conditions, it's possible this request already exists. If so,\n        // we just skip this - the existing data will be more up to date.\n        const existingEventIndex = _.findIndex(this.events, { id: request.id });\n        if (existingEventIndex === -1) {\n            const exchange = new HttpExchange(this.apiStore, request);\n            this.events.push(exchange);\n        }\n    }\n\n    private getMatchedRule(request: InputCompletedRequest) {\n        if (!request.matchedRuleId) return false;\n\n        const matchedItem = findItem(this.rulesStore.rules, { id: request.matchedRuleId });\n\n        // This shouldn't really happen, but could in race conditions with rule editing:\n        if (!matchedItem) return false;\n\n        // This should never happen, but it's good to check:\n        if (isRuleGroup(matchedItem)) throw new Error('Request event unexpectedly matched rule group');\n\n        return matchedItem;\n    }\n\n    @action\n    private addCompletedRequest(request: InputCompletedRequest) {\n        // The request should already exist: we get an event when the initial path & headers\n        // are received, and this one later when the full body is received.\n        // We add the request from scratch if it's somehow missing, which can happen given\n        // races or if the server doesn't support request-initiated events.\n        const existingEventIndex = _.findIndex(this.events, { id: request.id });\n\n        let event: HttpExchange;\n        if (existingEventIndex >= 0) {\n            event = this.events[existingEventIndex] as HttpExchange;\n        } else {\n            event = new HttpExchange(this.apiStore, { ...request });\n            // ^ This mutates request to use it, so we have to shallow-clone to use it below too:\n            this.events.push(event);\n        }\n\n        event.updateFromCompletedRequest(request, this.getMatchedRule(request));\n    }\n\n    @action\n    private markRequestAborted(request: InputFailedRequest) {\n        const exchange = _.find(this.exchanges, { id: request.id });\n\n        if (!exchange) {\n            // Handle this later, once the request has arrived\n            this.orphanedEvents[request.id] = { type: 'abort', event: request };\n            return;\n        };\n\n        exchange.markAborted(request);\n    }\n\n    @action\n    private setResponse(response: InputResponse) {\n        const exchange = _.find(this.exchanges, { id: response.id });\n\n        if (!exchange) {\n            // Handle this later, once the request has arrived\n            this.orphanedEvents[response.id] = { type: 'response', event: response };\n            return;\n        }\n\n        exchange.setResponse(response);\n    }\n\n    @action\n    private addWebSocketRequest(request: InputCompletedRequest) {\n        const stream = new WebSocketStream(this.apiStore, { ...request });\n        // ^ This mutates request to use it, so we have to shallow-clone to use it below too\n\n        stream.updateFromCompletedRequest(request, this.getMatchedRule(request));\n        this.events.push(stream);\n    }\n\n    @action\n    private addAcceptedWebSocketResponse(response: InputResponse) {\n        const stream = _.find(this.websockets, { id: response.id });\n\n        if (!stream) {\n            // Handle this later, once the request has arrived\n            this.orphanedEvents[response.id] = { type: 'websocket-accepted', event: response };\n            return;\n        }\n\n        stream.setResponse(response);\n        stream.setAccepted(response);\n    }\n\n    @action\n    private addWebSocketMessage(message: InputWebSocketMessage) {\n        const stream = _.find(this.websockets, { id: message.streamId });\n\n        if (!stream) {\n            // Handle this later, once the request has arrived\n            this.orphanedEvents[message.streamId] = {\n                type: `websocket-message-${message.direction}`,\n                event: message\n            };\n            return;\n        }\n\n        stream.addMessage(message);\n    }\n\n    @action\n    private markWebSocketClosed(close: InputWebSocketClose) {\n        const stream = _.find(this.websockets, { id: close.streamId });\n\n        if (!stream) {\n            // Handle this later, once the request has arrived\n            this.orphanedEvents[close.streamId] = {\n                type: 'websocket-close', event: close\n            };\n            return;\n        }\n\n        stream.markClosed(close);\n    }\n\n    @action\n    private addTlsTunnel(openEvent: InputTlsPassthrough) {\n        this.events.push(new TlsTunnel(openEvent));\n    }\n\n    @action\n    private markTlsTunnelClosed(closeEvent: InputTlsPassthrough) {\n        const tunnel = _.find(this.events, { id: closeEvent.id }) as TlsTunnel | undefined;\n\n        if (!tunnel) {\n            // Handle this later, once the tunnel open event has arrived\n            this.orphanedEvents[closeEvent.id] = {\n                type: 'tls-passthrough-closed', event: close\n            };\n            return;\n        }\n\n        tunnel.markClosed(closeEvent);\n    }\n\n    @action\n    private addFailedTlsRequest(request: InputTlsFailure) {\n        if (_.some(this.events, (event) =>\n            event.isTlsFailure() &&\n            event.upstreamHostname === request.hostname &&\n            event.remoteIpAddress === request.remoteIpAddress\n        )) return; // Drop duplicate TLS failures\n\n        this.events.push(new FailedTlsConnection(request));\n    }\n\n    @action\n    private addClientError(error: InputClientError) {\n        if (error.errorCode === 'ECONNRESET' && !error.request.method && !error.request.url) {\n            // We don't bother showing client resets before any data was sent at all.\n            // Not interesting, nothing to show, and generally all a bit noisey.\n            return;\n        }\n\n        if (error.errorCode === 'ERR_SSL_DECRYPTION_FAILED_OR_BAD_RECORD_MAC') {\n            // The TLS connection was interrupted by a bad packet. Generally paired with\n            // an abort event for ongoing requests, so no need for a separate error.\n            return;\n        }\n\n        const exchange = new HttpExchange(this.apiStore, {\n            ...error.request,\n            protocol: error.request.protocol || '',\n            method: error.request.method || '',\n            url: error.request.url || `${error.request.protocol || 'http'}://`,\n            path: error.request.path || '/',\n            headers: error.request.headers\n        });\n\n        if (error.response === 'aborted') {\n            exchange.markAborted(error.request);\n        } else {\n            exchange.setResponse(error.response);\n        }\n\n        this.events.push(exchange);\n    }\n\n    @action\n    private addRTCPeerConnection(event: InputRTCPeerConnected) {\n        this.events.push(new RTCConnection(event));\n    }\n\n    @action\n    private attachExternalRTCPeer(event: InputRTCExternalPeerAttached) {\n        const conn = this.rtcConnections.find(c => c.id === event.sessionId);\n        const otherHalf = this.rtcConnections.find(c => c.isOtherHalfOf(event));\n\n        if (conn) {\n            conn.attachExternalPeer(event, otherHalf);\n            if (otherHalf) otherHalf.connectOtherHalf(conn);\n        } else {\n            this.orphanedEvents[event.sessionId] = { type: 'external-peer-attached', event };\n        }\n    }\n\n    @action\n    private markRTCPeerDisconnected(event: InputRTCPeerDisconnected) {\n        const conn = this.rtcConnections.find(c => c.id === event.sessionId);\n        if (conn) {\n            conn.markClosed(event);\n        } else {\n            this.orphanedEvents[event.sessionId] = { type: 'peer-disconnected', event };\n        }\n    }\n\n    @action\n    private addRTCDataChannel(event: InputRTCDataChannelOpened) {\n        const conn = this.rtcConnections.find(c => c.id === event.sessionId);\n        if (conn) {\n            const dc = new RTCDataChannel(event, conn);\n            this.events.push(dc);\n            conn.addStream(dc);\n        } else {\n            this.orphanedEvents[event.sessionId] = { type: 'data-channel-opened', event };\n        }\n    }\n\n    @action\n    private addRTCDataChannelMessage(event: InputRTCMessage) {\n        const channel = this.rtcDataChannels.find(c => c.sessionId === event.sessionId && c.channelId === event.channelId);\n        if (channel) {\n            channel.addMessage(event);\n        } else {\n            this.orphanedEvents[event.sessionId] = { type: `data-channel-message-${event.direction}`, event };\n        }\n    }\n\n    @action\n    private markRTCDataChannelClosed(event: InputRTCDataChannelClosed) {\n        const channel = this.rtcDataChannels.find(c => c.sessionId === event.sessionId && c.channelId === event.channelId);\n        if (channel) {\n            channel.markClosed(event);\n        } else {\n            this.orphanedEvents[event.sessionId] = { type: 'data-channel-closed', event };\n        }\n    }\n\n    @action\n    private addRTCMediaTrack(event: InputRTCMediaTrackOpened) {\n        const conn = this.rtcConnections.find(c => c.id === event.sessionId);\n        if (conn) {\n            const track = new RTCMediaTrack(event, conn);\n            this.events.push(track);\n            conn.addStream(track);\n        } else {\n            this.orphanedEvents[event.sessionId] = { type: 'media-track-opened', event };\n        }\n    }\n\n    @action\n    private addRTCMediaTrackStats(event: InputRTCMediaStats) {\n        const track = this.rtcMediaTracks.find(t => t.sessionId === event.sessionId && t.mid === event.trackMid);\n        if (track) {\n            track.addStats(event);\n        } else {\n            this.orphanedEvents[event.sessionId] = { type: 'media-track-stats', event };\n        }\n    }\n\n    @action\n    private markRTCMediaTrackClosed(event: InputRTCMediaTrackClosed) {\n        const track = this.rtcMediaTracks.find(t => t.sessionId === event.sessionId && t.mid === event.trackMid);\n        if (track) {\n            track.markClosed(event);\n        } else {\n            this.orphanedEvents[event.sessionId] = { type: 'media-track-closed', event };\n        }\n    }\n\n    @action.bound\n    deleteEvent(event: CollectedEvent) {\n        this.events.remove(event);\n\n        if (event.isRTCDataChannel() || event.isRTCMediaTrack()) {\n            event.rtcConnection.removeStream(event);\n        } else if (event.isRTCConnection()) {\n            const streams = [...event.streams];\n            streams.forEach((stream) => this.deleteEvent(stream));\n        }\n\n        if ('cleanup' in event) event.cleanup();\n    }\n\n    @action.bound\n    clearInterceptedData(clearPinned: boolean) {\n        const [pinnedEvents, unpinnedEvents] = _.partition(\n            this.events,\n            clearPinned ? () => false : (ex) => ex.pinned\n        );\n\n        this.events.clear();\n        unpinnedEvents.forEach((event) => { if ('cleanup' in event) event.cleanup() });\n\n        this.events.push(...pinnedEvents);\n        this.orphanedEvents = {};\n\n        // If GC is exposed (desktop 0.1.22+), trigger it when data is cleared,\n        // as this is the perfect point to pack everything down.\n        if ('gc' in window) (window as any).gc();\n    }\n\n    async loadFromHar(harContents: {}) {\n        const { events, pinnedIds } = await parseHar(harContents).catch((harParseError: HarParseError) => {\n            // Log all suberrors, for easier reporting & debugging.\n            // This does not include HAR data - only schema errors like\n            // 'bodySize is missing' at 'entries[1].request'\n            harParseError.errors.forEach((error) => {\n                console.log(error);\n            });\n            throw harParseError;\n        });\n\n        // We now take each of these input items, and put them on the queue to be added\n        // to the UI like any other seen request data. Arguably we could call addRequest &\n        // setResponse etc directly, but this is nicer if the UI thread is already under strain.\n\n        // First, we run through the request & TLS error events together, in order, since these\n        // define the initial event ordering\n        const [initialEvents, updateEvents] = _.partition(events, ({ type }) =>\n            type === 'request' ||\n            type === 'websocket-request' ||\n            type === 'tls-client-error'\n        );\n        this.eventQueue.push(..._.sortBy(initialEvents, (e) =>\n            (e.event as { timingEvents: TimingEvents }).timingEvents.startTime\n        ));\n\n        // Then we add everything else (responses & aborts). They just update, so order doesn't matter:\n        this.eventQueue.push(...updateEvents);\n\n        this.queueEventFlush();\n\n        if (pinnedIds.length) {\n            // This rAF will be scheduled after the queued flush, so the event should\n            // always be fully imported by this stage:\n            requestAnimationFrame(action(() => pinnedIds.forEach((id) => {\n                this.events.find(e => e.id === id)!.pinned = true;\n            })));\n        }\n    }\n\n    @action\n    recordSentRequest(request: InputCompletedRequest): HttpExchange {\n        const exchange = new HttpExchange(this.apiStore, { ...request });\n        // ^ This mutates request to use it, so we have to shallow-clone to use it below too:\n        exchange.updateFromCompletedRequest(request, false);\n\n        this.events.push(exchange);\n        return exchange;\n    }\n\n}","import * as _ from 'lodash';\nimport * as React from 'react';\n\nexport function filterProps<C extends React.ComponentType<any>>(\n    Component: C,\n    ...keys: string[]\n): C {\n    return ((props: any) => <Component {..._.omit(props, keys) as any} />) as C;\n}\n\n// Trigger the click handler when Enter is pressed on this element\nexport function clickOnEnter<T extends Element>(e: React.KeyboardEvent<T>) {\n    if (e.target === e.currentTarget && e.key === 'Enter') {\n        // Can't use .click(), as sometimes our target is an SVGElement, and they don't have it\n        e.currentTarget.dispatchEvent(new MouseEvent('click', { bubbles: true }));\n    }\n}\n\nexport const noPropagation = <E extends React.BaseSyntheticEvent>(\n    callback: (event: E) => void\n) => (event: E) => {\n    event.stopPropagation();\n    callback(event);\n}\n\nexport const inputValidation = (\n    checkFn: (input: string) => boolean,\n    errorMessage: string\n) => (input: HTMLInputElement) => {\n    const inputValue = input.value;\n    if (!inputValue || checkFn(inputValue)) {\n        input.setCustomValidity('');\n    } else {\n        input.setCustomValidity(errorMessage);\n    }\n    input.reportValidity();\n    return input.validity.valid;\n}","import { styled, Theme } from \"../../styles\";\nimport { Icon } from \"../../icons\";\nimport { filterProps, clickOnEnter } from '../component-utils';\n\ninterface CloseButtonProps {\n    onClose: () => void;\n    inverted?: boolean;\n    top?: string;\n    right?: string;\n\n    theme?: Theme;\n}\n\nexport const CloseButton = styled(\n    filterProps(Icon, 'inverted')\n).attrs((props: CloseButtonProps) => ({\n    icon: ['fas', 'times'],\n    size: '2x',\n\n    tabIndex: 0,\n    onClick: props.onClose,\n    onKeyPress: clickOnEnter\n}))`\n    position: absolute;\n    z-index: 1;\n    cursor: pointer;\n\n    color: ${(p: CloseButtonProps) => p.inverted ?\n        p.theme!.mainBackground : p.theme!.mainColor\n    };\n\n    top: ${p => p.top || '10px'};\n    right: ${p => p.right || '15px'};\n\n    &:hover {\n        opacity: 0.6;\n    }\n`;","import * as React from 'react';\n\nimport { styled } from \"../../styles\";\nimport { Icon } from \"../../icons\";\n\nconst ExternalLinkIcon = styled(Icon).attrs(() => ({\n    icon: ['fas', 'external-link-alt']\n}))`\n    opacity: 0.5;\n    margin-left: 5px;\n\n    &:focus {\n        outline: none;\n        color: ${p => p.theme.popColor};\n    }\n`;\n\nconst DocsA = styled.a`\n    &[href] {\n        color: ${p => p.theme.linkColor};\n\n        &:visited {\n            color: ${p => p.theme.visitedLinkColor};\n        }\n    }\n`;\n\nexport const DocsLink = (p: {\n    href?: string,\n    children?: React.ReactNode\n}) => p.href ?\n    <DocsA {...p} target='_blank' rel='noreferrer noopener'>\n        { /* Whitespace after children, iff we have children */ }\n        { p.children ? <>{ p.children } </> : null }\n        <ExternalLinkIcon />\n    </DocsA>\n: null;","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { action, observable } from 'mobx';\nimport { observer, inject } from 'mobx-react';\n\nimport { NARROW_LAYOUT_BREAKPOINT, styled, popColor } from '../../styles';\nimport { Icon } from '../../icons';\nimport { trackEvent } from '../../metrics';\nimport { logError } from '../../errors';\nimport { windowSize } from '../../util/ui';\n\nimport { Interceptor } from '../../model/interception/interceptors';\nimport { InterceptorStore } from '../../model/interception/interceptor-store';\n\nimport { clickOnEnter } from '../component-utils';\nimport { LittleCard } from '../common/card';\nimport { Pill } from '../common/pill';\nimport { CloseButton } from '../common/close-button';\nimport { DocsLink } from '../common/docs-link';\n\ninterface InterceptOptionProps {\n    className?: string;\n    interceptorStore?: InterceptorStore;\n    index: number;\n    interceptor: Interceptor;\n    showRequests: () => void;\n}\n\ntype InterceptorConfigComponent = React.ComponentType<{\n    interceptor: Interceptor,\n    // Custom config UIs should call this to activate the interceptor. This just sends the request,\n    // with no side effects except check for updated interceptor state afterwards.\n    activateInterceptor: (activationOptions?: any) => Promise<any>,\n    // This should be called when each activation is considered started (i.e. after any required\n    // user input or confirmation).\n    reportStarted: () => void,\n    // This should be called when each activation is considered successfully completed. If\n    // showRequests is not explicitly set to false, it will jump to the View page.\n    reportSuccess: (options?: { showRequests?: boolean }) => void,\n    // This should be called to hide the custom UI again. Mainly useful if interception is cancelled,\n    // or the UI deems itself unnecessary. The UI is never closed automatically, but reportSuccess\n    // without showRequests false will jump to the View page, giving similar results.\n    closeSelf: () => void\n}>\n\nexport interface InterceptorCustomUiConfig {\n    columnWidth: number;\n    rowHeight: number;\n\n    configComponent: InterceptorConfigComponent;\n    customPill?: React.ComponentType<{}>;\n}\n\nconst BackgroundIcons = styled.div`\n    z-index: 0;\n\n    position: absolute;\n    bottom: -10px;\n    right: -10px;\n    z-index: 0;\n    opacity: 0.2;\n\n    > svg {\n        &:not(:first-child) {\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n        }\n    }\n`;\n\nconst InterceptOptionCard = styled(LittleCard)<{\n    gridWidth: number,\n    disabled: boolean,\n    expanded: boolean,\n    index: number,\n    uiConfig?: InterceptorCustomUiConfig\n}>`\n    height: 100%;\n    width: 100%;\n    overflow: hidden;\n\n    ${p => {\n        if (!p.expanded || !p.uiConfig) {\n            return `order: ${p.index};`;\n        }\n\n        const width = Math.min(\n            p.uiConfig.columnWidth,\n            p.gridWidth\n        );\n        const height = p.uiConfig.rowHeight;\n\n        // Tweak the order to try and keep cards in the same place as\n        // they expand, pushing other cards down rather than moving\n        // down in the grid themselves.\n        const fixedOrder = Math.max(-1, p.index - width);\n\n        return `\n            order: ${fixedOrder};\n            grid-row: span ${height};\n            grid-column: span ${width};\n        `\n    }}\n\n    user-select: none;\n\n    > :not(${BackgroundIcons}) {\n        z-index: 1;\n    }\n\n    > h1:not(:last-child) {\n        margin-bottom: 10px;\n    }\n\n    > p {\n        color: ${p => p.theme.mainColor};\n        line-height: 1.2;\n\n        &:not(:first-of-type) {\n            margin-top: 10px;\n        }\n    }\n\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n`;\n\nconst LoadingOverlay = styled.div`\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n\n    background-color: rgba(0,0,0,0.2);\n    box-shadow: inset 0 2px 10px 0 rgba(0,0,0,${p => p.theme.boxShadowAlpha});\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport const StatusPill = styled(Pill)`\n    white-space: normal; /* Useful for layout in tiny screens, e.g. the 'proxy port' badge */\n\n    margin-top: auto;\n`;\n\nfunction getStatusPill(interceptor: Interceptor) {\n    if (interceptor.uiConfig?.customPill) {\n        const CustomPill = interceptor.uiConfig?.customPill;\n        return <CustomPill />;\n    } else if (interceptor.isActive) {\n        return <StatusPill color='#4caf7d'>\n            Activated\n        </StatusPill>;\n    } else if (!interceptor.isActivable) {\n        if (interceptor.isSupported) {\n            return <StatusPill>\n                Not available{\n                    interceptor.notAvailableHelpUrl\n                    ? <DocsLink href={interceptor.notAvailableHelpUrl} />\n                    : null\n                }\n            </StatusPill>;\n        } else {\n            return <StatusPill color={popColor}>\n                Coming soon\n            </StatusPill>;\n        }\n    } else {\n        return null;\n    }\n}\n\n@inject('interceptorStore')\n@observer\nexport class InterceptOption extends React.Component<InterceptOptionProps> {\n\n    @observable expanded = false;\n\n    private cardRef = React.createRef<HTMLDivElement>();\n\n    constructor(props: InterceptOptionProps) {\n        super(props);\n    }\n\n    render() {\n        const {\n            expanded,\n            onActivationStarted,\n            activateInterceptor,\n            onActivationSuccessful\n        } = this;\n        const { interceptor, index } = this.props;\n\n        const isDisabled = !interceptor.isActivable;\n        const { uiConfig } = interceptor;\n        const ConfigComponent = uiConfig?.configComponent;\n\n        const icons = _.isArray(interceptor.iconProps)\n            ? interceptor.iconProps\n            : [interceptor.iconProps];\n\n        const gridWidth = windowSize.width >= NARROW_LAYOUT_BREAKPOINT\n            ? 4\n            : 3;\n\n        return <InterceptOptionCard\n            ref={this.cardRef}\n\n            index={index}\n            expanded={expanded}\n            uiConfig={uiConfig}\n            gridWidth={gridWidth}\n\n            disabled={isDisabled}\n            onKeyDown={clickOnEnter}\n            onClick={this.expanded ? undefined : this.onClick}\n            tabIndex={!isDisabled && !this.expanded ? 0 : undefined}\n        >\n            <BackgroundIcons>\n                { icons.map((iconProps, i) =>\n                    <Icon\n                        key={i}\n                        size='8x'\n                        {...iconProps}\n                    />)\n                }\n            </BackgroundIcons>\n\n            <h1>{ interceptor.name }</h1>\n\n            { ConfigComponent && expanded\n                ? <>\n                    <CloseButton onClose={this.onClose} />\n                    <ConfigComponent\n                        interceptor={interceptor}\n                        activateInterceptor={activateInterceptor}\n                        reportStarted={onActivationStarted}\n                        reportSuccess={onActivationSuccessful}\n                        closeSelf={this.onClose}\n                    />\n                </>\n                : <>\n                    { interceptor.description.map((descParagraph, i) =>\n                        <p key={i}>{ descParagraph }</p>\n                    ) }\n\n                    { getStatusPill(interceptor) }\n\n                    { interceptor.inProgress &&\n                        <LoadingOverlay>\n                            <Icon\n                                icon={['fac', 'spinner-arc']}\n                                size='4x'\n                                spin={true}\n                            />\n                        </LoadingOverlay>\n                    }\n                </>\n            }\n        </InterceptOptionCard>;\n    }\n\n    onActivationStarted = () => {\n        trackEvent({\n            category: 'Interceptors',\n            action: 'Activated',\n            value: this.props.interceptor.id\n        });\n    };\n\n    activateInterceptor = (activationOptions: unknown = {}) => {\n        const { interceptor, interceptorStore } = this.props;\n        return interceptorStore!.activateInterceptor(interceptor.id, activationOptions);\n    };\n\n    onActivationSuccessful = (options: {\n        showRequests?: boolean\n    } = {}) => {\n        trackEvent({\n            category: 'Interceptors',\n            action: 'Successfully Activated',\n            value: this.props.interceptor.id\n        });\n\n        // Some interceptors don't switch to show the requests, e.g. if the UI shows a list\n        // of options to intercept, in case the user wants to select multiple options.\n        if (options.showRequests !== false) {\n            this.props.showRequests();\n        }\n    };\n\n    @action.bound\n    onClick() {\n        const {\n            onActivationStarted,\n            activateInterceptor,\n            onActivationSuccessful\n        } = this;\n        const { interceptor } = this.props;\n\n        if (interceptor.inProgress) return;\n\n        if (!interceptor.isActivable) {\n            // Track that somebody *tried* to activate it\n            onActivationStarted();\n            return;\n        }\n\n        if (interceptor.uiConfig) {\n            this.expanded = true;\n            requestAnimationFrame(() => {\n                this.cardRef.current?.scrollIntoView({\n                    block: 'nearest',\n                    behavior: 'smooth'\n                });\n            });\n        } else {\n            onActivationStarted();\n            activateInterceptor(interceptor.activationOptions)\n            .then(() => onActivationSuccessful())\n            .catch((e) => logError(e));\n        }\n    }\n\n    @action.bound\n    onClose() {\n        this.expanded = false;\n    }\n\n}","import * as React from 'react';\nimport { observer, inject, Observer } from 'mobx-react';\n\nimport { styled } from '../../../styles';\nimport { Icon } from '../../../icons';\n\nimport { ProxyStore } from '../../../model/proxy-store';\nimport { saveFile } from '../../../util/ui';\n\nimport { StatusPill } from '../intercept-option';\nimport { PillButton } from '../../common/pill';\nimport { CopyableMonoValue } from '../../common/text-content';\n\nconst InstructionsContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    user-select: text;\n    margin-top: 5px;\n`;\n\nconst InstructionsStep = styled.div`\n    flex: 1 1 0;\n\n    &:not(:last-child) {\n        margin-right: 40px;\n    }\n\n    > h2 {\n        font-size: ${p => p.theme.headingSize};\n        margin-bottom: 10px;\n    }\n\n    > ol {\n        list-style: decimal;\n\n        > li {\n            margin-left: 20px;\n            margin-bottom: 10px;\n        }\n    }\n\n    > p {\n        line-height: 1.3;\n\n        &:not(:last-child) {\n            margin-bottom: 10px;\n        }\n    }\n\n    strong {\n        font-weight: bold;\n    }\n\n    a[href] {\n        color: ${p => p.theme.linkColor};\n\n        &:visited {\n            color: ${p => p.theme.visitedLinkColor};\n        }\n    }\n`;\n\nconst Nowrap = styled.span`\n    white-space: nowrap;\n`;\n\nconst ManualInterceptPill = inject('proxyStore')(observer(\n    (p: {\n        proxyStore?: ProxyStore,\n        children?: React.ReactNode\n    }) =>\n        <StatusPill color='#4caf7d'>\n            Proxy port: { p.proxyStore!.httpProxyPort }\n        </StatusPill>\n));\n\nconst ExportCertificateButton = styled((p: { certContent: string, className?: string }) =>\n    <PillButton\n        className={p.className}\n        onClick={() => saveFile(\n            'http-toolkit-ca-certificate.crt',\n            'application/x-x509-ca-cert',\n            p.certContent\n        )}\n    >\n        <Icon icon={['fas', 'download']} /> Export CA certificate\n    </PillButton>\n)`\n    margin: 0 0 10px 0;\n`;\n\nconst ManualInterceptConfig = inject('proxyStore')(\n    (p: {\n        proxyStore?: ProxyStore,\n        children?: React.ReactNode,\n        reportStarted: () => void\n    }) => {\n        // Report activation when first opened\n        React.useEffect(() => p.reportStarted(), []);\n\n        const { httpProxyPort, certPath, certContent } = p.proxyStore!;\n\n        return <Observer>{() =>\n            <InstructionsContainer>\n                <InstructionsStep>\n                    <p>To intercept traffic you need to:</p>\n                    <ol>\n                        <li><strong>send your traffic via the HTTP Toolkit proxy</strong></li>\n                        <li><strong>trust the certificate authority</strong> (if using HTTPS) </li>\n                    </ol>\n                    <p>\n                        The steps to do this manually depend\n                        on the client, but all the details\n                        you'll need are shown here.\n                    </p>\n                    <p>\n                        Want your client to be supported automatically? <Nowrap>\n                            <a href='https://github.com/httptoolkit/httptoolkit/issues/new'>\n                                Send some feedback\n                            </a>\n                        </Nowrap>.\n                    </p>\n                </InstructionsStep>\n\n                <InstructionsStep>\n                    <h2>1. Send traffic via HTTP Toolkit</h2>\n                    <p>\n                        To intercept an HTTP client on this machine, configure it to send traffic via{' '}\n                        <CopyableMonoValue>http://localhost:{httpProxyPort}</CopyableMonoValue>.\n                    </p>\n                    <p>\n                        Most tools can be configured to do so by using the above address as an HTTP or\n                        HTTPS proxy.\n                    </p>\n                    <p>\n                        In other cases, it's also possible to forcibly reroute traffic\n                        using networking tools like iptables.\n                    </p>\n                    <p>\n                        Remote clients (e.g. phones) will need to use the IP address of this machine, not\n                        localhost.\n                    </p>\n                </InstructionsStep>\n\n                <InstructionsStep>\n                    <h2>2. Trust the certificate authority</h2>\n                    <p><em>Only required to intercept traffic that uses HTTPS</em></p>\n                    <p>\n                        HTTP Toolkit has generated a certificate authority (CA) on your machine. All\n                        intercepted HTTPS uses certificates from this CA.\n                    </p>\n                    { certContent // Not defined in some older server versions\n                        ? <ExportCertificateButton certContent={certContent} />\n                        : <p>\n                            The certificate is stored on your machine at <CopyableMonoValue>{\n                                certPath\n                            }</CopyableMonoValue>.\n                        </p>\n                    }\n                    <p>\n                        To intercept HTTPS traffic you need to configure your HTTP client to\n                        trust this certificate as a certificate authority, or to temporarily\n                        disable certificate checks entirely.\n                    </p>\n                </InstructionsStep>\n            </InstructionsContainer>\n        }</Observer>;\n    }\n);\n\nexport const ManualInterceptCustomUi = {\n    rowHeight: 1,\n    columnWidth: 4,\n    configComponent: ManualInterceptConfig,\n    customPill: ManualInterceptPill\n};","import * as React from 'react';\n\nimport { Icon } from \"../../icons\";\nimport { styled } from '../../styles';\n\nimport { clickOnEnter } from '../component-utils';\nimport { PillButton } from './pill';\nimport { IconButton } from './icon-button';\nimport { copyToClipboard } from '../../util/ui';\n\nconst CopyIconButton = styled(IconButton)`\n    color: ${p => p.theme.mainColor};\n\n    &:hover, &:focus {\n        color: ${p => p.theme.popColor};\n        outline: none;\n    }\n\n    &:active {\n        color: ${p => p.theme.mainColor};\n    }\n`;\n\nconst useTemporaryFlag = () => {\n    const [flagResetTimer, setFlagResetTimer] = React.useState<number | undefined>();\n    const [flagged, setFlagged] = React.useState<true | undefined>();\n\n    const triggerFlag = () => {\n        setFlagged(true);\n\n        if (flagResetTimer) {\n            clearTimeout(flagResetTimer);\n            setFlagResetTimer(undefined);\n        }\n\n        setFlagResetTimer(setTimeout(() =>\n            setFlagged(undefined),\n            2000\n        ) as unknown as number);\n    }\n\n    return [flagged, triggerFlag] as const;\n}\n\nexport const CopyButtonIcon = (p: {\n    className?: string,\n    content: string,\n    onClick: () => void\n}) => {\n    const [success, showSuccess] = useTemporaryFlag();\n\n    return <CopyIconButton\n        title=\"Copy this to your clipboard\"\n        className={p.className}\n        icon={success ? ['fas', 'check'] : ['far', 'copy']}\n        fixedWidth={true}\n        onClick={() => {\n            copyToClipboard(p.content);\n            showSuccess();\n            p.onClick();\n        }}\n    />;\n}\n\nexport const CopyButtonPill = (p: { content: string, children?: React.ReactNode }) => {\n    const [success, showSuccess] = useTemporaryFlag();\n\n    return <PillButton\n        tabIndex={0}\n        onClick={() => {\n            copyToClipboard(p.content);\n            showSuccess();\n        }}\n    >\n        <Icon\n            icon={success ? ['fas', 'check'] : ['far', 'copy']}\n            fixedWidth={true}\n        />\n        { p.children }\n    </PillButton>;\n}","import * as React from 'react';\nimport { disposeOnUnmount, inject, observer } from 'mobx-react';\nimport { observable, runInAction, computed, when, action } from 'mobx';\n\nimport { styled, css } from '../../../styles';\n\nimport {\n    serverVersion,\n    versionSatisfies,\n    MULTIPLE_EXISTING_TERMINAL_RANGE\n} from '../../../services/service-versions';\n\nimport { AccountStore } from '../../../model/account/account-store';\nimport { UiStore } from '../../../model/ui/ui-store';\nimport { InterceptorStore } from '../../../model/interception/interceptor-store';\nimport { Interceptor } from '../../../model/interception/interceptors';\n\nimport { CopyButtonIcon } from '../../common/copy-button';\nimport { PillSelector } from '../../common/pill';\n\nconst CopyableCommand = styled((p: {\n    className?: string;\n    onCopy: () => void;\n    children: string;\n    disabled: boolean;\n}) =>\n    <div className={p.className}>\n        <code onCopy={p.onCopy}>\n            { p.children }\n        </code>\n        <CopyButtonIcon onClick={p.onCopy} content={p.children} />\n    </div>\n)`\n    display: inline-block;\n    margin-top: 20px;\n\n    ${p => p.disabled && css`\n        opacity: 0.5;\n        pointer-events: none;\n    `}\n\n    background-color: ${p => p.theme.inputBackground};\n    &:hover {\n        background-color: ${p => p.theme.inputHoverBackground};\n    }\n    border: solid 1px ${p => p.theme.inputBorder};\n    color: ${p => p.theme.inputColor};\n\n    padding: 10px 75px 10px 20px;\n    border-radius: 4px;\n\n    > code {\n        font-family: ${p => p.theme.monoFontFamily};\n        user-select: all;\n    }\n\n    position: relative;\n    > button {\n        padding: 10px 20px 10px 20px;\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n\n        border-radius: 0 4px 4px 0;\n        border-left: solid 1px ${p => p.theme.containerBorder};\n\n        background-color: ${p => p.theme.mainLowlightBackground};\n\n        &:active {\n            background-image: linear-gradient(transparent, rgba(0,0,0,.05) 40%, rgba(0,0,0,.1));\n        }\n    }\n\n    > svg {\n        margin: 1px 0 2px;\n    }\n`;\n\nconst ConfigContainer = styled.div`\n    user-select: text;\n\n    > select {\n        display: block;\n        margin-top: 20px;\n        margin-left: 0;\n    }\n`;\n\nconst PLACEHOLDER_SHELL = \"...\";\n\ntype ShellDefinition = { command: string, description: string };\n\n@inject('interceptorStore')\n@inject('accountStore')\n@inject('uiStore')\n@observer\nclass ExistingTerminalConfig extends React.Component<{\n    interceptor: Interceptor,\n    activateInterceptor: () => Promise<{\n        port: number,\n        commands?: {\n            [shellName: string]: ShellDefinition\n        }\n    }>,\n    reportStarted: () => void,\n    reportSuccess: (options?: { showRequests?: boolean }) => void,\n    closeSelf: () => void,\n    interceptorStore?: InterceptorStore,\n    accountStore?: AccountStore,\n    uiStore?: UiStore\n}> {\n\n    @observable reportedActivated = false;\n\n    @observable shellCommands: { [shellName: string]: ShellDefinition } = {\n        // Placeholder string, similar to the default, while we wait (v briefly) for server startup:\n        [PLACEHOLDER_SHELL]: {\n            command: 'eval \"$(curl -sS localhost:..../setup)\"',\n            description: ''\n        }\n    };\n\n    @observable\n    selectedShell = PLACEHOLDER_SHELL; // Updated to first key when list of shells arrives\n\n    @computed\n    get interceptCommand() {\n        return this.shellCommands[this.selectedShell].command;\n    }\n\n    @computed\n    get shellDescription() {\n        return this.shellCommands[this.selectedShell].description;\n    }\n\n    @computed\n    get shouldShowDropdown() {\n        const multipleShellsMaybeSupported = serverVersion.state !== 'fulfilled' ||\n            versionSatisfies(serverVersion.value as string, MULTIPLE_EXISTING_TERMINAL_RANGE);\n\n        const multipleShellsMaybeAvailable = this.selectedShell === PLACEHOLDER_SHELL ||\n            Object.keys(this.shellCommands).length > 1;\n\n        // We show the dropdown unless we're sure (old server, or new server but only one shell\n        // returned) that there's only one option available.\n        return multipleShellsMaybeSupported && multipleShellsMaybeAvailable;\n    }\n\n    @action.bound\n    selectShell(shell: string) {\n        this.selectedShell = shell;\n        this.props.uiStore!.preferredShell = shell;\n    }\n\n    @action.bound\n    reportActivated() {\n        if (this.reportedActivated) return;\n\n        this.reportedActivated = true;\n        this.props.reportStarted();\n    }\n\n    async componentDidMount() {\n        const { port, commands } = await this.props.activateInterceptor();\n\n        runInAction(() => {\n            if (!commands) {\n                // Backward compat for servers that only support bash:\n                this.shellCommands = {\n                    'Bash': {\n                        command: `eval \"$(curl -sS localhost:${port}/setup)\"`,\n                        description: 'Bash-compatible'\n                    }\n                };\n            } else {\n                this.shellCommands = commands;\n            }\n\n            // Remember which shell you prefer:\n            const { preferredShell } = this.props.uiStore!;\n            if (preferredShell && preferredShell in this.shellCommands) {\n                this.selectedShell = preferredShell;\n            }\n\n            // Make sure selected shell always refers to a valid command:\n            if (!this.shellCommands[this.selectedShell]) {\n                this.selectedShell = Object.keys(this.shellCommands)[0];\n            }\n        });\n\n        if (!this.props.interceptor.isActive) {\n            // While we wait for activation, increase the interval refresh frequency\n            const intervalId = setInterval(() => {\n                this.props.interceptorStore!.refreshInterceptors()\n            }, 2000);\n            disposeOnUnmount(this, () => clearInterval(intervalId));\n\n            when(() => this.props.interceptor.isActive, () => {\n                this.reportActivated(); // Mark as activated, if it wasn't already\n                this.props.reportSuccess();\n                clearInterval(intervalId);\n            });\n        } else {\n            this.reportedActivated = true;\n        }\n    }\n\n    render() {\n        return <ConfigContainer>\n            <p>\n                Run the command below in any {this.shellDescription} terminal on this machine, to\n                immediately enable interception for all new processes started there.\n            </p>\n            { this.shouldShowDropdown\n                ? <PillSelector<string>\n                    onChange={this.selectShell}\n                    value={this.selectedShell}\n                    options={Object.keys(this.shellCommands)}\n                />\n                : null\n            }\n            <CopyableCommand\n                onCopy={this.reportActivated}\n                disabled={this.selectedShell === PLACEHOLDER_SHELL}\n            >\n                { this.interceptCommand }\n            </CopyableCommand>\n        </ConfigContainer>;\n    }\n\n}\n\nexport const ExistingTerminalCustomUi = {\n    columnWidth: 2,\n    rowHeight: 1,\n    configComponent: ExistingTerminalConfig\n};","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { observer, inject } from 'mobx-react';\n\nimport { styled } from '../../../styles';\nimport { Icon } from '../../../icons';\nimport { logError } from '../../../errors';\n\nimport { Interceptor } from '../../../model/interception/interceptors';\nimport { UiStore } from '../../../model/ui/ui-store';\nimport { DesktopApi } from '../../../services/desktop-api';\n\nimport { uploadFile } from '../../../util/ui';\nimport { Button, SecondaryButton, UnstyledButton } from '../../common/inputs';\n\nconst ConfigContainer = styled.div`\n    user-select: text;\n\n    > p {\n        line-height: 1.2;\n\n        &:not(:last-child) {\n            margin-bottom: 10px;\n        }\n    }\n\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: start;\n`;\n\nconst Spacer = styled.div`\n    flex: 1 1 100%;\n`;\n\nconst Hr = styled.hr`\n    width: 100%;\n    margin: 0 0 10px 0;\n    border-top: solid 1px ${p => p.theme.containerBorder};\n`;\n\nconst SelectAndInterceptButton = styled(Button)`\n    font-size: ${p => p.theme.textSize};\n    font-weight: bold;\n    padding: 10px 24px;\n\n    width: 100%;\n    flex-shrink: 0;\n\n    &:not(:last-child) {\n        margin-bottom: 10px;\n    }\n`;\n\nconst RememberedOption = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    &:not(:last-child) {\n        margin-bottom: 10px;\n    }\n\n    flex-shrink: 0;\n`;\n\nconst InterceptButton = styled(SecondaryButton)`\n    font-size: ${p => p.theme.textSize};\n    font-weight: bold;\n    padding: 10px 24px;\n\n    width: 100%;\n    word-break: break-word;\n`;\n\nconst ForgetPathButton = styled(UnstyledButton)`\n    &:hover {\n        opacity: 0.6;\n    }\n`;\n\nconst platform = navigator.platform.startsWith('Mac')\n        ? 'mac'\n    : navigator.platform.startsWith('Win')\n        ? 'win'\n    : navigator.platform.includes('Linux')\n        ? 'linux'\n    : 'unknown';\n\nfunction getWordForBinary() {\n    if (platform === 'mac') return 'application';\n    if (platform === 'win') return 'exe';\n    if (platform === 'linux') return 'binary';\n    else return 'application';\n}\n\nfunction getArticleForBinary(binaryName: string) {\n    if (binaryName[0] === 'a' || binaryName[0] === 'e') return 'an';\n    else return 'a';\n}\n\nfunction getReadablePath(path: string) {\n    if (platform === 'win') {\n        // Windows exes generally have meaningful names, so just use that\n        return _.last(path.split('\\\\'))!;\n    } else {\n        const pathParts = path.split('/').filter(\n            p => p !== 'bin' && p !== 'run' // Drop any useless generic bits\n        );\n\n        const appPart = _.find(pathParts, p => p.endsWith('.app'));\n\n        if (appPart) {\n            // For Mac apps, we drop the (normally invisible) app extension\n            return appPart.slice(0, -4);\n        } else {\n            // Otherwise it's probably a bare binary - we're dropped useless names, so this should work\n            return pathParts[pathParts.length - 1];\n        }\n    }\n}\n\n@inject('uiStore')\n@observer\nclass ElectronConfig extends React.Component<{\n    interceptor: Interceptor,\n    activateInterceptor: (options: { pathToApplication: string }) => Promise<void>,\n    reportStarted: () => void,\n    reportSuccess: (options?: { showRequests?: boolean }) => void,\n    closeSelf: () => void,\n    uiStore?: UiStore\n}> {\n\n    async componentDidMount() {\n        const { previousElectronAppPaths } = this.props.uiStore!;\n        if (previousElectronAppPaths.length === 0) {\n            this.selectApplication();\n            // Don't expand for selection, unless we're a mac (where the instructions might be useful).\n            if (platform !== 'mac') this.props.closeSelf();\n        }\n    }\n\n    selectApplication = async () => {\n        const appPicker = DesktopApi.selectApplication ?? (() => uploadFile('path'));\n\n        const pathToApplication = await(appPicker());\n\n        if (!pathToApplication) {\n            this.props.closeSelf();\n            return;\n        }\n\n        this.runApplication(pathToApplication)\n        .then(() => {\n            // Activated successfully! Add it to the list & jump to /view\n            this.props.uiStore!.rememberElectronPath(pathToApplication);\n        });\n    }\n\n    async runApplication(pathToApplication: string) {\n        const { activateInterceptor, reportStarted, reportSuccess } = this.props;\n\n        reportStarted(); // 'Started' when you pick an app, not when we ask you to pick one.\n        activateInterceptor({ pathToApplication })\n        .then(() => {\n            reportSuccess();\n        }).catch((e) => {\n            this.props.uiStore!.forgetElectronPath(pathToApplication);\n            logError(e);\n        });\n    }\n\n    render() {\n        const uiStore = this.props.uiStore!;\n        const { previousElectronAppPaths, forgetElectronPath } = uiStore;\n\n        const binary = getWordForBinary();\n        const binaryArticle = getArticleForBinary(binary);\n\n        return <ConfigContainer>\n            <p>\n                Start an Electron {binary} with HTTP Toolkit's settings injected,\n                to intercept all its HTTP &amp; HTTPS traffic.\n            </p>\n            {\n                platform === 'mac' && previousElectronAppPaths.length < 2 && <p>\n                    For .app bundles, you can intercept either the bundle\n                    (the .app directory) or the executable itself,\n                    typically stored in Contents/MacOS inside the bundle.\n                </p>\n            }\n            <p>\n                {\n                    previousElectronAppPaths.length\n                        ? `You can also rerun a previously started ${binary}, using the buttons below`\n                        : `Once you've run ${binaryArticle} ${binary}, it'll be saved and shown here so you can rerun it later`\n                }.\n            </p>\n\n            <Spacer />\n\n            <SelectAndInterceptButton onClick={this.selectApplication}>\n                Select { binaryArticle } { binary }\n            </SelectAndInterceptButton>\n\n            { previousElectronAppPaths.length > 0 && <Hr /> }\n\n            { previousElectronAppPaths.map((path) => <RememberedOption key={path}>\n                <InterceptButton title={path} onClick={() => this.runApplication(path)}>\n                    Start { getReadablePath(path) }\n                </InterceptButton>\n                <ForgetPathButton onClick={() => forgetElectronPath(path)}>\n                    <Icon icon={['fas', 'times']} />\n                </ForgetPathButton>\n            </RememberedOption>) }\n        </ConfigContainer>;\n    }\n\n}\n\nexport const ElectronCustomUi = {\n    columnWidth: 1,\n    rowHeight: 2,\n    configComponent: ElectronConfig\n};\n","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { when } from 'mobx';\nimport { observer, inject } from 'mobx-react';\nimport * as QRCode from 'qrcode.react';\nimport {\n    matchers,\n    completionCheckers\n} from 'mockttp';\n\nimport { styled } from '../../../styles';\nimport { stringToBuffer } from '../../../util';\nimport { logError } from '../../../errors';\n\nimport { Interceptor } from '../../../model/interception/interceptors';\nimport { ProxyStore } from '../../../model/proxy-store';\nimport { EventsStore } from '../../../model/events/events-store';\n\nimport {\n    MethodMatchers,\n    StaticResponseHandler\n} from '../../../model/rules/definitions/http-rule-definitions';\nimport { RulesStore } from '../../../model/rules/rules-store';\n\nconst ConfigContainer = styled.div`\n    user-select: text;\n\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: start;\n\n    > p {\n        line-height: 1.2;\n\n        &:not(:last-child) {\n            margin-bottom: 5px;\n        }\n\n        &:not(:first-child) {\n            margin-top: 5px;\n        }\n    }\n\n    > canvas {\n        margin: 0 auto;\n        /* Without white padding, the QR code sometimes isn't scannable */\n        padding: 5px;\n        background-color: #fff;\n    }\n\n    a[href] {\n        color: ${p => p.theme.linkColor};\n\n        &:visited {\n            color: ${p => p.theme.visitedLinkColor};\n        }\n    }\n`;\n\nconst Spacer = styled.div`\n    flex: 1 1 100%;\n`;\n\nfunction urlSafeBase64(content: string) {\n    return stringToBuffer(content)\n        .toString('base64')\n        .replace(/\\+/g, '-')\n        .replace(/\\//g, '_');\n}\n\nfunction getConfigRequestIds(eventsStore: EventsStore) {\n    return eventsStore.exchanges.filter((exchange) =>\n        exchange.request.url === 'http://android.httptoolkit.tech/config'\n    ).map(e => e.id);\n}\n\nexport function setUpAndroidCertificateRule(\n    certContent: string,\n    rulesStore: RulesStore,\n    eventsStore: EventsStore,\n    onNextConfigRequest: () => void\n) {\n    rulesStore.ensureRuleExists({\n        id: 'default-android-certificate',\n        type: 'http',\n        activated: true,\n        matchers: [\n            new MethodMatchers.GET(),\n            new matchers.SimplePathMatcher(\n                \"http://android.httptoolkit.tech/config\"\n            )\n        ],\n        completionChecker: new completionCheckers.Always(),\n        handler: new StaticResponseHandler(200, undefined, JSON.stringify({\n            certificate: certContent\n        }), {\n            'content-type': 'application/json'\n        })\n    });\n\n    // When the next Android config request comes in:\n    const previousConfigRequestIds = getConfigRequestIds(eventsStore);\n    when(() =>\n        _.difference(\n            getConfigRequestIds(eventsStore),\n            previousConfigRequestIds\n        ).length > 0\n    ).then(() => {\n        // In effect, we treat this as 'success' for Android. That's not quite\n        // true: we just know the device is running the app and can connect to\n        // us, but cert setup or VPN activation could still fail in-app anyway!\n        onNextConfigRequest();\n    });\n}\n\n@inject('proxyStore')\n@inject('rulesStore')\n@inject('eventsStore')\n@observer\nclass AndroidConfig extends React.Component<{\n    proxyStore?: ProxyStore,\n    rulesStore?: RulesStore,\n    eventsStore?: EventsStore,\n\n    reportStarted: () => void,\n    reportSuccess: (options?: { showRequests?: boolean }) => void,\n    closeSelf: () => void\n\n    // Not used, but required for types:\n    interceptor: Interceptor,\n    activateInterceptor: () => Promise<void>\n}> {\n\n    async componentDidMount() {\n        const rulesStore = this.props.rulesStore!;\n        const eventsStore = this.props.eventsStore!;\n        const proxyStore = this.props.proxyStore!;\n\n        const { reportStarted, reportSuccess } = this.props;\n\n        // Just in case the network addresses have changed:\n        proxyStore.refreshNetworkAddresses().then(() => {\n            // This should never happen, but plausibly could in some edge cases, in which case we need\n            // to clearly tell the user what's going on here:\n            if (proxyStore.externalNetworkAddresses.length === 0) {\n                alert(\n                    \"Cannot activate Android interception as no network addresses could be detected.\" +\n                    \"\\n\\n\" +\n                    \"Please open an issue at github.com/httptoolkit/httptoolkit\"\n                );\n                logError(\"Android QR activation failed - no network addresses\");\n                this.props.closeSelf();\n            }\n        });\n\n        setUpAndroidCertificateRule(\n            proxyStore!.certContent!,\n            rulesStore,\n            eventsStore,\n            // Jump to requests only the first time, so it's not too inconvenient\n            // if you want to connect many devices at the same time:\n            getConfigRequestIds(eventsStore).length === 0\n                ? reportSuccess\n                : () => reportSuccess({ showRequests: false })\n        );\n\n        // We consider activate attempted once you show the QR code\n        reportStarted();\n    }\n\n    render() {\n        const {\n            certFingerprint,\n            httpProxyPort,\n            externalNetworkAddresses\n        } = this.props.proxyStore!;\n\n        const setupParams ={\n            addresses: externalNetworkAddresses,\n            port: httpProxyPort,\n            certFingerprint: certFingerprint!\n        };\n\n        const serializedSetupParams = urlSafeBase64(JSON.stringify(setupParams));\n\n        return <ConfigContainer>\n            <p>\n                Scan the QR code below on your device to install the HTTP Toolkit\n                app, and start intercepting HTTP & HTTPS traffic.\n            </p>\n            <p>\n                Don't have a barcode scanner? Install the <a\n                    href={\n                        `https://play.google.com/store/apps/details?id=tech.httptoolkit.android.v1&referrer=${\n                            serializedSetupParams\n                        }`\n                    }\n                    target='_blank'\n                    rel='noreferrer noopener'\n                >\n                    HTTP Toolkit app\n                </a> manually instead.\n            </p>\n\n            <Spacer />\n            <QRCode\n                size={160}\n                value={\n                    `https://android.httptoolkit.tech/connect/?data=${serializedSetupParams}`\n                }\n            />\n            <Spacer />\n\n            <p>\n                Once activated, this will send all HTTP & HTTPS traffic to HTTP Toolkit,\n                and configure the device to trust its HTTPS certificate by default.\n            </p>\n            <p>\n                <strong>This won't work immediately for all apps.</strong> Some may need changes\n                to trust HTTP Toolkit for HTTPS traffic. <a\n                    href=\"https://httptoolkit.com/docs/guides/android\"\n                    target='_blank'\n                    rel='noreferrer noopener'\n                >\n                    See the docs\n                </a> for more details.\n            </p>\n        </ConfigContainer>;\n    }\n\n}\n\nexport const AndroidDeviceCustomUi = {\n    columnWidth: 2,\n    rowHeight: 2,\n    configComponent: AndroidConfig\n};","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { computed, observable, action } from 'mobx';\nimport { observer, inject } from 'mobx-react';\n\nimport { styled } from '../../../styles';\n\nimport { Interceptor } from '../../../model/interception/interceptors';\nimport { ProxyStore } from '../../../model/proxy-store';\nimport { AccountStore } from '../../../model/account/account-store';\nimport { EventsStore } from '../../../model/events/events-store';\nimport { RulesStore } from '../../../model/rules/rules-store';\n\nimport { setUpAndroidCertificateRule } from './android-device-config';\n\nimport { Button } from '../../common/inputs';\nimport { Icon } from '../../../icons';\n\nconst ConfigContainer = styled.div`\n    user-select: text;\n\n    height: 100%;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: start;\n\n    > p {\n        line-height: 1.2;\n\n        &:not(:last-child) {\n            margin-bottom: 5px;\n        }\n\n        &:not(:first-child) {\n            margin-top: 5px;\n        }\n    }\n\n    a[href] {\n        color: ${p => p.theme.linkColor};\n\n        &:visited {\n            color: ${p => p.theme.visitedLinkColor};\n        }\n    }\n`;\n\nconst DeviceList = styled.ul`\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n    justify-content: center;\n    height: 100%;\n`;\n\nconst AdbDevice = styled.li`\n    margin: 0 -15px -15px;\n    padding: 15px;\n`;\n\nconst AdbDeviceButton = styled(Button)`\n    font-size: ${p => p.theme.textSize};\n    font-weight: bold;\n    padding: 10px 24px;\n    width: 100%;\n\n    > svg {\n        margin-right: 10px;\n    }\n`;\n\n@inject('proxyStore')\n@inject('rulesStore')\n@inject('eventsStore')\n@inject('accountStore')\n@observer\nclass AndroidAdbConfig extends React.Component<{\n    proxyStore?: ProxyStore,\n    rulesStore?: RulesStore,\n    eventsStore?: EventsStore,\n    accountStore?: AccountStore,\n\n    interceptor: Interceptor,\n    activateInterceptor: (options: { deviceId: string }) => Promise<void>,\n    reportStarted: () => void,\n    reportSuccess: (options?: { showRequests?: boolean }) => void,\n    closeSelf: () => void\n}> {\n\n    @computed private get deviceIds(): string[] {\n        return this.props.interceptor.metadata?.deviceIds || [];\n    }\n\n    @observable private inProgressIds: string[] = [];\n\n    async componentDidMount() {\n        // If there's only one device, just connect immediately and silently\n        if (this.deviceIds.length === 1) {\n            this.interceptDevice(this.deviceIds[0]);\n            this.props.closeSelf();\n        }\n    }\n\n    render() {\n        return <ConfigContainer>\n            <p>\n                There are multiple ADB devices connected.\n            </p>\n            <p>\n                Pick which device you'd like to intercept:\n            </p>\n\n            <DeviceList>\n                { this.deviceIds.map(id => {\n                    const activating = this.inProgressIds.includes(id);\n\n                    return <AdbDevice key={id}>\n                        <AdbDeviceButton\n                            disabled={activating}\n                            onClick={activating ? _.noop : () => this.interceptDevice(id)}\n                        >\n                            {\n                                activating\n                                    ? <Icon icon={['fas', 'spinner']} spin />\n                                : id.includes(\"emulator-\")\n                                    ? <Icon icon={['far', 'window-maximize']} />\n                                : id.match(/\\d+\\.\\d+\\.\\d+\\.\\d+:\\d+/)\n                                    ? <Icon icon={['fas', 'network-wired']} />\n                                : <Icon icon={['fas', 'mobile-alt']} />\n                            }\n                            { id }\n                        </AdbDeviceButton>\n                    </AdbDevice>\n                }) }\n            </DeviceList>\n        </ConfigContainer>;\n    }\n\n    @action.bound\n    interceptDevice(deviceId: string) {\n        const {\n            inProgressIds,\n            onSuccess,\n            props: {\n                proxyStore,\n                rulesStore,\n                eventsStore,\n                reportStarted,\n                activateInterceptor\n            }\n        } = this;\n\n        // Ensure the config rule is in place before we start any activation. This listens for the\n        // next config request, and uses that to track succesful setup (by calling onSuccess).\n        setUpAndroidCertificateRule(\n            proxyStore!.certContent!,\n            rulesStore!,\n            eventsStore!,\n            onSuccess\n        );\n\n        reportStarted();\n        const activationPromise = activateInterceptor({ deviceId: deviceId });\n\n        inProgressIds.push(deviceId);\n\n        activationPromise.finally(action(() => {\n            _.pull(inProgressIds, deviceId);\n        }));\n    }\n\n    onSuccess = () => {\n        this.props.reportSuccess({\n            showRequests: this.deviceIds.length <= 1\n        });\n    };\n\n}\n\nexport const AndroidAdbCustomUi = {\n    columnWidth: 1,\n    rowHeight: 2,\n    configComponent: AndroidAdbConfig\n};","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { observable } from 'mobx';\nimport dedent from 'dedent';\n\nimport { Interceptor } from '../../../model/interception/interceptors';\n\n@observer\nclass ExistingBrowserConfig extends React.Component<{\n    interceptor: Interceptor,\n    activateInterceptor: (\n        options: { closeConfirmed?: true },\n        shouldTrackEvent?: false\n    ) => Promise<void>,\n    reportStarted: () => void,\n    reportSuccess: (options?: { showRequests?: boolean }) => void,\n    closeSelf: () => void\n}> {\n\n    async componentDidMount() {\n        const { activateInterceptor, reportStarted, reportSuccess, closeSelf } = this.props;\n        closeSelf(); // We immediately unmount, but continue activating:\n\n        try {\n            // Try to activate, assuming the browser isn't currently open:\n            await activateInterceptor({}, false);\n\n            // Only it runs without confirmation does this count as an activation\n            reportStarted();\n        } catch (error: any) {\n            if (!error.metadata || error.metadata.closeConfirmRequired !== true) {\n                // This is a real error, not a confirmation requirement.\n\n                reportStarted(); // Track that this started, before it fails\n                throw error;\n            }\n\n            // If the browser is open, confirm that we can kill & restart it first:\n            const confirmed = confirm(dedent`\n                Your browser is currently open, and needs to be\n                restarted to enable interception. Restart it now?\n            `.replace('\\n', ' '));\n\n            // If cancelled, we silently do nothing\n            if (!confirmed) return;\n\n            reportStarted();\n            await activateInterceptor({ closeConfirmed: true });\n        }\n\n        reportSuccess();\n    }\n\n    render() {\n        return null; // This never actually displays - we just mount, confirm, and close\n    }\n\n}\n\nexport const ExistingBrowserCustomUi = {\n    columnWidth: 1,\n    rowHeight: 1,\n    configComponent: ExistingBrowserConfig\n};","import * as _ from 'lodash';\nimport * as React from 'react';\n\nimport { observer } from 'mobx-react';\n\nimport { styled } from '../../../styles';\nimport { Icon } from '../../../icons';\nimport { Button } from '../../common/inputs';\n\nconst SpinnerBlock = styled.div`\n    text-align: center;\n`;\n\nconst Spinner = styled(Icon).attrs(() => ({\n    icon: ['fas', 'spinner'],\n    spin: true,\n    size: '2x'\n}))`\n    display: block;\n    margin: 0 auto 10px;\n`;\n\nconst ListScrollContainer = styled.div`\n    max-height: 279px;\n    overflow-y: auto;\n    margin: 10px -15px;\n`;\n\nconst TargetList = styled.ul`\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n    justify-content: center;\n`;\n\nconst Target = styled.li`\n    margin-bottom: -10px;\n    padding: 10px;\n\n    &:first-child {\n        padding-top: 0;\n    }\n\n    &:last-child {\n        padding-bottom: 0;\n        margin-bottom: 0;\n    }\n`;\n\nconst TargetButton = styled(Button)<{\n    state: 'active' | 'available' | 'activating' | 'unavailable'\n}>`\n    font-size: ${p => p.theme.textSize};\n    padding: 10px;\n    width: 100%;\n\n    display: flex;\n    align-items: center;\n\n    ${p => p.state === 'active' &&\n        '&& { background-color: #4caf7d; }'\n    }\n`;\n\nconst TargetIcon = styled(Icon)`\n    margin-right: 10px;\n`;\n\nconst TargetText = styled.span<{ ellipseDirection: 'left' | 'right' }>`\n    flex-grow: 1;\n\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    text-align: center;\n\n    ${p => p.ellipseDirection === 'left' ?\n        'direction: rtl;'\n    : ''}\n`;\n\ntype TargetItem<Id> = {\n    id: Id,\n    title: string,\n    content: React.ReactNode,\n    status: 'active' | 'available' | 'activating' | 'unavailable',\n};\n\n@observer\nexport class InterceptionTargetList<Id extends string | number> extends React.Component<{\n    targetName: string,\n    targets: TargetItem<Id>[],\n    interceptTarget: (id: Id) => void,\n    ellipseDirection: 'left' | 'right'\n}> {\n\n    render() {\n        const { targetName, targets, interceptTarget, ellipseDirection } = this.props;\n\n        if (targets.length === 0) {\n            return <SpinnerBlock>\n                <Spinner />\n                Looking for running { targetName } to intercept...\n            </SpinnerBlock>\n        }\n\n        return <ListScrollContainer>\n            <TargetList>\n                { _.map(targets, (target: TargetItem<Id>) => <Target key={target.id}>\n                    <TargetButton\n                        title={target.title}\n                        state={target.status}\n                        disabled={target.status !== 'available'}\n                        onClick={target.status === 'available'\n                            ? () => interceptTarget(target.id)\n                            : _.noop\n                        }\n                    >\n                        {\n                            target.status === 'activating'\n                                ? <TargetIcon icon={['fas', 'spinner']} spin />\n                            : target.status === 'active'\n                                ? <TargetIcon icon={['fas', 'check']} />\n                            : null\n                        }\n                        <TargetText ellipseDirection={ellipseDirection}>\n                            { target.content }\n                        </TargetText>\n                    </TargetButton>\n                </Target>) }\n            </TargetList>\n        </ListScrollContainer>;\n    }\n}","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { observable, action, flow } from 'mobx';\nimport { observer, inject, disposeOnUnmount } from 'mobx-react';\n\nimport { styled } from '../../../styles';\n\nimport { Interceptor } from '../../../model/interception/interceptors';\nimport { ProxyStore } from '../../../model/proxy-store';\n\nimport { getDetailedInterceptorMetadata } from '../../../services/server-api';\nimport { InterceptionTargetList } from './intercept-target-list';\n\ntype JvmTarget = { pid: string, name: string, interceptedByProxy: number | undefined };\n\n@inject('proxyStore')\n@observer\nclass JvmConfig extends React.Component<{\n    proxyStore?: ProxyStore,\n\n    interceptor: Interceptor,\n    activateInterceptor: (options: { targetPid: string }) => Promise<void>,\n    reportStarted: () => void,\n    reportSuccess: (options?: { showRequests?: boolean }) => void,\n    closeSelf: () => void\n}> {\n\n    @observable.shallow\n    private jvmTargets: _.Dictionary<JvmTarget> = {};\n\n    updateTargets = flow(function * (this: JvmConfig) {\n        const result: {\n            jvmTargets?: _.Dictionary<JvmTarget>\n        } | undefined = (\n            yield getDetailedInterceptorMetadata(\"attach-jvm\")\n        );\n        this.jvmTargets = result?.jvmTargets ?? {};\n    }.bind(this));\n\n    @observable\n    private inProgressPids: string[] = [];\n\n    componentDidMount() {\n        this.updateTargets();\n        const updateInterval = setInterval(this.updateTargets, 2000);\n        disposeOnUnmount(this, () => clearInterval(updateInterval));\n    }\n\n    render() {\n        const interestingTargets = Object.values(this.jvmTargets).filter((target) =>\n            // Maven-launched processes have a wrapper, which is never interesting:\n            !target.name.startsWith(\"org.apache.maven.wrapper.MavenWrapperMain \")\n        );\n\n        const proxyPort = this.props.proxyStore!.httpProxyPort;\n\n        return <ConfigContainer>\n            <p>\n                Pick which JVM process you'd like to intercept:\n            </p>\n\n            <InterceptionTargetList<string>\n                targetName='JVM processes'\n                interceptTarget={this.interceptTarget}\n                ellipseDirection='left'\n                targets={interestingTargets.map((target) => {\n                    const activating = this.inProgressPids.includes(target.pid);\n                    const alreadyIntercepted = target.interceptedByProxy !== undefined;\n                    const interceptedByUs = target.interceptedByProxy === proxyPort;\n\n                    const targetName = target.name.split(' ')[0];\n\n                    const isClassName = !targetName.includes('/') &&\n                        !targetName.includes('\\\\');\n\n                    let contextName: string;\n                    let mainName: string;\n\n                    if (isClassName) {\n                        const [className, ...packageParts] = targetName.split('.').reverse();\n                        const packageName = packageParts.reverse().join('.');\n\n                        contextName = packageName ? packageName + '.' : '';\n                        mainName = className;\n                    } else {\n                        const [filePath, ...dirParts] = targetName.split(/\\/|\\\\/).reverse();\n                        const dirPath = dirParts.reverse().join('/');\n                        contextName = dirPath ? dirPath + '/' : '';\n                        mainName = filePath;\n                    }\n\n                    return {\n                        id: target.pid,\n                        title: target.name,\n                        status:\n                            activating\n                                ? 'activating'\n                            : interceptedByUs\n                                ? 'active'\n                            : alreadyIntercepted\n                                ? 'unavailable'\n                            : 'available',\n                        content: <>\n                            <PackageName>{ contextName }</PackageName>\n                            <ClassName>{ mainName }</ClassName>\n                        </>,\n                    };\n                })}\n            />\n\n            <Footer>\n                You can also launch JVM processes from an intercepted\n                terminal, where they'll be intercepted automatically.\n            </Footer>\n        </ConfigContainer>;\n    }\n\n    @action.bound\n    interceptTarget(pid: string) {\n        const {\n            inProgressPids,\n            props: {\n                reportStarted,\n                activateInterceptor,\n                proxyStore\n            }\n        } = this;\n\n        reportStarted();\n        const activationPromise = activateInterceptor({ targetPid: pid });\n        activationPromise.then(() => {\n            // Optimistically update the UI's success state\n            const target = this.jvmTargets[pid];\n            if (target) {\n                target.interceptedByProxy = proxyStore!.httpProxyPort;\n            }\n\n            this.props.reportSuccess({\n                // Don't jump to view, because there's often not immediately visible traffic\n                // anyway, and you may well want to intercept multiple targets.\n                showRequests: false\n            });\n        });\n\n        inProgressPids.push(pid);\n\n        activationPromise.finally(action(() => {\n            _.pull(inProgressPids, pid);\n        }));\n    }\n\n}\n\nconst ConfigContainer = styled.div`\n    user-select: text;\n\n    height: 100%;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n\n    > p {\n        line-height: 1.2;\n\n        &:not(:last-child) {\n            margin-bottom: 5px;\n        }\n\n        &:not(:first-child) {\n            margin-top: 5px;\n        }\n    }\n\n    a[href] {\n        color: ${p => p.theme.linkColor};\n\n        &:visited {\n            color: ${p => p.theme.visitedLinkColor};\n        }\n    }\n`;\n\nconst Footer = styled.p`\n    font-size: 85%;\n    font-style: italic;\n`;\n\nconst PackageName = styled.span`\n    opacity: 0.6;\n`;\n\nconst ClassName = styled.span`\n    font-weight: bold;\n`;\n\nexport const JvmCustomUi = {\n    columnWidth: 1,\n    rowHeight: 2,\n    configComponent: JvmConfig\n};","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { observable, action, flow } from 'mobx';\nimport { observer, inject, disposeOnUnmount } from 'mobx-react';\n\nimport { styled } from '../../../styles';\n\nimport { Interceptor } from '../../../model/interception/interceptors';\nimport { ProxyStore } from '../../../model/proxy-store';\n\nimport { getDetailedInterceptorMetadata } from '../../../services/server-api';\n\nimport { InterceptionTargetList } from './intercept-target-list';\n\nconst ConfigContainer = styled.div`\n    user-select: text;\n\n    height: 100%;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n\n    > p {\n        line-height: 1.2;\n\n        &:not(:last-child) {\n            margin-bottom: 5px;\n        }\n\n        &:not(:first-child) {\n            margin-top: 5px;\n        }\n    }\n\n    a[href] {\n        color: ${p => p.theme.linkColor};\n\n        &:visited {\n            color: ${p => p.theme.visitedLinkColor};\n        }\n    }\n`;\n\nconst Footer = styled.p`\n    font-size: 85%;\n    font-style: italic;\n`;\n\ntype ContainerTarget = {\n    id: string,\n    names: string[],\n    labels: { [key: string]: string },\n    image: string\n};\n\nconst CONTAINER_PROXY_LABEL = \"tech.httptoolkit.docker.proxy\";\n\n@inject('proxyStore')\n@observer\nclass DockerAttachConfig extends React.Component<{\n    proxyStore?: ProxyStore,\n\n    interceptor: Interceptor,\n    activateInterceptor: (options: { containerId: string }) => Promise<void>,\n    reportStarted: () => void,\n    reportSuccess: (options?: { showRequests?: boolean }) => void,\n    closeSelf: () => void\n}> {\n\n    @observable.shallow\n    private targets: _.Dictionary<ContainerTarget> = {};\n\n    updateTargets = flow(function * (this: DockerAttachConfig) {\n        const result: {\n            targets?: _.Dictionary<ContainerTarget>\n        } | undefined = (\n            yield getDetailedInterceptorMetadata(\"docker-attach\")\n        );\n        this.targets = result?.targets ?? {};\n    }.bind(this));\n\n    @observable\n    private inProgressIds: string[] = [];\n\n    componentDidMount() {\n        this.updateTargets();\n        const updateInterval = setInterval(this.updateTargets, 2000);\n        disposeOnUnmount(this, () => clearInterval(updateInterval));\n    }\n\n    render() {\n        const proxyPort = this.props.proxyStore!.httpProxyPort;\n        const targets = Object.values(this.targets)\n            .filter(target =>\n                !target.image.startsWith('httptoolkit/docker-socks-tunnel')\n            );\n\n        return <ConfigContainer>\n            <p>\n                Pick a container to restart it with all traffic intercepted:\n            </p>\n\n            <InterceptionTargetList<string>\n                targetName='Docker containers'\n                interceptTarget={this.interceptTarget}\n                ellipseDirection='right'\n                targets={targets.map((target) => {\n                    const activating = this.inProgressIds.includes(target.id);\n                    const interceptedByUs = target.labels[CONTAINER_PROXY_LABEL] === proxyPort.toString();\n\n                    // Container names are more or less alphanumeric, but internally have a normally\n                    // hidden slash: https://github.com/moby/moby/issues/6705. We hide that too.\n                    const containerName = target.names[0]?.replace(/^\\//, '') || target.id.slice(0, 8);\n\n                    const containerDescription = target.id.startsWith(containerName)\n                        ? `'${containerName}'`\n                        : `'${containerName}' (${target.id.slice(0, 8)})`\n\n                    return {\n                        id: target.id,\n                        title: `Container ${containerDescription}, from image '${target.image}'`,\n                        status:\n                            activating\n                                ? 'activating'\n                            : interceptedByUs\n                                ? 'active'\n                            : 'available', // <-- We allow intercepting containers already intercepted elsewhere\n                        content: <>\n                            <ContainerName>{ containerName }</ContainerName>\n                            <ImageName>{ target.image }</ImageName>\n                        </>,\n                    };\n                })}\n            />\n\n            <Footer>\n                You can also create Docker containers from an intercepted\n                terminal, where they'll be intercepted automatically.\n            </Footer>\n        </ConfigContainer>;\n    }\n\n    @action.bound\n    interceptTarget(containerId: string) {\n        const {\n            inProgressIds,\n            props: {\n                reportStarted,\n                activateInterceptor,\n                proxyStore\n            }\n        } = this;\n\n        reportStarted();\n        const activationPromise = activateInterceptor({ containerId: containerId });\n        activationPromise.then(() => {\n            // Optimistically update the UI's success state\n            const target = this.targets[containerId];\n            if (target) {\n                target.labels[CONTAINER_PROXY_LABEL] = proxyStore!.httpProxyPort.toString();\n            }\n\n            this.props.reportSuccess({\n                // Don't jump to view, because there's often not immediately visible traffic\n                // anyway, and you may well want to intercept multiple targets.\n                showRequests: false\n            });\n        });\n\n        inProgressIds.push(containerId);\n\n        activationPromise.finally(action(() => {\n            _.pull(inProgressIds, containerId);\n        }));\n    }\n\n}\n\nconst ContainerName = styled.div`\n    font-weight: bold;\n`;\n\nconst ImageName = styled.div`\n    opacity: 0.6;\n`;\n\n\nexport const DockerAttachCustomUi = {\n    columnWidth: 1,\n    rowHeight: 2,\n    configComponent: DockerAttachConfig\n};","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { when } from 'mobx';\n\nimport { Interceptor } from '../../../model/interception/interceptors';\nimport { EventsStore } from '../../../model/events/events-store';\nimport { SourceIcons } from '../../../icons';\n\n@inject('eventsStore')\n@observer\nclass ManualIOSConfig extends React.Component<{\n    eventsStore?: EventsStore,\n\n    interceptor: Interceptor,\n\n    activateInterceptor: () => Promise<void>,\n    reportStarted: () => void,\n    reportSuccess: (options?: { showRequests?: boolean }) => void,\n    closeSelf: () => void\n}> {\n\n    async componentDidMount() {\n        const { eventsStore, reportStarted, reportSuccess, closeSelf } = this.props;\n        closeSelf(); // We immediately unmount, but continue activating:\n\n        // Open the manual setup docs page:\n        window.open(\n            \"https://httptoolkit.com/docs/guides/ios/\",\n            \"_blank\",\n            \"noreferrer noopener\"\n        );\n\n        reportStarted();\n\n        // When we receive the next iOS-appearing request, we consider this as successful\n        // and then jump to the View page:\n        const previousIOSRequestIds = getIOSRequestIds(eventsStore!);\n        when(() =>\n            _.difference(\n                getIOSRequestIds(eventsStore!),\n                previousIOSRequestIds\n            ).length > 0\n        ).then(() => {\n            reportSuccess()\n        });\n    }\n\n    render() {\n        return null; // This never actually displays - we just mount, open the page, and close\n    }\n\n}\n\nfunction getIOSRequestIds(eventsStore: EventsStore) {\n    return eventsStore.exchanges.filter((exchange) =>\n        _.isEqual(exchange.request.source.icon, SourceIcons.iOS)\n    ).map(e => e.id);\n}\n\nexport const ManualIOSCustomUi = {\n    columnWidth: 1,\n    rowHeight: 1,\n    configComponent: ManualIOSConfig\n};","import * as _ from \"lodash\";\n\nimport { ServerInterceptor } from \"../../services/server-api\";\nimport {\n    versionSatisfies,\n    DETAILED_CONFIG_RANGE,\n    WEBRTC_GLOBALLY_ENABLED\n} from \"../../services/service-versions\";\nimport { IconProps, SourceIcons } from \"../../icons\";\nimport { AccountStore } from \"../account/account-store\";\n\nimport { InterceptorCustomUiConfig } from \"../../components/intercept/intercept-option\";\nimport { ManualInterceptCustomUi } from \"../../components/intercept/config/manual-intercept-config\";\nimport { ExistingTerminalCustomUi } from \"../../components/intercept/config/existing-terminal-config\";\nimport { ElectronCustomUi } from '../../components/intercept/config/electron-config';\nimport { AndroidDeviceCustomUi } from \"../../components/intercept/config/android-device-config\";\nimport { AndroidAdbCustomUi } from \"../../components/intercept/config/android-adb-config\";\nimport { ExistingBrowserCustomUi } from \"../../components/intercept/config/existing-browser-config\";\nimport { JvmCustomUi } from \"../../components/intercept/config/jvm-config\";\nimport { DockerAttachCustomUi } from \"../../components/intercept/config/docker-attach-config\";\nimport { ManualIOSCustomUi } from \"../../components/intercept/config/manual-ios-config\";\n\ninterface InterceptorConfig {\n    name: string;\n    description: string[];\n    iconProps: IconProps | Array<IconProps>;\n    tags: string[];\n    inProgress?: boolean;\n    clientOnly?: true;\n    checkRequirements?: (options: {\n        interceptorVersion: string,\n        accountStore: AccountStore,\n        serverVersion?: string\n    }) => boolean;\n    uiConfig?: InterceptorCustomUiConfig;\n    getActivationOptions?: (options: {\n        accountStore: AccountStore,\n        serverVersion?: string\n    }) => unknown;\n    notAvailableHelpUrl?: string;\n}\n\nexport type Interceptor =\n    Pick<ServerInterceptor, Exclude<keyof ServerInterceptor, 'version'>> &\n    InterceptorConfig &\n    { version?: string, isSupported: boolean, activationOptions: unknown | undefined };\n\nconst BROWSER_TAGS = ['browsers', 'web', 'pwa'];\nconst JVM_TAGS = ['jvm', 'java', 'scala', 'kotlin', 'clojure', 'groovy'];\nconst MOBILE_TAGS = ['mobile', 'phone', 'app'];\nconst ANDROID_TAGS = ['samsung', 'galaxy', 'nokia', 'lg', 'android', 'google', 'motorola', ...JVM_TAGS];\nconst IOS_TAGS = ['apple', 'ios', 'iphone', 'ipad'];\nconst DOCKER_TAGS = ['bridge', 'services', 'images'];\nconst TERMINAL_TAGS = ['command line', 'cli', 'docker', 'bash', 'cmd', 'shell', 'php', 'ruby', 'node', 'js', ...JVM_TAGS];\n\nconst androidInterceptIconProps = _.assign({\n    style: { transform: 'translateY(32px)' }\n}, SourceIcons.Android);\n\nconst recoloured = (icon: IconProps, color: string) => ({ ...icon, color });\n\nexport const MANUAL_INTERCEPT_ID = 'manual-setup';\n\nconst getChromiumOptions = ({ accountStore, serverVersion }: {\n    accountStore: AccountStore,\n    serverVersion?: string\n}) => ({\n    webExtensionEnabled: accountStore.featureFlags.includes('webrtc') ||\n        versionSatisfies(serverVersion || '', WEBRTC_GLOBALLY_ENABLED)\n});\n\nconst INTERCEPT_OPTIONS: _.Dictionary<InterceptorConfig> = {\n    'docker-attach': {\n        name: 'Attach to Docker Container',\n        description: [\"Intercept all traffic from running Docker containers\"],\n        uiConfig: DockerAttachCustomUi,\n        iconProps: SourceIcons.Docker,\n        tags: DOCKER_TAGS\n    },\n    'fresh-chrome': {\n        name: 'Chrome',\n        description: [\"Intercept a fresh independent Chrome window\"],\n        iconProps: SourceIcons.Chrome,\n        tags: BROWSER_TAGS,\n        getActivationOptions: getChromiumOptions\n    },\n    'existing-chrome': {\n        name: 'Global Chrome',\n        description: [\n            \"Intercept your main Chrome profile globally\",\n            \"This captures all default Chrome traffic, so may interfere with normal usage\"\n        ],\n        uiConfig: ExistingBrowserCustomUi,\n        iconProps: [\n            SourceIcons.Chrome,\n            { icon: ['fas', 'globe'], color: '#fafafa', size: '2x' }\n        ],\n        tags: BROWSER_TAGS,\n        getActivationOptions: getChromiumOptions\n    },\n    'fresh-chrome-beta': {\n        name: 'Chrome (Beta)',\n        description: [\"Intercept a fresh independent Chrome window\"],\n        iconProps: recoloured(SourceIcons.Chrome, '#DB4437'),\n        tags: BROWSER_TAGS,\n        getActivationOptions: getChromiumOptions\n    },\n    'fresh-chrome-dev': {\n        name: 'Chrome (Dev)',\n        description: [\"Intercept a fresh independent Chrome window\"],\n        iconProps: recoloured(SourceIcons.Chrome, '#74929f'),\n        tags: BROWSER_TAGS,\n        getActivationOptions: getChromiumOptions\n    },\n    'fresh-chrome-canary': {\n        name: 'Chrome (Canary)',\n        description: [\"Intercept a fresh independent Chrome window\"],\n        iconProps: recoloured(SourceIcons.Chrome, '#e8ab01'),\n        tags: BROWSER_TAGS,\n        getActivationOptions: getChromiumOptions\n    },\n    'fresh-chromium': {\n        name: 'Chromium',\n        description: [\"Intercept a fresh independent Chromium window\"],\n        iconProps: SourceIcons.Chromium,\n        tags: BROWSER_TAGS,\n        getActivationOptions: getChromiumOptions\n    },\n    'fresh-chromium-dev': {\n        name: 'Chromium (Dev)',\n        description: [\"Intercept a fresh independent Chromium window\"],\n        iconProps: recoloured(SourceIcons.Chromium, '#74929f'),\n        tags: BROWSER_TAGS,\n        getActivationOptions: getChromiumOptions\n    },\n    'fresh-brave': {\n        name: 'Brave',\n        description: [\"Intercept a fresh independent Brave window\"],\n        iconProps: SourceIcons.Brave,\n        tags: BROWSER_TAGS,\n        getActivationOptions: getChromiumOptions\n    },\n    'fresh-firefox': {\n        name: 'Firefox',\n        description: [\"Intercept a fresh independent Firefox window\"],\n        iconProps: SourceIcons.Firefox,\n        tags: BROWSER_TAGS,\n        checkRequirements: ({ interceptorVersion }) => {\n            return versionSatisfies(interceptorVersion, \"^1.1.0\")\n        },\n    },\n    'existing-arc': {\n        name: 'Global Arc Browser',\n        description: [\n            \"Intercept Arc Browser globally on this machine\",\n            \"This captures all Arc traffic, so may interfere with normal usage\"\n        ],\n        iconProps: SourceIcons.Arc,\n        tags: BROWSER_TAGS,\n        getActivationOptions: getChromiumOptions,\n        checkRequirements: ({ accountStore }) =>\n            accountStore.featureFlags.includes('arc-browser')\n    },\n    'fresh-safari': {\n        name: 'Safari',\n        description: [\"Intercept a fresh independent Safari window\"],\n        iconProps: SourceIcons.Safari,\n        tags: BROWSER_TAGS\n    },\n    'fresh-edge': {\n        name: 'Edge',\n        description: [\"Intercept a fresh independent Edge window\"],\n        iconProps: SourceIcons.Edge,\n        tags: BROWSER_TAGS,\n        getActivationOptions: getChromiumOptions\n    },\n    'fresh-edge-beta': {\n        name: 'Edge (Beta)',\n        description: [\"Intercept a fresh independent Edge window\"],\n        iconProps: recoloured(SourceIcons.Edge, '#50e6ff'),\n        tags: BROWSER_TAGS,\n        getActivationOptions: getChromiumOptions\n    },\n    'fresh-edge-dev': {\n        name: 'Edge (Dev)',\n        description: [\"Intercept a fresh independent Edge window\"],\n        iconProps: recoloured(SourceIcons.Edge, '#74929f'),\n        tags: BROWSER_TAGS,\n        getActivationOptions: getChromiumOptions\n    },\n    'fresh-edge-canary': {\n        name: 'Edge (Canary)',\n        description: [\"Intercept a fresh independent Edge window\"],\n        iconProps: recoloured(SourceIcons.Edge, '#ffc225'),\n        tags: BROWSER_TAGS,\n        getActivationOptions: getChromiumOptions\n    },\n    'fresh-opera': {\n        name: 'Opera',\n        description: [\"Intercept a fresh independent Opera window\"],\n        iconProps: SourceIcons.Opera,\n        tags: BROWSER_TAGS,\n        checkRequirements: ({ interceptorVersion }) => {\n            return versionSatisfies(interceptorVersion, \"^1.0.3\")\n        },\n        getActivationOptions: getChromiumOptions\n    },\n    'attach-jvm': {\n        name: 'Attach to JVM',\n        description: [\n            'Attach to any local running JVM process, including Java, Kotlin & Clojure'\n        ],\n        iconProps: SourceIcons.Java,\n        uiConfig: JvmCustomUi,\n        tags: JVM_TAGS\n    },\n    'fresh-terminal': {\n        name: 'Fresh Terminal',\n        description: [\"Open a new terminal that intercepts all processes & Docker containers\"],\n        iconProps: SourceIcons.Terminal,\n        tags: TERMINAL_TAGS\n    },\n    'existing-terminal': {\n        name: 'Existing Terminal',\n        description: [\"Intercept all launched processes & Docker containers from an existing terminal window\"],\n        iconProps: recoloured(SourceIcons.Terminal, '#dd44dd'),\n        uiConfig: ExistingTerminalCustomUi,\n        tags: TERMINAL_TAGS\n    },\n    'android-adb': {\n        name: 'Android Device via ADB',\n        description: [\n            'Intercept an Android device or emulator connected to ADB',\n            'Automatically injects system HTTPS certificates into rooted devices & most emulators'\n        ],\n        notAvailableHelpUrl: 'https://httptoolkit.com/docs/guides/android/#android-device-via-adb-interception-option-is-not-available',\n        iconProps: androidInterceptIconProps,\n        checkRequirements: ({ serverVersion }) => {\n            return versionSatisfies(serverVersion || '', DETAILED_CONFIG_RANGE);\n        },\n        uiConfig: AndroidAdbCustomUi,\n        tags: [...MOBILE_TAGS, ...ANDROID_TAGS, 'emulator', 'root', 'adb']\n    },\n    'android-device': {\n        name: 'Android Device via QR code',\n        description: [\n            'Intercept any Android device on your network',\n            'Manual setup required for HTTPS in some apps'\n        ],\n        iconProps: recoloured(androidInterceptIconProps, '#4285F4'),\n        checkRequirements: ({ serverVersion }) => {\n            return versionSatisfies(serverVersion || '', DETAILED_CONFIG_RANGE);\n        },\n        clientOnly: true,\n        uiConfig: AndroidDeviceCustomUi,\n        tags: [...MOBILE_TAGS, ...ANDROID_TAGS]\n    },\n    'manual-ios-device': {\n        name: 'iOS via Manual Setup',\n        description: [\"Manually intercept all HTTP and HTTPS traffic from any iPhone or iPad\"],\n        iconProps: SourceIcons.iOS,\n        clientOnly: true,\n        uiConfig: ManualIOSCustomUi,\n        tags: [...MOBILE_TAGS, ...IOS_TAGS]\n    },\n    'ios-device': {\n        name: 'Automatic iOS Device Setup',\n        description: [\"Intercept all HTTP traffic from an iOS device on your network\"],\n        iconProps: SourceIcons.iOS,\n        tags: [...MOBILE_TAGS, ...IOS_TAGS]\n    },\n    'network-device': {\n        name: 'A Device on Your Network',\n        description: [\"Intercept all HTTP traffic from another device on your network\"],\n        iconProps: SourceIcons.Network,\n        tags: [...MOBILE_TAGS, ...IOS_TAGS, ...ANDROID_TAGS, 'lan', 'arp', 'wifi']\n    },\n    'virtualbox-machine': {\n        name: 'A Virtualbox VM',\n        description: [\"Intercept all traffic from a Virtualbox VM\"],\n        iconProps: SourceIcons.Desktop,\n        tags: ['virtual machine', 'vagrant']\n    },\n    'system-proxy': {\n        name: 'Everything',\n        description: [\"Intercept all HTTP traffic on this machine\"],\n        iconProps: SourceIcons.Desktop,\n        tags: ['local', 'machine', 'system', 'me']\n    },\n    'electron': {\n        name: 'Electron Application',\n        description: [\"Launch an Electron application with all its traffic intercepted\"],\n        iconProps: SourceIcons.Electron,\n        uiConfig: ElectronCustomUi,\n        tags: ['electron', 'desktop', 'postman']\n    },\n    [MANUAL_INTERCEPT_ID]: {\n        name: 'Anything',\n        description: [\"Manually configure any source using the proxy settings and CA certificate\"],\n        iconProps: SourceIcons.Unknown,\n        clientOnly: true,\n        uiConfig: ManualInterceptCustomUi,\n        tags: []\n    }\n};\n\nexport function getInterceptOptions(\n    serverInterceptorArray: ServerInterceptor[],\n    accountStore: AccountStore,\n    serverVersion?: string\n) {\n    const serverInterceptors = _.keyBy(serverInterceptorArray, 'id');\n\n    return _.mapValues(INTERCEPT_OPTIONS, (option, id) => {\n        if (\n            // If we need a server interceptor & it's not present\n            (!option.clientOnly && !serverInterceptors[id]) ||\n            // Or if we're missing other requirement (specific server version,\n            // feature flags, etc)\n            (option.checkRequirements && !option.checkRequirements({\n                interceptorVersion: (serverInterceptors[id] || {}).version,\n                accountStore,\n                serverVersion\n            }))\n        ) {\n            // The UI knows about this interceptor, but we can't use it for some reason.\n            return _.assign({}, option, {\n                id: id,\n                isSupported: false,\n                isActive: false,\n                isActivable: false,\n                activationOptions: undefined\n            });\n        } else if (option.clientOnly) {\n            // Some interceptors don't need server support at all, so as long as the requirements\n            // are fulfilled, they're always supported & activable (e.g. manual setup guide).\n            return _.assign({}, option, {\n                id: id,\n                isSupported: true,\n                isActive: false,\n                isActivable: true,\n                activationOptions: option.getActivationOptions\n                    ? option.getActivationOptions({\n                        accountStore,\n                        serverVersion\n                    })\n                    : undefined\n            });\n        } else {\n            // For everything else: the UI & server supports this, we let the server tell us\n            // if it's activable/currently active.\n            const serverInterceptor = serverInterceptors[id];\n\n            return _.assign({}, option, serverInterceptor, {\n                id,\n                isSupported: true,\n                activationOptions: option.getActivationOptions\n                    ? option.getActivationOptions({\n                        accountStore,\n                        serverVersion\n                    })\n                    : undefined\n            });\n        }\n    });\n}\n","import { observable, runInAction, flow, action } from \"mobx\";\n\nimport { lazyObservablePromise } from \"../../util/observable\";\n\nimport { ProxyStore } from \"../proxy-store\";\nimport { AccountStore } from \"../account/account-store\";\n\nimport { getInterceptors, activateInterceptor } from \"../../services/server-api\";\nimport { serverVersion as serverVersionPromise } from '../../services/service-versions';\nimport { Interceptor, getInterceptOptions } from \"./interceptors\";\n\nexport class InterceptorStore {\n\n    constructor(\n        private proxyStore: ProxyStore,\n        private accountStore: AccountStore\n    ) {\n        this.interceptors = getInterceptOptions([], accountStore);\n    }\n\n    readonly initialized = lazyObservablePromise(async () => {\n        await Promise.all([\n            this.proxyStore.initialized,\n            this.accountStore.initialized\n        ]);\n\n        await this.refreshInterceptors();\n\n        const refreshInterceptorInterval = setInterval(() =>\n            this.refreshInterceptors()\n        , 10000);\n\n        window.addEventListener('beforeunload', () => {\n            clearInterval(refreshInterceptorInterval);\n        });\n\n        console.log('Interceptor store initialized');\n    });\n\n    @observable interceptors: _.Dictionary<Interceptor>;\n\n    async refreshInterceptors() {\n        const serverInterceptors = await getInterceptors(this.proxyStore.httpProxyPort);\n        const serverVersion = await serverVersionPromise;\n\n        runInAction(() => {\n            const supportedInterceptors = getInterceptOptions(\n                serverInterceptors,\n                this.accountStore,\n                serverVersion\n            );\n\n            // Quick patch for a bug in existing-chrome for server <= 1.1.2 which incorrectly\n            // always reports existing Chrome as activable:\n            if (\n                !supportedInterceptors['fresh-chrome'].isActivable &&\n                supportedInterceptors['existing-chrome'].isActivable\n            ) {\n                supportedInterceptors['existing-chrome'].isActivable = false;\n            }\n\n            this.interceptors = supportedInterceptors;\n        });\n    }\n\n    @action.bound\n    activateInterceptor = (interceptorId: string, options?: any): Promise<unknown | true> => {\n        this.interceptors[interceptorId].inProgress = true;\n\n        return activateInterceptor(\n            interceptorId,\n            this.proxyStore.httpProxyPort,\n            options\n        ).then(\n            (metadata) => metadata || true\n        ).finally(action(() => {\n            this.interceptors[interceptorId].inProgress = false;\n            this.refreshInterceptors();\n        }));\n    };\n}","import * as _ from 'lodash';\nimport { observable, observe, computed } from \"mobx\";\nimport * as localForage from 'localforage';\nimport * as serializr from 'serializr';\nimport { findApi as findPublicOpenApi } from 'openapi-directory';\n\nimport { HtkRequest } from '../../types';\nimport { logError } from '../../errors';\nimport { lazyObservablePromise } from \"../../util/observable\";\nimport { hydrate, persist } from \"../../util/mobx-persist/persist\";\n\nimport { AccountStore } from \"../account/account-store\";\nimport { ApiMetadata, ApiSpec } from \"./api-interfaces\";\nimport { buildApiMetadataAsync } from '../../services/ui-worker-api';\nimport { matchOpenApiOperation } from './openapi';\nimport { serializeRegex, serializeMap } from '../serialization';\n\nasync function fetchApiMetadata(specId: string): Promise<ApiSpec> {\n    const specResponse = await fetch(`/api/${specId}.json`);\n    return specResponse.json();\n}\n\nconst apiMetadataSchema = serializr.createSimpleSchema({\n    spec: serializr.raw(),\n    serverMatcher: serializeRegex,\n    requestMatchers: serializeMap(\n        serializr.object(\n            serializr.createSimpleSchema({\n                pathMatcher: serializeRegex,\n                queryMatcher: serializr.raw()\n            })\n        ),\n        serializr.custom(\n            ({ path }: { path: string }) => path,\n            (path: string, context: serializr.Context) => ({\n                path,\n                pathSpec: context.json.spec.paths[path]\n            })\n        )\n    )\n});\n\n// In addition to the public OpenAPI directory, we have a few extra APIs (stored in\n// this repo in /extra-apis) that we match seprately:\nconst EXTRA_APIS: { [urlPrefix: string]: 'ipfs' | 'ethereum' } = {\n    // See the 'servers' field in /extra-apis/ipfs.json:\n    'localhost:5001/api/v0': 'ipfs',\n    '127.0.0.1:5001/api/v0': 'ipfs',\n    'localhost:5002/api/v0': 'ipfs',\n    '127.0.0.1:5002/api/v0': 'ipfs',\n    'ipfs.infura.io:5001/api/v0': 'ipfs',\n\n    // See the 'servers' field in /extra-apis/ethereum.json:\n    'localhost:8545/': 'ethereum',\n    '127.0.0.1:8545/': 'ethereum',\n    'mainnet.': 'ethereum',\n    'ropsten.': 'ethereum',\n    'rinkeby.': 'ethereum',\n    'kovan.': 'ethereum',\n    'goerli.': 'ethereum',\n    'mainnet-': 'ethereum',\n    'web3.ens.domains/v1/mainnet': 'ethereum'\n};\n\nfunction findPublicApi(url: string) {\n    const openApiId = findPublicOpenApi(url);\n\n    if (openApiId) return openApiId;\n\n    const matchingExtraApiKey = Object.keys(EXTRA_APIS)\n        .find((apiPrefix) => url.startsWith(apiPrefix));\n\n    if (matchingExtraApiKey) return EXTRA_APIS[matchingExtraApiKey];\n    else return undefined;\n}\n\nexport class ApiStore {\n\n    constructor(\n        private accountStore: AccountStore\n    ) { }\n\n    readonly initialized = lazyObservablePromise(async () => {\n        await this.accountStore.initialized;\n\n        // Every time the user account data is updated from the server, consider resetting\n        // paid settings to the free defaults. This ensures that they're reset on\n        // logout & subscription expiration (even if that happened while the app was\n        // closed), but don't get reset when the app starts with stale account data.\n        observe(this.accountStore, 'accountDataLastUpdated', () => {\n            if (!this.accountStore.isPaidUser) this.customOpenApiSpecs = {};\n        });\n\n        await hydrate({\n            // Stored in WebSQL, not local storage, for performance because specs can be *big*\n            storage: localForage,\n            jsonify: false,\n            key: 'api-store',\n            store: this\n        });\n\n        console.log('API store initialized');\n    });\n\n    @persist('map', apiMetadataSchema) @observable.shallow\n    private customOpenApiSpecs: _.Dictionary<ApiMetadata> = {};\n\n    addCustomApi(baseUrl: string, apiMetadata: ApiMetadata) {\n        this.customOpenApiSpecs[baseUrl] = apiMetadata;\n    }\n\n    deleteCustomApi(baseUrl: string) {\n        delete this.customOpenApiSpecs[baseUrl];\n    }\n\n    // Exposes the info from all openAPI specs, for convenient listing\n    // Not the whole spec because we want to clone, that'd be expensive,\n    // and in general nobody should ever iterate over the details of all specs\n    @computed get customOpenApiInfo() {\n        return _.mapValues(this.customOpenApiSpecs, (api) => ({\n            info: _.cloneDeep(api.spec.info)\n        }));\n    }\n\n    @computed private get customOpenApiSpecsByUrl() {\n        return new Map<URL, ApiMetadata>(\n            (Object.entries(this.customOpenApiSpecs).map(([rawUrl, spec]) => {\n                // We want to prepare the base URLs for easy lookup. We need a protocol\n                // to parse them, so we use https, but these will match HTTP too.\n                return [\n                    new URL('https://' + rawUrl.replace(/\\/$/, '')),\n                    spec\n                ];\n            }) as Array<[URL, ApiMetadata]>)\n            .sort(([urlA, _apiA], [urlB, _apiB]) => {\n                // Ports before non-ports, then longer paths before shorter ones.\n                if (urlA.port && !urlB.port) return -1;\n                if (urlB.port && !urlA.port) return 1;\n                return urlB.pathname.length - urlA.pathname.length;\n            })\n        );\n    }\n\n    private getPrivateApi(url: URL) {\n        // Find a base URL with the same domain, maybe port, and initial path substring\n        const apiBaseUrl = _.find([...this.customOpenApiSpecsByUrl.keys()], (baseUrl) => {\n            return baseUrl.hostname === url.hostname &&\n                (\n                    !baseUrl.port ||\n                    baseUrl.port === url.port ||\n                    baseUrl.port === '443' && url.protocol === 'https' ||\n                    baseUrl.port === '80' && url.protocol === 'http'\n                ) &&\n                url.pathname.startsWith(baseUrl.pathname)\n        });\n\n        return apiBaseUrl\n            ? this.customOpenApiSpecsByUrl.get(apiBaseUrl)\n            : undefined;\n    }\n\n    private publicApiCache: _.Dictionary<Promise<ApiMetadata>> = {};\n\n    private getPublicApi(specId: string) {\n        const { publicApiCache } = this;\n        if (!publicApiCache[specId]) {\n            publicApiCache[specId] = fetchApiMetadata(specId)\n                .then(buildApiMetadataAsync)\n                .catch((e) => {\n                    console.log(`Failed to build API ${specId}`);\n                    logError(e, {\n                        apiSpecId: specId\n                    });\n                    throw e;\n                });\n        }\n        return publicApiCache[specId];\n    }\n\n    async getApi(request: HtkRequest): Promise<ApiMetadata | undefined> {\n        const { parsedUrl } = request;\n\n        // Is this a configured private API? I.e. has the user explicitly given\n        // us a spec to use for requests like these.\n        let privateSpec = this.getPrivateApi(parsedUrl);\n        if (privateSpec) {\n            return Promise.resolve(privateSpec);\n        }\n\n        // If not, is this a known public API? (note that private always has precedence)\n        const requestUrl = `${parsedUrl.host}${parsedUrl.pathname}`;\n\n        let publicSpecId = findPublicApi(requestUrl);\n        if (!publicSpecId) return;\n        if (!Array.isArray(publicSpecId)) publicSpecId = [publicSpecId];\n\n        // The graph API is enormous and doesn't actually build due to\n        // https://github.com/microsoftgraph/microsoft-graph-openapi/issues/9.\n        // Skip it rather than waiting ages before failing anyway.\n        publicSpecId = publicSpecId.filter(specId => specId !== 'microsoft.com/graph');\n\n        const publicSpecs = await Promise.all(\n            publicSpecId.map((specId) => this.getPublicApi(specId))\n        );\n\n        if (publicSpecs.length === 1) {\n            return publicSpecs[0];\n        }\n\n        // If this matches multiple APIs, we fetch and build all of them, and then\n        // use the best match (the one with the matching operation, hopefully)\n        return findBestMatchingApi(publicSpecs, request);\n    }\n\n}\n\n// If we match multiple APIs, build all of them, try to match each one\n// against the request, and return only the matching one. This happens if\n// multiple services have the exact same base request URL (rds.amazonaws.com)\nexport function findBestMatchingApi(\n    apis: ApiMetadata[],\n    request: HtkRequest\n): ApiMetadata | undefined {\n    const matchingApis = apis.filter((api) =>\n        api.type == 'openrpc' || // Since we have so few JSON-RPC APIs, we assume they match\n        matchOpenApiOperation(api, request).matched // For OpenAPI, we check for a matching op\n    );\n\n    // If we've successfully found one matching API, return it\n    if (matchingApis.length === 1) return matchingApis[0];\n\n    // If this is a non-matching request to one of these APIs, but we're not\n    // sure which, return the one with the most paths (as a best guess metric of\n    // which is the most popular service)\n    if (matchingApis.length === 0) return _.maxBy(apis, a => a.spec.paths.length)!;\n\n    // Otherwise we've matched multiple APIs which all define operations that\n    // could be this one request. Does exist right now (e.g. AWS RDS vs DocumentDB)\n\n    // Report this so we can try to improve & avoid in future.\n    logError('Overlapping APIs', matchingApis);\n\n    // Return our guess of the most popular service, from the matching services only\n    return _.maxBy(matchingApis, a => Object.keys(a.spec.paths).length)!;\n}","export var ServiceWorkerNoSupportError = (function() {\n\n\tfunction ServiceWorkerNoSupportError() {\n\t\tvar err = Error.call(this, 'ServiceWorker is not supported.');\n\t\tObject.setPrototypeOf(err, ServiceWorkerNoSupportError.prototype);\n\t\treturn err;\n\t}\n\n\tServiceWorkerNoSupportError.prototype = Object.create(Error.prototype);\n\n\treturn ServiceWorkerNoSupportError;\n})();\n\nexport var scriptUrl = \"/\" + \"ui-update-worker.js\";\n\nexport default function registerServiceWorkerIfSupported(mapScriptUrlOrOptions, maybeOptions) {\n\n\tvar targetScriptUrl = scriptUrl;\n\tvar options = maybeOptions;\n\n\tif (typeof mapScriptUrlOrOptions === 'function') {\n\t\ttargetScriptUrl = mapScriptUrlOrOptions(targetScriptUrl);\n\t} else {\n\t\toptions = mapScriptUrlOrOptions;\n\t}\n\n\tif ('serviceWorker' in navigator) {\n\t\treturn navigator.serviceWorker.register(targetScriptUrl, options);\n\t}\n\n\treturn Promise.reject(new ServiceWorkerNoSupportError());\n}\n","import registerUpdateWorker, {\n    ServiceWorkerNoSupportError\n} from 'service-worker-loader!./ui-update-worker';\n\nimport { triggerServerUpdate } from './server-api';\n\nimport packageMetadata from '../../package.json';\nimport { desktopVersion, serverVersion, versionSatisfies } from './service-versions';\n\nexport const attemptServerUpdate = () =>\n    triggerServerUpdate().catch(console.warn);\n\n// Set up a SW in the background, to add offline support & instant startup.\n// This also checks for new UI & server versions at intervals.\nexport async function runBackgroundUpdates() {\n    // Try to trigger a server update. Can't guarantee it'll work, and we also trigger it\n    // after successful startup, but this tries to ensure that even if startup is broken,\n    // we still update the server (and hopefully thereby unbreak app startup).\n    attemptServerUpdate();\n\n    try {\n        const registration = await registerUpdateWorker({ scope: '/' });\n        console.log('Service worker loaded');\n        registration.update().catch(console.log);\n\n        // Check for server & UI updates every 5 minutes:\n        setInterval(() => {\n            attemptServerUpdate();\n            registration.update().catch(console.log);\n        }, 1000 * 60 * 5);\n    } catch (e) {\n        if (e instanceof ServiceWorkerNoSupportError) {\n            console.warn('Service worker not supported - cached & offline startup will not be available');\n            return;\n        }\n        throw e;\n    }\n}\n\nfunction showPleaseUpdateMessage() {\n    alert(\n        \"This HTTP Toolkit installation is now very outdated, and this version is \" +\n        \"no longer supported.\" +\n        \"\\n\\n\" +\n        \"You can continue to use HTTP Toolkit, but you may experience issues & \" +\n        \"instability.\" +\n        \"\\n\\n\" +\n        \"Please update to the latest version from httptoolkit.com when you can, \" +\n        \"to access the many new features, bug fixes & performance improvements \" +\n        \"available there.\"\n    );\n}\n\nexport function checkForOutdatedComponents() {\n    const { runtimeDependencies } = packageMetadata;\n\n    let hasShownUpdateMessage = false;\n\n    serverVersion.then((serverVersion) => {\n        if (versionSatisfies(serverVersion, runtimeDependencies['httptoolkit-server'])) return;\n        if (hasShownUpdateMessage) return;\n\n        // This one should be _very_ rare, since the server always auto-updates - it'll only\n        // affect systems where that is failing for some reason, for years.\n\n        showPleaseUpdateMessage();\n        hasShownUpdateMessage = true;\n    }).catch(() => {});\n\n    desktopVersion.then((desktopVersion) => {\n        if (versionSatisfies(desktopVersion, runtimeDependencies['httptoolkit-desktop'])) return;\n        if (hasShownUpdateMessage) return;\n\n        // This will trigger for a few users, but not many - below 0.2% of weekly users right now\n\n        showPleaseUpdateMessage();\n        hasShownUpdateMessage = true;\n    }).catch(() => {});\n}","import * as React from 'react';\nimport { StyledComponent } from 'styled-components';\nimport { observer } from 'mobx-react';\nimport { Link, Match } from '@reach/router';\nimport * as dedent from 'dedent';\n\nimport { styled, css, Theme } from '../styles';\nimport { Icon, IconProp } from '../icons';\nimport { UI_VERSION, desktopVersion, serverVersion } from '../services/service-versions';\n\nimport { UnstyledButton } from './common/inputs';\nimport * as logo from '../images/logo-icon.svg';\n\nexport interface SidebarItem {\n    name: string;\n    icon: IconProp;\n    position: 'top' | 'bottom';\n    highlight?: true;\n\n    type: 'web' | 'router' | 'callback';\n    title: string;\n    url?: string;\n    onClick?: () => void;\n}\n\ninterface SidebarProps {\n    items: Array<SidebarItem>;\n}\n\nexport const SIDEBAR_WIDTH = '80px';\n\nconst SidebarNav = styled.nav`\n    width: ${SIDEBAR_WIDTH};\n    flex-shrink: 0;\n\n    background-color: ${p => p.theme.mainBackground};\n    color: ${p => p.theme.mainColor};\n    z-index: 5;\n\n    border-right: 1px solid rgba(0,0,0,0.12);\n    box-sizing: border-box;\n    box-shadow: 0 0 30px rgba(0,0,0,${p => p.theme.boxShadowAlpha});\n\n    font-size: ${p => p.theme.textSize};\n\n    display: flex;\n    flex-direction: column;\n`\n\nconst sidebarItemStyles = css`\n    width: 70px;\n    height: 70px;\n    margin: 0 auto;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n\n    box-sizing: border-box;\n`;\n\nconst SidebarLogo = styled.img.attrs(() => ({\n    src: logo,\n    alt: 'HTTP Toolkit logo'\n}))`\n    ${sidebarItemStyles}\n    padding: 8px;\n`\n\nconst SidebarSelectableItem = styled(Link)`\n    ${sidebarItemStyles}\n\n    color: ${p => p.theme.mainColor};\n    text-decoration: none;\n    line-height: normal;\n\n    width: calc(100% + 2px);\n    margin: 0 -1px;\n\n    cursor: pointer;\n    user-select: none;\n    &:hover, &:focus {\n        outline: none;\n        color: ${p => p.theme.popColor};\n    }\n\n    border-width: 0 5px;\n    border-style: solid;\n    border-color: transparent;\n\n    opacity: 0.6;\n\n    ${(p: { selected: boolean }) => p.selected && css`{\n        opacity: 1;\n        border-right-color: ${p => p.theme.popColor};\n    }`}\n\n    > svg {\n        margin-bottom: 5px;\n    }\n`;\n\nconst Separator = styled.div`\n    margin-top: auto;\n`;\n\nconst SidebarLink = styled.a<{ highlight?: true }>`\n    ${sidebarItemStyles}\n\n    ${(p) => p.highlight && css`\n        color:  ${p.theme.popColor};\n        font-weight: bold;\n    `};\n\n    &:hover, &:focus {\n        outline: none;\n        color: ${p => p.highlight ? p.theme.mainColor : p.theme.popColor};\n    }\n\n    text-decoration: none;\n\n    margin-bottom: 5px;\n\n    > svg {\n        margin-bottom: 5px;\n    }\n`;\n\nconst SidebarButton = styled(\n    UnstyledButton as StyledComponent<\"button\", Theme, { highlight?: boolean }>\n)`\n    ${sidebarItemStyles}\n\n    opacity: 0.6;\n\n    ${(p) => p.highlight && css`\n        color:  ${p.theme.popColor};\n        font-weight: bold;\n    `};\n\n    > svg {\n        margin-bottom: 5px;\n    }\n`;\n\nexport const Sidebar = observer((props: SidebarProps) => {\n    const items = props.items.map((item, i) => {\n        const itemContent = <>\n            <Icon size='2x' icon={item.icon} />\n            {item.name}\n        </>;\n\n        if (item.type === 'web') {\n            return {\n                position: item.position,\n                component: <SidebarLink\n                    key={item.name}\n                    title={item.title}\n                    highlight={item.highlight}\n                    href={item.url}\n                    target='_blank'\n                >\n                    { itemContent }\n                </SidebarLink>\n            }\n        } else if (item.type === 'router') {\n            return {\n                position: item.position,\n                component: <Match\n                    key={item.name}\n                    path={`${item.url!}/*`}\n                >{({ match }) =>\n                    <SidebarSelectableItem\n                        to={item.url}\n                        title={item.title}\n                        selected={!!match}\n                    >\n                        { itemContent }\n                    </SidebarSelectableItem>\n                }</Match>\n            };\n        } else {\n            return {\n                position: item.position,\n                component: <SidebarButton\n                    key={item.name}\n                    title={item.title}\n                    highlight={item.highlight}\n                    onClick={item.onClick}\n                >\n                    { itemContent }\n                </SidebarButton>\n            };\n        }\n    });\n\n    return <SidebarNav>\n        <SidebarLogo\n            title={dedent`\n                UI version: ${UI_VERSION.slice(0, 8)}\n                Desktop version: ${\n                    desktopVersion.state === 'fulfilled'\n                        ? desktopVersion.value\n                        : 'Unknown'\n                }\n                Server version: ${\n                    serverVersion.state === 'fulfilled'\n                        ? serverVersion.value\n                        : 'Unknown'\n                }\n            `}\n        />\n\n        {\n            items.filter(i => i.position === 'top').map((item) => item.component)\n        }\n        <Separator />\n        {\n            items.filter(i => i.position === 'bottom').map((item) => item.component)\n        }\n    </SidebarNav>;\n});","import * as React from 'react';\n\nimport { styled } from '../../styles';\nimport { TrafficSource } from '../../model/http/sources';\n\nimport { BigCard } from \"../common/card\";\nimport { Icon } from '../../icons';\n\nconst ConnectedSource = styled.div`\n    &:not(:last-child) {\n        margin-bottom: 30px;\n    }\n\n    font-size: ${p => p.theme.headingSize};\n\n    > svg {\n        margin-right: 30px;\n    }\n`;\n\nexport const ConnectedSources = styled((props: { activeSources: TrafficSource[], className?: string }) =>\n    <BigCard className={props.className}>\n        <h1>Connected Sources</h1>\n        {\n            props.activeSources.length ?\n                props.activeSources.map((source) =>\n                    <ConnectedSource key={source.ua} title={source.ua}>\n                        <Icon {...source.icon} fixedWidth={true} />\n                        { source.summary }\n                    </ConnectedSource>\n                )\n            : null\n        }\n    </BigCard>\n)``; // Styled here so that we can target this with selectors in SC styles elsewhere","import * as _ from 'lodash';\nimport * as React from 'react';\n\nimport { styled } from '../../styles';\nimport { Icon, IconProp, SizeProp } from '../../icons';\nimport { filterProps } from '../component-utils';\nimport { TextInput } from './inputs';\n\nconst SearchInput = styled(TextInput)`\n    width: 100%;\n    padding: 15px;\n    box-sizing: border-box;\n\n    box-shadow: inset 0 2px 4px 1px rgba(0, 0, 0, ${p => p.theme.boxShadowAlpha / 2});\n\n    font-size: ${p => p.theme.headingSize};\n`;\n\nconst ClearSearchButton = styled(filterProps(Icon, 'visible'))<{\n    visible: boolean,\n    icon: IconProp,\n    size?: SizeProp,\n    onClick: () => void\n}>`\n    position: absolute;\n\n    right: 15px;\n    top: 50%;\n    transform: translateY(-50%);\n    cursor: pointer;\n\n    display: ${p => p.visible ? 'block' : 'none'};\n`;\n\nexport const SearchBox = styled((props: {\n    className?: string,\n    value: string,\n    placeholder?: string,\n    autoFocus?: boolean,\n    onSearch: (input: string) => void,\n    iconSize?: SizeProp\n}) =>\n    <div className={props.className}>\n        <SearchInput\n            autoFocus={props.autoFocus}\n            value={props.value}\n            placeholder={props.placeholder}\n            onChange={(e) => props.onSearch(e.currentTarget.value)}\n        />\n        <ClearSearchButton\n            icon={['fas', 'times']}\n            size={props.iconSize}\n            onClick={() => props.onSearch('')}\n            visible={!!props.value}\n        />\n    </div>\n)`\n    position: relative;\n`;","import * as _ from 'lodash';\nimport * as React from 'react';\n\nimport { observable, action } from 'mobx';\nimport { observer, inject } from 'mobx-react';\n\nimport { WithInjected } from '../../types';\nimport { NARROW_LAYOUT_BREAKPOINT, styled } from '../../styles';\n\nimport { InterceptorStore } from '../../model/interception/interceptor-store';\nimport { EventsStore } from '../../model/events/events-store';\nimport { MANUAL_INTERCEPT_ID } from '../../model/interception/interceptors';\n\nimport { ConnectedSources } from './connected-sources';\nimport { InterceptOption } from './intercept-option';\nimport { SearchBox } from '../common/search-box';\n\ninterface InterceptPageProps {\n    className?: string;\n    interceptorStore: InterceptorStore;\n    eventsStore: EventsStore;\n    navigate: (path: string) => void;\n}\n\nconst InterceptPageContainer = styled.section`\n    display: grid;\n\n    @media (min-width: ${NARROW_LAYOUT_BREAKPOINT}px) {\n        grid-gap: 40px;\n        grid-template-columns: 1fr 1fr 1fr 1fr;\n        grid-template-rows: 320px;\n        padding: 60px 40px;\n    }\n\n    @media not (min-width: ${NARROW_LAYOUT_BREAKPOINT}px) {\n        grid-gap: 20px;\n        grid-template-columns: 1fr 1fr 1fr;\n        padding: 40px;\n    }\n\n    grid-auto-rows: minmax(200px, auto);\n    grid-auto-flow: row dense;\n\n    max-width: 1200px;\n    margin: 0 auto 20px;\n\n    > ${ConnectedSources} {\n        @media not (min-width: ${NARROW_LAYOUT_BREAKPOINT}px) {\n            display: none;\n        }\n\n        order: -1;\n        grid-column: 3 / span 2;\n        overflow-y: auto;\n        margin-bottom: 0;\n    }\n`;\n\nconst InterceptInstructions = styled.div`\n    order: -1;\n\n    @media (min-width: ${NARROW_LAYOUT_BREAKPOINT}px) {\n        grid-column: 1 / span 2;\n    }\n\n    @media not (min-width: ${NARROW_LAYOUT_BREAKPOINT}px) {\n        grid-column: 1 / -1;\n    }\n\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n\n    > h1 {\n        font-size: ${p => p.theme.loudHeadingSize};\n        font-weight: bold;\n        margin-bottom: 40px;\n    }\n\n    > p {\n        font-size: ${p => p.theme.headingSize};\n\n        margin-bottom: 20px;\n        text-align: left;\n        line-height: 1.2;\n    }\n`;\n\nconst InterceptSearchBox = styled(SearchBox).attrs(() => ({\n    autoFocus: true,\n    placeholder: 'Browsers, mobile, docker...',\n    iconSize: '2x'\n}))`\n    @media (min-width: ${NARROW_LAYOUT_BREAKPOINT}px) {\n        margin: 20px 0 0;\n    }\n`;\n\n@inject('interceptorStore')\n@inject('eventsStore')\n@observer\nclass InterceptPage extends React.Component<InterceptPageProps> {\n\n    @observable filter: string | false = false;\n\n    private readonly gridRef = React.createRef<HTMLDivElement>();\n\n    render(): JSX.Element {\n        const { interceptors } = this.props.interceptorStore;\n        const { activeSources } = this.props.eventsStore;\n\n        const filter = this.filter ? this.filter.toLocaleLowerCase() : false;\n\n        const visibleInterceptOptions = _.pickBy(interceptors, (option) =>\n            !filter ||\n            _.includes(option.name.toLocaleLowerCase(), filter) ||\n            _.includes(option.description.join(' ').toLocaleLowerCase(), filter) ||\n            _.some(option.tags, t => _.includes(t.toLocaleLowerCase(), filter))\n        );\n\n        if (!_.some(visibleInterceptOptions, (o) => o.isActivable)) {\n            visibleInterceptOptions[MANUAL_INTERCEPT_ID] = interceptors[MANUAL_INTERCEPT_ID];\n        }\n\n        return <div className={this.props.className}>\n            <InterceptPageContainer ref={this.gridRef}>\n                <InterceptInstructions>\n                    <h1>\n                        Intercept HTTP\n                    </h1>\n                    <p>\n                        To collect &amp; view HTTP traffic, you need to connect\n                        a source of traffic, like a browser, mobile device, or\n                        docker container.\n                    </p>\n                    <p>\n                        Click an option below to connect a traffic source, or\n                        search for connectors that could work for you:\n                    </p>\n                    <InterceptSearchBox\n                        value={this.filter || ''}\n                        onSearch={this.onSearchInput}\n                    />\n                </InterceptInstructions>\n\n                <ConnectedSources activeSources={activeSources} />\n\n                { _(visibleInterceptOptions)\n                    .sortBy((option) => {\n                        const exactFilterMatch = filter && (\n                            option.tags.includes(filter) ||\n                            option.name.toLocaleLowerCase().split(' ').includes(filter)\n                        );\n\n                        return -1 * (0 +\n                            (exactFilterMatch ? 100 : 0) +\n                            (option.isActive || option.isActivable ? 50 : 0) +\n                            (option.isSupported ? 25 : 0)\n                        );\n                    })\n                    .map((option, index) =>\n                        <InterceptOption\n                            key={option.id}\n                            index={index}\n                            interceptor={option}\n                            showRequests={this.showRequests}\n                        />\n                    ).value()\n                }\n            </InterceptPageContainer>\n        </div>;\n    }\n\n    @action.bound\n    showRequests() {\n        this.props.navigate('/view');\n    }\n\n    @action.bound\n    onSearchInput(input: string) {\n        this.filter = input || false;\n    }\n}\n\nconst StyledInterceptPage = styled(\n    // Exclude store from the external props, as it's injected\n    InterceptPage as unknown as WithInjected<typeof InterceptPage, 'interceptorStore' | 'eventsStore' | 'navigate'>\n)`\n    height: 100%;\n    overflow-y: auto;\n    position: relative;\n`;\n\nexport { StyledInterceptPage as InterceptPage };","import * as React from 'react';\nimport { default as ReactSplitPane } from 'react-split-pane';\n\nimport { styled } from '../styles';\n\n// Styles original taken from\n// https://github.com/tomkp/react-split-pane/blob/master/README.md#example-styling\nexport const SplitPane = styled(ReactSplitPane)<{\n    hiddenPane?: '1' | '2'\n}>`\n    .Resizer {\n        background: #000;\n        opacity: .3;\n        z-index: 1;\n        -moz-box-sizing: border-box;\n        -webkit-box-sizing: border-box;\n        box-sizing: border-box;\n        -moz-background-clip: padding;\n        -webkit-background-clip: padding;\n        background-clip: padding-box;\n    }\n\n    .Resizer:hover {\n        -webkit-transition: all 1s ease;\n        transition: all 1s ease;\n        opacity: 0.9;\n    }\n\n    .Resizer.horizontal {\n        height: 11px;\n        margin: -5px 0;\n        border-top: 5px solid rgba(255, 255, 255, 0);\n        border-bottom: 5px solid rgba(255, 255, 255, 0);\n        cursor: row-resize;\n        width: 100%;\n    }\n\n    .Resizer.horizontal:hover {\n        border-top: 5px solid rgba(0, 0, 0, 0.2);\n        border-bottom: 5px solid rgba(0, 0, 0, 0.2);\n    }\n\n    .Resizer.vertical {\n        width: 11px;\n        margin: 0 -5px;\n        border-left: 5px solid rgba(255, 255, 255, 0);\n        border-right: 5px solid rgba(255, 255, 255, 0);\n        cursor: col-resize;\n    }\n\n    .Resizer.vertical:hover {\n        border-left: 5px solid rgba(0, 0, 0, 0.2);\n        border-right: 5px solid rgba(0, 0, 0, 0.2);\n    }\n\n    .Resizer.disabled {\n        cursor: not-allowed;\n    }\n\n    .Resizer.disabled:hover {\n        border-color: transparent;\n    }\n\n    .Pane {\n        min-width: 0; /* Don't let flexbox force panes to expand */\n    }\n\n    ${({ hiddenPane }) => {\n        if (!hiddenPane) return '';\n        else return `\n            .Resizer {\n                display: none !important;\n            }\n\n            .Pane${hiddenPane} {\n                display: none !important;\n            }\n        `;\n    }}\n`;","import * as React from 'react';\nimport * as _ from 'lodash';\n\nimport { styled } from '../../styles'\nimport { Icon, IconProp } from '../../icons';\n\nexport const EmptyState = styled((props: React.HTMLAttributes<HTMLDivElement> & {\n    className?: string,\n    icon: IconProp,\n    spin?: true | 'slow',\n    children?: React.ReactNode\n}) => (\n    <div {..._.omit(props, ['message', 'icon', 'spin'])}>\n        <Icon\n            icon={props.icon}\n            spin={props.spin === true}\n            className={props.spin === 'slow' ? 'slow-spin' : undefined}\n        />\n        { props.children && <>\n            <br/>\n            { props.children }\n        </> }\n    </div>\n))`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    color: ${props => props.theme.containerWatermark};\n    font-size: 40px;\n    text-align: center;\n\n    box-sizing: border-box;\n    padding: 20px;\n    height: 100%;\n    width: 100%;\n\n    margin: auto 0;\n\n    > svg {\n        font-size: 150px;\n    }\n`;","import * as _ from 'lodash';\nimport * as React from 'react';\n\nconst focusableElementSelector = [\n    'a:not([disabled])',\n    'button:not([disabled])',\n    'textarea:not([disabled])',\n    'input:not([disabled])',\n    'select:not([disabled])',\n    '[tabindex]:not([disabled]):not([tabindex=\"-1\"])'\n].join(',');\n\nfunction getFocusableChildren(element: HTMLElement) {\n    // Note that we ignore numerical tabindexes entirely, since we never use them\n    return _.filter(\n        (element.querySelectorAll(focusableElementSelector) as NodeListOf<HTMLElement>),\n        (element) => element.offsetParent !== null // Element is visible (ish)\n    )\n}\n\n// Wraps an element (i.e. the Monaco editor), and blocks focusing it directly in the tab order.\n// This is necessary for elements which capture tab/shift-tab for some other use (as Monaco does).\n// Focus can be explicitly given by pressing Enter, or removed with Escape.\nexport const FocusWrapper = (p: { children: React.ReactNode, className?: string }) => {\n    return <div\n        className={p.className}\n        aria-label='Press enter to focus this editor, and use escape to unfocus it later'\n        tabIndex={0}\n        onKeyDown={(e) => {\n            const thisElement = e.currentTarget;\n            if (e.target === thisElement) {\n                // Pressing tab with the container focused jumps past the children\n                if (e.key === 'Tab') {\n                    if (e.shiftKey) {\n                        // Pressing shift-tab tabs backwards from this element, so just like normal\n                        return;\n                    } else {\n                        // Pressing tab tabs forwards past all the children of this element.\n                        const allFocusableElements = getFocusableChildren(document.body);\n                        const elementLastChild = _.last(thisElement.children) as HTMLElement;\n                        const currentTabIndex = allFocusableElements.indexOf(elementLastChild);\n\n                        const nextTabbableElement = allFocusableElements[currentTabIndex + 1];\n                        if (nextTabbableElement) {\n                            nextTabbableElement.focus();\n                            e.preventDefault();\n                            return;\n                        } else {\n                            // If we can't find a next tabbable element, loop back to the first\n                            allFocusableElements[0].focus();\n                            e.preventDefault();\n                            return;\n                        }\n                    }\n                }\n\n                // Pressing enter with the container focused jumps into the children\n                if (e.key === 'Enter') {\n                    const firstFocussableChild = getFocusableChildren(thisElement)[0];\n                    if (firstFocussableChild) {\n                        firstFocussableChild.focus();\n                        e.preventDefault(); // Don't actually press enter on the child element\n                    }\n                    return;\n                }\n            } else if (thisElement.contains(document.activeElement)) {\n                // Pressing escape inside the container jumps to the container\n                if (e.key === 'Escape') {\n                    thisElement.focus();\n                    return;\n                }\n            }\n        }}\n    >\n        { p.children }\n\n        {/* If you shift-tab into the children, we focus the container */}\n        <div tabIndex={0} onFocus={(e) => {\n            if (e.target === e.currentTarget) e.currentTarget.parentElement!.focus();\n        }} />\n    </div>;\n}","import type * as monacoTypes from 'monaco-editor';\n\nimport { copyToClipboard } from '../../util/ui';\n\nimport { UiStore } from '../../model/ui/ui-store';\nimport { ContextMenuItem } from '../../model/ui/context-menu';\n\nexport function buildContextMenuCallback(\n    uiStore: UiStore,\n    isReadOnly: boolean,\n    // Anon base-editor type to avoid exporting this\n    baseEditorRef: React.RefObject<{\n        editor: monacoTypes.editor.IStandaloneCodeEditor | undefined\n    }>\n) {\n    return (mouseEvent: React.MouseEvent) => {\n        const editor = baseEditorRef.current?.editor;\n        if (!editor) return;\n        const selection = editor.getSelection();\n\n        const items: ContextMenuItem<void>[] = [];\n\n        if (!isReadOnly) {\n            items.push({\n                type: 'option',\n                label: \"Cut\",\n                enabled: !!selection && !selection.isEmpty(),\n                callback: async () => {\n                    const selection = editor.getSelection();\n                    if (!selection) return;\n                    const content = editor.getModel()?.getValueInRange(selection);\n                    if (!content) return;\n\n                    await copyToClipboard(content);\n\n                    editor.executeEdits(\"clipboard\", [{\n                        range: selection,\n                        text: \"\",\n                        forceMoveMarkers: true,\n                    }]);\n                },\n            });\n        }\n\n        if (selection && !selection.isEmpty()) {\n            items.push({\n                type: 'option',\n                label: \"Copy\",\n                enabled: !!selection && !selection.isEmpty(),\n                callback: () => {\n                    const selection = editor.getSelection();\n                    if (!selection) return;\n                    const content = editor.getModel()?.getValueInRange(selection);\n                    if (!content) return;\n                    copyToClipboard(content);\n                },\n            });\n        }\n\n        if (selection && !!navigator.clipboard) {\n            items.push({\n                type: 'option',\n                label: \"Paste\",\n                enabled: !isReadOnly,\n                callback: async () => {\n                    const selection = editor.getSelection();\n                    if (!selection) return;\n                    const text = await navigator.clipboard.readText();\n\n                    editor.executeEdits(\"clipboard\", [{\n                        range: selection,\n                        text: text,\n                        forceMoveMarkers: true,\n                    }]);\n                }\n            });\n        }\n\n        uiStore.handleContextMenuEvent(mouseEvent, items);\n    }\n}","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { observer, disposeOnUnmount, inject } from 'mobx-react';\nimport { observable, action, autorun, reaction, runInAction, comparer } from 'mobx';\nimport type { SchemaObject } from 'openapi-directory';\n\nimport type * as monacoTypes from 'monaco-editor';\nimport type { default as _MonacoEditor, MonacoEditorProps } from 'react-monaco-editor';\n\nimport { logError } from '../../errors';\nimport { Omit } from '../../types';\nimport { styled, defineMonacoThemes } from '../../styles';\n\nimport { delay } from '../../util/promise';\nimport { asError } from '../../util/error';\n\nimport { UiStore } from '../../model/ui/ui-store';\n\nimport { FocusWrapper } from './focus-wrapper';\nimport { buildContextMenuCallback } from './editor-context-menu';\n\nlet MonacoEditor: typeof _MonacoEditor | undefined;\n// Defer loading react-monaco-editor ever so slightly. This has two benefits:\n// * don't delay first app start waiting for this massive chunk to load\n// * better caching (app/monaco-editor bundles can update independently)\nlet rmeModulePromise = delay(100).then(() => loadMonacoEditor());\n\nasync function loadMonacoEditor(retries = 5): Promise<void> {\n    try {\n        // These might look like two sequential requests, but since they're a single chunk,\n        // it's actually just one load and then both will fire together.\n        const rmeModule = await import(/* webpackChunkName: \"react-monaco-editor\" */ 'react-monaco-editor');\n        const monacoEditorModule = await import(/* webpackChunkName: \"react-monaco-editor\" */ 'monaco-editor/esm/vs/editor/editor.api');\n\n        defineMonacoThemes(monacoEditorModule);\n\n        // Track the currently visible markers per model:\n        monacoEditorModule.editor.onDidChangeMarkers((modelUris) => {\n            const markers = monacoEditorModule.editor.getModelMarkers({});\n\n            runInAction(() => {\n                modelsMarkers.clear();\n                markers.forEach((marker) => {\n                    const modelUri = marker.resource;\n                    const markersSoFar = modelsMarkers.get(modelUri) ?? [];\n                    markersSoFar.push(marker);\n                    modelsMarkers.set(modelUri, markersSoFar);\n                });\n            });\n        });\n        MonacoEditor = rmeModule.default;\n    } catch (err) {\n        console.log('Monaco load failed', asError(err).message);\n        if (retries <= 0) {\n            console.warn('Repeatedly failed to load monaco editor, giving up');\n            throw err;\n        }\n\n        return loadMonacoEditor(retries - 1);\n    }\n}\n\n// We keep a single global observable linking model URIs to their current error marker data,\n// updated via a global listener set up in loadMonacoEditor above.\nconst modelsMarkers = observable.map<monacoTypes.Uri, monacoTypes.editor.IMarker[]>();\n\nexport interface EditorProps extends MonacoEditorProps {\n    onContentSizeChange?: (contentUpdate: monacoTypes.editor.IContentSizeChangedEvent) => void;\n\n    // When this prop changes, the editor layout will be reset. This can be used to indicate a change of the content\n    // represented by the editor (which should update state, e.g. the editor content selection) even when editors\n    // are reused via portals etc. This is not strictly required in non-reused editors, but it's useful to enforce it\n    // here to make sure we handle this correctly in all cases. Can be set to null to explicitly ignore this.\n    contentId: string | null;\n\n    schema?: SchemaObject;\n}\n\n// Extracted unnamed type from Monaco\ninterface SchemaMapping {\n    readonly uri: string;\n    readonly fileMatch?: string[];\n    readonly schema?: any;\n}\n\nconst MAX_HEIGHT = 560;\n\nconst EditorMaxHeightContainer = styled.div`\n    ${(p: { expanded: boolean }) => p.expanded\n        ? `\n            position: absolute;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            height: auto !important;\n        `\n        : `\n            max-height: ${MAX_HEIGHT}px;\n        `\n    }\n`;\n\n@inject('uiStore')\n@observer\nexport class SelfSizedEditor extends React.Component<\n    Omit<EditorProps, 'onContentSizeChange'> & {\n        expanded?: boolean,\n        uiStore?: UiStore // Injected automatically\n    }\n> {\n\n    container = React.createRef<HTMLDivElement>();\n    editor = React.createRef<BaseEditor>();\n\n    @action.bound\n    onContentSizeChange(contentUpdate: monacoTypes.editor.IContentSizeChangedEvent) {\n        this.contentHeight = Math.min(contentUpdate.contentHeight, MAX_HEIGHT);\n    }\n\n    onResize = _.throttle(() => {\n        if (this.editor.current) this.editor.current.relayout();\n    }, 50, { leading: true, trailing: true });\n\n    componentDidUpdate() {\n        // Relayout after update, to ensure the editor is always using the full available\n        // size even as the editor content changes\n        if (this.editor.current) this.editor.current.relayout();\n    }\n\n    resizeObserver = new ResizeObserver(this.onResize);\n\n    componentDidMount() {\n        if (this.container.current) {\n            this.resizeObserver.observe(this.container.current);\n        }\n    }\n\n    componentWillUnmount() {\n        this.resizeObserver.disconnect();\n    }\n\n    @observable contentHeight: number = 0;\n\n    render() {\n        return <EditorMaxHeightContainer\n            ref={this.container}\n            expanded={!!this.props.expanded}\n            style={{ 'height': this.contentHeight + 'px' }}\n            onContextMenu={buildContextMenuCallback(\n                this.props.uiStore!,\n                !!this.props.options?.readOnly,\n                this.editor\n            )}\n        >\n            <BaseEditor\n                theme={this.props.uiStore!.theme.monacoTheme}\n                {...this.props}\n                ref={this.editor}\n                onContentSizeChange={this.onContentSizeChange}\n            />\n        </EditorMaxHeightContainer>\n    }\n}\n\n// As opposed to self-sized - when not expanded, the container-sized\nconst ContainerSizedEditorContainer = styled.div`\n    ${(p: { expanded: boolean }) => p.expanded\n        ? `\n            position: absolute;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            height: auto !important;\n        `\n        : `\n            height: 100%;\n        `\n    }\n`;\n\n@inject('uiStore')\n@observer\nexport class ContainerSizedEditor extends React.Component<\n    Omit<EditorProps, 'onContentSizeChange'> & {\n        expanded?: boolean,\n        uiStore?: UiStore // Injected automatically\n    }\n> {\n\n    container = React.createRef<HTMLDivElement>();\n    editor = React.createRef<BaseEditor>();\n\n    onResize = _.throttle(() => {\n        if (this.editor.current) this.editor.current.relayout();\n    }, 25, { leading: true, trailing: true });\n\n    componentDidUpdate() {\n        // Relayout after update, to ensure the editor is always using the full available\n        // size even as the editor content changes\n        if (this.editor.current) this.editor.current.relayout();\n    }\n\n    resizeObserver = new ResizeObserver(this.onResize);\n\n    componentDidMount() {\n        if (this.container.current) {\n            this.resizeObserver.observe(this.container.current);\n        }\n    }\n\n    componentWillUnmount() {\n        this.resizeObserver.disconnect();\n    }\n\n    render() {\n        return <ContainerSizedEditorContainer\n            ref={this.container}\n            expanded={!!this.props.expanded}\n            onContextMenu={buildContextMenuCallback(\n                this.props.uiStore!,\n                !!this.props.options?.readOnly,\n                this.editor\n            )}\n        >\n            <BaseEditor\n                theme={this.props.uiStore!.theme.monacoTheme}\n                {...this.props}\n                ref={this.editor}\n            />\n        </ContainerSizedEditorContainer>\n    }\n}\n\nconst EditorFocusWrapper = styled(FocusWrapper)`\n    height: 100%;\n    width: 100%;\n`;\n\n@observer\nclass BaseEditor extends React.Component<EditorProps> {\n\n    // Both provided async, once the editor has initialized\n    editor: monacoTypes.editor.IStandaloneCodeEditor | undefined;\n    monaco: (typeof monacoTypes) | undefined;\n\n    @observable\n    monacoEditorLoaded = !!MonacoEditor;\n\n    @observable\n    modelUri: monacoTypes.Uri | undefined = undefined;\n\n    registeredSchemaUri: string | undefined = undefined;\n\n    constructor(props: EditorProps) {\n        super(props);\n\n        if (!this.monacoEditorLoaded) {\n            rmeModulePromise\n                // Did it fail before? Retry it now, just in case\n                .catch(() => {\n                    rmeModulePromise = loadMonacoEditor(0);\n                    return rmeModulePromise;\n                })\n                .then(action(() => this.monacoEditorLoaded = true));\n        }\n\n        reaction(() => this.props.contentId, () => this.resetUIState());\n    }\n\n    public relayout() {\n        if (this.editor) {\n            try {\n                this.editor.layout();\n            } catch (e) {\n                // Monaco can throw some irrelevant errors here, due to race conditions with\n                // layout and model updates etc. It's OK if the layout very occasionally goes\n                // funky whilst things are going on, and there's nothing we can do about it,\n                // and it'll resolve itself on the next layout, so we just ignore it.\n                console.log('Monaco layout error:', e);\n                return;\n            }\n        }\n    }\n\n    private getMarkerController() {\n        return this.editor?.getContribution('editor.contrib.markerController') as unknown as {\n            showAtMarker(marker: monacoTypes.editor.IMarker): void;\n            close(focus: boolean): void;\n        };\n    }\n\n    private withoutFocusingEditor(cb: () => void) {\n        if (!this.editor) return;\n        const originalFocusMethod = this.editor.focus;\n        this.editor.focus = () => {};\n        cb();\n        this.editor.focus = originalFocusMethod;\n    }\n\n    private async resetUIState() {\n        if (this.editor && this.monaco) {\n            this.editor.setSelection(\n                new this.monaco.Selection(0, 0, 0, 0)\n            );\n\n            this.relayout();\n\n            requestAnimationFrame(() => {\n                if (this.editor && this.monaco) {\n                    // Sometimes, if the value updates immediately, the above results in us\n                    // selecting *all* content. We reset again after a frame to avoid that.\n                    this.editor.setSelection(new this.monaco.Selection(0, 0, 0, 0));\n                }\n\n                // Clear open problems - without this, expanded markers (squiggly line -> View Problem)\n                // will persist even though the marker itself no longer exists in the content.\n                this.getMarkerController()?.close(false);\n            });\n        }\n    }\n\n    @action.bound\n    onEditorDidMount(editor: monacoTypes.editor.IStandaloneCodeEditor, monaco: typeof monacoTypes) {\n        this.editor = editor;\n        this.monaco = monaco;\n\n        const model = editor.getModel();\n        this.modelUri = model?.uri;\n\n        this.editor.onDidChangeModel(action((e: monacoTypes.editor.IModelChangedEvent) => {\n            this.modelUri = e.newModelUrl ?? undefined;\n        }));\n\n        if (this.props.onContentSizeChange) {\n            this.editor.onDidContentSizeChange(this.props.onContentSizeChange);\n        }\n\n        // For read-only editors, we want to manually highlight the inline errors, if there are\n        // any. Mostly relevant to OpenAPI body validation issues. We can't do this in reset or\n        // elsewhere, as markers update slightly asynchronously from content changes, so this is\n        // only visible by observing modelMarkers.\n        disposeOnUnmount(this, reaction(() => ({\n            markers: (this.modelUri && modelsMarkers.get(this.modelUri)) ?? []\n        }), ({ markers }) => {\n            if (markers.length && this.props.options?.readOnly) {\n                requestAnimationFrame(() => { // Run after the reset marker.close() update\n                    this.withoutFocusingEditor(() => {\n                        this.getMarkerController().showAtMarker(markers[0]);\n                    });\n                });\n            }\n        }, { equals: comparer.structural }));\n    }\n\n    componentDidMount() {\n        // We don't run _after_ unmount, so we'll leave behind schemas on unmount, which isn't great...\n        disposeOnUnmount(this, autorun(() => {\n            if (!this.editor || !this.monaco) return;\n\n            // Update the set of JSON schemas recognized by Monaco, to potentially include this file's\n            // schema (from props.newSchema) linked to its model URI, or remove our stale schemas.\n\n            const existingOptions = this.monaco.languages.json.jsonDefaults.diagnosticsOptions;\n            let newSchemaMappings: SchemaMapping[] = existingOptions.schemas || [];\n\n            const uriString = this.modelUri?.toString();\n\n            if (uriString) {\n                const newSchema = this.props.schema;\n\n                const existingMapping = _.find(existingOptions.schemas || [],\n                    (sm: SchemaMapping) => sm.uri === uriString\n                ) as SchemaMapping | undefined;\n\n                if (newSchema && (!existingMapping || existingMapping.schema !== newSchema)) {\n                    // If we have a replacement/new schema for this file, replace/add it.\n                    newSchemaMappings = newSchemaMappings\n                        .filter((sm) => sm !== existingMapping)\n                        .concat({ uri: uriString, fileMatch: [uriString], schema: newSchema });\n                } else if (!newSchema) {\n                    // If we have no schema for this file, drop the schema\n                    newSchemaMappings = newSchemaMappings\n                        .filter((sm) => sm !== existingMapping);\n                }\n            }\n\n            if (this.registeredSchemaUri && uriString != this.registeredSchemaUri) {\n                // If we registered a previous schema for a different model, clear it up.\n                newSchemaMappings = newSchemaMappings\n                    .filter((sm) => sm.uri !== this.registeredSchemaUri);\n            }\n\n            const options = Object.assign({}, existingOptions, {\n                validate: true,\n                schemas: newSchemaMappings\n            });\n\n            if (!_.isEqual(existingOptions, options)) {\n                // Avoid unnecessary calls to this, as it reloads the JSON worker\n                this.monaco.languages.json.jsonDefaults.setDiagnosticsOptions(options);\n            }\n\n            this.registeredSchemaUri = uriString;\n        }));\n    }\n\n    componentWillUnmount() {\n        if (this.editor && this.monaco && this.registeredSchemaUri) {\n            // When we unmount, clear our registered schema, if we have one.\n            const existingOptions = this.monaco.languages.json.jsonDefaults.diagnosticsOptions;\n\n            const newSchemaMappings = (existingOptions.schemas || [])\n                .filter((sm) => sm.uri !== this.registeredSchemaUri);\n\n            const newOptions = Object.assign({}, existingOptions, {\n                schemas: newSchemaMappings\n            });\n\n            if (!_.isMatch(existingOptions, newOptions)) {\n                this.monaco.languages.json.jsonDefaults.setDiagnosticsOptions(newOptions);\n            }\n\n            this.registeredSchemaUri = undefined;\n        }\n    }\n\n    render() {\n        if (!this.monacoEditorLoaded || !MonacoEditor) {\n            logError('Monaco editor failed to load');\n            return null;\n        }\n\n        const options: monacoTypes.editor.IEditorConstructionOptions = {\n            showFoldingControls: 'always',\n\n            scrollbar: {\n                alwaysConsumeMouseWheel: false\n            },\n\n            quickSuggestions: false,\n            parameterHints: { enabled: false },\n            codeLens: false,\n            minimap: { enabled: false },\n            contextmenu: false,\n            scrollBeyondLastLine: false,\n            colorDecorators: false,\n            renderValidationDecorations: 'on',\n\n            // TODO: Would like to set a fontFace here, but due to\n            // https://github.com/Microsoft/monaco-editor/issues/392\n            // it breaks wordwrap\n\n            fontSize: 16,\n            wordWrap: 'on',\n\n            ...this.props.options\n        };\n\n        if (!options.readOnly) {\n            return <EditorFocusWrapper>\n                <MonacoEditor\n                    {...this.props}\n                    options={options}\n                    editorDidMount={this.onEditorDidMount}\n                />\n            </EditorFocusWrapper>;\n        } else {\n            // Read-only editors don't capture tab/shift-tab, so don't need\n            // any special focus management.\n            return <MonacoEditor\n                {...this.props}\n                options={options}\n                editorDidMount={this.onEditorDidMount}\n            />;\n        }\n    }\n}","import * as _ from 'lodash';\n\nimport { UnreachableCheck } from '../../util/error';\n\nimport {\n    HtkMockRule,\n    RuleType,\n    HandlerClassKey,\n    MatcherClassKey\n} from \"./rules\";\nimport {\n    MethodMatchers\n} from './definitions/http-rule-definitions';\n\nfunction withFirstCharUppercased(input: string): string {\n    return input[0].toUpperCase() + input.slice(1);\n}\n\nconst isMethod = (key: any): key is keyof typeof MethodMatchers => {\n    return key in MethodMatchers;\n};\n\n// Summarize a single type of matcher (for listing matcher options)\nexport function summarizeMatcherClass(key: MatcherClassKey): string {\n    if (isMethod(key)) return `${key} requests`;\n\n    switch (key) {\n        case 'wildcard':\n        case 'default-wildcard':\n            return \"Any requests\";\n        case 'ws-wildcard':\n        case 'default-ws-wildcard':\n            return 'Any WebSocket';\n        case 'rtc-wildcard':\n            return \"Any WebRTC connection\";\n\n        case 'method':\n            return \"Sent with HTTP method\";\n        case 'host':\n            return \"For a host\";\n        case 'simple-path':\n            return \"For a URL\";\n        case 'regex-path':\n            return \"For URLs matching\";\n        case 'query':\n            return \"With query parameters including\";\n        case 'exact-query-string':\n            return \"With exact query string\";\n        case 'header':\n            return \"Including headers\";\n        case 'cookie':\n            return \"With cookie\";\n        case 'raw-body':\n            return \"With exact body\";\n        case 'raw-body-includes':\n            return \"With body including\";\n        case 'form-data':\n            return \"With form data\";\n        case 'json-body':\n            return \"With JSON body\";\n        case 'json-body-matching':\n            return \"With JSON body including\";\n        case 'protocol':\n            return \"With protocol\";\n        case 'port':\n            return \"For port\";\n        case 'hostname':\n            return \"For hostname\";\n\n        case 'eth-method':\n            return \"An Ethereum interaction\";\n        case 'eth-params':\n            return \"With Ethereum parameters matching\";\n\n        case 'ipfs-interaction':\n            return \"An IPFS interaction\";\n        case 'ipfs-arg':\n            return \"With IPFS argument\";\n\n        case 'has-rtc-data-channel':\n            return \"Including a data channel\";\n        case 'has-rtc-video-track':\n            return \"Including a video track\";\n        case 'has-rtc-audio-track':\n            return \"Including an audio track\";\n        case 'has-rtc-media-track':\n            return \"Including any media track\";\n        case 'rtc-page-hostname':\n            return \"Sent from a web page on a specific hostname\";\n        case 'rtc-page-regex':\n            return \"Sent from a web page matching a URL regex\";\n        case 'rtc-user-agent-regex':\n            return \"Sent by a user agent matching a regex\";\n\n        case 'am-i-using':\n        case 'callback':\n        case 'multipart-form-data':\n        case 'raw-body-regexp':\n            throw new Error(`${key} handler should not be used directly`);\n        default:\n            throw new UnreachableCheck(key);\n    }\n};\n\nexport function nameHandlerClass(key: HandlerClassKey): string {\n    switch (key) {\n        case 'simple':\n            return \"fixed response\";\n        case 'file':\n            return \"file response\";\n        case 'forward-to-host':\n        case 'ws-forward-to-host':\n            return \"forwarding\";\n        case 'passthrough':\n        case 'ws-passthrough':\n            return \"passthrough\";\n        case 'req-res-transformer':\n            return \"transform\";\n        case 'request-breakpoint':\n        case 'response-breakpoint':\n        case 'request-and-response-breakpoint':\n            return \"breakpoint\";\n        case 'timeout':\n            return \"timeout\";\n        case 'close-connection':\n            return \"connection close\";\n        case 'reset-connection':\n            return \"connection reset\";\n\n        case 'ws-reject':\n            return \"reject\";\n        case 'ws-listen':\n            return \"listen\";\n        case 'ws-echo':\n            return \"echo\";\n\n        case 'eth-call-result':\n        case 'eth-number-result':\n        case 'eth-hash-result':\n        case 'eth-receipt-result':\n        case 'eth-block-result':\n            return \"fixed result\";\n        case 'eth-error':\n            return \"error\";\n\n        case 'ipfs-cat-text':\n        case 'ipfs-add-result':\n        case 'ipns-resolve-result':\n        case 'ipns-publish-result':\n        case 'ipfs-pins-result':\n        case 'ipfs-pin-ls-result':\n            return \"fixed result\";\n        case 'ipfs-cat-file':\n            return \"file\";\n\n        case 'wait-for-duration':\n        case 'wait-for-rtc-data-channel':\n        case 'wait-for-rtc-track':\n        case 'wait-for-rtc-media':\n        case 'wait-for-rtc-message':\n        case 'create-rtc-data-channel':\n        case 'send-rtc-data-message':\n        case 'close-rtc-connection':\n        case 'echo-rtc':\n        case 'rtc-dynamic-proxy':\n            return 'WebRTC';\n\n        case 'json-rpc-response':\n        case 'rtc-peer-proxy':\n        case 'callback':\n        case 'stream':\n            throw new Error(`${key} handler should not be used directly`);\n        default:\n            throw new UnreachableCheck(key);\n    }\n}\n\nexport function summarizeHandlerClass(key: HandlerClassKey): string {\n    switch (key) {\n        case 'simple':\n            return \"Return a fixed response\";\n        case 'file':\n            return \"Return a response from a file\";\n        case 'forward-to-host':\n            return \"Forward the request to a different host\";\n        case 'passthrough':\n            return \"Pass the request on to its destination\";\n        case 'req-res-transformer':\n            return \"Transform the real request or response automatically\";\n        case 'request-breakpoint':\n            return \"Pause the request to manually edit it\";\n        case 'response-breakpoint':\n            return \"Pause the response to manually edit it\";\n        case 'request-and-response-breakpoint':\n            return \"Pause the request & response to manually edit them\";\n        case 'timeout':\n            return \"Time out with no response\";\n        case 'close-connection':\n            return \"Close the connection\";\n        case 'reset-connection':\n            return \"Forcibly reset the connection\";\n\n        case 'ws-passthrough':\n            return \"Pass the WebSocket through to its destination\";\n        case 'ws-forward-to-host':\n            return \"Forward the WebSocket to a different host\";\n        case 'ws-reject':\n            return \"Reject the WebSocket setup request\";\n        case 'ws-listen':\n            return \"Accept the WebSocket but send no messages\";\n        case 'ws-echo':\n            return \"Echo all messages\";\n\n        case 'eth-call-result':\n            return \"Return a fixed eth_call result\";\n        case 'eth-number-result':\n        case 'eth-hash-result':\n            return \"Return a fixed value\";\n        case 'eth-receipt-result':\n            return \"Return a fixed transaction receipt\";\n        case 'eth-block-result':\n            return \"Return fixed Ethereum block data\";\n        case 'eth-error':\n            return \"Return an Ethereum error response\";\n\n        case 'ipfs-cat-text':\n            return \"Return fixed IPFS content\";\n        case 'ipfs-cat-file':\n            return \"Return IPFS content from a file\";\n        case 'ipfs-add-result':\n            return \"Return a fixed IPFS add result\";\n        case 'ipns-resolve-result':\n            return \"Return a fixed IPNS resolved address\";\n        case 'ipns-publish-result':\n            return \"Return a fixed succesful IPNS result\";\n        case 'ipfs-pins-result':\n            return \"Return a fixed IPFS pinning result\";\n        case 'ipfs-pin-ls-result':\n            return \"Return a fixed list of IPFS pins\";\n\n        case 'wait-for-duration':\n            return \"Sleep for a given duration\";\n        case 'wait-for-rtc-data-channel':\n            return \"Wait for a data channel to be opened\";\n        case 'wait-for-rtc-track':\n            return \"Wait for a media track to be opened\";\n        case 'wait-for-rtc-media':\n            return \"Wait for any media to be received\";\n        case 'wait-for-rtc-message':\n            return \"Wait for a data message to be received\";\n        case 'create-rtc-data-channel':\n            return \"Create a data channel\";\n        case 'send-rtc-data-message':\n            return \"Send a data message\";\n        case 'close-rtc-connection':\n            return \"Close the WebRTC connection\";\n        case 'echo-rtc':\n            return \"Echo all messages and media\";\n        case 'rtc-dynamic-proxy':\n            return \"Proxy all traffic to the real remote peer\";\n\n        case 'json-rpc-response':\n        case 'rtc-peer-proxy':\n        case 'callback':\n        case 'stream':\n            throw new Error(`${key} handler should not be used directly`);\n        default:\n            throw new UnreachableCheck(key);\n    }\n}\n\n// Summarize the matchers of an instantiated rule\n// Slight varation on the Mockttp explanation to make the\n// comma positioning more consistent for UX of changing rules\nexport function summarizeMatcher(rule: HtkMockRule): string {\n    const { matchers } = rule;\n\n    if (matchers.length === 0) return 'Never';\n    if (matchers.length === 1) return matchers[0]!.explain();\n    if (matchers.length === 2) {\n        // With just two explanations you can just combine them\n        return `${matchers[0]!.explain()} ${matchers[1].explain()}`;\n    }\n\n    // With 3+, we need to oxford comma separate the later\n    // explanations, to make them readable\n    return matchers[0]!.explain() + ' ' +\n        matchers.slice(1, -1)\n        .map((m) => m.explain())\n        .join(', ') +\n        (matchers.length > 3 ? ', and ' : ', ') + // We 'and' only with *many*\n        matchers.slice(-1)[0].explain();\n}\n\n// Summarize the handler of an instantiated rule\nexport function summarizeHandler(rule: HtkMockRule): string {\n    if ('steps' in rule) {\n        const stepExplanations = rule.steps.map(s => s.explain());\n        return withFirstCharUppercased(\n            stepExplanations.length > 1\n            ? (stepExplanations.slice(0, -1).join(', ') + ' then ' + stepExplanations.slice(-1)[0])\n            : stepExplanations[0]\n        );\n    } else {\n        return withFirstCharUppercased(rule.handler.explain());\n    }\n}","import * as React from 'react';\n\nimport { styled } from '../../styles'\nimport { Icon } from '../../icons';\nimport { getStatusColor } from '../../model/events/categorization';\n\nexport const StatusCode = styled((props: {\n    status:\n        | undefined // Still in progress\n        | 'aborted' // Failed before response\n        | 'WS:open' // Accepted active websocket\n        | 'WS:closed' // Accepted but now closed websocket\n        | number, // Any other status\n    message?: string,\n    className?: string\n}) => (\n    <div\n        className={props.className}\n        title={!props.status ? 'Waiting for response...' : (props.message || undefined) }\n    >\n        {\n            props.status === 'aborted' ?\n                <Icon icon={['fas', 'ban']} />\n            : props.status === 'WS:open'\n                ? <>\n                    WS <Icon\n                        icon={['fas', 'spinner']}\n                        spin={true}\n                    />\n                </>\n            : props.status === 'WS:closed'\n                ? 'WS'\n            : (\n                props.status ||\n                <Icon\n                    icon={['fas', 'spinner']}\n                    spin={true}\n                />\n            )\n        }\n    </div>\n))`\n    font-weight: bold;\n\n    display: flex;\n    align-items: center;\n\n    .fa-spinner {\n        padding: 6px;\n    }\n\n    .fa-ban {\n        padding: 5px;\n    }\n\n    color: ${props => getStatusColor(\n        (props.status === 'WS:open' || props.status === 'WS:closed')\n            ? undefined\n            : props.status,\n        props.theme\n    )};\n`;","import * as React from 'react';\nimport { observer, inject } from 'mobx-react';\nimport * as dateFns from 'date-fns';\nimport * as dedent from 'dedent';\nimport * as Ajv from 'ajv';\n\nimport { CollectedEvent } from '../../types';\nimport { saveFile, uploadFile, Ctrl } from '../../util/ui';\n\nimport { AccountStore } from '../../model/account/account-store';\nimport { EventsStore } from '../../model/events/events-store';\nimport { generateHar } from '../../model/http/har';\nimport { logError } from '../../errors';\nimport { formatAjvError } from '../../util/json-schema';\n\nimport { IconButton } from '../common/icon-button';\n\nexport const ClearAllButton = observer((props: {\n    className?: string,\n    disabled: boolean,\n    onClear: () => void\n}) => <IconButton\n    icon={['far', 'trash-alt']}\n    title={`Clear all (${Ctrl}+Shift+Delete)`}\n    disabled={props.disabled}\n    onClick={props.onClear}\n/>);\n\nexport const ExportAsHarButton = inject('accountStore')(observer((props: {\n    className?: string,\n    accountStore?: AccountStore,\n    events: CollectedEvent[]\n}) => {\n    const { isPaidUser } = props.accountStore!;\n\n    return <IconButton\n        icon={['fas', 'save']}\n        title={\n            isPaidUser\n                ? 'Export these exchanges as a HAR file'\n                : (\n                    'With Pro: Export requests & responses as a HAR file, ' +\n                    'to save for later or share with others'\n                )\n        }\n        disabled={!isPaidUser || props.events.length === 0}\n        onClick={async () => {\n            const harContent = JSON.stringify(\n                await generateHar(props.events)\n            );\n            const filename = `HTTPToolkit_${\n                dateFns.format(Date.now(), 'YYYY-MM-DD_HH-mm')\n            }.har`;\n\n            saveFile(filename, 'application/har+json;charset=utf-8', harContent);\n        }}\n    />\n}));\n\nexport const ImportHarButton = inject('eventsStore', 'accountStore')(\n    observer((props: {\n        accountStore?: AccountStore,\n        eventsStore?: EventsStore\n    }) => {\n        const { isPaidUser } = props.accountStore!;\n\n        return <IconButton\n            icon={['fas', 'folder-open']}\n            title={\n                isPaidUser\n                    ? 'Import exchanges from a HAR file'\n                    : (\n                        'With Pro: Import requests & responses from HAR files, ' +\n                        'to examine past recordings or data from other tools'\n                    )\n            }\n            disabled={!isPaidUser}\n            onClick={async () => {\n                const uploadedFile = await uploadFile('text', ['.har', 'application/har', 'application/har+json']);\n                if (uploadedFile) {\n                    let data: {};\n                    try {\n                        data = JSON.parse(uploadedFile);\n                        await props.eventsStore!.loadFromHar(data);\n                    } catch (error: any) {\n                        logError(error);\n\n                        if (error.name === 'HARError' && error.errors) {\n                            alert(dedent`\n                                HAR file is not valid.\n\n                                ${\n                                    error.errors\n                                    .map((e: Ajv.ErrorObject) => formatAjvError(data, e))\n                                    .join('\\n')\n                                }\n                            `);\n                        } else {\n                            alert(dedent`\n                                Could not parse HAR file.\n\n                                ${error.message || error}\n                            `);\n                        }\n                    }\n                }\n            }}\n        />\n    })\n);\n\nexport const PlayPauseButton = inject('eventsStore')(\n    observer((props: {\n        eventsStore?: EventsStore\n    }) => {\n        const { isPaused, togglePause } = props.eventsStore!;\n\n        return <IconButton\n            icon={['fas', isPaused ? 'play' : 'pause']}\n            title={`${isPaused ? 'Resume' : 'Pause'} collecting intercepted exchanges`}\n            onClick={togglePause}\n        />\n    })\n);\n\nexport const ScrollToEndButton = (props: { onScrollToEnd: () => void }) =>\n    <IconButton\n        icon={['fas', 'level-down-alt']}\n        title=\"Scroll to the bottom of the list\"\n        onClick={props.onScrollToEnd}\n    />","import * as _ from 'lodash';\n\nimport {\n    FilterClass,\n    Filters,\n    FilterSet,\n    StringFilter\n} from './search-filters';\nimport {\n    SyntaxSuggestion,\n    matchSyntax,\n    applySuggestionToText,\n    getSuggestions\n} from './syntax-matching';\nimport { FixedStringSyntax } from './syntax-parts';\n\n/**\n * Takes a full string, parses it completely for filters, and returns a\n * list of the parser result. Used when pasting a complete list of\n * filters into the search input.\n */\nexport function matchFilters(filterClasses: FilterClass[], value: string): FilterSet {\n    let remainingString = value.trim();\n    let filters = [];\n\n    // Repeatedly parse filter from the start of the input\n    while (remainingString.length > 0) {\n        const firstFullMatch = filterClasses\n            .map(filterClass => ({\n                filterClass,\n                match: matchSyntax(filterClass.filterSyntax, remainingString, 0)\n            }))\n            .filter((fm) => !!fm.match && fm.match.type === 'full')[0];\n\n        if (!firstFullMatch) break;\n\n        const consumed = firstFullMatch.match!.fullyConsumed;\n        const matchedString = remainingString.slice(0, consumed);\n        remainingString = remainingString.slice(consumed).trimLeft();\n\n        // Unshift here, because filter array runs in reverse to the inputs\n        filters.unshift(new firstFullMatch.filterClass(matchedString));\n    }\n\n    // We've either run out of string, or stopped being able to match anything\n    // Turn the leftovers into a StringFilter, and return the whole lot:\n    return [\n        new StringFilter(remainingString),\n        ..._.flatten(filters)\n    ];\n}\n\nexport interface FilterSuggestion extends SyntaxSuggestion {\n    filterClass: FilterClass;\n};\n\n/**\n * Takes a full string, and given a list of filters, returns an\n * appropriate list of suggestions to show the user, with the filter\n * metadata required to immediately create the filters.\n *\n * Optionally also takes context, which may be used by some syntax\n * parts to provide more specific context-driven suggestions.\n */\nexport function getFilterSuggestions<T>(\n    filters: FilterClass<T>[],\n    value: string,\n    context?: T\n): FilterSuggestion[] {\n    const suggestions = getSuggestions(\n        filters.map((filterClass) => ({\n            key: filterClass,\n            syntax: filterClass.filterSyntax\n        })),\n        value,\n        0,\n        { context }\n    )\n\n    return suggestions.map(({ key: filterClass, suggestion }) => ({\n        filterClass,\n        ...suggestion,\n    }));\n}\n\n/**\n * Given a selected suggestion and the current list of filters, returns\n * a new list of filters with the suggestion applied.\n *\n * This either updates the string content (given the suggestion for part\n * of a rule) or clears the string content and creates a new filter.\n */\nexport function applySuggestionToFilters(\n    filterSet: FilterSet,\n    suggestion: FilterSuggestion\n): FilterSet {\n    const text = filterSet[0].filter;\n\n    const updatedText = applySuggestionToText(text, suggestion);\n\n    if (suggestion.matchType === 'full') {\n        return [\n            new StringFilter(\"\"),\n            ..._.flatten([\n                // Flattened because a filterClass can expand to multiple filter\n                // instances, e.g. for saved custom filters\n                new suggestion.filterClass(updatedText.trim())\n            ]),\n            ...filterSet.slice(1)\n        ];\n    } else {\n        return [\n            new StringFilter(updatedText),\n            ...filterSet.slice(1)\n        ];\n    }\n}\n\nexport interface CustomFilterClass extends FilterClass {\n    isCustomFilter: true;\n    filterName: string;\n}\n\nexport function buildCustomFilter(\n    name: string, // A name for your custom filter\n    filterString: string, // The full filter string it expands to\n    availableFilters: FilterClass[] // Parsed in the context of this set of filter classes\n): CustomFilterClass {\n    const parsedFilters = matchFilters(availableFilters, filterString);\n\n    // Skip empty string filters\n    const filtersToInsert = parsedFilters[0].filter === ''\n        ? parsedFilters.slice(1)\n        : parsedFilters; // Only include the string filter if it's non-empty\n\n    // Build a fake constructor that produces the filters within, rather than\n    // building a filter by itself as normal.\n    const factory = (function () { return filtersToInsert; }) as unknown as (new () => Filters);\n    return Object.assign(factory, {\n        filterSyntax: [new FixedStringSyntax(name)],\n        filterDescription: () => filterString,\n\n        filterName: name,\n        isCustomFilter: true\n    } as const);\n};\n\nexport function isCustomFilter(\n    f: FilterClass & { isCustomFilter?: boolean }\n): f is CustomFilterClass {\n    return !!f.isCustomFilter;\n}","import * as React from 'react';\nimport * as polished from 'polished';\n\nimport { styled } from '../../../styles';\nimport { Icon } from '../../../icons';\n\nimport { Filter } from '../../../model/filters/search-filters';\n\nconst FilterTagDelete = styled(Icon).attrs(() => ({\n    icon: ['fas', 'times']\n}))`\n    position: absolute;\n    right: -20px;\n    top: 50%;\n    transform: translateY(-50%);\n    transition: right 0.1s;\n    cursor: pointer;\n\n    padding: 6px;\n    background-image: radial-gradient(\n        ${p => polished.rgba(p.theme.mainBackground, 0.9)} 50%,\n        transparent 100%\n    );\n\n    &:hover {\n        color: ${p => p.theme.popColor};\n    }\n`;\n\nconst FilterTagName = styled.span`\n    white-space: pre; /* Nowrap + show spaces accurately */\n    overflow: hidden;\n    text-overflow: ellipsis;\n    padding: 4px;\n`\n\nconst FilterTagContainer = styled.div`\n    flex-shrink: 0;\n\n    display: flex;\n    align-items: center;\n\n    position: relative;\n    overflow: hidden;\n\n    min-width: 0;\n    max-width: 100%;\n    box-sizing: border-box;\n\n    margin-right: 5px;\n\n    background-color: ${p => p.theme.mainBackground};\n    border: 1px solid ${p => p.theme.containerWatermark};\n    box-shadow: 0 2px 4px 0 rgba(0,0,0,${p => p.theme.boxShadowAlpha});\n    border-radius: 3px;\n\n    cursor: pointer;\n\n    &:hover, &:focus-within {\n        box-shadow: 0 2px 4px 0 rgba(0,0,0,${p => p.theme.boxShadowAlpha * 2});\n    }\n\n    &:hover {\n        > ${FilterTagDelete} {\n            right: 0;\n        }\n    }\n\n    &:focus-within {\n        outline: none;\n        border-color: ${p => p.theme.popColor};\n    }\n\n    &.is-selected {\n        background-color: ${p => p.theme.mainLowlightBackground};\n        box-shadow: inset 0 0 12px -8px #000;\n    }\n\n    & ::selection {\n        background-color: transparent;\n    }\n`;\n\nfunction ignoreTripleClick(event: React.MouseEvent<HTMLDivElement>) {\n    if (event.detail === 3) event.preventDefault();\n}\n\nexport const FilterTag = React.forwardRef((props: {\n    filter: Filter,\n    isSelected: boolean,\n    onDelete: () => void\n    onKeyDown?: (event: React.KeyboardEvent<HTMLDivElement>) => void\n}, ref: React.Ref<HTMLDivElement>) => {\n    return <FilterTagContainer\n        ref={ref}\n        className={'filter-tag' + (props.isSelected ? ' is-selected' : '')}\n        tabIndex={-1}\n        onKeyDown={props.onKeyDown}\n        onMouseDown={ignoreTripleClick}\n        title={`Match ${props.filter.filterDescription}`}\n    >\n        <FilterTagName>{ props.filter.toString() }</FilterTagName>\n        <FilterTagDelete onClick={props.onDelete} />\n    </FilterTagContainer>;\n});","import * as React from 'react';\n\nimport { styled, css } from '../../../styles';\n\nimport { FilterSuggestion } from '../../../model/filters/filter-matching';\nimport { applySuggestionToText } from '../../../model/filters/syntax-matching';\n\nimport { IconButton } from '../../common/icon-button';\nimport { longestPrefix } from '../../../util';\n\nconst ExistingText = styled.span`\n    font-weight: bold;\n`;\n\nconst SuggestedText = styled.span`\n    opacity: 0.7;\n`;\n\nconst SuggestionRowContainer = styled.div<{ isHighlighted: boolean }>`\n    background-color: ${p => p.isHighlighted\n        ? p.theme.highlightBackground\n        : p.theme.mainBackground\n    };\n\n    ${p => p.isHighlighted && css`\n        ${SuggestedText} {\n            opacity: 1;\n        }\n    `}\n\n    width: 100%;\n    cursor: pointer;\n\n    font-size: ${p => p.theme.textSize};\n`;\n\nconst SuggestionRowPart = styled.p`\n    padding: 8px;\n`;\n\nconst SuggestionDetails = styled(SuggestionRowPart)`\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: pre; /* Nowrap + show spaces accurately */\n\n    ${(p: { isHighlighted: boolean }) => p.isHighlighted && css`\n        box-shadow: 0px -8px 10px -10px rgba(0,0,0,${p => p.theme.boxShadowAlpha * 2});\n    `}\n\n    svg {\n        margin-left: auto;\n    }\n`;\n\nconst SuggestionDeleteButton = styled(IconButton).attrs(() => ({\n    icon: ['far', 'trash-alt']\n}))`\n    float: right;\n    padding: 4px;\n    margin: -4px -4px;\n`;\n\nconst SuggestionDescription = styled(SuggestionRowPart)`\n    background-color: ${p => p.theme.mainLowlightBackground};\n    box-shadow:\n        inset 0px 12px 8px -10px rgba(0,0,0,${p => p.theme.boxShadowAlpha}),\n        inset 0px -8px 8px -10px rgba(0,0,0,${p => p.theme.boxShadowAlpha});\n\n    white-space: pre; /* Nowrap + show spaces accurately */\n    overflow: hidden;\n    text-overflow: ellipsis;\n`;\n\nexport const FilterSuggestionRow = (props: {\n    suggestion: FilterSuggestion,\n    query: string,\n    isHighlighted: boolean,\n    onDelete?: () => void\n}) => {\n    const { suggestion, query, isHighlighted, onDelete } = props;\n\n    // Work out how many chars of the query are included in the showAs/value text\n    // We want both - when they differ, it's a template value or similar.\n    const commonText = longestPrefix(\n        query.slice(suggestion.index),\n        suggestion.value,\n        suggestion.showAs\n    );\n    const partiallyMatchedChars = commonText.length;\n\n    // If there is overlap, treat the existing+suggested chars as just existing text\n    const existingText = query.slice(0, suggestion.index + partiallyMatchedChars);\n    const suggestedAddition = suggestion.showAs.slice(partiallyMatchedChars);\n\n    const filterDescription = `Match ${suggestion.filterClass.filterDescription(\n        applySuggestionToText(query, suggestion),\n        suggestion.matchType === 'template'\n    ) }`;\n\n    return <SuggestionRowContainer isHighlighted={isHighlighted}>\n        <SuggestionDetails isHighlighted={isHighlighted}>\n            <ExistingText>{ existingText }</ExistingText>\n            <SuggestedText>{ suggestedAddition }</SuggestedText>\n            { onDelete &&\n                <SuggestionDeleteButton\n                    title=\"Delete this custom filter shortcut\"\n                    onClick={(e) => {\n                        onDelete();\n                        e.preventDefault();\n                        e.stopPropagation();\n                    }}\n                />\n            }\n        </SuggestionDetails>\n\n        { isHighlighted &&\n            <SuggestionDescription title={filterDescription}>\n                { filterDescription }\n            </SuggestionDescription>\n        }\n    </SuggestionRowContainer>;\n}","import * as React from 'react';\n\nimport { styled, css } from '../../../styles';\nimport { Icon } from '../../../icons';\n\nexport type SaveFiltersSuggestion = {\n    saveFilters: true,\n    filterCount: number,\n    isPaidUser: boolean\n};\n\nexport const isSaveFiltersSuggestion = (suggestion: any): suggestion is SaveFiltersSuggestion =>\n        'saveFilters' in suggestion && suggestion.saveFilters === true;\n\nconst SaveFiltersContainer = styled.div<{ isHighlighted: boolean }>`\n    background-color: ${p => p.isHighlighted\n        ? p.theme.highlightBackground\n        : p.theme.mainBackground\n    };\n\n    :not(:first-child) {\n        border-top: 1px solid ${p => p.theme.containerBorder};\n    }\n\n    ${(p: { isHighlighted: boolean }) => p.isHighlighted && css`\n        box-shadow: 0px -8px 10px -10px rgba(0,0,0,${p => p.theme.boxShadowAlpha * 2});\n        font-weight: bold;\n    `}\n\n    width: 100%;\n    cursor: pointer;\n\n    padding: 8px;\n    box-sizing: border-box;\n\n    font-size: ${p => p.theme.textSize};\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n\n    svg {\n        margin-right: 5px;\n    }\n`;\n\nexport const SaveFiltersRow = (props: {\n    filterCount: number,\n    query: string,\n    isHighlighted: boolean,\n    isPaidUser: boolean\n}) => {\n    return <SaveFiltersContainer isHighlighted={props.isHighlighted}>\n        {\n            props.isPaidUser\n            ? <>\n                <Icon icon={['fas', 'save']} />\n                Save {\n                    props.filterCount > 1\n                    ? `these ${props.filterCount} filters`\n                    : 'this filter'\n                } as { `'${props.query}'` || '...' }\n            </>\n            : <>\n                <Icon icon={['far', 'star']} />\n                Get Pro to save {\n                    props.filterCount > 1\n                    ? `these ${props.filterCount} filters`\n                    : 'this filter'\n                } as { `'${props.query}'` || '...' }\n            </>\n        }\n    </SaveFiltersContainer>\n}","import * as _ from 'lodash';\nimport * as React from 'react';\nimport * as Autosuggest from 'react-autosuggest';\n\nimport { styled } from '../../../styles';\nimport { trackEvent } from '../../../metrics';\n\nimport {\n    Filter,\n    FilterClass,\n    FilterSet,\n    StringFilter\n} from '../../../model/filters/search-filters';\nimport {\n    FilterSuggestion,\n    getFilterSuggestions,\n    applySuggestionToFilters,\n    isCustomFilter,\n    CustomFilterClass\n} from '../../../model/filters/filter-matching';\nimport { applySuggestionToText } from '../../../model/filters/syntax-matching';\n\nimport { FilterSuggestionRow } from './filter-suggestion-row';\nimport {\n    SaveFiltersSuggestion,\n    isSaveFiltersSuggestion,\n    SaveFiltersRow\n} from './save-filters-row';\n\nconst FilterInputField = styled.input`\n    box-sizing: border-box;\n    width: 100%;\n    height: 100%;\n\n    padding: 3px 0 4px 1px;\n    border: none;\n    outline: none;\n\n    background-color: ${p => p.theme.highlightBackground};\n    color: ${p => p.theme.highlightColor};\n    font-size: ${p => p.theme.textSize};\n\n    ::placeholder {\n        /*\n        For some reason, I think related to react-split-pane setting 'user-select: text',\n        the placeholder gets selected by selection.selectAllChildren. This stops that:\n        */\n        user-select: none;\n    }\n`;\n\nconst FilterSuggestionsBox = styled.div`\n    position: absolute;\n    bottom: calc(100% + 10px);\n    left: 0;\n    right: 0;\n    z-index: 1;\n\n    background-color: ${p => p.theme.mainBackground};\n    border: 1px solid ${p => p.theme.containerBorder};\n    box-shadow: 0 2px 4px 0 rgba(0,0,0,${p => p.theme.boxShadowAlpha});\n\n    border-radius: 4px;\n    .react-autosuggest__suggestion:first-child > * {\n        border-radius: 4px 4px 0 0;\n    }\n    .react-autosuggest__suggestion:last-child > *, .react-autosuggest__suggestion:last-child > * > * {\n        border-radius: 0 0 4px 4px;\n    }\n    .react-autosuggest__suggestion:first-child:last-child > * {\n        border-radius: 4px;\n    }\n\n    color: ${p => p.theme.highlightColor};\n    font-size: ${p => p.theme.textSize};\n\n    &:empty {\n        display: none;\n    }\n`;\n\n// Need to wrap these as functions, to make autosuggest happy:\nconst renderInputField = (props: any) => <FilterInputField {...props} />;\nconst renderSuggestionsBox = (props: { containerProps: any, children: any }) =>\n    <FilterSuggestionsBox {...props.containerProps}>\n        { props.children }\n    </FilterSuggestionsBox>;\nconst buildRowRenderer = (\n    onDeleteCustomFilter: (filterClass: CustomFilterClass) => void,\n    query: string // We can't use this from props, because it's unavoidably trimmed()\n) => (suggestion: SuggestionType, params: { isHighlighted: boolean }) => {\n        if (isSaveFiltersSuggestion(suggestion)) {\n            return <SaveFiltersRow {...suggestion} {...params} query={query} />;\n        }\n\n        const { filterClass } = suggestion;\n        const onDelete = isCustomFilter(filterClass)\n            ? () => onDeleteCustomFilter(filterClass)\n            : undefined;\n\n        return <FilterSuggestionRow\n            suggestion={suggestion}\n            {...params}\n            query={query}\n            onDelete={onDelete}\n        />;\n    };\n\ntype SuggestionType = FilterSuggestion | SaveFiltersSuggestion;\n\nconst areSuggestionsVisible = (autosuggestRef: React.RefObject<Autosuggest>) => {\n    const autosuggestRoot = autosuggestRef.current?.input?.parentElement;\n    const listbox = autosuggestRoot?.querySelector(\"[role='listbox']\");\n    return (listbox?.children.length || 0) > 0;\n};\n\nexport const FilterInput = <T extends unknown>(props: {\n    value: string,\n    placeholder: string,\n    searchInputRef?: React.Ref<HTMLInputElement>,\n    onChange: (event: React.ChangeEvent<HTMLInputElement>) => void,\n\n    activeFilters: FilterSet,\n    availableFilters: FilterClass<T>[],\n    suggestionContext?: T,\n\n    isPaidUser: boolean,\n    getPro: (source: string) => void,\n\n    onFiltersChanged: (filters: FilterSet) => void,\n    onFiltersConsidered: (filters: FilterSet | undefined) => void,\n    onFiltersSaved: (filters: Filter[], name: string) => void,\n    onCustomFilterDeleted: (filter: CustomFilterClass) => void\n}) => {\n    const autosuggestRef = React.useRef<Autosuggest>(null);\n\n    // React-autosuggest wants us to track state, and only update it when requested. We're going\n    // to ignore that, mainly because we want more direct control to update and show the\n    // suggestions more aggressively than it expects. Instead of updating on request, we useMemo\n    // to update the suggestions every time the value changes:\n    const suggestions = React.useMemo(() =>\n        getFilterSuggestions(props.availableFilters, props.value, props.suggestionContext)\n    , [props.availableFilters, props.value, props.suggestionContext]);\n\n    // Whenever a suggestion is highlighted, we fire an event with the filters that would be active if\n    // the suggestion is accepted, so that the list of events can preview the result.\n    const considerSuggestion = React.useCallback((data: { suggestion: SuggestionType | null }) => {\n        if (\n            data.suggestion &&\n            !isSaveFiltersSuggestion(data.suggestion) &&\n            areSuggestionsVisible(autosuggestRef)\n        ) {\n            if (data.suggestion.matchType === 'full') {\n                props.onFiltersConsidered(\n                    applySuggestionToFilters(props.activeFilters, data.suggestion)\n                );\n            } else {\n                // If you highlight a partial match, we show the filtered events as if you haven't\n                // entered any text, so you can still conveniently see the data until you either type\n                // something that's not a filter (filtering just by text), or closely match a filter\n                // directly (and we filter by that instead).\n                props.onFiltersConsidered([\n                    new StringFilter(''),\n                    ...props.activeFilters.slice(1)\n                ]);\n            }\n        } else {\n            props.onFiltersConsidered(undefined);\n        }\n    }, [props.onFiltersConsidered, props.activeFilters, autosuggestRef]);\n\n    // Ephemerally track the updated suggestions, so we can detect a selection in clearSuggestions()\n    // and update to show ongoing suggestions instead of hiding suggestions.\n    let updatedFilters: FilterSet | undefined = undefined;\n\n    const selectSuggestion = React.useCallback((\n        event: React.FormEvent<any>,\n        data: { suggestion: SuggestionType }\n    ) => {\n        // Due to some race conditions, it's possible that react-autosuggest can think we have a\n        // suggestion selected even when none is shown. Guard against that.\n        if (!areSuggestionsVisible(autosuggestRef)) return;\n\n        // If you select the save suggestion, we save the given filters using the\n        // text in the input as their new custom name.\n        if (isSaveFiltersSuggestion(data.suggestion)) {\n            if (!props.value) return; // No dice - we just ignore empty names\n\n            if (props.isPaidUser) {\n                props.onFiltersSaved(props.activeFilters.slice(1), props.value);\n            } else {\n                props.getPro('save-filter');\n            }\n            return;\n        }\n\n        updatedFilters = applySuggestionToFilters(props.activeFilters, data.suggestion);\n        if (updatedFilters.length !== props.activeFilters.length) {\n            trackEvent({\n                category: 'Filters',\n                action: 'Create',\n                // Track most used filter types, *not* input or params\n                value: data.suggestion.filterClass.filterName\n            });\n        }\n        props.onFiltersChanged(updatedFilters);\n    }, [updatedFilters, props.value, props.isPaidUser, props.getPro, props.activeFilters, props.onFiltersChanged]);\n\n    const clearSuggestions = React.useCallback(() => {\n        const autosuggest = autosuggestRef.current as any;\n\n        if (updatedFilters && updatedFilters.length === props.activeFilters.length) {\n            // If this is due to a filter update, but a new filter hasn't been created (i.e. we\n            // had a partial match, for a single part) then force the suggestions to stay visible:\n            autosuggest.justSelectedSuggestion = false;\n            autosuggest.revealSuggestions();\n            updatedFilters = undefined;\n        }\n\n        // We ignore actual requests to clear the suggestions, because we show the\n        // suggestions in almost all cases anyway - we just clear selection highlighting\n        autosuggest.resetHighlightedSuggestion();\n        considerSuggestion({ suggestion: null });\n    }, [updatedFilters, selectSuggestion, props.activeFilters.length, autosuggestRef]);\n\n    const shouldRenderSuggestions = React.useCallback((value: string, reason: string) =>\n        value.trim().length > 0 ||\n        !['input-focused', 'input-changed', 'escape-pressed'].includes(reason)\n    , []);\n\n    const getSuggestionTextValue = React.useCallback((suggestion: SuggestionType) => {\n        if (isSaveFiltersSuggestion(suggestion)) return '';\n        else return applySuggestionToText(props.value, suggestion)\n    }, [props.value]);\n\n    const onInputChange = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        // React-autosuggest tries to update the input content to match the highlighted value.\n        // We don't want that, so we ignore changes where the input itself hasn't changed:\n        if (e.target.value === props.value) return;\n        else props.onChange(e);\n    }, [props.onChange, props.value]);\n\n    const inputProps = React.useMemo(() => ({\n        type: 'text',\n        value: props.value,\n        onChange: onInputChange,\n        placeholder: props.placeholder,\n        ref: props.searchInputRef\n    }), [props.value, onInputChange, props.placeholder, props.searchInputRef]);\n\n    // Whilst you're typing, if you've entered a filter, and you're typing but you haven't\n    // typed something that exactly matches one type of filter, show a 'save' option.\n    const shouldShowSave = props.activeFilters.length > 1 &&\n        props.value.length >= 1 &&\n        !props.value.includes(' ') &&\n        _.uniq(suggestions.map(s => s.filterClass)).length !== 1;\n\n    // If we have no suggestions, but we're showing a save option, don't highlight the\n    // option because it shouldn't be your default 'enter' action\n    const shouldHighlightFirst = !(shouldShowSave && suggestions.length === 0);\n\n    const suggestionsWithSave = React.useMemo(() => {\n        return shouldShowSave\n            ? (suggestions as Array<SuggestionType>).concat({\n                saveFilters: true,\n                isPaidUser: props.isPaidUser,\n                filterCount: props.activeFilters.length - 1 // -1 to exclude text filter\n            })\n            : suggestions\n    }, [shouldShowSave, props.isPaidUser, suggestions, props.activeFilters]);\n\n    const rowRenderer = React.useMemo(() =>\n        buildRowRenderer(props.onCustomFilterDeleted, props.value)\n    , [props.onCustomFilterDeleted, props.value]);\n\n    return <Autosuggest\n        ref={autosuggestRef}\n        multiSection={false}\n        suggestions={suggestionsWithSave}\n        highlightFirstSuggestion={shouldHighlightFirst}\n        shouldRenderSuggestions={shouldRenderSuggestions}\n        onSuggestionsFetchRequested={_.noop} // No-op: we useMemo to keep suggestion up to date manually\n        onSuggestionsClearRequested={clearSuggestions}\n        onSuggestionHighlighted={considerSuggestion}\n        onSuggestionSelected={selectSuggestion}\n        getSuggestionValue={getSuggestionTextValue}\n        renderSuggestion={rowRenderer}\n        renderInputComponent={renderInputField}\n        renderSuggestionsContainer={renderSuggestionsBox}\n        inputProps={inputProps}\n    />;\n};","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { disposeOnUnmount, inject, observer } from 'mobx-react';\nimport { action, computed, observable } from 'mobx';\nimport { trackUndo } from 'mobx-shallow-undo';\nimport * as polished from 'polished';\n\nimport { css, styled } from '../../../styles';\nimport { copyToClipboard, isCmdCtrlPressed } from '../../../util/ui';\n\nimport {\n    Filter,\n    FilterSet,\n    StringFilter,\n    FilterClass,\n    emptyFilterSet\n} from '../../../model/filters/search-filters';\nimport {\n    matchFilters,\n    buildCustomFilter,\n    CustomFilterClass\n} from '../../../model/filters/filter-matching';\nimport { UiStore } from '../../../model/ui/ui-store';\nimport { AccountStore } from '../../../model/account/account-store';\n\nimport { IconButton, IconButtonLink } from '../../common/icon-button';\nimport { FilterTag } from './filter-tag';\nimport { FilterInput } from './filter-input';\n\nconst CLEAR_BUTTON_WIDTH = '30px';\n\nconst SearchFilterBox = styled.div<{ hasContents: boolean }>`\n    position: relative;\n\n    &:focus-within {\n        border-color: ${p => p.theme.highlightColor};\n    }\n\n    flex-grow: 1;\n    min-width: 0; /* Don't let flexbox force this to expand given long tags */\n    padding-right: ${p => p.hasContents ? CLEAR_BUTTON_WIDTH : '0'};\n\n    border-radius: 4px;\n\n    border: 1px solid ${p => p.theme.containerBorder};\n    box-shadow: inset 0 2px 4px 1px rgba(0, 0, 0, ${p => p.theme.boxShadowAlpha / 2});\n    background-color: ${p => p.theme.highlightBackground};\n    color: ${p => p.theme.highlightColor};\n\n    font-size: ${p => p.theme.textSize};\n\n    display: flex;\n\n    &:hover, &:focus-within {\n        flex-wrap: wrap;\n    }\n    &:not(:hover):not(:focus-within) {\n        overflow: hidden;\n    }\n\n    /* Add a layer to act as a button background over non-wrapping content */\n    &:after {\n        content: \"\";\n        position: absolute;\n        display: block;\n\n        z-index: 5;\n\n        top: 4px;\n        bottom: 4px;\n\n        right: 0px;\n        width: 36px;\n        background: linear-gradient(\n            to right,\n            transparent 0%,\n            ${p => polished.rgba(p.theme.highlightBackground, 0.9)} 25%\n        );\n    }\n\n    .react-autosuggest__container {\n        flex-grow: 1;\n        flex-basis: 100px; /* Shrink down to this, then wrap */\n    }\n\n    padding-bottom: 4px;\n    > div {\n        margin: 4px 0 0 4px;\n    }\n`;\n\nconst FloatingSearchButtonStyles = css`\n    width: ${CLEAR_BUTTON_WIDTH};\n    padding: 4px 10px;\n    box-sizing: border-box;\n\n    /* This isn't needed for button, but is for buttonlink - unclear why but it works */\n    display: flex;\n    align-items: center;\n\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n\n    /* Appears in front of the :after background layer */\n    z-index: 10;\n`;\n\nconst FloatingClearFiltersButton = styled(IconButton)`${FloatingSearchButtonStyles}`;\nconst FloatingFilterDocsButtonLink = styled(IconButtonLink)`\n    ${FloatingSearchButtonStyles}\n    opacity: 0.8;\n`;\n\nconst deleteFilter = (filters: FilterSet, filter: Filter): FilterSet => {\n    return [\n        filters[0],\n        ...filters.slice(1).filter((f, i) =>\n            f !== filter // Keep all except our given filter\n        )\n    ] as const;\n};\n\nconst deleteFilterIndex = (filters: FilterSet, index: number): FilterSet => {\n    if (index === 0 || filters.length === 0) return filters; // No-op, we never remove the StringFilter\n    else return [\n        filters[0] as StringFilter,\n        ...filters.slice(1, index),\n        ...filters.slice(index + 1)\n    ];\n};\n\nconst getSelectedFilterElements = (filterBox: HTMLDivElement) => {\n    const selection = document.getSelection();\n    if (!selection || selection.isCollapsed) {\n        return [];\n    }\n\n    return [\n        ...Array.from(filterBox.querySelectorAll('.filter-tag')) as HTMLElement[],\n        filterBox.querySelector('input') as HTMLElement\n    ].filter((element) =>\n        selection.containsNode(element, true) // True => include partial selection\n    );\n}\n\n@inject('uiStore')\n@inject('accountStore')\n@observer\nexport class SearchFilter<T> extends React.Component<{\n    uiStore?: UiStore,\n    accountStore?: AccountStore,\n    onFiltersConsidered: (filters: FilterSet | undefined) => void,\n    availableFilters: FilterClass<T>[],\n    filterSuggestionContext?: T,\n    placeholder: string,\n    searchInputRef?: React.Ref<HTMLInputElement>\n}> {\n    private boxRef = React.createRef<HTMLDivElement>();\n\n    // Map HTML elements back to their corresponding filters, for selection tracking later\n    private tagRefs = new Map<HTMLElement, Filter>();\n\n    @observable.struct\n    private selectedFilters: Filter[] = [];\n\n    @computed\n    private get activeFilters() {\n        return this.props.uiStore!.activeFilterSet;\n    }\n\n    @action.bound\n    onFiltersChanged(filters: FilterSet) {\n        this.props.uiStore!.activeFilterSet = filters;\n    }\n\n    @computed\n    private get availableFilters() {\n        const builtInFilters = this.props.availableFilters;\n        const customFilters = Object.entries(this.props.uiStore!.customFilters)\n            .map(([name, filterString]) =>\n                buildCustomFilter(name, filterString, builtInFilters)\n            );\n\n        return builtInFilters.concat(customFilters);\n    }\n\n    private readonly undoer = trackUndo(\n        () => this.activeFilters,\n        (value) => this.onFiltersChanged(value)\n    );\n\n    getSelectedFilters() {\n        const selection = document.getSelection();\n        if (!selection || selection.isCollapsed) {\n            return [];\n        }\n\n        const { boxRef, tagRefs, activeFilters } = this;\n\n        const filterBox = boxRef.current;\n        if (filterBox) {\n            // Manually map the input element to the string search filter. We\n            // could probably do this with a ref, but it's messy, updating on\n            // demand here is easier.\n            tagRefs.set(filterBox.querySelector('input')!, activeFilters[0]);\n        }\n\n        // Update selectedFilters to match the filters selected for real in the document:\n        const currentlySelectedFilters: Filter[] = [];\n        Array.from(tagRefs.entries()).forEach(([tagElement, filter]) => {\n            // Clean up any dangling filter element keys:\n            if (!document.contains(tagElement)) {\n                tagRefs.delete(tagElement);\n                return;\n            }\n\n            if (selection.containsNode(tagElement, true)) { // True => include partial selection\n                currentlySelectedFilters.push(filter);\n            }\n        });\n\n        return currentlySelectedFilters;\n    }\n\n    updateSelectedTags = action(() => {\n        this.selectedFilters = this.getSelectedFilters();\n    })\n\n    componentDidMount() {\n        // Run the above, to match our internal selection state to the DOM, now and\n        // every time the DOM's selection state updates whilst we're mounted:\n        this.updateSelectedTags();\n\n        document.addEventListener('selectionchange', this.updateSelectedTags);\n        disposeOnUnmount(this, () => {\n            document.removeEventListener('selectionchange', this.updateSelectedTags);\n        });\n    }\n\n    private selectAllFilterTags() {\n        const filterBox = this.boxRef.current;\n        if (!filterBox) return;\n\n        window.getSelection()!.setBaseAndExtent(\n            filterBox, 0, // From the start (all tags)\n            filterBox.querySelector('[role=listbox]')!, 0 // Up to but excluding the suggestions box\n        );\n        // ^ This will trigger selectionchange and then updateSelectedTags\n    }\n\n    private deleteSelectedFilters() {\n        const { selectedFilters, onFiltersChanged, activeFilters } = this;\n\n        const remainingInputText = selectedFilters.includes(activeFilters[0])\n            ? \"\"\n            : activeFilters[0].filter || '';\n\n        onFiltersChanged([\n            new StringFilter(remainingInputText),\n            ...activeFilters.filter((f, i) =>\n                i > 0 && !selectedFilters.includes(f)\n            )\n        ]);\n    }\n\n    private onKeyDown = (event: React.KeyboardEvent<HTMLElement>) => {\n        const filterBox = this.boxRef.current;\n        if (!filterBox) return;\n\n        const { onFiltersChanged, activeFilters } = this;\n\n        const selectedFilterElements = getSelectedFilterElements(filterBox);\n\n        if (!filterBox.contains(document.activeElement)) {\n            // Somehow the focus & input is going elsewhere. Ignore this,\n            // and clear our selection entirely if we have one. Unlikely to\n            // happen in normal behaviour, this is here as a backstop.\n            if (selectedFilterElements) {\n                document.getSelection()!.removeAllRanges();\n            }\n            return;\n        }\n\n        if (event.key === 'a' && isCmdCtrlPressed(event)) {\n            // If you select-all, select both the filters and the input\n            this.selectAllFilterTags();\n            event.preventDefault();\n            return;\n        }\n\n        if (event.key.toLowerCase() === 'z' && isCmdCtrlPressed(event)) {\n            if (event.shiftKey) {\n                this.undoer.redo();\n            } else {\n                this.undoer.undo();\n            }\n            event.preventDefault();\n            return;\n        }\n\n        const filterTagElements = Array.from(filterBox.querySelectorAll('.filter-tag'));\n        const filterInput = filterBox.querySelector('input')!;\n        const filterElements = [...filterTagElements, filterInput] as HTMLElement[];\n\n        const focusedElement = document.activeElement;\n        const focusedElementIndex = filterElements.indexOf(focusedElement as HTMLElement);\n\n        if (focusedElement !== filterInput && event.key === 'v' && isCmdCtrlPressed(event)) {\n            // Inconsistently, onPaste doesn't fire on non-editable manually focused elements, and manually\n            // simulating it is difficult (since we need clipboardData). Instead, we redirect all\n            // pastes to the input field, which should always receive them correctly:\n            filterInput.focus();\n            const lastCursorPosition = filterInput.value.length;\n            filterInput.setSelectionRange(lastCursorPosition, lastCursorPosition);\n            return;\n        }\n\n        if (focusedElementIndex === -1) return; // These key bindings apply only to the input & tags:\n\n        if (selectedFilterElements.length > 0) {\n            if (event.key === 'ArrowLeft' || event.key === 'ArrowRight') {\n                const indexToSelect = event.key === 'ArrowLeft'\n                    ? 0\n                    : selectedFilterElements.length - 1;\n\n                const elementToSelect = selectedFilterElements[indexToSelect];\n\n                document.getSelection()!.removeAllRanges();\n                elementToSelect.focus();\n\n                if (elementToSelect === filterInput) {\n                    const cursorPosition = event.key === 'ArrowLeft'\n                        ? 0\n                        : filterInput.value.length;\n                    filterInput.setSelectionRange(cursorPosition, cursorPosition);\n                }\n                event.preventDefault();\n            } else if (event.key === 'Delete' || event.key === 'Backspace') {\n                const lastSelectedIndex = filterElements.indexOf(selectedFilterElements[selectedFilterElements.length - 1]);\n                this.deleteSelectedFilters();\n                document.getSelection()!.removeAllRanges();\n\n                // If we don't delete the last filter tag, React will magically shift focus correctly for us,\n                // because we index filter tags by key. If we delete the last though, we need to focus input manually:\n                if (filterElements.length - lastSelectedIndex < 3) {\n                    filterInput.focus();\n\n                    // This shouldn't be required, but it seems reasonable (we're either deleting filters left of the\n                    // input, or filters including all the input content). Without this, when ctrl-a selects the\n                    // input entirely, focusing the input again here doesn't put the cursor back automatically.\n                    filterInput.setSelectionRange(0, 0);\n                }\n\n                event.preventDefault();\n            } else if (event.key === 'Escape') {\n                document.getSelection()!.removeAllRanges();\n\n                filterInput.focus();\n                const inputEndPosition = filterInput.value.length;\n                filterInput.setSelectionRange(inputEndPosition, inputEndPosition);\n                event.preventDefault();\n            } else if (\n                [...event.key].length === 1 && // Exactly equivalent to 'printable character', AFAICT\n                !event.ctrlKey &&\n                !event.altKey &&\n                !event.metaKey\n            ) {\n                const inputCursorPosition = filterInput.selectionStart || filterInput.value.length;\n                this.deleteSelectedFilters();\n                document.getSelection()!.removeAllRanges();\n\n                // Direct the input directly into the text field:\n                filterInput.setSelectionRange(inputCursorPosition, inputCursorPosition);\n                filterInput.focus();\n            }\n            // -> else we just fire the key event as normal, come what may\n        } else if (filterInput.selectionStart === filterInput.selectionEnd) {\n            // Otherwise, as long as nothing is selected in the input, we're just handling a cursor:\n            const inputCursorIndex = filterInput.selectionStart ?? -1;\n            const isInputSelected = focusedElement === filterInput;\n\n            if (event.key === 'Backspace' || event.key === 'Delete') {\n                // We're deleting something (or a char in the input). Remember that UI order\n                // is reversed, so we map the element index to an index in the model:\n                let filterIndexToDelete = !isInputSelected\n                    ? filterElements.length - 1 - focusedElementIndex // Delete the selected filter\n                : inputCursorIndex <= 0 && event.key === 'Backspace'\n                    ? 1 // Delete back from the start of the input -> delete the first non-string filter\n                : null; // We're within text in the input, do nothing (i.e. delete a char as normal)\n\n                if (filterIndexToDelete) {\n                    onFiltersChanged(\n                        deleteFilterIndex(activeFilters, filterIndexToDelete)\n                    );\n\n                    // If we're not the last filter tag, React will magically shift focus to the next for us,\n                    // because we index elements by key. If we are last though, we need to shift manually:\n                    if (filterIndexToDelete === 1) filterInput.focus();\n                    event.preventDefault();\n                }\n            } else if (event.key === 'ArrowLeft' && focusedElementIndex > 0 && inputCursorIndex <= 0) {\n                filterElements[focusedElementIndex - 1].focus();\n                event.preventDefault();\n            } else if (event.key === 'ArrowRight' && focusedElementIndex < filterElements.length - 1) {\n                const nextFilter = filterElements[focusedElementIndex + 1];\n                nextFilter.focus();\n                if (nextFilter === filterInput) filterInput.setSelectionRange(0, 0);\n                event.preventDefault();\n            }\n        }\n    }\n\n    private onCopy = (e: React.ClipboardEvent) => {\n        const { activeFilters } = this;\n\n        // Get the selected filters in reverse order (i.e. matching the UI order)\n        const filtersToCopy = _.orderBy(this.getSelectedFilters(), f =>\n            activeFilters.indexOf(f),\n        ['desc']);\n\n        if (filtersToCopy.length > 0) {\n            const serialization = filtersToCopy.map(t => t.serialize()).join(' ');\n            copyToClipboard(serialization);\n            e.preventDefault();\n        }\n    }\n\n    private onCut = (e: React.ClipboardEvent) => {\n        this.onCopy(e);\n        this.deleteSelectedFilters();\n    }\n\n    private onPaste = (e: React.ClipboardEvent<HTMLElement>) => {\n        const filterBox = this.boxRef.current;\n        const input = filterBox?.querySelector('input');\n        if (!filterBox || !input) return;\n        e.preventDefault();\n\n        const {\n            selectedFilters,\n            activeFilters,\n            onFiltersChanged,\n            props: { availableFilters }\n        } = this;\n\n        const pastedText = e.clipboardData.getData(\"text\");\n        const pastedFilters = matchFilters(availableFilters, pastedText);\n\n        const pastedStringInput = pastedFilters[0].filter;\n        const selectionStart = input.selectionStart ?? 0;\n        const selectionEnd = input.selectionEnd ?? 0;\n\n        const currentTextInput = activeFilters[0].filter;\n\n        const updatedTextInput = selectedFilters.includes(activeFilters[0])\n            ? pastedStringInput // If whole stringfilter is selected, replace all text\n            : ( // Otherwise, replace selected & paste at cursor position\n                currentTextInput.slice(0, selectionStart) +\n                pastedStringInput +\n                currentTextInput.slice(selectionEnd)\n            );\n\n        // We *always* place pasted filters in position 1 (between text input and filter tags) because\n        // pasting into non-input fields doesn't work reliably, so we redirect it to the input anyway.\n        // This is nice and consistent, and works well enough for now.\n        onFiltersChanged([\n            new StringFilter(updatedTextInput),\n            // Skip both StringFilters below, we've already combined them above:\n            ...pastedFilters.slice(1),\n            ...activeFilters.slice(1)\n                .filter(f => !selectedFilters.includes(f)) // Paste deletes currently selected filters\n        ]);\n\n        // Jump the cursor to the end of the newly pasted content after render:\n        requestAnimationFrame(() => {\n            const endOfPastedContent = selectionStart + pastedStringInput.length;\n            input.setSelectionRange(endOfPastedContent, endOfPastedContent);\n            input.focus();\n        });\n    }\n\n    private onInputChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { onFiltersChanged, activeFilters } = this;\n\n        onFiltersChanged([\n            new StringFilter(event.target.value),\n            ...activeFilters.slice(1)\n        ]);\n    }\n\n    private onFiltersCleared = () => {\n        this.onFiltersChanged(emptyFilterSet());\n\n        const textInput = (this.boxRef.current?.querySelector('input[type=text]') as HTMLElement | undefined);\n        textInput?.focus();\n    };\n\n    @action.bound\n    private onFiltersSaved(filters: Filter[], name: string) {\n        const uiStore = this.props.uiStore!;\n\n        // Save a custom filter using the provided input text\n        uiStore.customFilters[name] = filters.map(f => f.serialize()).reverse().join(' ');\n\n        // Clear the used input text\n        uiStore.activeFilterSet = [\n            new StringFilter(\"\"),\n            ...uiStore.activeFilterSet.slice(1)\n        ];\n    }\n\n    @action.bound\n    private onCustomFilterDeleted(filter: CustomFilterClass) {\n        const uiStore = this.props.uiStore!;\n        delete uiStore.customFilters[filter.filterName];\n    }\n\n    render() {\n        const {\n            boxRef,\n            onCopy,\n            onCut,\n            onPaste,\n            onKeyDown,\n            onInputChanged,\n            onFiltersCleared,\n            onFiltersChanged,\n            onFiltersSaved,\n            onCustomFilterDeleted,\n\n            tagRefs,\n            selectedFilters,\n            activeFilters,\n            availableFilters,\n            props: {\n                accountStore,\n                placeholder,\n                searchInputRef,\n                filterSuggestionContext,\n                onFiltersConsidered\n            }\n        } = this;\n\n        // Note that the model stores filters in the opposite order to how they're shown in the UI.\n        // Mainly just because destructuring (of types & values) only works this way round.\n        const [stringFilter, ...otherFilters] = activeFilters;\n\n        // The text input always edits the first (last, in the UI) filter directly as a string\n        const textInputValue = stringFilter?.filter ?? '';\n\n        const hasContents = !!textInputValue || !!otherFilters.length;\n\n        return <SearchFilterBox\n            ref={boxRef}\n            hasContents={hasContents}\n            onCopy={onCopy}\n            onCut={onCut}\n            onPaste={onPaste}\n            onKeyDown={onKeyDown}\n        >\n            {\n                otherFilters.reverse().map((f, i) =>\n                    <FilterTag\n                        key={i}\n                        filter={f}\n                        isSelected={selectedFilters.includes(f)}\n                        onDelete={() => onFiltersChanged(\n                            deleteFilter(activeFilters, f)\n                        )}\n                        ref={(ref) => { if (ref) tagRefs.set(ref, f); }}\n                    />\n                )\n            }\n            <FilterInput\n                value={textInputValue}\n                onChange={onInputChanged}\n                placeholder={otherFilters.length === 0\n                    ? placeholder\n                    : '...'\n                }\n                searchInputRef={searchInputRef}\n\n                onFiltersConsidered={onFiltersConsidered}\n                onFiltersChanged={onFiltersChanged}\n                onFiltersSaved={onFiltersSaved}\n                onCustomFilterDeleted={onCustomFilterDeleted}\n                activeFilters={activeFilters}\n                availableFilters={availableFilters}\n                suggestionContext={filterSuggestionContext}\n\n                isPaidUser={accountStore!.isPaidUser}\n                getPro={accountStore!.getPro}\n            />\n            { hasContents\n                ? <FloatingClearFiltersButton\n                    title=\"Clear all search filters\"\n                    icon={['fas', 'times']}\n                    onClick={onFiltersCleared}\n                />\n                : <FloatingFilterDocsButtonLink\n                    icon={['fas', 'question']}\n                    title=\"Open filtering docs\"\n\n                    href=\"https://httptoolkit.com/docs/reference/view-page/#filtering-intercepted-traffic\"\n                    target='_blank'\n                    rel='noreferrer noopener'\n                />\n            }\n        </SearchFilterBox>;\n    }\n}","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { observer } from 'mobx-react';\n\nimport { styled } from '../../styles';\nimport { CollectedEvent } from '../../types';\n\nimport {\n    FilterSet,\n    SelectableSearchFilterClasses\n} from '../../model/filters/search-filters';\n\nimport { ClearAllButton, ExportAsHarButton, ImportHarButton, PlayPauseButton, ScrollToEndButton } from './view-event-list-buttons';\nimport { SearchFilter } from './filters/search-filter';\n\nexport const HEADER_FOOTER_HEIGHT = 38;\n\nconst RequestCounter = styled(observer((props: {\n    className?: string,\n    eventCount: number,\n    filteredEventCount: number\n}) =>\n    <div className={props.className}>\n        <span className='count'>\n            { props.filteredEventCount }\n            { props.eventCount !== props.filteredEventCount &&\n                ` / ${ props.eventCount }`\n            }\n        </span>\n        <span className='label'>requests</span>\n</div>\n))`\n    margin-left: auto;\n    padding: 0 10px;\n\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n\n    .count {\n        font-size: 20px;\n        font-weight: bold;\n        white-space: nowrap;\n    }\n\n    .label {\n        margin-top: -4px;\n        font-size: ${p => p.theme.textSize};\n        opacity: 0.8;\n        font-weight: lighter;\n    }\n`;\n\n\nconst ButtonsContainer = styled.div`\n    display: flex;\n`;\n\nexport const ViewEventListFooter = styled(observer((props: {\n    className?: string,\n    onClear: () => void,\n    onFiltersConsidered: (filters: FilterSet | undefined) => void,\n    onScrollToEnd: () => void,\n\n    allEvents: CollectedEvent[],\n    filteredEvents: CollectedEvent[],\n\n    // We track this separately because it's not 100% accurate to show it\n    // live from the events above, because filteredEvents is debounced. If\n    // we're not careful, we show 9/10 at times just because filtering\n    // hasn't been run against the latest events quite yet.\n    filteredCount: [filtered: number, fromTotal: number],\n\n    searchInputRef?: React.Ref<HTMLInputElement>\n}) => <div className={props.className}>\n    <SearchFilter\n        onFiltersConsidered={props.onFiltersConsidered}\n        availableFilters={SelectableSearchFilterClasses}\n        filterSuggestionContext={props.allEvents}\n        placeholder={'Filter by method, host, headers, status...'}\n        searchInputRef={props.searchInputRef}\n    />\n    <RequestCounter\n        filteredEventCount={props.filteredCount[0]}\n        eventCount={props.filteredCount[1]}\n    />\n    <ButtonsContainer>\n        <PlayPauseButton />\n        <ScrollToEndButton onScrollToEnd={props.onScrollToEnd} />\n        <ExportAsHarButton events={props.filteredEvents} />\n        <ImportHarButton />\n        <ClearAllButton\n            disabled={props.allEvents.length === 0}\n            onClear={props.onClear}\n        />\n    </ButtonsContainer>\n</div>))`\n    order: 1;\n\n    min-height: ${HEADER_FOOTER_HEIGHT}px;\n    width: 100%;\n    padding-left: 2px;\n    box-sizing: border-box;\n\n    background-color: ${p => p.theme.mainBackground};\n\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n`;","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { inject, observer, Observer } from 'mobx-react';\nimport { action, computed } from 'mobx';\n\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { FixedSizeList as List, ListChildComponentProps } from 'react-window';\n\nimport { css, highContrastTheme, styled } from '../../styles'\nimport { ArrowIcon, Icon, WarningIcon } from '../../icons';\n\nimport {\n    CollectedEvent,\n    HttpExchange,\n    RTCStream,\n    FailedTlsConnection,\n    RTCConnection,\n    TlsTunnel\n} from '../../types';\n\nimport {\n    getSummaryColour,\n    EventCategory,\n    describeEventCategory\n} from '../../model/events/categorization';\nimport { nameHandlerClass } from '../../model/rules/rule-descriptions';\nimport { getReadableSize } from '../../model/events/bodies';\n\nimport { UnreachableCheck } from '../../util/error';\nimport { filterProps } from '../component-utils';\n\nimport { EmptyState } from '../common/empty-state';\nimport { StatusCode } from '../common/status-code';\n\nimport { HEADER_FOOTER_HEIGHT } from './view-event-list-footer';\nimport { ViewEventContextMenuBuilder } from './view-context-menu-builder';\n\nconst SCROLL_BOTTOM_MARGIN = 5; // If you're in the last 5 pixels of the scroll area, we say you're at the bottom\n\nconst EmptyStateOverlay = styled(EmptyState)`\n    position: absolute;\n    top: ${HEADER_FOOTER_HEIGHT}px;\n    bottom: 0;\n    height: auto;\n\n    line-height: 1.3;\n`;\n\ninterface ViewEventListProps {\n    className?: string;\n    events: CollectedEvent[];\n    filteredEvents: CollectedEvent[];\n    selectedEvent: CollectedEvent | undefined;\n    isPaused: boolean;\n\n    contextMenuBuilder: ViewEventContextMenuBuilder;\n\n    moveSelection: (distance: number) => void;\n    onSelected: (event: CollectedEvent | undefined) => void;\n}\n\nconst ListContainer = styled.div`\n    flex-grow: 1;\n    position: relative;\n    width: 100%;\n    box-sizing: border-box;\n\n    font-size: ${p => p.theme.textSize};\n\n    &::after { /* Insert shadow over table contents */\n        content: '';\n        position: absolute;\n        top: ${HEADER_FOOTER_HEIGHT}px;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 30px inset;\n        pointer-events: none;\n    }\n`;\n\nconst Column = styled.div`\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    padding: 3px 0;\n`;\n\nconst RowPin = styled(\n    filterProps(Icon, 'pinned')\n).attrs((p: { pinned: boolean }) => ({\n    icon: ['fas', 'thumbtack'],\n    title: p.pinned ? \"This exchange is pinned, and won't be deleted by default\" : ''\n}))`\n    font-size: 90%;\n    background-color: ${p => p.theme.containerBackground};\n\n    /* Without this, 0 width pins create a large & invisible but still clickable icon */\n    overflow: hidden;\n\n    transition: width 0.1s, padding 0.1s, margin 0.1s;\n\n    ${(p: { pinned: boolean }) =>\n        p.pinned\n        ? `\n            width: auto;\n            padding: 8px 7px;\n            && { margin-right: -3px; }\n        `\n        : `\n            padding: 8px 0;\n            width: 0 !important;\n            margin: 0 !important;\n\n            > path {\n                display: none;\n            }\n        `\n    }\n`;\n\nconst RowMarker = styled(Column)`\n    transition: color 0.2s;\n    color: ${(p: { category: EventCategory }) => getSummaryColour(p.category)};\n\n    background-color: currentColor;\n\n    flex-basis: 5px;\n    flex-shrink: 0;\n    flex-grow: 0;\n    height: 100%;\n    padding: 0;\n\n    border-left: 5px solid ${p => p.theme.containerBackground};\n`;\n\nconst MarkerHeader = styled.div`\n    flex-basis: 10px;\n    flex-shrink: 0;\n`;\n\nconst Method = styled(Column)`\n    transition: flex-basis 0.1s;\n    ${(p: { pinned?: boolean }) =>\n        p.pinned\n        ? 'flex-basis: 50px;'\n        : 'flex-basis: 71px;'\n    }\n\n    flex-shrink: 0;\n    flex-grow: 0;\n`;\n\nconst Status = styled(Column)`\n    flex-basis: 45px;\n    flex-shrink: 0;\n    flex-grow: 0;\n`;\n\nconst Source = styled(Column)`\n    flex-basis: 49px;\n    flex-shrink: 0;\n    flex-grow: 0;\n    text-align: center;\n`;\n\nconst Host = styled(Column)`\n    flex-shrink: 1;\n    flex-grow: 0;\n    flex-basis: 500px;\n`;\n\nconst PathAndQuery = styled(Column)`\n    flex-shrink: 1;\n    flex-grow: 0;\n    flex-basis: 1000px;\n`;\n\n// Match Method + Status, but shrink right margin slightly so that\n// spinner + \"WebRTC Media\" fits OK.\nconst EventTypeColumn = styled(Column)`\n    transition: flex-basis 0.1s;\n    ${(p: { pinned?: boolean }) =>\n        p.pinned\n        ? 'flex-basis: 109px;'\n        : 'flex-basis: 130px;'\n    }\n\n    margin-right: 6px !important;\n\n    flex-shrink: 0;\n    flex-grow: 0;\n`;\n\n// Match Host column:\nconst RTCEventLabel = styled(Column)`\n    flex-shrink: 1;\n    flex-grow: 0;\n    flex-basis: 500px;\n\n    > svg {\n        padding-right: 0; /* Right, not left - it's rotated */\n    }\n`;\n\n// Match PathAndQuery column:\nconst RTCEventDetails = styled(Column)`\n    flex-shrink: 1;\n    flex-grow: 0;\n    flex-basis: 1000px;\n`;\n\nconst RTCConnectionDetails = styled(RTCEventDetails)`\n    text-align: center;\n`;\n\n// Host + Path + Query columns:\nconst BuiltInApiRequestDetails = styled(Column)`\n    flex-shrink: 1;\n    flex-grow: 0;\n    flex-basis: 1000px;\n`;\n\nconst EventListRow = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    user-select: none;\n    cursor: pointer;\n\n    &.selected {\n        background-color: ${p => p.theme.highlightBackground};\n        color: ${p => p.theme.highlightColor};\n        font-weight: bold;\n\n        ${(p): any => p.theme === highContrastTheme &&\n            css`\n                ${StatusCode} {\n                    color: ${p => p.theme.highlightColor};\n                }\n            `\n        }\n    }\n\n    &:focus {\n        outline: thin dotted ${p => p.theme.popColor};\n    }\n`;\n\nconst TrafficEventListRow = styled(EventListRow)`\n    background-color: ${props => props.theme.mainBackground};\n\n    border-width: 2px 0;\n    border-style: solid;\n    border-color: transparent;\n    background-clip: padding-box;\n    box-sizing: border-box;\n\n    &:hover ${RowMarker}, &.selected ${RowMarker} {\n        border-color: currentColor;\n    }\n\n    > * {\n        margin-right: 10px;\n    }\n`;\n\nconst TlsListRow = styled(EventListRow)`\n    height: 28px !important; /* Important required to override react-window's style attr */\n    margin: 2px 0;\n\n    font-style: italic;\n    justify-content: center;\n    text-align: center;\n\n    opacity: 0.7;\n\n    &:hover {\n        opacity: 1;\n    }\n\n    &.selected {\n        opacity: 1;\n        color: ${p => p.theme.mainColor};\n        background-color: ${p => p.theme.mainBackground};\n    }\n`;\n\nexport const TableHeader = styled.header`\n    height: 38px;\n    overflow: hidden;\n    width: 100%;\n\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    background-color: ${props => props.theme.mainBackground};\n    color: ${props => props.theme.mainColor};\n    font-weight: bold;\n\n    border-bottom: 1px solid ${props => props.theme.containerBorder};\n    box-shadow: 0 0 30px rgba(0,0,0,0.2);\n\n    padding-right: 18px;\n    box-sizing: border-box;\n\n    > div {\n        padding: 5px 0;\n        margin-right: 10px;\n        min-width: 0px;\n\n        &:first-of-type {\n            margin-left: 0;\n        }\n    }\n`;\n\ninterface EventRowProps extends ListChildComponentProps {\n    data: {\n        selectedEvent: CollectedEvent | undefined;\n        events: CollectedEvent[];\n        contextMenuBuilder: ViewEventContextMenuBuilder;\n    }\n}\n\nconst EventRow = observer((props: EventRowProps) => {\n    const { index, style } = props;\n    const { events, selectedEvent, contextMenuBuilder } = props.data;\n    const event = events[index];\n\n    const isSelected = (selectedEvent === event);\n\n    if (event.isTlsFailure() || event.isTlsTunnel()) {\n        return <TlsRow\n            index={index}\n            isSelected={isSelected}\n            style={style}\n            tlsEvent={event}\n        />;\n    } else if (event.isHttp()) {\n        if (event.api?.isBuiltInApi && event.api.matchedOperation()) {\n            return <BuiltInApiRow\n                index={index}\n                isSelected={isSelected}\n                style={style}\n                exchange={event}\n                contextMenuBuilder={contextMenuBuilder}\n            />\n        } else {\n            return <ExchangeRow\n                index={index}\n                isSelected={isSelected}\n                style={style}\n                exchange={event}\n                contextMenuBuilder={contextMenuBuilder}\n            />;\n        }\n    } else if (event.isRTCConnection()) {\n        return <RTCConnectionRow\n            index={index}\n            isSelected={isSelected}\n            style={style}\n            event={event}\n        />;\n    } else if (event.isRTCDataChannel() || event.isRTCMediaTrack()) {\n        return <RTCStreamRow\n            index={index}\n            isSelected={isSelected}\n            style={style}\n            event={event}\n        />;\n    } else {\n        throw new UnreachableCheck(event);\n    }\n});\n\nconst ExchangeRow = inject('uiStore')(observer(({\n    index,\n    isSelected,\n    style,\n    exchange,\n    contextMenuBuilder\n}: {\n    index: number,\n    isSelected: boolean,\n    style: {},\n    exchange: HttpExchange,\n    contextMenuBuilder: ViewEventContextMenuBuilder\n}) => {\n    const {\n        request,\n        response,\n        pinned,\n        category\n    } = exchange;\n\n    return <TrafficEventListRow\n        role=\"row\"\n        aria-label='row'\n        aria-rowindex={index + 1}\n        data-event-id={exchange.id}\n        tabIndex={isSelected ? 0 : -1}\n        onContextMenu={contextMenuBuilder.getContextMenuCallback(exchange)}\n        className={isSelected ? 'selected' : ''}\n        style={style}\n    >\n        <RowPin pinned={pinned}/>\n        <RowMarker category={category} title={describeEventCategory(category)} />\n        <Method pinned={pinned}>{ request.method }</Method>\n        <Status>\n            {\n                response === 'aborted'\n                    ? <StatusCode status={'aborted'} />\n                : exchange.isBreakpointed\n                    ? <WarningIcon title='Breakpointed, waiting to be resumed' />\n                : exchange.isWebSocket() && response?.statusCode === 101\n                    ? <StatusCode // Special UI for accepted WebSockets\n                        status={exchange.closeState\n                            ? 'WS:closed'\n                            : 'WS:open'\n                        }\n                        message={`${exchange.closeState\n                            ? 'A closed'\n                            : 'An open'\n                        } WebSocket connection`}\n                    />\n                : <StatusCode\n                    status={response?.statusCode}\n                    message={response?.statusMessage}\n                />\n            }\n        </Status>\n        <Source>\n            <Icon\n                title={request.source.summary}\n                {...request.source.icon}\n                fixedWidth={true}\n            />\n            {\n                exchange.matchedRule &&\n                exchange.matchedRule.handlerStepTypes.some(t =>\n                    t !== 'passthrough' && t !== 'ws-passthrough' && t !== 'rtc-dynamic-proxy'\n                ) &&\n                <Icon\n                    title={`Handled by ${\n                        exchange.matchedRule.handlerStepTypes.length === 1\n                        ? nameHandlerClass(exchange.matchedRule.handlerStepTypes[0])\n                        : 'multi-step'\n                    } rule`}\n                    icon={['fas', 'theater-masks']}\n                    color={getSummaryColour('mutative')}\n                    fixedWidth={true}\n                />\n            }\n        </Source>\n        <Host title={ request.parsedUrl.host }>\n            { request.parsedUrl.host }\n        </Host>\n        <PathAndQuery title={ request.parsedUrl.pathname + request.parsedUrl.search }>\n            { request.parsedUrl.pathname + request.parsedUrl.search }\n        </PathAndQuery>\n    </TrafficEventListRow>;\n}));\n\nconst ConnectedSpinnerIcon = styled(Icon).attrs(() => ({\n    icon: ['fas', 'spinner'],\n    spin: true,\n    title: 'Connected'\n}))`\n    margin: 0 5px 0 0;\n`;\n\nconst RTCConnectionRow = observer(({\n    index,\n    isSelected,\n    style,\n    event\n}: {\n    index: number,\n    isSelected: boolean,\n    style: {},\n    event: RTCConnection\n}) => {\n    const { category, pinned } = event;\n\n    return <TrafficEventListRow\n        role=\"row\"\n        aria-label='row'\n        aria-rowindex={index + 1}\n        data-event-id={event.id}\n        tabIndex={isSelected ? 0 : -1}\n\n        className={isSelected ? 'selected' : ''}\n        style={style}\n    >\n        <RowPin pinned={pinned}/>\n        <RowMarker category={category} title={describeEventCategory(category)} />\n        <EventTypeColumn>\n            { !event.closeState && <ConnectedSpinnerIcon /> } WebRTC\n        </EventTypeColumn>\n        <Source title={event.source.summary}>\n            <Icon\n                {...event.source.icon}\n                fixedWidth={true}\n            />\n        </Source>\n        <RTCConnectionDetails>\n            {\n                event.clientURL\n            } <ArrowIcon direction='right' /> {\n                event.remoteURL || '?'\n            }\n        </RTCConnectionDetails>\n    </TrafficEventListRow>;\n});\n\nconst RTCStreamRow = observer(({\n    index,\n    isSelected,\n    style,\n    event\n}: {\n    index: number,\n    isSelected: boolean,\n    style: {},\n    event: RTCStream\n}) => {\n    const { category, pinned } = event;\n\n    return <TrafficEventListRow\n        role=\"row\"\n        aria-label='row'\n        aria-rowindex={index + 1}\n        data-event-id={event.id}\n        tabIndex={isSelected ? 0 : -1}\n\n        className={isSelected ? 'selected' : ''}\n        style={style}\n    >\n        <RowPin pinned={pinned}/>\n        <RowMarker category={category} title={describeEventCategory(category)} />\n        <EventTypeColumn>\n            { !event.closeState && <ConnectedSpinnerIcon /> } WebRTC {\n                event.isRTCDataChannel()\n                    ? 'Data'\n                : // RTCMediaTrack:\n                    'Media'\n            }\n        </EventTypeColumn>\n        <Source title={event.rtcConnection.source.summary}>\n            <Icon\n                {...event.rtcConnection.source.icon}\n                fixedWidth={true}\n            />\n        </Source>\n        <RTCEventLabel>\n            <ArrowIcon direction='right' /> { event.rtcConnection.remoteURL }\n        </RTCEventLabel>\n        <RTCEventDetails>\n            {\n                event.isRTCDataChannel()\n                    ? <>\n                        { event.label } <em>\n                            ({event.protocol ? `${event.protocol} - ` : ''}\n                            { event.messages.length } message{\n                                event.messages.length !== 1 ? 's' : ''\n                            })\n                        </em>\n                    </>\n                // Media track:\n                    : <>\n                        { event.direction } { event.type } <em>{\n                            getReadableSize(event.totalBytesSent)\n                        } sent, {\n                            getReadableSize(event.totalBytesReceived)\n                        } received</em>\n                    </>\n            }\n        </RTCEventDetails>\n    </TrafficEventListRow>;\n});\n\nconst BuiltInApiRow = observer((p: {\n    index: number,\n    exchange: HttpExchange,\n    isSelected: boolean,\n    style: {},\n    contextMenuBuilder: ViewEventContextMenuBuilder\n}) => {\n    const {\n        request,\n        pinned,\n        category\n    } = p.exchange;\n    const api = p.exchange.api!; // Only shown for built-in APIs, so this must be set\n\n    return <TrafficEventListRow\n        role=\"row\"\n        aria-label='row'\n        aria-rowindex={p.index + 1}\n        data-event-id={p.exchange.id}\n        tabIndex={p.isSelected ? 0 : -1}\n\n        onContextMenu={p.contextMenuBuilder.getContextMenuCallback(p.exchange)}\n        className={p.isSelected ? 'selected' : ''}\n        style={p.style}\n    >\n        <RowPin pinned={pinned}/>\n        <RowMarker category={category} title={describeEventCategory(category)} />\n        <EventTypeColumn>\n            { api.service.shortName }: {\n                _.startCase(\n                    api.operation.name\n                    .replace('eth_', '') // One-off hack for Ethereum, but result looks much nicer.\n                )\n            }\n        </EventTypeColumn>\n        <Source title={request.source.summary}>\n            <Icon\n                {...request.source.icon}\n                fixedWidth={true}\n            />\n        </Source>\n        <BuiltInApiRequestDetails>\n            {\n                api.request.parameters\n                .filter(param => param.value !== undefined)\n                .map(param => `${param.name}=${JSON.stringify(param.value)}`)\n                .join(', ')\n            }\n        </BuiltInApiRequestDetails>\n    </TrafficEventListRow>\n});\n\nconst TlsRow = observer((p: {\n    index: number,\n    tlsEvent: FailedTlsConnection | TlsTunnel,\n    isSelected: boolean,\n    style: {}\n}) => {\n    const { tlsEvent } = p;\n\n    const description = tlsEvent.isTlsTunnel()\n        ? 'Tunnelled TLS '\n        : ({\n            'closed': 'Aborted ',\n            'reset': 'Aborted ',\n            'unknown': 'Aborted ',\n            'cert-rejected': 'Certificate rejected for ',\n            'no-shared-cipher': 'HTTPS setup failed for ',\n        } as _.Dictionary<string>)[tlsEvent.failureCause]\n\n    return <TlsListRow\n        role=\"row\"\n        aria-label='row'\n        aria-rowindex={p.index + 1}\n        data-event-id={tlsEvent.id}\n        tabIndex={p.isSelected ? 0 : -1}\n\n        className={p.isSelected ? 'selected' : ''}\n        style={p.style}\n    >\n        {\n            tlsEvent.isTlsTunnel() &&\n            tlsEvent.isOpen() &&\n                <ConnectedSpinnerIcon />\n        } {\n            description\n        } connection to { tlsEvent.upstreamHostname || 'unknown domain' }\n    </TlsListRow>\n});\n\n@observer\nexport class ViewEventList extends React.Component<ViewEventListProps> {\n\n    @computed\n    get selectedEventId() {\n        return this.props.selectedEvent\n            ? this.props.selectedEvent.id\n            : undefined;\n    }\n\n    @computed get listItemData(): EventRowProps['data'] {\n        return {\n            selectedEvent: this.props.selectedEvent,\n            events: this.props.filteredEvents,\n            contextMenuBuilder: this.props.contextMenuBuilder\n        };\n    }\n\n    private listBodyRef = React.createRef<HTMLDivElement>();\n    private listRef = React.createRef<List>();\n\n    private KeyBoundListWindow = observer(\n        React.forwardRef<HTMLDivElement>(\n            (props: any, ref) => <section\n                {...props}\n                style={Object.assign({}, props.style, { 'overflowY': 'scroll' })}\n                ref={ref}\n\n                onFocus={this.focusSelectedEvent}\n                onKeyDown={this.onKeyDown}\n                onMouseDown={this.onListMouseDown}\n                tabIndex={this.isSelectedEventVisible() ? -1 : 0}\n            />\n        )\n    );\n\n    render() {\n        const { events, filteredEvents, isPaused } = this.props;\n\n        return <ListContainer>\n            <TableHeader>\n                <MarkerHeader />\n                <Method>Method</Method>\n                <Status>Status</Status>\n                <Source>Source</Source>\n                <Host>Host</Host>\n                <PathAndQuery>Path and query</PathAndQuery>\n            </TableHeader>\n\n            {\n                events.length === 0\n                ? (isPaused\n                    ? <EmptyStateOverlay icon={['fas', 'pause']}>\n                        Interception is paused, resume it to collect intercepted requests\n                    </EmptyStateOverlay>\n                    : <EmptyStateOverlay icon={['fas', 'plug']}>\n                        Connect a client and intercept some requests, and they'll appear here\n                    </EmptyStateOverlay>\n                )\n\n                : filteredEvents.length === 0\n                ? <EmptyStateOverlay icon={['fas', 'question']}>\n                        No requests match this search filter{\n                            isPaused ? ' and interception is paused' : ''\n                        }\n                </EmptyStateOverlay>\n\n                : <AutoSizer>{({ height, width }) =>\n                    <Observer>{() =>\n                        <List\n                            innerRef={this.listBodyRef}\n                            outerElementType={this.KeyBoundListWindow}\n                            ref={this.listRef}\n\n                            height={height - HEADER_FOOTER_HEIGHT}\n                            width={width}\n                            itemCount={filteredEvents.length}\n                            itemSize={32}\n                            itemData={this.listItemData}\n\n                            onScroll={this.updateScrolledState}\n                        >\n                            { EventRow }\n                        </List>\n                    }</Observer>\n                }</AutoSizer>\n            }\n        </ListContainer>;\n    }\n\n    private isSelectedEventVisible = () => {\n        if (!this.selectedEventId) return false;\n\n        const listBody = this.listBodyRef.current;\n        if (!listBody) return false;\n\n        return !!listBody.querySelector(`[data-event-id='${this.selectedEventId}']`);\n    }\n\n    private focusEvent(event?: CollectedEvent) {\n        const listBody = this.listBodyRef.current;\n        if (!listBody) return;\n\n        if (event) {\n            const rowElement = listBody.querySelector(\n                `[data-event-id='${event.id}']`\n            ) as HTMLDivElement;\n            rowElement?.focus();\n        } else {\n            const listWindow = listBody.parentElement!;\n            listWindow.focus();\n        }\n    }\n\n    private focusSelectedEvent = () => {\n        this.focusEvent(this.props.selectedEvent);\n    }\n\n    private isListAtBottom() {\n        const listWindow = this.listBodyRef.current?.parentElement;\n        if (!listWindow) return true; // This means no rows, so we are effectively at the bottom\n        else return (listWindow.scrollTop + SCROLL_BOTTOM_MARGIN) >= (listWindow.scrollHeight - listWindow.offsetHeight);\n    }\n\n    private wasListAtBottom = true;\n    private updateScrolledState = () => {\n        requestAnimationFrame(() => { // Measure async, once the scroll has actually happened\n            this.wasListAtBottom = this.isListAtBottom();\n        });\n    }\n\n    componentDidMount() {\n        this.updateScrolledState();\n    }\n\n    componentDidUpdate() {\n        if (this.listBodyRef.current?.parentElement?.contains(document.activeElement)) {\n            // If we previously had something here focused, and we've updated, update\n            // the focus too, to make sure it's in the right place.\n            this.focusSelectedEvent();\n        }\n\n        // If we previously were scrolled to the bottom of the list, but now we're not,\n        // scroll there again ourselves now.\n        if (this.wasListAtBottom && !this.isListAtBottom()) {\n            this.listRef.current?.scrollToItem(this.props.events.length - 1);\n        }\n    }\n\n    public scrollToEvent(event: CollectedEvent) {\n        const targetIndex = this.props.filteredEvents.indexOf(event);\n        if (targetIndex === -1) return;\n\n        this.listRef.current?.scrollToItem(targetIndex);\n\n        requestAnimationFrame(() => this.focusEvent(event));\n    }\n\n    public scrollToCenterEvent(event: CollectedEvent) {\n        const list = this.listRef.current;\n        const listBody = this.listBodyRef.current;\n        if (!list || !listBody) return;\n        const listWindow = listBody.parentElement!;\n\n        const targetIndex = this.props.filteredEvents.indexOf(event);\n        if (targetIndex === -1) return;\n\n        // TODO: scrollToItem(\"center\") doesn't work well, need to resolve\n        // https://github.com/bvaughn/react-window/issues/441 to fix this.\n        const rowCount = this.props.filteredEvents.length;\n        const rowHeight = 32;\n        const windowHeight = listWindow.clientHeight;\n        const halfHeight = windowHeight / 2;\n        const rowOffset = targetIndex * rowHeight;\n        const maxOffset = Math.max(0, rowCount * rowHeight - windowHeight);\n        const targetOffset = rowOffset - halfHeight + rowHeight / 2;\n        list.scrollTo(_.clamp(targetOffset, 0, maxOffset));\n\n        // Focus the row, after the UI has updated, to make it extra obvious:\n        requestAnimationFrame(() => this.focusEvent(event));\n    }\n\n    public scrollToEnd() {\n        this.listRef.current?.scrollToItem(this.props.filteredEvents.length, 'start');\n    }\n\n    onListMouseDown = (mouseEvent: React.MouseEvent) => {\n        if (mouseEvent.button !== 0) return; // Left clicks only\n\n        let row: Element | null = mouseEvent.target as Element;\n        let ariaRowIndex: string | null = null;\n\n        // Climb up until we find the row, or the container\n        while (ariaRowIndex === null && row && row !== this.listBodyRef.current) {\n            // Be a little careful - React thinks event targets might not have getAttribute\n            ariaRowIndex = row.getAttribute && row.getAttribute('aria-rowindex');\n            row = row.parentElement;\n        }\n\n        if (!ariaRowIndex) return;\n\n        const eventIndex = parseInt(ariaRowIndex, 10) - 1;\n        const event = this.props.filteredEvents[eventIndex];\n        if (event !== this.props.selectedEvent) {\n            this.onEventSelected(eventIndex);\n        } else {\n            // Clicking the selected row deselects it\n            this.onEventDeselected();\n        }\n    }\n\n    @action.bound\n    onEventSelected(index: number) {\n        this.props.onSelected(this.props.filteredEvents[index]);\n    }\n\n    @action.bound\n    onEventDeselected() {\n        this.props.onSelected(undefined);\n    }\n\n    @action.bound\n    onKeyDown(event: React.KeyboardEvent<HTMLDivElement>) {\n        const { moveSelection } = this.props;\n\n        switch (event.key) {\n            case 'ArrowDown':\n                moveSelection(1);\n                break;\n            case 'ArrowUp':\n                moveSelection(-1);\n                break;\n            case 'PageUp':\n                moveSelection(-10);\n                break;\n            case 'PageDown':\n                moveSelection(10);\n                break;\n            case 'Home':\n                moveSelection(-Infinity);\n                break;\n            case 'End':\n                moveSelection(Infinity);\n                break;\n            default:\n                return;\n        }\n\n        event.preventDefault();\n    }\n}","import * as _ from 'lodash';\nimport * as HTTPSnippet from \"@httptoolkit/httpsnippet\";\n\nimport { saveFile } from \"../../util/ui\";\nimport { ObservablePromise } from '../../util/observable';\n\nimport { HttpExchange } from \"../http/exchange\";\nimport { generateHarRequest, generateHar, ExtendedHarRequest } from '../http/har';\n\nexport const exportHar = async (exchange: HttpExchange) => {\n    const harContent = JSON.stringify(\n        await generateHar([exchange], {\n            bodySizeLimit: Infinity\n        })\n    );\n    const filename = `${\n        exchange.request.method\n    } ${\n        exchange.request.parsedUrl.hostname\n    }.har`;\n\n    saveFile(filename, 'application/har+json;charset=utf-8', harContent);\n};\n\nexport function generateCodeSnippet(\n    exchange: HttpExchange,\n    snippetFormat: SnippetOption,\n    options: { waitForBodyDecoding: true }\n): ObservablePromise<string>;\nexport function generateCodeSnippet(\n    exchange: HttpExchange,\n    snippetFormat: SnippetOption,\n    options?: { waitForBodyDecoding?: boolean }\n): string;\nexport function generateCodeSnippet(\n    exchange: HttpExchange,\n    snippetFormat: SnippetOption,\n    options: { waitForBodyDecoding?: boolean } = {}\n): string | ObservablePromise<string> {\n    // If the body isn't decoded yet, and it should be, wait for that decoding first.\n    if (options.waitForBodyDecoding && (\n        exchange.request.body.decodedPromise.state === 'pending' ||\n        exchange.request.body.decodedPromise.state === undefined\n    )) {\n        // Doesn't matter if this errors - we'll make that explicit in the export later.\n        return exchange.request.body.decodedPromise.catch(() => {})\n            .then(() => generateCodeSnippet(exchange, snippetFormat, options));\n    }\n\n    // First, we need to get a HAR that appropriately represents this request as we\n    // want to export it:\n    const harRequest = generateHarRequest(exchange.request, false, {\n        bodySizeLimit: Infinity\n    });\n    const harSnippetBase = simplifyHarForSnippetExport(harRequest);\n\n    // Then, we convert that HAR to code for the given target:\n    return new HTTPSnippet(harSnippetBase).convert(snippetFormat.target, snippetFormat.client);\n};\n\nconst simplifyHarForSnippetExport = (harRequest: ExtendedHarRequest) => {\n    const postData = !!harRequest.postData\n            ? harRequest.postData\n        : harRequest._requestBodyStatus === 'discarded:not-representable'\n            ? {\n                mimeType: 'text/plain',\n                text: \"!!! UNREPRESENTABLE BINARY REQUEST BODY - BODY MUST BE EXPORTED SEPARATELY !!!\"\n            }\n        : harRequest._requestBodyStatus === 'discarded:too-large'\n            ? {\n                mimeType: 'text/plain',\n                text: \"!!! VERY LARGE REQUEST BODY - BODY MUST BE EXPORTED & INCLUDED SEPARATELY !!!\"\n            }\n        : harRequest._requestBodyStatus === 'discarded:not-decodable'\n            ? {\n                mimeType: 'text/plain',\n                text: \"!!! REQUEST BODY COULD NOT BE DECODED !!!\"\n            }\n        : undefined;\n\n    // When exporting code snippets the primary goal is to generate convenient code to send the\n    // request that's *sematantically* equivalent to the original request, not to force every\n    // tool to produce byte-for-byte identical requests (that's effectively impossible). To do\n    // this, we drop headers that tools can produce automatically for themselves:\n    return {\n        ...harRequest,\n        postData,\n        headers: harRequest.headers.filter((header) => {\n            // All clients should be able to automatically generate the correct content-length\n            // headers as required for a request where it's unspecified. If we override this,\n            // it can cause problems if tools change the body length (due to encoding/compression).\n            if (header.name.toLowerCase() === 'content-length') return false;\n\n            // HTTP/2 headers should never be included in snippets - they're implicitly part of\n            // the other request data (the method etc).\n            // We can drop this after fixing https://github.com/Kong/httpsnippet/issues/298\n            if (header.name.startsWith(':')) return false;\n\n            return true;\n        })\n    };\n};\n\nexport interface SnippetOption {\n    target: HTTPSnippet.Target,\n    client: HTTPSnippet.Client,\n    name: string,\n    description: string,\n    link: string\n}\n\nexport const snippetExportOptions: _.Dictionary<SnippetOption[]> = _(HTTPSnippet.availableTargets())\n    .keyBy(target => target.title)\n    .mapValues(target =>\n        target.clients.map((client) => ({\n            target: target.key,\n            client: client.key,\n            name: client.title,\n            description: client.description,\n            link: client.link\n        }))\n    ).value();\n\nconst EXPORT_SNIPPET_KEY_SEPARATOR = '~~';\n\nexport const DEFAULT_SNIPPET_FORMAT_KEY = `shell${EXPORT_SNIPPET_KEY_SEPARATOR}curl`;\n\nexport const getCodeSnippetFormatKey = (option: SnippetOption) =>\n    option.target + EXPORT_SNIPPET_KEY_SEPARATOR + option.client;\n\nexport const getCodeSnippetOptionFromKey = (key: string) => {\n    const [target, client] = key.split(EXPORT_SNIPPET_KEY_SEPARATOR) as\n        [HTTPSnippet.Target, HTTPSnippet.Client];\n\n    return _(snippetExportOptions)\n        .values()\n        .flatten()\n        .find({ target, client }) as SnippetOption;\n};\n\n\n// Show the client name, or an overridden name in some ambiguous cases\nexport const getCodeSnippetFormatName = (option: SnippetOption) => ({\n    'php~~curl': 'PHP ext-cURL',\n    'php~~http1': 'PHP HTTP v1',\n    'php~~http2': 'PHP HTTP v2',\n    'node~~native': 'Node.js HTTP'\n} as _.Dictionary<string>)[getCodeSnippetFormatKey(option)] || option.name;","import { action, runInAction } from 'mobx';\n\nimport { CollectedEvent } from '../../types';\n\nimport { copyToClipboard } from '../../util/ui';\n\nimport { AccountStore } from '../../model/account/account-store';\nimport { UiStore } from '../../model/ui/ui-store';\nimport { HttpExchange } from '../../model/http/exchange';\nimport {\n    exportHar,\n    generateCodeSnippet,\n    getCodeSnippetFormatKey,\n    getCodeSnippetFormatName,\n    getCodeSnippetOptionFromKey,\n    snippetExportOptions\n} from '../../model/ui/export';\n\nexport class ViewEventContextMenuBuilder {\n\n    constructor(\n        private accountStore: AccountStore,\n        private uiStore: UiStore,\n\n        private onPin: (event: CollectedEvent) => void,\n        private onDelete: (event: CollectedEvent) => void,\n        private onBuildRuleFromExchange: (exchange: HttpExchange) => void\n    ) {}\n\n    private readonly BaseOptions = {\n        Pin: {\n            type: 'option',\n            label: 'Toggle Pinning',\n            callback: this.onPin\n        },\n        Delete: {\n            type: 'option',\n            label: 'Delete',\n            callback: this.onDelete\n        }\n    } as const;\n\n    getContextMenuCallback(event: CollectedEvent) {\n        return (mouseEvent: React.MouseEvent) => {\n            const { isPaidUser } = this.accountStore;\n\n            const preferredExportFormat = this.uiStore.exportSnippetFormat\n                ? getCodeSnippetOptionFromKey(this.uiStore.exportSnippetFormat)\n                : undefined;\n\n            if (event.isHttp()) {\n                this.uiStore.handleContextMenuEvent(mouseEvent, [\n                    this.BaseOptions.Pin,\n                    {\n                        type: 'option',\n                        label: 'Copy Request URL',\n                        callback: (data: HttpExchange) => copyToClipboard(data.request.url)\n                    },\n                    this.BaseOptions.Delete,\n                    ...(!isPaidUser ? [\n                        { type: 'separator' },\n                        { type: 'option', label: 'With Pro:', enabled: false, callback: () => {} }\n                    ] as const : []),\n                    {\n                        type: 'option',\n                        enabled: isPaidUser,\n                        label: `Create Matching Mock Rule`,\n                        callback: this.onBuildRuleFromExchange\n                    },\n                    {\n                        type: 'option',\n                        enabled: isPaidUser,\n                        label: `Export Exchange as HAR`,\n                        callback: exportHar\n                    },\n                    // If you have a preferred default format, we show that option at the top level:\n                    ...(preferredExportFormat && isPaidUser ? [{\n                        type: 'option',\n                        label: `Copy as ${getCodeSnippetFormatName(preferredExportFormat)} Snippet`,\n                        callback: async (data: HttpExchange) => {\n                            copyToClipboard(\n                                await generateCodeSnippet(data, preferredExportFormat, {\n                                    waitForBodyDecoding: true\n                                })\n                            );\n                        }\n                    }] as const : []),\n                    {\n                        type: 'submenu',\n                        enabled: isPaidUser,\n                        label: `Copy as Code Snippet`,\n                        items: Object.keys(snippetExportOptions).map((snippetGroupName) => ({\n                            type: 'submenu',\n                            label: snippetGroupName,\n                            items: snippetExportOptions[snippetGroupName].map((snippetOption) => ({\n                                type: 'option',\n                                label: getCodeSnippetFormatName(snippetOption),\n                                callback: async (data: HttpExchange) => {\n                                    // When you pick an option here, it updates your preferred default option\n                                    runInAction(() => {\n                                        this.uiStore.exportSnippetFormat = getCodeSnippetFormatKey(snippetOption);\n                                    });\n\n                                    copyToClipboard(\n                                        await generateCodeSnippet(data, snippetOption, {\n                                            waitForBodyDecoding: true\n                                        })\n                                    );\n                                }\n                            }))\n                        }))\n                    },\n                ], event)\n            } else {\n                // For non-HTTP events, we just show the super-basic globally supported options:\n                this.uiStore.handleContextMenuEvent(mouseEvent, [\n                    this.BaseOptions.Pin,\n                    this.BaseOptions.Delete\n                ], event);\n            }\n        };\n    }\n\n}","import * as React from 'react';\n\nimport { styled } from '../../styles';\n\nexport const PaneOuterContainer = styled.div`\n    height: 100%;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n`;\n\nconst PaneScrollOuterContainer = styled.div`\n    position: relative;\n    overflow-y: scroll;\n\n    flex-grow: 1;\n    padding: 0 20px 0 20px;\n\n    background-color: ${p => p.theme.containerBackground};\n`;\n\nconst PaneScrollInnerContainer = styled.div`\n    min-height: 100%;\n    box-sizing: border-box;\n\n    display: flex;\n    flex-direction: column;\n\n    /*\n    * This padding could be padding on the scroll container, but doing so causes odd\n    * behaviour where position: sticky headers don't take it into account, on OSX only.\n    * Moving to the direct parent of the header makes that consistent, for some reason. Ew.\n    */\n    padding-top: 20px;\n`;\n\nexport const PaneScrollContainer = (p: { children: React.ReactNode }) =>\n    <PaneScrollOuterContainer>\n        <PaneScrollInnerContainer>\n            { p.children }\n        </PaneScrollInnerContainer>\n    </PaneScrollOuterContainer>;","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { observable, autorun, action } from 'mobx';\nimport { disposeOnUnmount, observer } from 'mobx-react';\nimport * as portals from 'react-reverse-portal';\n\nimport { styled, warningColor } from '../../styles';\nimport { asBuffer, bufferToString } from '../../util';\nimport { ArrowIcon } from '../../icons';\n\nimport {\n    ViewableContentType,\n    getCompatibleTypes,\n    getContentEditorName\n} from '../../model/events/content-types';\nimport { getReadableSize } from '../../model/events/bodies';\nimport { StreamMessage } from '../../model/events/stream-message';\n\nimport { ContentLabel, ContentMonoValue } from '../common/text-content';\nimport { Pill, PillSelector } from '../common/pill';\nimport { IconButton } from '../common/icon-button';\n\nimport { ContentViewer } from '../editor/content-viewer';\nimport { SelfSizedEditor } from '../editor/base-editor';\nimport { EditorCardContent } from '../editor/body-card-components';\n\nconst visualDirection = (message: StreamMessage) =>\n    message.direction === 'sent'\n        ? 'left'\n        : 'right';\n\n\nexport const StreamMessageCollapsedRow = React.memo((p: {\n    message: StreamMessage\n    index: number,\n    onClick: (index: number) => void\n}) => <CollapsedStreamRowContainer\n        messageDirection={visualDirection(p.message)}\n        onClick={() => p.onClick(p.index)}\n\n        tabIndex={0}\n        onKeyDown={(e) => {\n            if (e.key === 'Enter') p.onClick(p.index);\n\n            // If focused, up/down move up & down the list. This is slightly different from\n            // tab focus: it stops at the ends, and moving to an open editor row focuses the\n            // entire row (jumping to the editor only on 'enter').\n            if (e.key === 'ArrowDown') {\n                e.preventDefault();\n                (e.currentTarget.nextElementSibling as HTMLElement)?.focus?.();\n            }\n            if (e.key === 'ArrowUp') {\n                e.preventDefault();\n                (e.currentTarget.previousElementSibling as HTMLElement)?.focus?.();\n            }\n        }}\n    >\n    <MessageArrow selected={false} messageDirection={visualDirection(p.message)} />\n    <CollapsedStreamContent>\n        {\n            bufferToString( // Show everything as UTF-8 - binary data can be viewed up close instead.\n                p.message.content\n                // Limit the length - no point showing huge messages here. On a typical UI, we show about\n                // 100 chars here, so this should give us a good bit of buffer\n                .slice(0, 200)\n            )\n        }\n    </CollapsedStreamContent>\n    {\n        p.message.isBinary &&\n            <Pill color={warningColor}>Binary</Pill>\n    }\n    <Pill>\n        { getReadableSize(p.message.content.byteLength) }\n    </Pill>\n</CollapsedStreamRowContainer>);\n\nconst MessageArrow = styled(React.memo((p: {\n    className?: string,\n    messageDirection: 'left' | 'right',\n    selected: boolean\n}) => {\n    return <div className={p.className}>\n        <ArrowIcon direction={p.messageDirection} />\n    </div>\n}))`\n    width: 25px;\n    flex-grow: 0;\n    flex-shrink: 0;\n\n    padding-right: 1px;\n    box-sizing: border-box;\n    margin: -4px 0;\n\n    > svg {\n        padding: 0;\n        color: ${p => p.selected\n            ? p.theme.popColor\n            : p.theme.containerBorder\n        };\n    }\n\n    text-align: center;\n`;\n\nconst CollapsedStreamRowContainer = styled.div<{ messageDirection: 'left' | 'right' }>`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    border-style: solid;\n    border-width: 0 5px 1px;\n\n    border-color: transparent;\n    border-${p => p.messageDirection}-color: ${p => p.theme.containerBorder};\n    border-bottom-color: ${p => p.theme.containerWatermark};\n\n    cursor: pointer;\n    &:hover, &:focus {\n        outline: none;\n        border-${p => p.messageDirection}-color: ${p => p.theme.popColor};\n        background-color: ${p => p.theme.mainBackground};\n    }\n\n    padding: 4px 15px 4px 0;\n\n    ${Pill} {\n        flex-shrink: 0;\n        &:last-of-type {\n            margin-right: 0;\n        }\n    }\n`;\n\nconst CollapsedStreamContent = styled(ContentMonoValue)`\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    flex-grow: 1;\n    width: auto;\n    padding: 3px 0 4px;\n`;\n\ninterface MessageEditorRowProps {\n    streamId: string,\n    message: StreamMessage,\n    editorNode: portals.HtmlPortalNode<typeof SelfSizedEditor>,\n    isPaidUser: boolean,\n    onExportMessage: (message: StreamMessage) => void\n}\n\n@observer\nexport class StreamMessageEditorRow extends React.Component<MessageEditorRowProps> {\n\n    @observable\n    private selectedContentType: ViewableContentType | undefined;\n\n    private containerRef = React.createRef<HTMLDivElement>();\n\n    componentDidMount() {\n        disposeOnUnmount(this, autorun(() => {\n            const message = this.props.message;\n\n            if (!message) {\n                this.setContentType(undefined);\n                return;\n            }\n        }));\n\n        this.onMessageChanged();\n    }\n\n    componentDidUpdate(prevProps: MessageEditorRowProps) {\n        if (prevProps?.message.messageIndex !== this.props.message.messageIndex) {\n            this.onMessageChanged();\n        }\n    }\n\n    onMessageChanged() {\n        // We've just changed message - scroll to show this editor fully and\n        // focus the contained editor itself.\n        const container = this.containerRef.current!;\n\n        container.scrollIntoView({\n            behavior: 'smooth',\n        });\n\n        const editor = container.querySelector('.monaco-editor textarea');\n        if (editor) {\n            (editor as HTMLElement).focus();\n        } else {\n            // If the editor content needs formatting, e.g. for JSON messages, the editor itself won't\n            // yet be visible. In this case, we'll focus the container instead, and jump to the editor\n            // when onContentRendered fires from the content viewer.\n            container.focus();\n        }\n    }\n\n    onEditorContentRendered = () => {\n        // Only if the row is focused (not any buttons within etc) and the content has just rendered then\n        // you should jump to it. This should only happen if the editor content was not visible initially.\n        if (this.containerRef.current === document.activeElement) {\n            const editor = this.containerRef.current?.querySelector('.monaco-editor textarea');\n            (editor as HTMLElement | undefined)?.focus();\n        }\n    }\n\n    @action.bound\n    setContentType(contentType: ViewableContentType | undefined) {\n        if (contentType === this.props.message.contentType) {\n            this.selectedContentType = undefined;\n        } else {\n            this.selectedContentType = contentType;\n        }\n    }\n\n    render() {\n        const { message, isPaidUser, onExportMessage, editorNode, streamId } = this.props;\n\n        const compatibleContentTypes = getCompatibleTypes(\n            message.contentType,\n            undefined,\n            asBuffer(message.content)\n        );\n        const contentType = _.includes(compatibleContentTypes, this.selectedContentType) ?\n            this.selectedContentType! : message.contentType;\n\n        const messageDirection = message.direction === 'sent' ? 'left' : 'right';\n\n        return <EditorRowContainer\n            ref={this.containerRef}\n            tabIndex={-1} // Only ever focused by up/down on other rows\n            onKeyDown={(e) => {\n                // Only listen to events where the entire row is specifically focused:\n                if (e.target !== e.currentTarget) return;\n\n                // When focused (via up/down) if you press enter is jumps to the content. That means\n                // you can up/down past this no problem, or press enter and then move to tab-based\n                // control back to the rows, and then up/down again.\n                else if (e.target === e.currentTarget && e.key === 'Enter') {\n                    const editor = (e.target as HTMLElement).querySelector('.monaco-editor textarea');\n                    (editor as HTMLElement | undefined)?.focus();\n                }\n\n                // TODO: It would be nice to allow Escape here to exit the editor, but because it's a portal, the keydown\n                // events don't actually bubble back up here. Might be worth re-investigating this after eventually\n                // fixing https://github.com/httptoolkit/react-reverse-portal/issues/13. Not easy though.\n\n                // Keep the same up/down behaviour as the collapsed rows\n                else if (e.key === 'ArrowDown') {\n                    e.preventDefault();\n                    (e.currentTarget.nextElementSibling as HTMLElement)?.focus?.();\n                } else if (e.key === 'ArrowUp') {\n                    e.preventDefault();\n                    (e.currentTarget.previousElementSibling as HTMLElement)?.focus?.();\n                }\n            }}\n        >\n            <EditorRowHeader messageDirection={messageDirection}>\n                <MessageArrow selected={true} messageDirection={messageDirection} />\n                <ContentLabel>\n                    {message.direction === 'sent'\n                        ? 'Received from server' // I.e. 'sent' by Mockttp\n                        : 'Sent by client'\n                    }:\n                </ContentLabel>\n                <IconButton\n                    icon={['fas', 'download']}\n                    title={\n                        isPaidUser\n                            ? \"Save this message as a file\"\n                            : \"With Pro: Save this message as a file\"\n                    }\n                    disabled={!isPaidUser}\n                    onClick={() => onExportMessage(message)}\n                />\n                <PillSelector<ViewableContentType>\n                    onChange={this.setContentType}\n                    value={contentType}\n                    options={compatibleContentTypes}\n                    nameFormatter={getContentEditorName}\n                />\n                <Pill>{ getReadableSize(message.content.byteLength) }</Pill>\n            </EditorRowHeader>\n            <RowEditorContent>\n                <ContentViewer\n                    contentId={`ws-${streamId}-${message.messageIndex}`}\n                    editorNode={editorNode}\n                    contentType={contentType}\n                    cache={message.cache}\n                    expanded={false}\n                    onContentRendered={this.onEditorContentRendered}\n                >\n                    {message.content}\n                </ContentViewer>\n            </RowEditorContent>\n        </EditorRowContainer>;\n    }\n\n}\n\nconst EditorRowContainer = styled.div`\n    background-color: ${p => p.theme.mainBackground};\n    border-bottom: 1px solid ${p => p.theme.containerWatermark};\n\n    display: flex;\n    flex-direction: column;\n`;\n\nconst EditorRowHeader = styled.div<{ messageDirection: 'left' | 'right' }>`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    gap: 8px;\n\n    padding: 4px 15px 4px 0;\n\n    cursor: pointer;\n\n    border-style: solid;\n    border-width: 0 5px 1px;\n\n    border-color: transparent;\n    border-${p => p.messageDirection}-color: ${p => p.theme.popColor};\n    border-bottom-color: ${p => p.theme.containerWatermark};\n\n    > ${ContentLabel} {\n        flex-grow: 1;\n        text-overflow: ellipsis;\n        overflow: hidden;\n\n        margin-left: -8px;\n    }\n\n    > ${IconButton} {\n        margin: -5px 0;\n    }\n\n    ${Pill}, select {\n        &:last-of-type {\n            margin-right: 0;\n        }\n    }\n`;\n\nconst RowEditorContent = styled(EditorCardContent)`\n    /* Undo the whole-card specific bits of styling */\n    border-top: none;\n    margin: 0;\n`;","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { action, computed, observable } from 'mobx';\nimport { observer } from 'mobx-react';\nimport * as portals from 'react-reverse-portal';\n\nimport { styled } from '../../styles';\nimport { saveFile } from '../../util/ui';\n\nimport { StreamMessage } from '../../model/events/stream-message';\nimport { getSummaryColour } from '../../model/events/categorization';\n\nimport { Pill } from '../common/pill';\nimport { IconButton } from '../common/icon-button';\nimport { CollapsingButtons } from '../common/collapsing-buttons';\nimport { ExpandShrinkButton } from '../common/expand-shrink-button';\nimport { CollapsibleCard, CollapsibleCardHeading, ExpandableCardProps } from '../common/card';\n\nimport { SelfSizedEditor } from '../editor/base-editor';\nimport {\n    StreamMessageCollapsedRow,\n    StreamMessageEditorRow\n} from './stream-message-rows';\n\nfunction getFilename(\n    filenamePrefix: string,\n    someBinary: boolean,\n    messageIndex?: number\n) {\n    const extension = someBinary ? 'bin' : 'txt';\n\n    return `${filenamePrefix} ${\n        messageIndex ? `message ${messageIndex}` : 'messages'\n    }.${extension}`;\n}\n\nexport type StreamType = 'WebSocket' | 'DataChannel';\n\n@observer\nexport class StreamMessageListCard extends React.Component<ExpandableCardProps & {\n    isPaidUser: boolean,\n    filenamePrefix: string,\n    streamId: string,\n    streamType: StreamType,\n    streamLabel?: string,\n    messages: Array<StreamMessage>,\n    editorNode: portals.HtmlPortalNode<typeof SelfSizedEditor>\n}> {\n\n    @observable\n    expandedRow: number | undefined = undefined;\n\n    @computed\n    get someBinaryMessages() {\n        return this.props.messages.some(m => m.isBinary);\n    }\n\n    render() {\n        const {\n            streamId,\n            streamType,\n            streamLabel,\n            messages,\n            isPaidUser,\n            editorNode,\n            collapsed,\n            expanded,\n            onCollapseToggled,\n            onExpandToggled\n        } = this.props;\n\n        return <CollapsibleCard\n            collapsed={collapsed}\n            onCollapseToggled={onCollapseToggled}\n            expanded={expanded}\n        >\n            <header>\n                <CollapsingButtons>\n                    { onExpandToggled && <ExpandShrinkButton\n                        expanded={expanded}\n                        onClick={onExpandToggled}\n                    /> }\n                    <IconButton\n                        icon={['fas', 'download']}\n                        title={\n                            isPaidUser\n                                ? \"Save these message as a file\"\n                                : \"With Pro: Save these messages as a file\"\n                        }\n                        disabled={!isPaidUser}\n                        onClick={this.exportMessages}\n                    />\n                </CollapsingButtons>\n                { streamLabel && <Pill\n                    color={getSummaryColour('data')}\n                    title={streamLabel}\n                >\n                    { streamLabel }\n                </Pill> }\n                <Pill>\n                    { messages.length } message{\n                        messages.length !== 1 ? 's' : ''\n                    }\n                </Pill>\n                <CollapsibleCardHeading\n                    onCollapseToggled={onCollapseToggled}\n                >\n                    { streamType } messages\n                </CollapsibleCardHeading>\n            </header>\n            <StreamMessagesList expanded={!!expanded}>\n                {\n                    messages.map((message, i) =>\n                        this.expandedRow === i\n                        ? <StreamMessageEditorRow\n                            key='expanded' // Constant, which preserves content type between rows\n                            message={message}\n\n                            streamId={streamId}\n                            isPaidUser={isPaidUser}\n                            onExportMessage={this.exportMessage}\n                            editorNode={editorNode}\n                        />\n                        : <StreamMessageCollapsedRow\n                            key={i}\n                            message={message}\n\n                            index={i}\n                            onClick={this.expandRow}\n                        />\n                    )\n                }\n            </StreamMessagesList>\n        </CollapsibleCard>;\n    }\n\n    @action.bound\n    expandRow(index: number) {\n        this.expandedRow = index;\n    }\n\n    exportMessages = () => {\n        saveFile(\n            getFilename(this.props.filenamePrefix, this.someBinaryMessages),\n            this.someBinaryMessages\n                ? 'application/octet-stream'\n                : 'text/plain',\n            this.props.messages\n                .map(m => m.content)\n                .join('\\n\\n---\\n\\n')\n        );\n    };\n\n    exportMessage = (message: StreamMessage) => {\n        const filename = getFilename(\n            this.props.filenamePrefix,\n            message.isBinary,\n            this.props.messages.indexOf(message)\n        );\n\n        saveFile(\n            filename,\n            message.isBinary\n                ? 'application/octet-stream'\n                : 'text/plain',\n            message.content\n        );\n    }\n\n}\n\nconst StreamMessagesList = styled.div<{ expanded: boolean }>`\n    width: calc(100% + 40px);\n    margin: 0 -20px -20px -20px;\n\n    border-top: solid 1px ${p => p.theme.containerWatermark};\n    background-color: ${p => p.theme.mainLowlightBackground};\n\n    display: flex;\n    flex-direction: column;\n    white-space: nowrap;\n\n    position: relative;\n    ${p => p.expanded && `\n        height: auto !important;\n        overflow-y: auto;\n    `}\n`;\n","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { observable, action } from 'mobx';\n\nimport { styled, css } from \"../../styles\";\nimport { isReactElement } from '../../util/ui';\nimport { Icon, IconProp } from '../../icons';\n\ninterface CollapsibleSectionProps {\n    children: React.ReactNode;\n    className?: string;\n    withinGrid?: boolean;\n    prefixTrigger?: boolean;\n}\n\nconst CollapsibleSectionWrapper = styled.section`\n    ${(p: { withinGrid: boolean}) => p.withinGrid && css`\n        display: contents;\n    `}\n`;\n\nconst SummaryWrapper = styled.span`\n    margin-right: 10px;\n\n    ${(p: { withinGrid: boolean}) => p.withinGrid && css`\n        display: contents;\n    `}\n`;\n\nconst SummaryAsSpacer = styled.div`\n    visibility: hidden;\n    margin-top: -2px;\n    margin-bottom: 6px;\n    display: inline-block;\n\n    max-height: 31px;\n    overflow: hidden;\n`;\n\n/**\n * This component lets us create collapsible sections. It takes always 1 or 2 children,\n * the 1st a collapsible summary, and the 2nd a body to show when expanded. The expand\n * toggle button & behaviour are injected automatically. This works either in a automatic\n * 'normal' layout, or as part of an existing grid layout (using display: contents, if\n * withinGrid is true).\n *\n * Outside a grid, the body area wraps around its summary, and sufficiently small\n * content from the body can fit into the wraparound area, if there's space.\n * This establishes a hierarchy, and provides a nice space for non-essential metadata.\n * That should look something like this:\n *  ____________________   ____________\n * [      summary       ] [ wraparound ]\n *  --------------------  [            ]\n * [           Body                    ]\n *  -----------------------------------\n *\n * Where the wraparound & body are only visible when the section is expanded. In a grid\n * we don't do this, primarily just because it's very hard.\n *\n * This component also works if there is no body provided - it falls back to just\n * showing the summary without the expand/collapse toggle.\n */\n@observer\nexport class CollapsibleSection extends React.Component<CollapsibleSectionProps> {\n\n    @observable\n    open = false;\n\n    render() {\n        const {\n            children,\n            withinGrid = false,\n        } = this.props;\n        const prefixTrigger = withinGrid || this.props.prefixTrigger;\n\n        const [ sectionSummary, sectionBody, ...otherChildren ] = React.Children.toArray(children);\n\n        if (otherChildren.length) {\n            throw new Error(`Collapsible section has extra children: ${otherChildren}`);\n        } else if (!isReactElement(sectionSummary)) {\n            throw new Error('Collapsible section 1st child must be a summary element');\n        }\n\n        const hasBody = !!sectionBody;\n        if (hasBody && !isReactElement(sectionBody)) {\n            throw new Error('Collapsible section 2nd child must be a body element');\n        }\n        // Undefined (if !hasBody) or a proper React element. Only really necessary\n        // to make the types here a bit clearer.\n        const bodyElement = (sectionBody as React.ReactElement);\n\n        const trigger = <CollapsibleTrigger\n            open={this.open}\n            canOpen={hasBody}\n            withinGrid={withinGrid}\n            onClick={this.toggleOpen}\n        />;\n\n        const summary = React.cloneElement(\n            sectionSummary,\n            { open: this.open, withinGrid: withinGrid },\n\n            // In a grid or if requested, we always prepend the trigger (but it may be hidden)\n            prefixTrigger ? <>\n                { trigger }\n                <SummaryWrapper withinGrid={withinGrid}>\n                    { sectionSummary.props.children }\n                </SummaryWrapper>\n            </>\n\n            // Outside the grid we append triggers by default, and only if they're usable.\n            : <>\n                <SummaryWrapper withinGrid={withinGrid}>\n                    { sectionSummary.props.children }\n                </SummaryWrapper>\n                { hasBody && trigger }\n            </>\n        );\n\n        const body = hasBody && this.open ? React.cloneElement(\n            bodyElement,\n            { withinGrid },\n            withinGrid ?\n                // Grid body is a simple full width block\n                bodyElement.props.children\n            :\n                // Non-grid body copies the summary (invisibly), to allow content to\n                // wrap around the summary into the wraparound section.\n                <>\n                    <SummaryAsSpacer>{ summary }</SummaryAsSpacer>\n                    { bodyElement.props.children }\n                </>\n        ) : null;\n\n        return <CollapsibleSectionWrapper withinGrid={withinGrid}>\n            { summary }\n            { body }\n        </CollapsibleSectionWrapper>;\n    }\n\n    @action.bound\n    toggleOpen(e: React.SyntheticEvent) {\n        e.preventDefault();\n        this.open = !this.open;\n    }\n}\n\nconst OPEN_ICON: IconProp = ['fas', 'minus'];\nconst CLOSED_ICON: IconProp = ['fas', 'plus'];\n\nconst CollapsibleTrigger = styled((p: {\n    open: boolean,\n    canOpen: boolean,\n    withinGrid: boolean,\n    onClick: (e: React.SyntheticEvent) => void\n}) =>\n    <button {..._.omit(p, ['open', 'canOpen', 'withinGrid'])}>\n        <Icon icon={p.open ? OPEN_ICON : CLOSED_ICON} />\n    </button>\n)`\n    border: none;\n    background: none;\n\n    position: relative;\n    top: -1px;\n\n    cursor: pointer;\n    user-select: none;\n\n    outline: none;\n    &:focus {\n        color: ${p => p.theme.popColor};\n    }\n    &:hover {\n        color: ${p => p.theme.mainColor};\n    }\n\n    padding: 5px 10px;\n\n    ${p => p.withinGrid ? css`\n        margin: -3px 0 -5px -10px;\n        align-self: baseline;\n    ` : css`\n        margin: -5px 0 -5px -10px;\n        vertical-align: baseline;\n    `}\n\n    scale: 0.7;\n    color: ${p => p.theme.containerWatermark};\n\n    ${p => !p.canOpen && css`\n        visibility: hidden;\n    `}\n`;\n\ninterface CollapsibleSectionSummaryProps {\n    open?: boolean;\n    withinGrid?: boolean;\n}\n\nexport const CollapsibleSectionSummary = styled.header`\n    ${(p: CollapsibleSectionSummaryProps) => p.withinGrid ? css`\n        display: contents;\n    ` : css`\n        display: inline-block;\n    `}\n\n    margin: -6px 0 0 -20px;\n    padding: 9px 0 12px 20px;\n\n    box-sizing: border-box;\n\n    ${(p: CollapsibleSectionSummaryProps) => p.open && !p.withinGrid && css`\n        z-index: 1;\n        position: relative;\n\n        background-color: ${p => p.theme.mainBackground};\n\n        &:before {\n            content: '';\n            position: absolute;\n            right: -1px;\n            bottom: 0;\n            height: 35px;\n            width: 1px;\n            background-color: rgba(0,0,0,0.1);\n            box-shadow: 1px 1px 5px rgba(0,0,0,${p => p.theme.boxShadowAlpha});\n        }\n\n        &:after {\n            content: '';\n            position: absolute;\n            bottom: -1px;\n            left: 0;\n            right: 0;\n            height: 1px;\n            background-color: rgba(0,0,0,0.1);\n            box-shadow: 1px 1px 5px rgba(0,0,0,${p => p.theme.boxShadowAlpha});\n        }\n    `}\n`;\n\nexport const CollapsibleSectionBody = styled.div`\n    ${(p: { withinGrid?: boolean }) => p.withinGrid ? css`\n        grid-column: 1 / -1; /* Full width grid row */\n    ` : css`\n        margin-top: -37px; /* Pull up behind the summary section */\n        margin-bottom: 10px; /* Spacing below (grid uses grid-gap) */\n    `}\n\n    background-color: ${p => p.theme.mainLowlightBackground};\n    box-shadow:\n        inset 0px 12px 8px -10px rgba(0,0,0,${p => p.theme.boxShadowAlpha}),\n        inset 0px -8px 8px -10px rgba(0,0,0,${p => p.theme.boxShadowAlpha});\n\n    padding: 8px 10px 10px 10px;\n\n    word-break: break-all; /* Fallback for anybody without break-word */\n    word-break: break-word;\n\n    line-height: 1.3;\n\n    position: relative;\n\n    margin-left: -20px;\n    margin-right: -20px;\n    padding-left: 20px;\n    padding-right: 20px;\n`;","import * as React from 'react';\nimport { observer } from 'mobx-react';\n\nimport { Theme } from '../../styles';\nimport { InputWebSocketClose } from '../../types';\n\nimport { getWebSocketCloseColor } from '../../model/events/categorization';\nimport { getWebSocketCloseCodeDocs } from '../../model/http/http-docs';\n\nimport {\n    CollapsibleCard,\n    CollapsibleCardHeading,\n    CollapsibleCardProps\n} from '../common/card';\nimport {\n    CollapsibleSection,\n    CollapsibleSectionSummary,\n    CollapsibleSectionBody\n} from '../common/collapsible-section';\nimport { Pill } from '../common/pill';\nimport {\n    ContentLabel,\n    ContentValue,\n    BlankContentPlaceholder,\n    Markdown\n} from '../common/text-content';\nimport { DocsLink } from '../common/docs-link';\n\ninterface WebSocketCloseCardProps extends CollapsibleCardProps {\n    theme: Theme;\n    closeState: InputWebSocketClose | 'aborted';\n}\n\nexport const WebSocketCloseCard = observer((props: WebSocketCloseCardProps) => {\n    const { closeState, theme } = props;\n\n    const closeCodeDocs = props.closeState !== 'aborted'\n        ? getWebSocketCloseCodeDocs(props.closeState.closeCode)\n        : undefined;\n\n    const responseDetails = closeCodeDocs && [\n        <Markdown\n            key='code-docs'\n            content={closeCodeDocs.summary}\n        />,\n        // We just link to the RFC every time for close codes, no better docs available really:\n        <p key='docs-link'>\n            <DocsLink href='https://www.rfc-editor.org/rfc/rfc6455.html#section-7.4.1'>Find out more</DocsLink>\n        </p>\n    ];\n\n\n    if (closeState === 'aborted') {\n        return <CollapsibleCard {...props}>\n            <header>\n                <Pill color={getWebSocketCloseColor('aborted', theme)}>Aborted</Pill>\n                <CollapsibleCardHeading onCollapseToggled={props.onCollapseToggled}>\n                    Connection closed\n                </CollapsibleCardHeading>\n            </header>\n            <div>\n                The connection was closed abruptly, without a clean close message.\n            </div>\n        </CollapsibleCard>;\n    } else {\n        const { closeCode, closeReason } = closeState;\n\n        return <CollapsibleCard {...props}>\n            <header>\n                <Pill color={getWebSocketCloseColor(closeCode, theme)}>{\n                    closeCode ?? 'No close code'\n                }</Pill>\n                <CollapsibleCardHeading onCollapseToggled={props.onCollapseToggled}>\n                    Connection closed\n                </CollapsibleCardHeading>\n            </header>\n\n            <CollapsibleSection>\n                <CollapsibleSectionSummary>\n                    <ContentLabel>Close code: </ContentLabel>\n                    { closeCode\n                        ? <ContentValue>{ closeCode }</ContentValue>\n                        : <BlankContentPlaceholder>(No close code)</BlankContentPlaceholder>\n                    }\n                </CollapsibleSectionSummary>\n\n                { responseDetails &&\n                    <CollapsibleSectionBody>\n                        { responseDetails }\n                    </CollapsibleSectionBody>\n                }\n            </CollapsibleSection>\n\n            <div>\n                <ContentLabel>Close reason: </ContentLabel>\n                { closeReason\n                    ? <ContentValue>{ closeReason }</ContentValue>\n                    : <BlankContentPlaceholder>(No reason provided)</BlankContentPlaceholder>\n                }\n            </div>\n        </CollapsibleCard>;\n    }\n});","import * as React from 'react';\n\nfunction showOnceLoaded(e: React.SyntheticEvent<HTMLImageElement, Event>) {\n    const elem = e.target as HTMLImageElement;\n    elem.style.display = 'initial';\n}\n\n// An img element which isn't shown at all, until it successfully loads\nexport const OptionalImage = (p: React.ImgHTMLAttributes<HTMLImageElement>) =>\n        <img {...p} onLoad={showOnceLoaded} style={{ display: 'none' }} />\n","import React from \"react\";\nimport { inject, observer } from \"mobx-react\";\n\nimport { styled, popColor } from \"../../styles\";\nimport { Icon } from \"../../icons\";\n\nimport { UiStore } from \"../../model/ui/ui-store\";\n\nimport { Pill } from \"../common/pill\";\nimport { UnstyledButton } from \"../common/inputs\";\nimport { AccountStore } from \"../../model/account/account-store\";\n\nexport const ProPill = styled(inject('uiStore')((p: { uiStore?: UiStore, className?: string }) =>\n    <Pill className={p.className} color={p.uiStore!.theme.popColor}>PRO</Pill>\n))`\n    font-size: ${p => p.theme.textSize};\n\n    color: ${popColor};\n    background-color: rgba(225,66,31,0.2);\n`;\n\nexport const ProHeaderPill = styled(ProPill)`\n    margin-right: auto;\n`;\n\nconst GetProButton = styled(UnstyledButton)`\n    box-sizing: border-box;\n    padding: 20px;\n\n    margin: 0 auto;\n\n    user-select: none;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n\n    font-weight: bold;\n    color: ${p => p.theme.primaryInputColor};\n    background-color: ${p => p.theme.primaryInputBackground};\n    border-radius: 4px;\n    box-shadow: 0 2px 10px 0 rgba(0,0,0,${p => p.theme.boxShadowAlpha/2});\n\n    > svg {\n        margin-bottom: 5px;\n    }\n\n    &:hover {\n        background-image: linear-gradient(transparent, rgba(0,0,0,.05) 40%, rgba(0,0,0,.1));\n    }\n\n    &:active {\n        background-image: linear-gradient(rgba(0,0,0,.1), rgba(0,0,0,.05) 40%, transparent);\n    }\n`;\n\nexport const CardSalesPitch = inject('accountStore')(observer((p: {\n    children: React.ReactNode,\n    source: string,\n    accountStore?: AccountStore\n}) => <CardSalesPitchContainer>\n\n    { p.children }\n\n    <GetProButton onClick={() => p.accountStore!.getPro(p.source)}>\n        <Icon icon={['far', 'star']} size='2x' />\n        Get HTTP Toolkit Pro\n    </GetProButton>\n</CardSalesPitchContainer>));\n\nconst CardSalesPitchContainer = styled.div`\n    padding: 20px 25%;\n    margin: 0 -20px -20px -20px;\n    background-color: ${p => p.theme.mainLowlightBackground};\n    box-shadow: inset 0px 12px 8px -10px rgba(0,0,0,0.15);\n\n    p {\n        color: ${p => p.theme.mainColor};\n        line-height: 1.2;\n        font-weight: bold;\n        margin-bottom: 10px;\n    }\n\n    ${GetProButton} {\n        width: 100%;\n    }\n`;\n\nconst BlurOverlay = styled.div<{ inert?: boolean }>`\n    filter: blur(1px);\n    opacity: 0.6;\n\n    pointer-events: none;\n    user-select: none;\n`;\n\nconst OverlayContainer = styled.div`\n    position: relative;\n    min-height: 140px;\n`;\n\nconst OverlayGetProButton = styled(GetProButton)`\n    position: absolute;\n    top: 52%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 1;\n`;\n\n@observer\nexport class GetProOverlay extends React.Component<{\n    getPro: (source: string) => void,\n    source: string,\n    children: React.ReactNode\n}> {\n    private buttonRef = React.createRef<HTMLButtonElement>();\n\n    render() {\n        return <OverlayContainer>\n            <OverlayGetProButton\n                ref={this.buttonRef}\n                onClick={() => this.props.getPro(this.props.source)}\n            >\n                <Icon icon={['far', 'star']} size='2x' />\n                Get Pro\n            </OverlayGetProButton>\n\n            <BlurOverlay\n                inert\n                // 'inert' doesn't actually work - it's non-standard, so we need this:\n                ref={node => node && node.setAttribute('inert', '')}\n                onFocus={() =>\n                    // Inert isn't well supported: quick hack to block focus on children\n                    this.buttonRef.current &&\n                    this.buttonRef.current.focus()\n                }\n            >\n                { this.props.children }\n            </BlurOverlay>\n        </OverlayContainer>;\n    }\n}","import * as React from 'react';\nimport { observer } from 'mobx-react';\n\nimport { Html } from '../../../types';\nimport { styled } from '../../../styles';\nimport { Icon } from '../../../icons';\nimport { joinAnd } from '../../../util/text';\n\nimport { ApiExchange, ApiParameter } from '../../../model/api/api-interfaces';\n\nimport {\n    CollapsibleCardHeading,\n    CollapsibleCard,\n    CollapsibleCardProps\n} from '../../common/card';\nimport {\n    CollapsibleSection,\n    CollapsibleSectionSummary,\n    CollapsibleSectionBody\n} from '../../common/collapsible-section';\nimport { OptionalImage } from '../../common/optional-image';\nimport {\n    ContentLabel,\n    ContentLabelBlock,\n    ExternalContent\n} from '../../common/text-content';\nimport { DocsLink } from '../../common/docs-link';\nimport { CardSalesPitch, ProHeaderPill } from '../../account/pro-placeholders';\n\nconst ServiceLogo = styled(OptionalImage)`\n    float: right;\n    height: 26px;\n\n    border: 4px solid #ffffff;\n    border-radius: 2px;\n`;\n\nconst ParametersGrid = styled.section`\n    display: grid;\n    grid-template-columns: 20px fit-content(40%) 1fr min-content;\n\n    grid-gap: 5px 0;\n    &:not(:last-child) {\n        margin-bottom: 10px;\n    }\n`;\n\nconst ParameterKeyValue = styled(CollapsibleSectionSummary)`\n    word-break: break-all; /* Fallback for anybody without break-word */\n    word-break: break-word;\n    font-family: ${p => p.theme.monoFontFamily};\n    line-height: 1.1;\n`;\n\nconst ParamName = styled.span`\n    margin-right: 10px;\n`;\n\nconst UnsetValue = styled.span`\n    font-style: italic;\n    opacity: ${p => p.theme.lowlightTextOpacity};\n    margin-right: 5px;\n`;\n\nconst ParamMetadata = styled((p: {\n    param: ApiParameter,\n    className?: string\n}) => <div className={p.className}>\n        {\n            [\n                p.param.required ? 'Required' : 'Optional',\n                p.param.type,\n                p.param.in\n            ]\n            .filter((x) => !!x)\n            .join(' ')\n        } parameter\n        {\n            p.param.defaultValue !== undefined ?\n                `. Defaults to ${p.param.defaultValue}`\n                : ''\n        }\n        {\n            p.param.enum !== undefined && p.param.enum.length > 0 ?\n                <>\n                    .<br/>\n                    Valid values: {joinAnd(\n                        p.param.enum.map(v => JSON.stringify(v))\n                    )}\n                </>\n                : ''\n        }.\n</div>)`\n    font-style: italic;\n`;\n\nconst WarningIcon = styled(Icon).attrs(() => ({\n    icon: ['fas', 'exclamation-triangle']\n}))`\n    color: ${p => p.theme.warningColor};\n    line-height: 1.2;\n\n    &:not(:first-child) {\n        margin-left: 9px;\n    }\n\n    &:not(:last-child) {\n        margin-right: 9px;\n    }\n`;\n\nconst Warning = styled((p) => <div {...p}>\n    <WarningIcon /><span>{p.children}</span>\n</div>)`\n    color: ${p => p.theme.popColor};\n\n    :not(:last-child) {\n        margin-bottom: 10px;\n    }\n`;\n\nfunction formatValue(value: unknown): string | undefined {\n        if (typeof value === 'string') return value;\n        if (typeof value === 'number') return value.toString(10);\n        if (typeof value === 'boolean') return value.toString();\n        if (value == null) return undefined;\n        else return JSON.stringify(value);\n}\n\nconst getDetailsWithWarnings = (details: Html | undefined, warnings: string[]) => [\n    warnings.length && warnings.map((warning, i) => <Warning key={warning}>{ warning }</Warning>),\n    details && <ExternalContent key='details' content={details} />\n].filter(d => !!d);\n\n\nconst ObjectParamContainer = styled.div`\n    display: grid;\n    grid-template-columns: fit-content(30%) auto;\n    grid-gap: 5px;\n    margin-bottom: 10px;\n`;\n\nconst ObjectParamKey = styled.div`\n    font-family: ${p => p.theme.monoFontFamily};\n    word-break: break-all;\n    text-align: right;\n`;\n\nconst ObjectParamValue = styled.pre`\n    font-family: ${p => p.theme.monoFontFamily};\n    word-break: break-all;\n    white-space: pre-wrap;\n`;\n\nconst ObjectParamDetails = (p: { value: object }) => <ObjectParamContainer>{\n    Object.entries(p.value).map(([key, value], i) => [\n        <ObjectParamKey key={`${i}-key`}>{ key }:</ObjectParamKey>,\n        <ObjectParamValue key={`${i}-value`}>{ value }</ObjectParamValue>\n    ])\n}</ObjectParamContainer>;\n\nconst ApiRequestDetails = (props: {\n    api: ApiExchange\n}) => {\n    const { api } = props;\n    const setParameters = api.request.parameters\n        .filter((param) => !!param.value || param.required || param.defaultValue);\n\n    // If that leaves us with lots of parameters then ignore the ones that\n    // are just unset default values.\n    const relevantParameters = setParameters.length > 5 ?\n        setParameters.filter((param) => !!param.value || param.required) :\n        setParameters;\n\n    const operationDetails = getDetailsWithWarnings(api.operation.description, api.operation.warnings);\n    const hasOperationDetails = !!operationDetails.length;\n\n    return <>\n        <CollapsibleSection>\n            <CollapsibleSectionSummary>\n                <ContentLabel>Service:</ContentLabel> { api.service.name }\n                { !api.service.description &&\n                    <DocsLink href={api.service.docsUrl} />\n                }\n            </CollapsibleSectionSummary>\n\n            { api.service.description &&\n                <CollapsibleSectionBody>\n                    <ServiceLogo src={ api.service.logoUrl } alt='' />\n                    <ExternalContent content={api.service.description} />\n                    <DocsLink href={api.service.docsUrl}>\n                        Find out more\n                    </DocsLink>\n                </CollapsibleSectionBody>\n            }\n        </CollapsibleSection>\n\n        <CollapsibleSection>\n            <CollapsibleSectionSummary>\n                <ContentLabel>Operation:</ContentLabel> { api.operation.name }\n                { !hasOperationDetails &&\n                    <DocsLink href={api.operation.docsUrl} />\n                }\n                { api.operation.warnings.length ? <WarningIcon /> : null }\n            </CollapsibleSectionSummary>\n\n            { hasOperationDetails &&\n                <CollapsibleSectionBody>\n                    { operationDetails }\n                    <DocsLink href={api.operation.docsUrl}>\n                        Find out more\n                    </DocsLink>\n                </CollapsibleSectionBody>\n            }\n        </CollapsibleSection>\n\n        { relevantParameters.length >= 1 && <>\n            <ContentLabelBlock>\n                Parameters\n            </ContentLabelBlock>\n            <ParametersGrid>\n                { relevantParameters.map((param) =>\n                    <CollapsibleSection withinGrid={true} key={param.name}>\n                        <ParameterKeyValue>\n                            <ParamName>{ param.name }: </ParamName>\n\n                            <span>{ formatValue(param.value) ||\n                                <UnsetValue>{\n                                    param.defaultValue ?\n                                        formatValue(param.defaultValue) + ' [default]' :\n                                        '[not set]'\n                                }</UnsetValue>\n                            }</span>\n\n                            { param.warnings.length ? <WarningIcon /> : <div/> }\n                        </ParameterKeyValue>\n\n                        <CollapsibleSectionBody>\n                            { getDetailsWithWarnings(param.description, param.warnings) }\n                            { param.type === 'object' && Object.keys(param).length > 1\n                                ? <ObjectParamDetails value={param.value as object} />\n                                : null\n                            }\n                            <ParamMetadata param={param}/>\n                        </CollapsibleSectionBody>\n                    </CollapsibleSection>\n                ) }\n            </ParametersGrid>\n        </> }\n    </>;\n}\n\ninterface HttpApiCardProps extends CollapsibleCardProps {\n    apiName: string;\n    apiExchange: ApiExchange\n}\n\nexport const HttpApiCard = observer((props: HttpApiCardProps) => {\n    const { apiName, apiExchange } = props;\n\n    return <CollapsibleCard {...props}>\n        <header>\n            <CollapsibleCardHeading onCollapseToggled={props.onCollapseToggled}>\n                { apiName }\n            </CollapsibleCardHeading>\n        </header>\n\n        <ApiRequestDetails api={apiExchange} />\n    </CollapsibleCard>;\n});\n\ninterface HttpApiPlaceholderCardProps extends CollapsibleCardProps {\n    apiName: string;\n}\n\nexport const HttpApiPlaceholderCard = observer((props: HttpApiPlaceholderCardProps) => {\n    const { apiName } = props;\n\n    return <CollapsibleCard {...props}>\n        <header>\n            <ProHeaderPill />\n\n            <CollapsibleCardHeading onCollapseToggled={props.onCollapseToggled}>\n                { apiName }\n            </CollapsibleCardHeading>\n        </header>\n\n        <CardSalesPitch source='api'>\n            <p>\n                HTTP Toolkit Pro can show you more information about this API.\n            </p>\n            <p>\n                Instantly understand this request with inline documentation for the\n                endpoint, parameters, and responses.\n            </p>\n            <p>\n                Automatically validate that this request &amp; its body match the API\n                schema. See all the parameters that you're <em>not</em> sending too,\n                and their default values, and get warned about deprecated or invalid\n                endpoints and parameters.\n            </p>\n        </CardSalesPitch>\n    </CollapsibleCard>;\n});","import * as React from 'react';\n\nimport { styled } from '../../styles';\nimport { SourceIcons, Icon } from '../../icons';\n\nimport { TrafficSource } from '../../model/http/sources';\n\nexport const SourceIcon = styled(({ source, className }: {\n    source: TrafficSource,\n    className?: string\n}) => source.icon !== SourceIcons.Unknown\n    ? <Icon\n        className={className}\n        title={source.summary}\n        {...source.icon}\n    />\n    : null\n)`\n    margin-left: 8px;\n`;","import * as React from 'react';\n\nimport { HtkRequest } from '../../types';\nimport { styled } from '../../styles';\n\nimport { Pill } from './pill';\n\nexport const HttpVersionPill = styled(({ request, className }: {\n    request: HtkRequest\n    className?: string\n}) => request.httpVersion\n    ? <Pill\n        title={`The client sent this request using HTTP ${request.httpVersion}`}\n    >HTTP/{\n        request.httpVersion === '2.0'\n        ? '2'\n        : request.httpVersion\n    }</Pill>\n    : null\n)``;","import * as React from 'react';\n\nimport { parse as parseCookie, Cookie } from 'set-cookie-parser';\nimport {\n    isFuture,\n    addSeconds,\n    format as formatDate,\n    distanceInWordsToNow\n} from 'date-fns';\n\nimport { Content } from '../../common/text-content';\n\nfunction getExpiryExplanation(date: Date) {\n    const exactTime = formatDate(date, 'YYYY-MM-DD [at] HH:mm:ss');\n    const relativeTime = distanceInWordsToNow(date);\n\n    if (isFuture(date)) {\n        return <>\n            will expire <span title={exactTime}>in {relativeTime}</span>\n        </>\n    } else {\n        return <>\n            expired <span title={exactTime}>{relativeTime} ago</span>\n        </>\n    }\n}\n\nexport const CookieHeaderDescription = (p: { value: string, requestUrl: URL }) => {\n    const cookies = parseCookie(p.value);\n\n    // The effective path at which cookies will be set by default.\n    const requestPath = p.requestUrl.pathname.replace(/\\/[^\\/]*$/, '') || '/';\n\n    return <>{\n        // In 99% of cases there is only one cookie here, but we can play it safe.\n        cookies.map((\n            cookie: Cookie & { sameSite?: 'Strict' | 'Lax' | 'None' }\n        ) => {\n            if (cookie.sameSite?.toLowerCase() === 'none' && !cookie.secure) {\n                return <Content key={cookie.name}>\n                    <p>\n                        This attempts to set cookie '<code>{cookie.name}</code>' to\n                        '<code>{cookie.value}</code>'\n                    </p>\n                    <p>\n                        <strong>This will fail so this cookie will not be set</strong>,\n                        because <code>SameSite=None</code> can only be used for cookies\n                        with the <code>Secure</code> flag.\n                    </p>\n                </Content>;\n            }\n\n            return <Content key={cookie.name}>\n                <p>\n                    Set cookie '<code>{cookie.name}</code>' to '<code>{cookie.value}</code>'\n                </p>\n\n                <p>\n                    This cookie will be sent in future\n                    { cookie.secure ? ' secure ' : ' secure and insecure ' }\n                    requests to{' '}\n                    { cookie.domain ? <>\n                        {cookie.domain.replace(/^\\./, '')} and subdomains\n                    </> : <>\n                        {p.requestUrl.hostname}, but not its subdomains\n                    </> }\n\n                    { cookie.path === '/' || requestPath === '/' ? <>\n                        .\n                    </> : cookie.path !== undefined ? <>\n                        , for paths within '{cookie.path}'.\n                    </> : <>\n                        , for paths within '{requestPath}'.\n                    </> }\n                </p>\n                <p>\n                    The cookie is {\n                        cookie.httpOnly ?\n                            'not accessible from client-side scripts' :\n                            'accessible from client-side scripts running on matching pages'\n                    }\n                    { (cookie.sameSite === undefined || cookie.sameSite.toLowerCase() === 'lax')\n                        // Lax is default for modern browsers (e.g. Chrome 80+)\n                        ? <>\n                            . Matching requests triggered from other origins will {\n                                cookie.httpOnly ? 'however' : 'also'\n                            } include this cookie, if they are top-level navigations (not subresources).\n                        </>\n                    : cookie.sameSite.toLowerCase() === 'strict' && cookie.httpOnly\n                        ? <>\n                            , or sent in requests triggered from other origins.\n                        </>\n                    : cookie.sameSite.toLowerCase() === 'strict' && !cookie.httpOnly\n                        ? <>\n                            , but will not be sent in requests triggered from other origins.\n                        </>\n                    : cookie.sameSite.toLowerCase() === 'none' && cookie.secure\n                        ? <>\n                            . Matching requests triggered from other origins will {\n                                cookie.httpOnly ? 'however' : 'also'\n                            } include this cookie.\n                        </>\n                    : <>\n                        . This cookie uses an unrecognized SameSite property, which may cause issues.\n                    </>\n                    }\n                </p>\n\n                <p>\n                    The cookie {\n                        cookie.maxAge ? <>\n                            { getExpiryExplanation(addSeconds(new Date(), cookie.maxAge)) }\n                            { cookie.expires && ` ('max-age' overrides 'expires')` }\n                        </> :\n                        cookie.expires ?\n                            getExpiryExplanation(cookie.expires)\n                        : 'expires at the end of the current session'\n                    }.\n                </p>\n            </Content>;\n        })\n    }</>\n};","import * as React from 'react';\n\nimport { parseSource } from '../../../model/http/sources';\nimport { getHeaderDocs } from '../../../model/http/http-docs';\n\nimport { Content } from '../../common/text-content';\n\nexport const UserAgentHeaderDescription = (p: { value: string }) => {\n    const { description } = parseSource(p.value);\n\n    if (!description) return <p>\n        { getHeaderDocs('user-agent')!.summary }\n    </p>;\n\n    return <Content>\n        <p>{ description }</p>\n    </Content>;\n};","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { inject, observer } from 'mobx-react';\n\nimport { styled } from '../../../styles';\nimport { RawHeaders } from '../../../types';\n\nimport { getHeaderDocs } from '../../../model/http/http-docs';\nimport { AccountStore } from '../../../model/account/account-store';\n\nimport { CollapsibleSection } from '../../common/collapsible-section';\nimport { DocsLink } from '../../common/docs-link';\nimport { BlankContentPlaceholder } from '../../common/text-content';\nimport {\n    CollapsibleSectionSummary,\n    CollapsibleSectionBody\n} from '../../common/collapsible-section';\n\nimport { CookieHeaderDescription } from './set-cookie-header-description';\nimport { UserAgentHeaderDescription } from './user-agent-header-description';\n\nconst HeadersGrid = styled.section`\n    display: grid;\n    grid-template-columns: 20px fit-content(30%) 1fr;\n\n    grid-gap: 5px 0;\n    &:not(:last-child) {\n        margin-bottom: 10px;\n    }\n`;\n\nconst HeaderKeyValue = styled(CollapsibleSectionSummary)`\n    word-break: break-all; /* Fallback for anybody without break-word */\n    word-break: break-word;\n    font-family: ${p => p.theme.monoFontFamily};\n    line-height: 1.1;\n`;\n\nconst HeaderName = styled.span`\n    margin-right: 10px;\n`;\n\nconst HeaderDescriptionContainer = styled(CollapsibleSectionBody)`\n    line-height: 1.3;\n`;\n\nconst HeaderDocsLink = styled(DocsLink)`\n    display: block;\n    margin-top: 10px;\n`;\n\nconst getHeaderDescription = (\n    name: string,\n    value: string,\n    requestUrl: URL,\n    isPaidUser: boolean\n) => {\n    name = name.toLowerCase();\n\n    if (isPaidUser) {\n        if (name === 'set-cookie') {\n            return <CookieHeaderDescription\n                value={value}\n                requestUrl={requestUrl}\n            />;\n        } else if (name === 'user-agent') {\n            return <UserAgentHeaderDescription\n                value={value}\n            />;\n        }\n    }\n\n    const headerDocs = getHeaderDocs(name)?.summary;\n\n    return headerDocs && <p>\n        { headerDocs }\n    </p>\n};\n\nexport const HeaderDetails = inject('accountStore')(observer((props: {\n    headers: RawHeaders,\n    requestUrl: URL,\n    accountStore?: AccountStore\n}) => {\n    const sortedHeaders = _.sortBy(props.headers, ([key]) => key.toLowerCase());\n\n    return sortedHeaders.length === 0 ?\n        <BlankContentPlaceholder>(None)</BlankContentPlaceholder>\n    :\n        <HeadersGrid>\n            { _.flatMap(sortedHeaders, ([key, value], i) => {\n                const docs = getHeaderDocs(key);\n                const description = getHeaderDescription(\n                    key,\n                    value,\n                    props.requestUrl,\n                    props.accountStore!.isPaidUser\n                )\n\n                return <CollapsibleSection withinGrid={true} key={`${key}-${i}`}>\n                    <HeaderKeyValue>\n                        <HeaderName>{ key }: </HeaderName>\n                        <span>{ value }</span>\n                    </HeaderKeyValue>\n\n                    { description && <HeaderDescriptionContainer>\n                        { description }\n                        { docs && <HeaderDocsLink href={docs.url}>\n                            Find out more\n                        </HeaderDocsLink> }\n                    </HeaderDescriptionContainer> }\n                </CollapsibleSection>\n            }) }\n        </HeadersGrid>;\n}));","import * as React from 'react';\n\nimport { styled } from '../../styles';\nimport { ContentLabel } from '../common/text-content';\n\nconst BreakdownContainer = styled.div`\n    display: grid;\n    grid-template-columns: fit-content(50%) auto;\n    grid-gap: 5px;\n`;\n\nconst BreakdownKey = styled.div`\n    font-family: ${p => p.theme.monoFontFamily};\n    word-break: break-all;\n    text-align: right;\n`;\n\nconst BreakdownValue = styled.pre`\n    font-family: ${p => p.theme.monoFontFamily};\n    word-break: break-all;\n    white-space: pre-wrap;\n`;\n\nconst ParameterSeparator = styled(ContentLabel)`\n    margin-top: 10px;\n    grid-column: 1 / span 2;\n`;\n\nexport const UrlBreakdown = (p: { url: URL }) => {\n    const params = [...p.url.searchParams];\n\n    let decodedPathname: string;\n    try {\n        decodedPathname = decodeURIComponent(p.url.pathname);\n    } catch (e) {\n        decodedPathname = p.url.pathname;\n    }\n\n    return <BreakdownContainer>\n        <BreakdownKey>Protocol:</BreakdownKey> <BreakdownValue>{ p.url.protocol.slice(0, -1) }</BreakdownValue>\n\n        { (p.url.username || p.url.password) && <>\n            <BreakdownKey>Username:</BreakdownKey> <BreakdownValue>{ p.url.username }</BreakdownValue>\n            <BreakdownKey>Password:</BreakdownKey> <BreakdownValue>{ p.url.password }</BreakdownValue>\n        </> }\n\n        <BreakdownKey>Host:</BreakdownKey> <BreakdownValue>{ p.url.host }</BreakdownValue>\n        <BreakdownKey>Path:</BreakdownKey> <BreakdownValue>{ decodedPathname }</BreakdownValue>\n\n        { params.length ? <ParameterSeparator>Parameters</ParameterSeparator> : null }\n\n        { params.map(([key, value], i) => [\n            <BreakdownKey key={`${i}-key`}>{ key }:</BreakdownKey>,\n            <BreakdownValue key={`${i}-value`}>{ value }</BreakdownValue>\n        ]) }\n    </BreakdownContainer>;\n}","import * as React from 'react';\nimport { inject, observer } from 'mobx-react';\n\nimport { HttpExchange, HtkRequest } from '../../../types';\nimport { styled } from '../../../styles';\nimport { Icon } from '../../../icons';\n\nimport { aOrAn, uppercaseFirst } from '../../../util/text';\n\nimport { UiStore } from '../../../model/ui/ui-store';\nimport { getSummaryColour } from '../../../model/events/categorization';\nimport { getMethodDocs } from '../../../model/http/http-docs';\nimport { nameHandlerClass } from '../../../model/rules/rule-descriptions';\nimport { HandlerClassKey } from '../../../model/rules/rules';\n\nimport {\n    CollapsibleCardHeading,\n    CollapsibleCard,\n    CollapsibleCardProps\n} from '../../common/card';\nimport { Pill, PillButton } from '../../common/pill';\nimport {\n    CollapsibleSection,\n    CollapsibleSectionSummary,\n    CollapsibleSectionBody\n} from '../../common/collapsible-section';\nimport {\n    ContentLabel,\n    ContentLabelBlock,\n    ContentMonoValueInline,\n    Markdown\n} from '../../common/text-content';\nimport { DocsLink } from '../../common/docs-link';\nimport { SourceIcon } from '../../common/source-icon';\nimport { HttpVersionPill } from '../../common/http-version-pill';\nimport { HeaderDetails } from './header-details';\nimport { UrlBreakdown } from '../url-breakdown';\n\nconst MatchedRulePill = styled(inject('uiStore')((p: {\n    className?: string,\n    uiStore?: UiStore,\n    ruleData: {\n        stepTypes: HandlerClassKey[],\n        status: 'unchanged' | 'modified-types' | 'deleted'\n    },\n    onClick: () => void\n}) => {\n    const { stepTypes } = p.ruleData;\n    const stepDescription = stepTypes.length !== 1\n        ? 'multi-step'\n        : nameHandlerClass(stepTypes[0]);\n\n    return <PillButton\n        color={getSummaryColour('mutative')} // Conceptually similar - we've modified traffic\n        className={p.className}\n\n        // For now we show modified as unchanged, but we could highlight this later:\n        disabled={p.ruleData.status === 'deleted'}\n        onClick={p.ruleData.status !== 'deleted' ? p.onClick : undefined}\n\n        title={\n            `This request was handled by ${\n                aOrAn(stepDescription)\n             } ${stepDescription} rule${\n                p.ruleData.status === 'deleted'\n                    ? ' which has since been deleted'\n                : p.ruleData.status === 'modified-types'\n                    ? ' (which has since been modified)'\n                : ''\n            }.${\n                p.ruleData.status !== 'deleted'\n                    ? '\\nClick here to jump to the rule on the Mock page.'\n                    : ''\n            }`\n        }\n    >\n        <Icon icon={['fas', 'theater-masks']} />\n        { uppercaseFirst(stepDescription) }\n    </PillButton>;\n}))`\n    margin-right: auto;\n\n    text-decoration: none;\n    word-spacing: 0;\n\n    > svg {\n        margin-right: 5px;\n    }\n`;\n\nconst RawRequestDetails = (p: { request: HtkRequest }) => {\n    const methodDocs = getMethodDocs(p.request.method);\n    const methodDetails = [\n        methodDocs && <Markdown\n            key='method-docs'\n            content={methodDocs.summary}\n        />,\n        methodDocs && <p key='method-link'>\n            <DocsLink href={methodDocs.url}>Find out more</DocsLink>\n        </p>\n    ].filter(d => !!d);\n\n    return <div>\n        <CollapsibleSection>\n            <CollapsibleSectionSummary>\n                <ContentLabel>Method:</ContentLabel> { p.request.method }\n            </CollapsibleSectionSummary>\n\n            {\n                methodDetails.length ?\n                    <CollapsibleSectionBody>\n                        { methodDetails }\n                    </CollapsibleSectionBody>\n                : null\n            }\n        </CollapsibleSection>\n\n        <ContentLabelBlock>URL</ContentLabelBlock>\n\n        <CollapsibleSection prefixTrigger={true}>\n            <CollapsibleSectionSummary>\n                <ContentMonoValueInline>{\n                    p.request.parsedUrl.parseable\n                        ? p.request.parsedUrl.toString()\n                        : p.request.url\n                }</ContentMonoValueInline>\n            </CollapsibleSectionSummary>\n\n            {\n                <CollapsibleSectionBody>\n                    <UrlBreakdown url={p.request.parsedUrl} />\n                </CollapsibleSectionBody>\n            }\n        </CollapsibleSection>\n\n        <ContentLabelBlock>Headers</ContentLabelBlock>\n        <HeaderDetails headers={p.request.rawHeaders} requestUrl={p.request.parsedUrl} />\n    </div>;\n}\n\ninterface HttpRequestCardProps extends CollapsibleCardProps {\n    exchange: HttpExchange;\n    matchedRuleData: {\n        stepTypes: HandlerClassKey[],\n        status: 'unchanged' | 'modified-types' | 'deleted'\n    } | undefined;\n    onRuleClicked: () => void;\n}\n\nexport const HttpRequestCard = observer((props: HttpRequestCardProps) => {\n    const { exchange, matchedRuleData, onRuleClicked } = props;\n    const { request } = exchange;\n\n    // We consider passthrough as a no-op, and so don't show anything in that case.\n    const noopRule = matchedRuleData?.stepTypes.every(\n        type => type === 'passthrough' || type === 'ws-passthrough'\n    )\n\n    return <CollapsibleCard {...props} direction='right'>\n        <header>\n            { matchedRuleData && !noopRule &&\n                <MatchedRulePill\n                    ruleData={matchedRuleData}\n                    onClick={onRuleClicked}\n                />\n            }\n            <SourceIcon source={request.source} />\n            <HttpVersionPill request={request} />\n            <Pill color={getSummaryColour(exchange)}>\n                { exchange.isWebSocket() ? 'WebSocket ' : '' }\n                { request.method } {\n                    (request.hostname || '')\n                    // Add some tiny spaces to split up parts of the hostname\n                    .replace(/\\./g, '\\u2008.\\u2008')\n                }\n            </Pill>\n            <CollapsibleCardHeading onCollapseToggled={props.onCollapseToggled}>\n                Request\n            </CollapsibleCardHeading>\n        </header>\n\n        <RawRequestDetails request={request} />\n    </CollapsibleCard>;\n});","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { get } from 'typesafe-get';\n\nimport { HtkResponse, Omit } from '../../../types';\nimport { Theme } from '../../../styles';\n\nimport { ApiExchange } from '../../../model/api/api-interfaces';\nimport { getStatusColor } from '../../../model/events/categorization';\nimport { getStatusDocs, getStatusMessage } from '../../../model/http/http-docs';\n\nimport {\n    CollapsibleCard,\n    CollapsibleCardProps,\n    CollapsibleCardHeading\n} from '../../common/card';\nimport { Pill } from '../../common/pill';\nimport { HeaderDetails } from './header-details';\nimport {\n} from '../../common/card';\nimport {\n    CollapsibleSection,\n    CollapsibleSectionSummary,\n    CollapsibleSectionBody\n} from '../../common/collapsible-section';\nimport {\n    ContentLabel,\n    ContentLabelBlock,\n    ExternalContent,\n    Markdown\n} from '../../common/text-content';\nimport { DocsLink } from '../../common/docs-link';\n\ninterface HttpResponseCardProps extends CollapsibleCardProps  {\n    theme: Theme;\n    requestUrl: URL;\n    response: HtkResponse;\n    apiExchange: ApiExchange | undefined;\n}\n\nexport const HttpResponseCard = observer((props: HttpResponseCardProps) => {\n    const { response, requestUrl, theme, apiExchange } = props;\n\n    const apiResponseDescription = get(apiExchange, 'response', 'description');\n    const statusDocs = getStatusDocs(response.statusCode);\n\n    const responseDetails = [\n        apiResponseDescription && <ExternalContent\n            key='api-response-docs'\n            content={apiResponseDescription}\n        />,\n        statusDocs && <Markdown\n            key='status-docs'\n            content={statusDocs.summary}\n        />,\n        statusDocs && <p key='status-link'>\n            <DocsLink href={statusDocs.url}>Find out more</DocsLink>\n        </p>\n    ].filter(d => !!d);\n\n    return <CollapsibleCard {...props} direction='left'>\n        <header>\n            <Pill color={getStatusColor(response.statusCode, theme)}>{\n                response.statusCode\n            }</Pill>\n            <CollapsibleCardHeading onCollapseToggled={props.onCollapseToggled}>\n                Response\n            </CollapsibleCardHeading>\n        </header>\n\n        <div>\n            <CollapsibleSection>\n                <CollapsibleSectionSummary>\n                    <ContentLabel>Status:</ContentLabel>{' '}\n                    {response.statusCode} {response.statusMessage || getStatusMessage(response.statusCode)}\n                </CollapsibleSectionSummary>\n\n                {\n                    responseDetails.length ?\n                        <CollapsibleSectionBody>\n                            { responseDetails }\n                        </CollapsibleSectionBody>\n                    : null\n                }\n            </CollapsibleSection>\n\n            <ContentLabelBlock>Headers</ContentLabelBlock>\n            <HeaderDetails headers={response.rawHeaders} requestUrl={requestUrl} />\n        </div>\n    </CollapsibleCard>;\n});","import * as React from 'react';\nimport { observer, inject } from 'mobx-react';\n\nimport { HttpExchange } from '../../../types';\nimport { styled } from '../../../styles';\n\nimport { UiStore } from '../../../model/ui/ui-store';\nimport { getStatusColor } from '../../../model/events/categorization';\n\nimport { Pill } from '../../common/pill';\nimport {\n    CollapsibleCard,\n    CollapsibleCardHeading,\n    CollapsibleCardProps\n} from '../../common/card';\nimport { ContentMonoValue } from '../../common/text-content';\n\nconst ErrorContent = styled(ContentMonoValue)`\n    margin-top: 10px;\n`;\n\nexport const HttpAbortedResponseCard = inject('uiStore')(observer((p: {\n    cardProps: CollapsibleCardProps,\n    exchange: HttpExchange,\n    uiStore?: UiStore\n}) =>\n    <CollapsibleCard {...p.cardProps} direction='left'>\n        <header>\n            <Pill color={getStatusColor('aborted', p.uiStore!.theme)}>\n                Aborted\n            </Pill>\n            <CollapsibleCardHeading onCollapseToggled={p.cardProps.onCollapseToggled}>\n                Response\n            </CollapsibleCardHeading>\n        </header>\n        <div>\n            The connection failed before a response could be completed{\n                p.exchange.abortMessage\n                ? <> with error:\n                        <ErrorContent>\n                            { p.exchange.abortMessage }\n                        </ErrorContent>\n                </>\n                : '.'\n            }\n        </div>\n    </CollapsibleCard>\n));","import * as _ from 'lodash';\nimport * as dedent from \"dedent\";\nimport {\n    parse as parseDate,\n    differenceInSeconds,\n    addSeconds,\n    distanceInWordsStrict\n} from 'date-fns';\n\nimport { HttpExchange, ExchangeMessage } from '../../types';\nimport { lastHeader, asHeaderArray } from '../../util/headers';\nimport { joinAnd } from '../../util/text';\n\n// https://tools.ietf.org/html/draft-ietf-httpbis-semantics-04#section-7.2.3\nconst CACHEABLE_METHODS = ['GET', 'HEAD', 'POST'];\n\n// https://tools.ietf.org/html/draft-ietf-httpbis-semantics-01#section-9.1\nconst CACHEABLE_STATUSES = [\n    200,\n    203,\n    204,\n    206,\n    300,\n    301,\n    404,\n    405,\n    410,\n    414,\n    501\n];\n\n// The cacheable behaviour of these isn't explicitly defined, but the semantics clearly\n// indicate permanence, and Chrome at least caches them forever if no lifetime is set.\n// See https://chromium.googlesource.com/chromium/src/+/74.0.3729.30/net/http/http_response_headers.cc#1087\nconst PERMANENTLY_CACHEABLE_STATUSES = [\n    300,\n    301,\n    308,\n    410\n];\n\n// The set of CORS methods/headers which do never require preflight\n// requests (and so don't block cache matches)\nconst CORS_SIMPLE_METHODS = ['GET', 'HEAD', 'POST'];\nconst CORS_SIMPLE_HEADERS = [\n    'Cache-Control',\n    'Content-Language',\n    'Content-Type',\n    'Expires',\n    'Last-Modified',\n    'Pragma'\n];\n\nfunction formatHeader(headerName: string): string {\n    // Upper case the first letter of each word (including hyphenated parts)\n    return headerName.toLowerCase().replace(/(\\b\\w)/g, v => v.toUpperCase())\n}\n\nconst THE_DAWN_OF_TIME = parseDate(0);\nfunction formatDuration(seconds: number): string {\n    return distanceInWordsStrict(\n        THE_DAWN_OF_TIME,\n        parseDate(seconds * 1000)\n    )\n}\n\ninterface Explanation {\n    summary: string,\n    explanation: string,\n    type?: 'suggestion' | 'warning',\n};\n\nfunction parseCCDirectives(message: ExchangeMessage): {\n    'max-age'?: number;\n    's-maxage'?: number;\n    'stale-while-revalidate'?: number;\n    'stale-if-error'?: number;\n    [name: string]: true | number | undefined;\n} {\n    return asHeaderArray(message.headers['cache-control'])\n        .reduce<{ [name: string]: true | number }>((result, directive) => {\n            const [ name, value ] = directive.split('=');\n            result[name.trim()] = value !== undefined ? parseInt(value) : true;\n            return result;\n        }, {});\n}\n\nexport function explainCacheability(exchange: HttpExchange): (\n    Explanation & { cacheable: boolean }\n) | undefined {\n    const { request, response } = exchange;\n\n    if (typeof response !== 'object') return;\n\n    const isCacheableMethod = CACHEABLE_METHODS.includes(request.method);\n\n    if (!isCacheableMethod) {\n        if (request.method === 'OPTIONS' && request.headers['origin']) {\n            // This is a CORS preflight request - it's not really cacheable, but the CORS\n            // headers specifically (probably the only interesting bit) are, via their\n            // own separate funky mechanism.\n            const maxAgeHeader = lastHeader(response.headers['access-control-max-age']);\n            const maxAge = maxAgeHeader ? parseInt(maxAgeHeader, 10) : undefined;\n\n            if (maxAge !== undefined && maxAge >= 1) {\n                return {\n                    cacheable: true,\n                    summary: 'Cacheable',\n                    explanation: dedent`\n                        OPTIONS preflight requests are not normally cacheable, and don't observe\n                        standard Cache-Control mechanisms, but the CORS result itself will be\n                        cached if a Access-Control-Max-Age header is provided, as here.\n\n                        This only affects CORS behaviour for cross-origin requests, and should be\n                        ignored (so not cached at all) by all other clients and proxies.\n                    `\n                };\n            }\n\n            if (maxAge !== undefined && maxAge <= 0) {\n                return {\n                    cacheable: false,\n                    summary: 'Not cacheable',\n                    explanation: dedent`\n                        OPTIONS preflight requests don't observe standard Cache-Control\n                        mechanisms, but the CORS result itself can be cached if a\n                        Access-Control-Max-Age header is provided.\n\n                        In this case that header is set to ${maxAgeHeader}, explicitly\n                        requesting that this result should not be cached, and that clients\n                        should not reuse this CORS response in future.\n                    `\n                };\n            }\n\n            return {\n                cacheable: true,\n                summary: 'Very briefly cacheable',\n                explanation: dedent`\n                    OPTIONS preflight requests are not cacheable, unless an Access-Control-Max-Age\n                    header is provided. Many clients will very briefly cache the CORS response\n                    though, for example Chrome will cache this for 5 seconds.\n                `\n            };\n        } else {\n            return {\n                cacheable: false,\n                summary: 'Not cacheable',\n                explanation: `${request.method} requests are never cacheable.`\n            };\n        }\n    }\n\n    const responseCCDirectives = parseCCDirectives(response);\n\n    const hasRevalidationOptions = response.headers['etag'] || response.headers['last-modified'];\n    const revalidationSuggestion =\n        !hasRevalidationOptions &&\n        // Revalidation makes no sense without a body\n        response.body.encoded.byteLength &&\n        !responseCCDirectives['immutable'] ?\n        dedent`\n            :suggestion: This response doesn't however include any validation headers. That\n            means that once it expires, the content must be requested again from scratch. If\n            a Last-Modified or ETag header were included then these could be used to make\n            conditional HTTP requests and revalidate cached content without re-requesting\n            it, saving time and bandwidth.\n        ` : '';\n\n    if (!!responseCCDirectives['no-store']) {\n        return {\n            cacheable: false,\n            summary: 'Not cacheable',\n            explanation: dedent`\n                This response includes a \\`no-store\\` directive in its Cache-Control\n                header. This explicitly tells all caches that this response should\n                never be cached. It should never be persistently stored, should\n                be removed from any volatile/temporary storage as soon as possible,\n                and should be requested fresh from the network in future.\n            `\n        }\n    }\n\n    if (asHeaderArray(response.headers['pragma']).includes('no-store')) {\n        return {\n            cacheable: false,\n            summary: 'Not cacheable',\n            type: 'suggestion',\n            explanation: dedent`\n                This response includes a \\`no-store\\` directive in its Pragma\n                header. This explicitly tells all caches that this response should\n                never be cached. It should never be persistently stored, should\n                be removed from any volatile/temporary storage as soon as possible,\n                and should be requested fresh from the network in future.\n\n                :suggestion: This Pragma header is commonly supported, but officially\n                deprecated. It's typically better to use \\`Cache-Control: no-store\\` instead.\n            `\n        }\n    }\n\n    if (asHeaderArray(response.headers['vary']).includes('*')) {\n        return {\n            cacheable: false,\n            summary: 'Not cacheable',\n            explanation: dedent`\n                This response includes a \\`*\\` value in its Vary header. This tells caches\n                that the response content may vary unpredictably, possibly including factors\n                outside the request's content (e.g. the client's network address),\n                and so must never be cached.\n            `\n        };\n    }\n\n    if (request.method === 'POST') {\n        // POSTS aren't really cacheable like anything else - they have their own unique rules\n        const postExplanation = dedent`\n            POST responses are not typically cacheable, but can be used in some\n            specific circumstances to prepopulate GET & HEAD caches for the same URI.\n            This is allowed by the spec, but not supported by many clients.\n\n            A POST response may be cached and used by for future GET/HEAD requests only if:\n\n            * Explicit freshness information is included (e.g. a \\`max-age\\` Cache-Control\n                directive), and\n            * a Content-Location header is included, set to the same\n                URI as this request\n        `;\n\n        const contentLocationUrl = response.headers['content-location'] ?\n            new URL(lastHeader(response.headers['content-location']!), request.url) : undefined;\n\n        const hasFreshnessInfo =\n            !!responseCCDirectives['max-age'] ||\n            response.headers['expires'] !== undefined;\n        const contentLocationIsCurrentUri = contentLocationUrl && (\n            contentLocationUrl.toString().split('#')[0] === request.parsedUrl.toString().split('#')[0]\n        );\n\n        if (hasFreshnessInfo && contentLocationIsCurrentUri) {\n            return {\n                cacheable: true,\n                summary: 'May be cacheable for future GET/HEAD requests',\n                type: revalidationSuggestion ? 'suggestion' : undefined,\n                explanation: [\n                    postExplanation,\n                    'This response fulfills those conditions, so may be cacheable by some clients.',\n                    revalidationSuggestion\n                ].join('\\n\\n')\n            };\n        } else {\n            return {\n                cacheable: false,\n                summary: 'Not cacheable',\n                explanation: postExplanation + '\\n\\n' +\n                    'This response does not fulfill those conditions, so is not cacheable by anybody.'\n            };\n        }\n    }\n\n    if (responseCCDirectives['max-age'] !== undefined) {\n        let warning: string | undefined;\n\n        const responseDateHeader = response.headers['date'] ?\n            parseDate(lastHeader(response.headers['date'])!)\n            : undefined;\n\n        if (!responseDateHeader) {\n            warning = dedent`\n                :warning: However, this response does not include a Date header. That value\n                would be used in combination with the \\`max-age\\` value to calculate\n                the exact time to expire this content.\n\n                Clients may infer their own expiry start time, potentially using the time they\n                received this response, but it's strongly recommended to explicitly specify\n                one in the response instead, to ensure this content expires reliably and\n                predictably.\n            `;\n        } else if (response.headers['expires'] && Math.abs(differenceInSeconds(\n            parseDate(lastHeader(response.headers['expires']!)),\n            addSeconds(responseDateHeader, responseCCDirectives['max-age'])\n        )) > 60) {\n            warning = dedent`\n                :warning: This response also includes an Expires header, which appears to disagree\n                with the expiry time calculated from the \\`max-age\\` directive. The Cache-Control\n                headers take precedence, so this will only be used by clients that don't\n                support that, but this could cause unpredictable behaviour. It's typically\n                better to ensure these values agree on a single expiry time.\n            `;\n        }\n\n        return {\n            cacheable: true,\n            summary: 'Cacheable',\n            type:\n                warning ? 'warning' :\n                revalidationSuggestion ? 'suggestion' :\n                undefined,\n            explanation: dedent`\n                This response is cacheable because it specifies an explicit expiry time,\n                using a \\`max-age\\` directive in its Cache-Control header.\n                ${\n                    warning ? '\\n' + warning :\n                    revalidationSuggestion ? '\\n' + revalidationSuggestion :\n                    ''\n                }\n            `\n        };\n    }\n\n    if (lastHeader(response.headers['expires']) !== undefined) {\n        // Expires set, but not max-age (checked above).\n        return {\n            cacheable: true,\n            summary: 'Cacheable',\n            type: 'suggestion',\n            explanation: dedent`\n                This response is cacheable because it specifies an explicit expiry time,\n                using an Expires header.\n\n                :suggestion: The Expires header is commonly supported, but officially deprecated.\n                It's typically better to use \\`Cache-Control: max-age=<seconds>\\` instead,\n                or in addition.\n            `\n        };\n    }\n\n    const isDefaultCacheableStatus = CACHEABLE_STATUSES.includes(response.statusCode);\n\n    if (isDefaultCacheableStatus || responseCCDirectives['public']) {\n        // We're cacheable, but with no expiry details at all.\n\n        if (PERMANENTLY_CACHEABLE_STATUSES.includes(response.statusCode)) {\n            return {\n                cacheable: true,\n                summary: 'Cacheable',\n                explanation: dedent`\n                    ${response.statusCode} responses are cacheable by default. The lifetime of the\n                    cached response isn't strictly specified, but since this status code is\n                    intended to indicate a permanent change the overwhelming majority of clients\n                    will cache it forever.\n                `\n            };\n        }\n\n        // Temporarily cacheable, but for no specified time. Not a great idea.\n\n        const cacheableReason = isDefaultCacheableStatus ?\n            `${response.statusCode} responses are cacheable by default` :\n            `This response includes a \\`public\\` Cache-Control directive, explicitly marking it cacheable`;\n\n        if (!hasRevalidationOptions) {\n            // We're cacheable, but with no clear expiry *and* no way to revalidate.\n            return {\n                cacheable: false,\n                summary: 'Typically not cacheable',\n                type: 'warning',\n                explanation: dedent`\n                    ${cacheableReason}. However most caches will not store a response\n                    like this, which has no explicit expiry time and no way to revalidate\n                    the content in future.\n\n                    :warning: It's typically better to be explicit about if and how responses\n                    should be cached, rather than depending on the unpredictable behaviour this\n                    can cause.\n\n                    This request would be reliably cached if an explicit expiry was set (e.g.\n                    with a \\`max-age\\` Cache-Control directive). Alternatively this would be\n                    reliably excluded from caching if a \\`no-store\\` Cache-Control directive\n                    was present.\n                `\n            }\n        } else if (responseCCDirectives['no-cache']) {\n            // We're cacheable and revalidateable, with forced revalidation every time, so 0 expiry\n            return {\n                cacheable: true,\n                summary: 'Cacheable',\n                explanation: dedent`\n                    ${cacheableReason}.\n\n                    The response does not include any explicit expiry information,\n                    but does include a \\`no-cache\\` directive, meaning the cached content will\n                    be revalidated with the origin server on every request, making\n                    expiry irrelevant.\n                `\n            };\n        } else {\n            // We're cacheable and revalidateable, but there's no clear expiry\n\n            return {\n                cacheable: true,\n                summary: 'Probably cacheable',\n                type: 'warning',\n                explanation: dedent`\n                    ${cacheableReason}. However this response does not explicitly\n                    specify when it expires (e.g. with a \\`max-age\\` Cache-Control\n                    directive), so its expiry behaviour is not well defined. Caches\n                    may use a heuristic to decide when this response is no longer\n                    considered fresh, and some clients may refuse to cache the response\n                    entirely.\n\n                    :warning: It's typically better to be explicit about how responses should\n                    be cached and expired, rather than depending on this unpredictable behaviour.\n\n                    If an explicit expiry time was set (e.g. using a \\`max-age\\` Cache-Control\n                    directive), this would take precedence over any heuristics, and provide\n                    reliable cache expiry. Alternatively this content would be reliably\n                    excluded from caching if a \\`no-store\\` Cache-Control directive was present.\n                `\n            };\n        }\n    }\n\n    if (responseCCDirectives['s-maxage'] !== undefined) {\n        // We're not locally cacheable at all, but we are proxy cacheable???!!! Super funky\n        return {\n            cacheable: true,\n            summary: 'Not cacheable by private (HTTP client) caches',\n            explanation: dedent`\n                This response is cacheable because it specifies an explicit expiry time,\n                using an \\`s-maxage\\` Cache-Control directive. This only applies to shared\n                caches (e.g. proxies and CDNs), and this response would otherwise not be\n                cacheable, so it won't be cached by any HTTP user agents (e.g. browsers).\n            `\n        };\n    }\n\n    return {\n        cacheable: false,\n        summary: 'Not cacheable',\n        explanation: dedent`\n            ${response.statusCode} responses are not cacheable by default.\n            This could become cacheable if explicit caching headers were added,\n            such as a \\`max-age\\` Cache-Control directive.\n        `\n    };\n}\n\nconst ALL_CACHES = 'May be cached in both private and shared caches';\nconst PRIVATE_ONLY = 'May only be cached in private caches'\nconst SHARED_ONLY = 'May only be cached in shared caches';\n\n/**\n * Explains the details of which types of cache can be store this response,\n * and why. This assumes that explainCacheability has returned cacheability: true,\n * and doesn't fully repeat the checks included there.\n */\nexport function explainValidCacheTypes(exchange: HttpExchange): Explanation | undefined {\n    const { request, response } = exchange;\n    if (typeof response !== 'object') return;\n\n    if (request.method === 'OPTIONS' && request.headers['origin']) {\n        return {\n            summary: PRIVATE_ONLY,\n            explanation: dedent`\n                OPTIONS responses are not cached through the normal HTTP response caching mechanisms.\n                Only the CORS metadata for the resource is cached, and only by HTTP clients that\n                implement CORS checks, such as browsers, not by intermediate caches.\n            `\n        };\n    }\n\n    const responseCCDirectives = parseCCDirectives(response);\n\n    if (responseCCDirectives['private'] !== undefined) {\n        return {\n            summary: PRIVATE_ONLY,\n            explanation: dedent`\n                This response may only be cached by private caches, such as your browser cache,\n                because it includes an explicit \\`private\\` Cache-Control directive.\n            `\n        };\n    }\n\n    if (responseCCDirectives['public'] !== undefined) {\n        return {\n            summary: ALL_CACHES,\n            explanation: dedent`\n                This response may be cached by both private HTTP client caches and shared caches\n                such as CDNs and proxies, because it includes an explicit \\`public\\` Cache-Control\n                directive.\n            `\n        };\n    }\n\n    if (\n        request.headers['authorization'] !== undefined && !(\n            responseCCDirectives['s-maxage'] !== undefined ||\n            responseCCDirectives['must-revalidate'] !== undefined ||\n            responseCCDirectives['public'] !== undefined\n        )\n    ) {\n        return {\n            summary: PRIVATE_ONLY,\n            explanation: dedent`\n                This response may only be cached by private caches, such as your browser cache,\n                because it includes an Authorization header, and doesn't include the explicit\n                directives that would allow it to be stored by shared caches.\n\n                Shared caches, such as CDNs and proxies, would only be allowed to store this\n                response if it contained \\`s-maxage\\`, \\`must-revalidate\\` or \\`public\\`\n                Cache-Control directives.\n            `\n        };\n    }\n\n    if (responseCCDirectives['s-maxage'] !== undefined && !(\n            responseCCDirectives['max-age'] !== undefined ||\n            response.headers['expires'] !== undefined ||\n            responseCCDirectives['public'] !== undefined ||\n            CACHEABLE_STATUSES.includes(response.statusCode)\n        )\n    ) {\n        return {\n            summary: SHARED_ONLY,\n            explanation: dedent`\n                This response may only be cached by shared caches, such as proxies & CDNs,\n                not by private client caches, because it includes an \\`s-maxage\\` Cache-Control\n                directive but is otherwise not cacheable by default, and does not include\n                any other explicit caching directives.\n            `\n        };\n    }\n\n    return {\n        summary: ALL_CACHES,\n        explanation: dedent`\n            This response may be cached by both private client caches & shared\n            CDN or proxy caches, because it is cacheable and does not include\n            either a \\`private\\` Cache-Control directive or an Authorization header.\n        `\n    };\n}\n\n/**\n * Explains how this response will be matched against future requests and why.\n * This assumes that explainCacheability has returned cacheability: true,\n * so doesn't fully repeat the checks included there.\n */\nexport function explainCacheMatching(exchange: HttpExchange): Explanation | undefined {\n    const { request, response } = exchange;\n    if (typeof response !== 'object') return;\n\n    if (request.method === 'OPTIONS' && request.headers['origin']) {\n        const allowedMethods = _.union(\n            CORS_SIMPLE_METHODS,\n            asHeaderArray(response.headers['access-control-allow-methods'])\n                .map(m => m.toUpperCase()),\n        );\n        const allowedHeaders = _.union(\n            CORS_SIMPLE_HEADERS,\n            asHeaderArray(response.headers['access-control-allow-headers'])\n                .map(formatHeader)\n        );\n        const allowsCredentials = response.headers['Access-Control-Allow-Credentials'] === 'true';\n\n        return {\n            summary: 'Will match corresponding future CORS requests for this URL',\n            explanation: dedent`\n                The CORS configuration returned here may be used to avoid a preflight\n                request for future CORS requests, when:\n\n                * The CORS request would be sent to the same URL\n                * The origin is \\`${request.headers['origin']}\\`\n                ${!allowsCredentials ? '* No credentials are being sent\\n' : ''\n                }* The request method would be ${joinAnd(allowedMethods, ', ', ' or ')}\n                * There are no extra request headers other than ${joinAnd(allowedHeaders)}\n            `\n        };\n    }\n\n    const varyHeaders = asHeaderArray(response.headers['vary']).map(formatHeader);\n\n    const hasVaryHeaders = varyHeaders.length > 0;\n\n    // Don't need to handle Vary: *, as that would've excluded cacheability entirely.\n\n    const varySummary = hasVaryHeaders ?\n        ` that have the same ${\n            joinAnd(varyHeaders)\n        } header${varyHeaders.length > 1 ? 's' : ''}`\n        : '';\n\n    const varyExplanation = hasVaryHeaders ? dedent`\n        , as long as those requests have ${joinAnd(varyHeaders.map(headerName => {\n            const realHeaderValue = request.headers[headerName.toLowerCase()];\n\n            return realHeaderValue === undefined ?\n                `no ${headerName} header` :\n                `a ${headerName} header set to \\`${realHeaderValue}\\``\n        }))}.\n\n        ${varyHeaders.length > 1 ? 'These headers are' : 'This header is'}\n        required because ${varyHeaders.length > 1 ? \"they're\" : \"it's\"} listed in\n        the Vary header of the response.\n    ` : dedent`\n        , regardless of header values or other factors.\n\n        If this response is only valid for certain header configurations (e.g.\n        Accept-Encoding or Accept-Language headers), it should include a Vary header.\n    `;\n\n    if (request.method === 'POST') {\n        return {\n            summary: `Will match future GET & HEAD requests to this URL${varySummary}`,\n            explanation: dedent`\n                The response content & headers returned here may be used for future safe requests\n                for the resource updated by this POST${varyExplanation}\n            `\n        };\n    }\n\n    return {\n        summary: `Will match future GET & HEAD requests to this URL${varySummary}`,\n        explanation: dedent`\n            The response content & headers returned here may be used for future safe requests\n            for the same resource${varyExplanation}\n        `\n    };\n}\n\n/**\n * Explains when response will be matched against future requests, why,\n * and what will happen after that time passes.\n * This assumes that explainCacheability has returned cacheability: true,\n * so doesn't fully repeat the checks included there.\n */\nexport function explainCacheLifetime(exchange: HttpExchange): Explanation | undefined {\n    const { request, response } = exchange;\n    if (typeof response !== 'object') return;\n\n    const responseCCDirectives = parseCCDirectives(response);\n\n    if (request.method === 'OPTIONS') {\n        const maxAgeHeader = lastHeader(response.headers['access-control-max-age']);\n\n        if (maxAgeHeader) {\n            const maxAge = parseInt(maxAgeHeader!, 10);\n\n            return {\n                summary: `Expires after ${formatDuration(maxAge)}`,\n                explanation: dedent`\n                    This CORS response includes an Access-Control-Max-Age header explicitly\n                    set to ${maxAge} seconds, which defines the valid lifetime for the\n                    cached response. Once this expires it will immediately cease to be used.\n                `\n            };\n        }\n\n        // Don't need to deal with negative max age, as we exclude that as non-cacheable\n        // in explainCacheability\n\n        return {\n            summary: `Expires unpredictably, around 5 seconds`,\n            explanation: dedent`\n                This CORS response does not include an Access-Control-Max-Age header, so\n                does not explicitly specify when it should expire. That means the\n                exact expiry is left up to the client implementation. This may be a\n                small number of seconds, or it may be considered expired immediately.\n            `\n        };\n    }\n\n    if (responseCCDirectives['no-cache']) {\n        return {\n            summary: \"Must be revalidated every time it's used\",\n            explanation: dedent`\n                This response includes an explicit \\`no-cache\\` directive. This means that\n                before the cached content can be used, the matching requests must always be\n                forwarded to the origin server, and the response content must be revalidated.\n\n                This requires a request to the origin server for every client request, but\n                does still offer performance benefits compared to not caching at all,\n                because conditional requests can be used to avoid redownloading the\n                full response from scratch if it hasn't changed.\n            `\n        };\n    }\n\n    const dateHeader = lastHeader(response.headers['date']);\n    const expiresHeader = lastHeader(response.headers['expires']);\n    const maxAge = responseCCDirectives['max-age'];\n    const sharedMaxAge = responseCCDirectives['s-maxage'] !== undefined ?\n        responseCCDirectives['s-maxage'] : maxAge;\n\n    const hasExplicitLifetime = maxAge !== undefined || expiresHeader !== undefined;\n    const lifetime =\n        maxAge !== undefined ? maxAge :\n        expiresHeader !== undefined ? differenceInSeconds(\n            expiresHeader,\n            dateHeader\n                ? parseDate(dateHeader)\n                : parseDate(exchange.timingEvents.startTime ?? Date.now())\n        )\n        : undefined;\n    const hasNegativeLifetime = lifetime !== undefined && lifetime <= 0;\n\n    if (\n        !hasExplicitLifetime &&\n        PERMANENTLY_CACHEABLE_STATUSES.includes(response.statusCode)\n    ) {\n        return {\n            summary: 'Never expires' + (sharedMaxAge !== maxAge ?\n                ` from private caches, expires from shared caches after ${\n                    formatDuration(sharedMaxAge!)\n                }` : ''\n            ),\n            explanation: dedent`\n                This ${response.statusCode} response is intended to describe a permanent state,\n                and has no explicitly defined expiry time, so by default most clients will\n                cache it forever.\n\n                ${sharedMaxAge !== maxAge ? dedent`\n                    The response does include a \\`s-maxage\\` directive however, set to ${\n                        sharedMaxAge\n                    } seconds, which overrides this for shared caches such as CDNs and\n                    proxies. In that specific case, the response will be considered stale\n                    after ${formatDuration(sharedMaxAge!)}. As there is no \\`proxy-revalidate\\`\n                    directive, it may still be used whilst stale if necessary or explicitly\n                    allowed by a client.\n\n                    If the response included a specific expiry time for private caches, e.g.\n                    with a \\`max-age\\` Cache-Control directive, that typically would limit the\n                    lifetime of this response in those caches too. In general though in that\n                    case it would be better to use a more accurate status code.\n                ` : dedent`\n                    If this response did include a specific expiry time, e.g. with a max-age\n                    Cache-Control directive, that would typically override this. In general\n                    though in that case it would be better to use a more accurate status code.\n                `}\n            `\n        };\n    }\n\n    const explainSharedCacheLifetime = sharedMaxAge !== maxAge ? dedent`\n        .\n\n        This response also includes a \\`s-maxage\\` directive, set to ${\n            formatDuration(sharedMaxAge!)\n        } seconds which overrides this expiry for shared caches such as CDNs or proxies.\n        This means in that case, the response will become stale in ${\n            formatDuration(sharedMaxAge!)\n        }\n    ` : '';\n\n    const explainLifetime =\n        !hasExplicitLifetime ? dedent`\n            ${sharedMaxAge === maxAge ? dedent `\n                This response does not explicitly declare its expiry time. Caches\n            `: dedent `\n                This response only declares an explicit expiry time for shared caches, such\n                as proxies or CDNs, not for private caches. Content in shared caches will\n                expire after ${formatDuration(sharedMaxAge!)}, as declared by the \\`s-maxage\\`\n                Cache-Control directive, whilst content in private caches may expire\n                unpredictably.\n\n                Private caches\n            `} may\n            use a heuristic to decide when this response is considered stale, typically\n            some percentage of the time since the content was last modified, often using\n            the Last-Modified header value${\n                response.headers['last-modified'] ?\n                    ` (${response.headers['last-modified']})`\n                    : ', although that is not explicitly defined in this response either'\n            }\n        ` :\n        hasNegativeLifetime ? dedent`\n            This response expires immediately because it has ${\n                maxAge! <= 0 ? dedent`\n                    a \\`max-age\\` directive set to ${maxAge} seconds\n                ` :\n                dateHeader ? dedent `\n                    an Expires header set to ${expiresHeader}, which is\n                    not after its Date header value (${dateHeader})\n                `\n                : dedent`\n                    an Expires header set to ${expiresHeader}, which is\n                    before the response was received\n                `\n            }${explainSharedCacheLifetime}\n        ` :\n        maxAge !== undefined ? dedent`\n            This response expires after ${maxAge} seconds (${formatDuration(maxAge)}),\n            as specified by its \\`max-age\\` directive${explainSharedCacheLifetime}\n        `\n        : dedent`\n            This response expires at ${expiresHeader} (after ${formatDuration(lifetime!)}),\n            as specified by its Expires header${explainSharedCacheLifetime}\n        `;\n\n    if (hasNegativeLifetime && responseCCDirectives['must-revalidate']) {\n        return {\n            summary: \"Must be revalidated every time it's used\" + (sharedMaxAge !== maxAge ?\n                ` (or after ${formatDuration(sharedMaxAge!)} for shared caches)`\n                : ''\n            ),\n            explanation: dedent`\n                ${explainLifetime}.\n\n                In addition, it includes a \\`must-revalidate\\` directive.\n\n                Together, these mean that before the cached content can be used${\n                    sharedMaxAge !== maxAge && sharedMaxAge! > 0 ?\n                        ' by private caches' : ''\n                } the matching requests must always be forwarded to the origin server,\n                and the response content must be revalidated.\n\n                This requires a request to the origin server for every client request, but\n                does still offer performance benefits compared to not caching at all,\n                because conditional requests can be used to avoid redownloading the\n                full response from scratch if it hasn't changed.\n            `\n        };\n    }\n\n    const staleBonusBehaviourSummary = (\n            responseCCDirectives['stale-while-revalidate'] !== undefined &&\n            responseCCDirectives['stale-if-error'] !== undefined\n        ) ?\n            `can be served stale temporarily whilst revalidating or if receiving errors` :\n        responseCCDirectives['stale-while-revalidate'] !== undefined ?\n            `can be served stale whilst revalidating for ${\n                formatDuration(responseCCDirectives['stale-while-revalidate'])\n            }` :\n        responseCCDirectives['stale-if-error'] !== undefined ?\n            `can be served stale if errors are received for ${\n                formatDuration(responseCCDirectives['stale-if-error'])\n            }` :\n        '';\n\n    const revalidationSummary =\n        responseCCDirectives['must-revalidate'] ?\n            `, then must always be revalidated` :\n        responseCCDirectives['proxy-revalidate'] && staleBonusBehaviourSummary ?\n            `, then ${staleBonusBehaviourSummary} (but must be revalidated by shared caches)` :\n        responseCCDirectives['proxy-revalidate'] ?\n            `, then must always be revalidated by shared caches, but may be used privately` :\n        staleBonusBehaviourSummary ?\n            `, then ${staleBonusBehaviourSummary}`\n        : '';\n\n    const staleBonusBehaviour = (\n            responseCCDirectives['stale-while-revalidate'] !== undefined &&\n            responseCCDirectives['stale-if-error'] !== undefined\n        ) ? dedent`\n            The response includes both \\`stale-while-revalidate\\` and \\`stale-if-error\\`\n            directives, set to ${\n                responseCCDirectives['stale-while-revalidate']\n            } seconds and ${responseCCDirectives['stale-if-error']} seconds respectively.\n\n            \\`stale-while-revalidate\\` means that after the response has expired, new\n            requests should trigger revalidation, but the stale content can still be served\n            in the meantime, for ${\n                formatDuration(responseCCDirectives['stale-while-revalidate']!)\n            } extra.\n\n            \\`stale-if-error\\` means that after the response has expired, new\n            requests should trigger revalidation, but the stale content can still be served\n            in the meantime if any errors are encountered, for ${\n                formatDuration(responseCCDirectives['stale-if-error']!)\n            } after the response expires.\n        ` :\n        responseCCDirectives['stale-while-revalidate'] !== undefined ? dedent`\n            The response includes a \\`stale-while-revalidate\\` directive set to ${\n                responseCCDirectives['stale-while-revalidate']\n            } seconds. This means that after the response has expired new requests\n            should trigger revalidation, but the stale content can still be served in\n            the meantime for ${\n                formatDuration(responseCCDirectives['stale-while-revalidate']!)\n            } extra.\n        ` :\n        responseCCDirectives['stale-if-error'] !== undefined ? dedent`\n            The response includes a \\`stale-if-error\\` directive set to ${\n                responseCCDirectives['stale-if-error']\n            } seconds. This means that after the response has expired, new\n            requests should trigger revalidation, but the stale content can still be\n            served in the meantime if any errors are encountered, for ${\n                formatDuration(responseCCDirectives['stale-if-error']!)\n            } after the response expires.\n        ` : '';\n\n    const explainRevalidation =\n        responseCCDirectives['must-revalidate'] ? dedent`\n            This response includes a \\`must-revalidate\\` directive, which means caches must\n            ensure expired content is _always_ forwarded to & revalidated by the origin server,\n            and expired content must never be used, even if the server is unavailable, if\n            requested explicitly, or if serving stale content has been enabled elsewhere.\n        ` :\n        responseCCDirectives['proxy-revalidate'] ? dedent`\n            This response includes a \\`proxy-revalidate\\` directive, which means shared\n            caches (e.g. CDNs or proxies) must ensure expired content is always forwarded\n            to & revalidated by the origin server, and expired content must never be used,\n            even if the server is unavailable, if requested explicitly, or if serving\n            stale content has been enabled elsewhere.\n\n            ${staleBonusBehaviour ? staleBonusBehaviour : dedent`\n                It does not include a \\`must-revalidate\\` directive, so private client caches\n                are still allowed to use stale responses if necessary.\n            `}\n        ` : dedent`\n            ${staleBonusBehaviour}\n\n            As the response does not include a \\`must-revalidate\\` directive,\n            expired responses may be used if explicitly requested or necessary, for\n            example if the origin server is not responding.\n        `;\n\n    if (hasNegativeLifetime) {\n        return {\n            summary: `Expires immediately${\n                sharedMaxAge !== maxAge ?\n                    ` (or after ${formatDuration(sharedMaxAge!)} for shared caches)`\n                    : ''\n            }${revalidationSummary}`,\n            explanation: dedent`\n                ${explainLifetime}.\n\n                ${explainRevalidation}\n            `\n        };\n    }\n\n    const shouldSuggestImmutable =\n        !responseCCDirectives['immutable'] &&\n        (lifetime && lifetime >= 31536000); // 1 year\n\n    return {\n        summary:\n            lifetime !== undefined ?\n                `Expires after ${formatDuration(lifetime)}${\n                    sharedMaxAge !== maxAge ?\n                        ` (${formatDuration(sharedMaxAge!)} for shared caches)`\n                        : ''\n                }${revalidationSummary}`\n            :\n                `Expires unpredictably${\n                    sharedMaxAge !== maxAge ?\n                        ` for private caches, or after ${\n                            formatDuration(sharedMaxAge!)\n                        } for shared caches`\n                        : ''\n                }${revalidationSummary}`,\n        type: shouldSuggestImmutable ? 'suggestion' : undefined,\n        explanation: dedent`\n            ${explainLifetime}.\n\n            ${explainRevalidation}\n\n            ${shouldSuggestImmutable ? dedent`\n                :suggestion: This expiry time is more than a year away, which suggests that the\n                content never changes. This could be more effective with the \\`immutable\\`\n                Cache-Control directive, which completely avoids revalidation\n                requests for this content in extra cases, such as explicit page refreshes,\n                saving validation time.\n            `\n            : ''}\n        `\n    };\n}","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { TimingEvents } from '../../types';\n\nimport { Pill } from './pill';\n\nfunction sigFig(num: number, figs: number): number {\n    return parseFloat(num.toFixed(figs));\n}\n\ntype DurationPillProps = { className?: string } & (\n    | { durationMs: number }\n    | { timingEvents: Partial<TimingEvents> }\n)\n\nexport const DurationPill = observer((p: DurationPillProps) => {\n    let duration: number | undefined;\n\n    if ('durationMs' in p) {\n        duration = p.durationMs;\n    } else {\n        const timingEvents = p.timingEvents;\n        const doneTimestamp = timingEvents.responseSentTimestamp ?? timingEvents.abortedTimestamp;\n\n        duration = doneTimestamp !== undefined && timingEvents.startTimestamp !== undefined\n            ? doneTimestamp - timingEvents.startTimestamp\n            : undefined;\n    }\n\n    if (duration === undefined) return null;\n\n    return <Pill className={p.className}>{\n        duration < 100 ? sigFig(duration, 2) + 'ms' : // 22.34ms\n        duration < 1000 ? sigFig(duration, 1) + 'ms' : // 999.5ms\n        duration < 10000 ? sigFig(duration / 1000, 3) + ' seconds' : // 3.045 seconds\n        sigFig(duration / 1000, 1) + ' seconds' // 11.2 seconds\n    }</Pill>;\n});","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { get } from 'typesafe-get';\n\nimport { styled } from '../../../styles';\nimport {\n    HttpExchange,\n    TimingEvents,\n    ExchangeMessage\n} from '../../../types';\nimport { asHeaderArray } from '../../../util/headers';\nimport { joinAnd } from '../../../util/text';\nimport { Icon, WarningIcon, SuggestionIcon } from '../../../icons';\n\nimport { AccountStore } from '../../../model/account/account-store';\nimport { getReadableSize, testEncodings } from '../../../model/events/bodies';\nimport {\n    explainCacheability,\n    explainCacheLifetime,\n    explainCacheMatching,\n    explainValidCacheTypes\n} from '../../../model/http/caching';\n\nimport {\n    CollapsibleCardHeading,\n    CollapsibleCard,\n    CollapsibleCardProps\n} from '../../common/card';\nimport { Pill } from '../../common/pill';\nimport { DurationPill } from '../../common/duration-pill';\nimport {\n    CollapsibleSection,\n    CollapsibleSectionSummary,\n    CollapsibleSectionBody\n} from '../../common/collapsible-section';\nimport { ContentLabelBlock, Markdown } from '../../common/text-content';\nimport { ProHeaderPill, CardSalesPitch } from '../../account/pro-placeholders';\n\ninterface HttpPerformanceCardProps extends CollapsibleCardProps {\n    exchange: HttpExchange;\n    accountStore?: AccountStore;\n}\n\nexport const HttpPerformanceCard = inject('accountStore')(observer((props: HttpPerformanceCardProps) => {\n    const { exchange, accountStore } = props;\n    const { isPaidUser } = accountStore!;\n\n    return <CollapsibleCard {...props}>\n        <header>\n            { isPaidUser\n                ? <DurationPill timingEvents={exchange.timingEvents} />\n                : <ProHeaderPill />\n            }\n            <CollapsibleCardHeading onCollapseToggled={props.onCollapseToggled}>\n                Performance\n            </CollapsibleCardHeading>\n        </header>\n\n        { isPaidUser ?\n            <div>\n                <CompressionPerformance exchange={exchange} />\n                <CachingPerformance exchange={exchange} />\n            </div>\n        :\n            <CardSalesPitch source='performance'>\n                <p>\n                    See timing info, dive into the real and potential compression of every\n                    exchange, and understand how &amp; where this response could\n                    be cached, for a full performance overview.\n                </p>\n            </CardSalesPitch>\n        }\n    </CollapsibleCard>;\n}));\n\nfunction getEncodingName(key: string): string {\n    if (key === 'br') return 'brotli';\n    if (key === 'zstd') return 'zstandard';\n    if (key === 'gzip' || key === 'x-gzip') {\n        return 'gzip';\n    }\n    if (key === 'deflate' || key === 'x-deflate') {\n        return 'zlib';\n    }\n\n    return _.upperFirst(key);\n}\n\nfunction getEncodings(message: ExchangeMessage | 'aborted' | undefined) {\n    if (!message || message === 'aborted') return [];\n\n    return asHeaderArray(message.headers['content-encoding'])\n        .filter((encoding) => !!encoding && encoding !== 'identity')\n        .map(getEncodingName);\n}\n\nconst CompressionDescription = observer((p: {\n    encodings: string[],\n    encodedBodyLength: number,\n    decodedBodyLength: number | undefined\n}) => {\n    const { encodings, encodedBodyLength, decodedBodyLength } = p;\n\n    const compressionRatio = decodedBodyLength ? Math.round(100 * (\n        1 - (encodedBodyLength / decodedBodyLength)\n    )) : undefined;\n\n    return <>\n        { encodings.length ? <>\n            compressed with <strong>{joinAnd(encodings, ', ', ' and then ')}</strong>,\n            making it {\n                compressionRatio !== undefined && decodedBodyLength ? <>\n                    <strong>\n                        { compressionRatio >= 0 ?\n                            `${compressionRatio}% smaller`\n                        :\n                            `${-compressionRatio}% bigger`\n                        }\n                    </strong> ({\n                        getReadableSize(decodedBodyLength)\n                    } to {\n                        getReadableSize(encodedBodyLength)\n                    })\n                </> : <Icon icon={['fas', 'spinner']} spin />\n            }\n        </> :\n            <strong>not compressed</strong>\n        }\n    </>;\n});\n\nconst CompressionResultsContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px;\n    margin-right: 10px;\n`;\n\nconst CompressionResultsPill = styled(Pill)`\n    flex-shrink: 0;\n`;\n\nconst CompressionOptions = observer((p: {\n    encodings: string[],\n    encodedBodyLength: number,\n    decodedBodyLength: number | undefined,\n    encodingTestResults: { [encoding: string]: number } | undefined\n}) => {\n    const { encodings, encodedBodyLength, decodedBodyLength, encodingTestResults } = p;\n\n    if (!_.isEmpty(encodingTestResults) && decodedBodyLength) {\n        const realCompressionRatio = Math.round(100 * (\n            1 - (encodedBodyLength / decodedBodyLength)\n        ));\n\n        return <CompressionResultsContainer>{\n            _(encodingTestResults)\n            .omitBy((_size, encoding) =>\n                encodings.length === 1 && encoding === encodings[0]\n            ).map((size: number, encoding) => {\n                const testedCompressionRatio = Math.round(100 * (\n                    1 - (size / decodedBodyLength)\n                ));\n\n                return <CompressionResultsPill key={encoding} title={\n                        `${\n                            getReadableSize(decodedBodyLength)\n                        } would compress to ${\n                            getReadableSize(size)\n                        } using ${encoding}`\n                    }\n                    color={\n                        testedCompressionRatio > realCompressionRatio! &&\n                        testedCompressionRatio > 0 ?\n                            '#4caf7d' : '#888'\n                    }\n                >\n                    { _.upperFirst(encoding) }: { testedCompressionRatio }%\n                </CompressionResultsPill>\n            }).valueOf()\n        }</CompressionResultsContainer>\n    } else {\n        return <Icon icon={['fas', 'spinner']} spin />;\n    }\n});\n\nconst CompressionOptionsContainer = styled.div`\n    display: flex;\n    align-items: center;\n\n    margin-bottom: 10px;\n    &:last-child {\n        margin-bottom: 0;\n    }\n`;\n\nconst PerformanceExplanation = styled.p`\n    margin-bottom: 10px;\n    line-height: 1.3;\n\n    &:last-child {\n        margin-bottom: 0;\n    }\n`;\n\nconst CompressionOptionsTips = styled(PerformanceExplanation)`\n    font-style: italic;\n`;\n\nconst CompressionPerformance = observer((p: { exchange: HttpExchange }) => {\n    const messageTypes: Array<'request' | 'response'> = ['request', 'response'];\n    const clientAcceptedEncodings = asHeaderArray(p.exchange.request.headers['accept-encoding'])\n        .map(getEncodingName);\n\n    return <>{ messageTypes.map((messageType) => {\n        const message = p.exchange[messageType];\n        const encodings = getEncodings(message);\n\n        if (typeof message !== 'object' || !message.body.encoded.byteLength) return null;\n\n        const encodedBody = message.body.encoded;\n        const decodedBody = message.body.decoded;\n        const decodedBodySize = decodedBody ? decodedBody.byteLength : 0;\n        const encodedBodySize = encodedBody.byteLength;\n\n        const encodingTestResults = _.mapKeys(testEncodings(message),\n            (_size, encoding) => getEncodingName(encoding)\n        );\n\n        let bestOtherEncoding = _.minBy(\n            Object.keys(encodingTestResults),\n            (encoding) => encodingTestResults[encoding]\n        );\n\n        const betterEncodingAvailable =\n            decodedBodySize &&\n            bestOtherEncoding &&\n            !(encodings.length === 1 && bestOtherEncoding === encodings[0]) &&\n            encodingTestResults[bestOtherEncoding] < Math.min(encodedBodySize, decodedBodySize);\n\n        return <React.Fragment key={messageType}>\n            <ContentLabelBlock>{ _.upperFirst(messageType) } Compression</ContentLabelBlock>\n            <PerformanceExplanation>\n                The {messageType} body was <CompressionDescription\n                    encodings={encodings}\n                    encodedBodyLength={encodedBodySize}\n                    decodedBodyLength={get(decodedBody, 'byteLength')}\n                />.\n            </PerformanceExplanation>\n            <CompressionOptionsContainer>\n                <CompressionOptions\n                    encodings={encodings}\n                    encodedBodyLength={encodedBodySize}\n                    decodedBodyLength={get(decodedBody, 'byteLength')}\n                    encodingTestResults={encodingTestResults}\n                />\n                <CompressionOptionsTips>{\n                    !!betterEncodingAvailable && <>\n                        <SuggestionIcon />\n                        This would be {\n                            Math.round(100 * (\n                                1 - (encodingTestResults[bestOtherEncoding!] / encodedBodySize)\n                            ))\n                        }% smaller { decodedBodySize !== encodedBodySize &&\n                            `(${\n                                Math.round(100 * (\n                                    1 - (encodingTestResults[bestOtherEncoding!] / decodedBodySize)\n                                ))\n                            }% total compression)`\n                        } with { bestOtherEncoding }{\n                            messageType === 'response' &&\n                            clientAcceptedEncodings &&\n                            !_.includes(clientAcceptedEncodings, bestOtherEncoding) &&\n                                ` (not supported by this client)`\n                        }.\n                    </>\n                }{\n                    !!decodedBodySize &&\n                    !betterEncodingAvailable &&\n                    decodedBodySize < encodedBodySize && <>\n                        <WarningIcon />\n                        This { messageType } would be smaller without compression.\n                    </>\n                }</CompressionOptionsTips>\n            </CompressionOptionsContainer>\n        </React.Fragment>\n    }) }</>;\n});\n\nconst CachingPerformance = observer((p: { exchange: HttpExchange }) => {\n    if (typeof p.exchange.response !== 'object') return null;\n\n    const cacheability = explainCacheability(p.exchange);\n\n    if (!cacheability) return null;\n\n    const cacheDetails = cacheability.cacheable ? [\n        cacheability,\n        explainCacheMatching(p.exchange)!,\n        explainValidCacheTypes(p.exchange)!,\n        explainCacheLifetime(p.exchange)!\n    ] : [\n        cacheability\n    ];\n\n    return <>\n        <ContentLabelBlock>\n            Caching\n        </ContentLabelBlock>\n        { cacheDetails.map((details, i) =>\n            <CollapsibleSection prefixTrigger={true} key={i}>\n                <CollapsibleSectionSummary>\n                    { details.summary }{' '}\n                    { details.type === 'warning' && <WarningIcon /> }\n                    { details.type === 'suggestion' && <SuggestionIcon /> }\n                </CollapsibleSectionSummary>\n                <CollapsibleSectionBody>\n                    <Markdown content={ details.explanation } />\n                </CollapsibleSectionBody>\n            </CollapsibleSection>\n        ) }\n    </>;\n});","import React from \"react\";\nimport { action, computed } from \"mobx\";\nimport { inject, observer } from \"mobx-react\";\nimport dedent from 'dedent';\n\nimport { HttpExchange } from '../../../types';\nimport { styled } from '../../../styles';\nimport { Icon } from '../../../icons';\nimport { logError } from '../../../errors';\n\nimport { AccountStore } from '../../../model/account/account-store';\nimport { UiStore } from '../../../model/ui/ui-store';\nimport {\n    exportHar,\n    generateCodeSnippet,\n    getCodeSnippetFormatKey,\n    getCodeSnippetFormatName,\n    getCodeSnippetOptionFromKey,\n    DEFAULT_SNIPPET_FORMAT_KEY,\n    snippetExportOptions,\n    SnippetOption\n} from '../../../model/ui/export';\n\nimport { ProHeaderPill, CardSalesPitch } from '../../account/pro-placeholders';\nimport {\n    CollapsibleCard,\n    CollapsibleCardProps,\n    CollapsibleCardHeading\n} from '../../common/card';\nimport { PillSelector, PillButton } from '../../common/pill';\nimport { CopyButtonPill } from '../../common/copy-button';\nimport { DocsLink } from '../../common/docs-link';\nimport { SelfSizedEditor } from '../../editor/base-editor';\n\ninterface ExportCardProps extends CollapsibleCardProps  {\n    exchange: HttpExchange;\n    accountStore?: AccountStore;\n    uiStore?: UiStore;\n}\n\nconst SnippetDescriptionContainer = styled.div`\n    p {\n        margin-bottom: 10px;\n    }\n`;\n\nconst SnippetDetailButtons = styled.div`\n    display: flex;\n    align-items: center;\n\n    gap: 10px;\n    margin-bottom: 10px;\n`;\n\nconst SnippetEditorContainer = styled.div`\n    margin: 0 -20px -20px -20px;\n    border-top: solid 1px ${p => p.theme.containerBorder};\n    background-color: ${p => p.theme.highlightBackground};\n    color: ${p => p.theme.highlightColor};\n`;\n\nconst snippetEditorOptions = {\n    readOnly: true,\n    hover: { enabled: false }\n};\n\nconst ExportSnippetEditor = observer((p: {\n    exchange: HttpExchange\n    exportOption: SnippetOption\n}) => {\n    const { target, client, link, description } = p.exportOption;\n\n    let snippet: string;\n    try {\n        snippet = generateCodeSnippet(p.exchange, p.exportOption);\n    } catch (e) {\n        console.log(`Failed to export request for ${target}--${client}`);\n        logError(e);\n        snippet = dedent`\n            Could not generate a snippet for this request\n\n            Is this unexpected? Please file a bug at github.com/httptoolkit/httptoolkit.\n        `;\n    }\n\n    return <>\n        <SnippetDescriptionContainer>\n            <p>\n                <strong>{\n                    getCodeSnippetFormatName(p.exportOption)\n                }</strong>: { description }\n            </p>\n            <SnippetDetailButtons>\n                <DocsLink href={link}>\n                    Find out more\n                </DocsLink>\n                <CopyButtonPill content={snippet}>\n                    {' '}Copy snippet\n                </CopyButtonPill>\n            </SnippetDetailButtons>\n        </SnippetDescriptionContainer>\n        <SnippetEditorContainer>\n            <SelfSizedEditor\n                contentId={null}\n                value={snippet}\n                language={\n                    ({\n                        'javascript': 'javascript',\n                        'node': 'javascript',\n                        'shell': 'shell',\n                    } as Record<string, string>)[target] || 'text'\n                }\n                options={snippetEditorOptions}\n            />\n        </SnippetEditorContainer>\n    </>;\n});\n\nconst ExportHarPill = styled(observer((p: {\n    className?: string,\n    exchange: HttpExchange\n}) =>\n    <PillButton\n        className={p.className}\n        onClick={() => exportHar(p.exchange)}\n        disabled={!p.exchange.response || p.exchange.response === 'aborted'}\n    >\n        <Icon icon={['fas', 'download']} /> Save as HAR\n    </PillButton>\n))`\n    margin-right: auto;\n`;\n\n@inject('accountStore')\n@inject('uiStore')\n@observer\nexport class HttpExportCard extends React.Component<ExportCardProps> {\n\n    render() {\n        const { exchange, accountStore } = this.props;\n        const { isPaidUser } = accountStore!;\n\n        return <CollapsibleCard {...this.props}>\n            <header>\n                { isPaidUser\n                    ? <ExportHarPill exchange={exchange} />\n                    : <ProHeaderPill />\n                }\n\n                <PillSelector<SnippetOption>\n                    onChange={this.setSnippetOption}\n                    value={this.snippetOption}\n                    optGroups={snippetExportOptions}\n                    keyFormatter={getCodeSnippetFormatKey}\n                    nameFormatter={getCodeSnippetFormatName}\n                />\n\n                <CollapsibleCardHeading onCollapseToggled={this.props.onCollapseToggled}>\n                    Export\n                </CollapsibleCardHeading>\n            </header>\n\n            { isPaidUser ?\n                <div>\n                    <ExportSnippetEditor\n                        exchange={exchange}\n                        exportOption={this.snippetOption}\n                    />\n                </div>\n            :\n                <CardSalesPitch source='export'>\n                    <p>\n                        Instantly export requests as code, for languages and tools including cURL, wget, JS\n                        (XHR, Node HTTP, Request, ...), Python (native or Requests), Ruby, Java (OkHttp\n                        or Unirest), Go, PHP, Swift, HTTPie, and a whole lot more.\n                    </p>\n                    <p>\n                        Want to save the exchange itself? Export one or all requests as HAR (the{' '}\n                        <a href=\"https://en.wikipedia.org/wiki/.har\">HTTP Archive Format</a>), to import\n                        and examine elsewhere, share with your team, or store for future reference.\n                    </p>\n                </CardSalesPitch>\n            }\n        </CollapsibleCard>;\n    }\n\n    @computed\n    private get snippetOption(): SnippetOption {\n        let exportSnippetFormat = this.props.uiStore!.exportSnippetFormat ||\n            DEFAULT_SNIPPET_FORMAT_KEY;\n        return getCodeSnippetOptionFromKey(exportSnippetFormat);\n    }\n\n    @action.bound\n    setSnippetOption(optionKey: string) {\n        this.props.uiStore!.exportSnippetFormat = optionKey;\n    }\n};","import { styled, css } from '../../styles';\n\nimport { MediumCard } from '../common/card';\nimport { Button, SecondaryButton } from '../common/inputs';\n\nexport const HeaderCard = styled(MediumCard)`\n    position: sticky;\n    top: -10px;\n    z-index: 2;\n\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: row;\n    align-items: center;\n    justify-content: flex-end;\n\n    flex-shrink: 0;\n`;\n\nconst HeaderButtonStyles = css`\n    padding: 10px 15px;\n    font-weight: bold;\n    font-size: ${p => p.theme.textSize};\n\n    margin: 10px 0 0 10px;\n    align-self: stretch;\n`;\n\nexport const HeaderText = styled.p`\n    width: 100%;\n    margin-bottom: 10px;\n    line-height: 1.3;\n\n    a[href] {\n        color: ${p => p.theme.linkColor};\n\n        &:visited {\n            color: ${p => p.theme.visitedLinkColor};\n        }\n    }\n`;\n\nexport const HeaderButton = styled(Button)`${HeaderButtonStyles}`;\nexport const SecondaryHeaderButton = styled(SecondaryButton)`${HeaderButtonStyles}`;","import * as React from 'react';\nimport * as semver from 'semver';\n\nimport { WarningIcon } from '../../../icons';\nimport { logError } from '../../../errors';\n\nimport {\n    desktopVersion,\n    versionSatisfies,\n    DESKTOP_HEADER_LIMIT_CONFIGURABLE\n} from '../../../services/service-versions';\n\nimport { unreachableCheck } from '../../../util/error';\nimport { clickOnEnter } from '../../component-utils';\nimport {\n    HeaderCard,\n    HeaderText,\n    HeaderButton\n} from '../header-card';\n\ntype ErrorType =\n    | 'untrusted'\n    | 'expired'\n    | 'not-yet-valid'\n    | 'wrong-host'\n    | 'tls-error'\n    | 'host-not-found'\n    | 'host-unreachable'\n    | 'dns-error'\n    | 'connection-refused'\n    | 'connection-reset'\n    | 'client-abort'\n    | 'server-timeout'\n    | 'client-timeout'\n    | 'invalid-http-version'\n    | 'invalid-method'\n    | 'client-unparseable-url'\n    | 'client-unparseable'\n    | 'server-unparseable'\n    | 'header-overflow'\n    | 'invalid-headers'\n    | 'unknown';\n\nexport function tagsToErrorType(tags: string[]): ErrorType | undefined {\n    if (\n        tags.includes(\"passthrough-error:SELF_SIGNED_CERT_IN_CHAIN\") ||\n        tags.includes(\"passthrough-error:DEPTH_ZERO_SELF_SIGNED_CERT\") ||\n        tags.includes(\"passthrough-error:UNABLE_TO_VERIFY_LEAF_SIGNATURE\") ||\n        tags.includes(\"passthrough-error:UNABLE_TO_GET_ISSUER_CERT_LOCALLY\")\n    ) {\n        return 'untrusted';\n    }\n\n    if (tags.includes(\"passthrough-error:CERT_HAS_EXPIRED\")) return 'expired';\n    if (tags.includes(\"passthrough-error:CERT_NOT_YET_VALID\")) return 'not-yet-valid';\n    if (tags.includes(\"passthrough-error:ERR_TLS_CERT_ALTNAME_INVALID\")) return 'wrong-host';\n\n    if (\n        tags.filter(t => t.startsWith(\"passthrough-tls-error:\")).length > 0 ||\n        tags.includes(\"passthrough-error:EPROTO\") ||\n        tags.includes(\"passthrough-error:ERR_SSL_WRONG_VERSION_NUMBER\") ||\n        tags.includes(\"passthrough-error:ERR_SSL_DECRYPTION_FAILED_OR_BAD_RECORD_MAC\") ||\n        tags.includes(\"passthrough-error:ERR_SSL_CIPHER_OPERATION_FAILED\") ||\n        tags.includes(\"passthrough-error:ERR_SSL_BAD_RECORD_TYPE\") ||\n        tags.includes(\"passthrough-error:ERR_SSL_INTERNAL_ERROR\")\n    ) {\n        return 'tls-error';\n    }\n\n    if (tags.includes(\"passthrough-error:ENOTFOUND\")) return 'host-not-found';\n    if (\n        tags.includes(\"passthrough-error:EHOSTUNREACH\") || // No known route to this host\n        tags.includes(\"passthrough-error:ENETUNREACH\") // Whole network is unreachable\n    ) return 'host-unreachable';\n    if (tags.includes(\"passthrough-error:EAI_AGAIN\")) return 'dns-error';\n    if (tags.includes(\"passthrough-error:ECONNREFUSED\")) return 'connection-refused';\n    if (tags.includes(\"passthrough-error:ECONNRESET\")) return 'connection-reset';\n    if (tags.includes(\"passthrough-error:ETIMEDOUT\")) return 'server-timeout';\n    if (\n        tags.includes(\"passthrough-error:HPE_INVALID_CONSTANT\") ||\n        tags.includes(\"passthrough-error:ERR_INVALID_HTTP_TOKEN\") ||\n        tags.includes(\"passthrough-error:ERR_HTTP_INVALID_STATUS_CODE\") ||\n        tags.includes(\"passthrough-error:ERR_INVALID_CHAR\")\n    ) {\n        return 'server-unparseable';\n    }\n\n    if (tags.includes(\"http-2\") || tags.includes(\"client-error:HPE_INVALID_VERSION\")) {\n        return 'invalid-http-version';\n    }\n\n    if (tags.includes(\"client-error:HPE_INVALID_METHOD\")) return 'invalid-method'; // QWE / HTTP/1.1\n    if (tags.includes(\"client-error:HPE_INVALID_URL\")) return 'client-unparseable-url'; // http://<unicode>\n    if (\n        tags.includes(\"client-error:HPE_INVALID_CONSTANT\") || // GET / HTTQ <- incorrect constant char\n        tags.includes(\"client-error:HPE_INVALID_EOF_STATE\") // Unexpected 0-length packet in parser\n    ) return 'client-unparseable'; // ABC/1.1\n    if (tags.includes(\"client-error:HPE_HEADER_OVERFLOW\")) return 'header-overflow'; // More than ~80KB of headers\n    if (\n        tags.includes(\"client-error:HPE_INVALID_CONTENT_LENGTH\") ||\n        tags.includes(\"client-error:HPE_INVALID_TRANSFER_ENCODING\") ||\n        tags.includes(\"client-error:HPE_INVALID_HEADER_TOKEN\") || // Invalid received (req or res) headers\n        tags.includes(\"client-error:HPE_UNEXPECTED_CONTENT_LENGTH\") || // T-E with C-L\n        tags.includes(\"passthrough-error:HPE_INVALID_HEADER_TOKEN\") // Invalid headers upstream, e.g. after breakpoint\n    ) return 'invalid-headers';\n\n    if (tags.includes(\"client-error:ERR_HTTP_REQUEST_TIMEOUT\")) return 'client-timeout';\n    if (\n        tags.includes(\"client-error:ECONNABORTED\") ||\n        tags.includes(\"client-error:EPIPE\")\n    ) return 'client-abort';\n\n    if (\n        tags.filter(t => t.startsWith(\"passthrough-error:\")).length > 0 ||\n        tags.filter(t => t.startsWith(\"client-error:\")).length > 0\n    ) {\n        logError(`Unrecognized error tag ${JSON.stringify(tags)}`);\n        return 'unknown';\n    }\n}\n\nfunction typeCheck<T extends string>(types: readonly T[]) {\n    return (type: string): type is T => types.includes(type as T);\n}\n\nconst isInitialRequestError = typeCheck([\n    'invalid-http-version',\n    'invalid-method',\n    'client-unparseable',\n    'client-unparseable-url',\n    'header-overflow',\n    'invalid-headers'\n]);\n\nconst isClientBug = typeCheck([\n    'client-unparseable',\n    'client-unparseable-url',\n    'invalid-headers'\n]);\n\nconst wasNotForwarded = typeCheck([\n    'untrusted',\n    'expired',\n    'not-yet-valid',\n    'wrong-host',\n    'tls-error',\n    'host-not-found',\n    'host-unreachable',\n    'dns-error',\n    'connection-refused'\n]);\n\nconst wasResponseIssue = typeCheck([\n    'server-unparseable',\n    'connection-reset'\n]);\n\nconst wasTimeout = typeCheck([\n    'client-timeout',\n    'server-timeout'\n]);\n\nconst isWhitelistable = typeCheck([\n    'untrusted',\n    'expired',\n    'not-yet-valid',\n    'wrong-host',\n    'tls-error'\n]);\n\nconst isMockable = typeCheck([\n    'host-not-found',\n    'host-unreachable',\n    'dns-error',\n    'connection-refused',\n    'connection-reset',\n    'server-timeout'\n]);\n\nexport const HttpErrorHeader = (p: {\n    isPaidUser: boolean,\n    type: ErrorType,\n    getPro: (source: string) => void,\n    navigate: (path: string) => void,\n    mockRequest: () => void,\n    ignoreError: () => void\n}) => {\n    const advancedHeaderOverflowSupported =\n        desktopVersion.state === 'fulfilled' &&\n        semver.valid(desktopVersion.value as string) &&\n        versionSatisfies(\n            desktopVersion.value as string,\n            DESKTOP_HEADER_LIMIT_CONFIGURABLE\n        );\n\n    return <HeaderCard>\n        <HeaderText>\n            <WarningIcon /> {\n                isInitialRequestError(p.type)\n                    ? <strong>This request could not be handled</strong>\n                : wasNotForwarded(p.type)\n                    ? <strong>This request was not forwarded successfully</strong>\n                : // Forwarded but failed later, or unknown:\n                    <strong>This exchange was not completed successfully</strong>\n            }\n        </HeaderText>\n\n        <HeaderText>\n            { isInitialRequestError(p.type)\n                ? <>\n                    The client's request {\n                        p.type === 'invalid-method'\n                            ? 'used an unsupported HTTP method'\n                        : p.type === 'invalid-http-version'\n                            ? 'used an unsupported HTTP version'\n                        : p.type === 'invalid-headers'\n                            ? 'included an invalid or unparseable header'\n                        : p.type === 'client-unparseable-url'\n                            ? 'included an unparseable URL'\n                        : p.type === 'header-overflow'\n                            ? 'headers were too large to be processed'\n                        : p.type === 'client-unparseable'\n                            ? 'could not be parsed'\n                        : unreachableCheck(p.type)\n                    }, so HTTP Toolkit did not handle this request.\n                </>\n            : wasNotForwarded(p.type)\n                ? <>\n                    The upstream server {\n                        p.type === 'wrong-host'\n                            ? 'responded with an HTTPS certificate for the wrong hostname'\n                        : p.type === 'expired'\n                            ? 'has an expired HTTPS certificate'\n                        : p.type === 'not-yet-valid'\n                            ? 'has an HTTPS certificate with a start date in the future'\n                        : p.type === 'untrusted'\n                            ? 'has an untrusted HTTPS certificate'\n                        : p.type === 'tls-error'\n                            ? 'failed to complete a TLS handshake'\n                        : p.type === 'host-unreachable'\n                            ? 'was not reachable on your network connection'\n                        : p.type === 'host-not-found' || p.type === 'dns-error'\n                            ? 'hostname could be not found'\n                        : p.type === 'connection-refused'\n                            ? 'refused the connection'\n                        : unreachableCheck(p.type)\n                    }, so HTTP Toolkit did not forward the request.\n                </>\n            : wasTimeout(p.type)\n                ? <>\n                    The request timed out {\n                        p.type === 'client-timeout'\n                            ? 'waiting for the client to send the complete request'\n                        : p.type === 'server-timeout'\n                            ? 'waiting for a response from the server'\n                        : unreachableCheck(p.type)\n                    }\n                </>\n            : p.type === 'client-abort'\n                ? <>\n                    The client unexpectedly disconnected during the request, so\n                    the response could not be completed.\n                </>\n            : wasResponseIssue(p.type)\n                ? <>\n                    The upstream request failed because {\n                        p.type === 'connection-reset'\n                            ? 'the connection to the server was reset'\n                        : p.type === 'server-unparseable'\n                            ? 'the response from the server was unparseable'\n                        : unreachableCheck(p.type)\n                    }, so HTTP Toolkit could not return a response to the client.\n                </>\n            : p.type === 'unknown'\n                ? <>\n                    The request failed because of an unknown error,\n                    so HTTP Toolkit could not return a response.\n                </>\n            : unreachableCheck(p.type)\n        }\n        </HeaderText>\n\n        { p.type === 'tls-error'\n            ? <>\n                <HeaderText>\n                    This could be caused by the server not supporting modern cipher\n                    standards or TLS versions, requiring a client certificate that hasn't\n                    been provided, or other TLS configuration issues.\n                </HeaderText>\n                <HeaderText>\n                    { p.isPaidUser\n                        ? <>\n                            From the Settings page you can configure client certificates, or\n                            whitelist this host to relax HTTPS requirements and allow\n                            self-signed certificates, which may resolve some TLS issues.\n                        </>\n                        : <>\n                            Pro users can relax HTTPS requirements for configured hosts to\n                            accept older TLS configurations and self-signed/invalid certificates, and\n                            configure per-host client certificates for authentication.\n                        </>\n                    }\n                </HeaderText>\n            </>\n        : p.type === 'host-not-found'\n            ? <>\n                <HeaderText>\n                    This typically means the host doesn't exist, although it\n                    could be an issue with your DNS or network configuration.\n                </HeaderText>\n                <HeaderText>\n                    You can define mock responses for requests like this from the\n                    Mock page, to return fake data even for servers and hostnames\n                    that don't exist.\n                </HeaderText>\n            </>\n        : p.type === 'host-unreachable'\n            ? <>\n                <HeaderText>\n                    This is typically an issue with your network connection or the\n                    host's DNS records.\n                </HeaderText>\n                <HeaderText>\n                    You can define mock responses for requests like this from the\n                    Mock page, to return fake data even for servers and hostnames\n                    that aren't accessible.\n                </HeaderText>\n            </>\n        : p.type === 'dns-error'\n            ? <>\n                <HeaderText>\n                    The DNS server hit an unknown error looking up this hostname.\n                    This is likely due to a issue in your DNS configuration or network\n                    connectivity, and may just be a temporary issue.\n                </HeaderText>\n                <HeaderText>\n                    You can define mock responses for requests like this from the\n                    Mock page, to return fake data even for servers and hostnames\n                    that don't exist or aren't accessible.\n                </HeaderText>\n            </>\n        : p.type === 'untrusted'\n            ? <HeaderText>\n                By default unrecognized certificate authorities (CAs) are only accepted for localhost servers, but {\n                    p.isPaidUser\n                        ? 'additional CAs can be trusted from the Settings page.'\n                        : 'Pro users can trust additional CAs or disable HTTPS validation for a host entirely.'\n                }\n            </HeaderText>\n        : isWhitelistable(p.type)\n            ? <HeaderText>\n                By default this is only allowed for localhost servers, but {\n                    p.isPaidUser\n                        ? 'other hosts can be added to the whitelist from the Settings page.'\n                        : 'Pro users can whitelist other custom hosts.'\n                }\n            </HeaderText>\n        : p.type === 'connection-refused'\n            ? <HeaderText>\n                This typically means the server isn't running on the port you're using, though\n                it is possible this is an intermittent connection issue. You can either try\n                again, or mock requests like this to avoid sending them upstream at all.\n            </HeaderText>\n        : p.type === 'connection-reset'\n            ? <HeaderText>\n                This could be due to a connection issue, or an issue with the server.\n                This may be an intermittent issue that will be solved by retrying the request, or\n                you can mock requests like this to avoid sending them upstream at all.\n            </HeaderText>\n        : p.type === 'client-abort'\n            ? <HeaderText>\n                This could be due to connection issues, problems within the client, or that\n                the client simply no longer wanted to receive the response and closed the\n                connection intentionally.\n            </HeaderText>\n        : p.type === 'client-timeout'\n            ? <HeaderText>\n                This could be due to connection issues, problems within the client, or delays\n                generating the complete body of the request. This might be resolved by retrying\n                the request, or sending a simpler request with a smaller or easier to generate body.\n            </HeaderText>\n        : p.type === 'server-timeout'\n            ? <HeaderText>\n                This could be due to connection issues, problems within the server, or issues\n                with handling this request specifically. This might be resolved by retrying\n                the request, or you can mock requests like this to avoid sending them upstream\n                at all.\n            </HeaderText>\n        : isClientBug(p.type)\n            ? <HeaderText>\n                This means the client sent HTTP Toolkit some fundamentally invalid data that does\n                not follow the HTTP spec. That suggests either a major bug in the client, or that\n                they're not sending HTTP at all.\n            </HeaderText>\n        : p.type === 'server-unparseable'\n            ? <HeaderText>\n                This means the server sent HTTP Toolkit some fundamentally invalid data that does\n                not follow the HTTP spec. That suggests either a major bug in the server, or that\n                they're not sending HTTP at all.\n            </HeaderText>\n        : p.type === 'header-overflow'\n            ? <HeaderText>\n                { desktopVersion.value && advancedHeaderOverflowSupported\n                    ? <>\n                        This means the request included more than 100KB of headers. The HTTP specification\n                        doesn't set a max length, but most servers will refuse to process anything longer\n                        than 8KB. This is likely an issue with your client, but if necessary you can increase\n                        the HTTP Toolkit limit by setting <code>max-http-header-size</code> using the <code>HTTPTOOLKIT_NODE_OPTIONS</code> environment variable.\n                    </>\n                : desktopVersion.value // Old desktop:\n                    ? <>\n                        In more recent HTTP Toolkit versions the built-in limit has been increased, so please\n                        update HTTP Toolkit to handle requests like these.\n                    </>\n                : // Non-desktop use:\n                    <>\n                        The HTTP specification doesn't set a max length for HTTP headers, but most\n                        servers will refuse to process anything longer than 8KB.\n                    </>\n                }\n            </HeaderText>\n        : p.type === 'invalid-method'\n            ? <HeaderText>\n                Because this method is unrecognized, HTTP Toolkit doesn't know how it should\n                be handled, and cannot safely forward it on elsewhere. If you think this\n                method should be supported, please <a\n                    href='https://github.com/httptoolkit/httptoolkit/issues/new'\n                >\n                    get in touch\n                </a>.\n            </HeaderText>\n        : p.type === 'invalid-http-version'\n            ? <HeaderText>\n                The client may be using a newer or experimental HTTP version that HTTP\n                Toolkit doesn't yet support. If you think this version should be supported,\n                please <a\n                    href='https://github.com/httptoolkit/httptoolkit/issues/new'\n                >\n                    get in touch\n                </a>.\n            </HeaderText>\n        : p.type === 'unknown'\n            ? <HeaderText>\n                It's not clear what's gone wrong here, but for some reason HTTP Toolkit\n                couldn't successfully and/or securely complete this request.\n                This might be an intermittent issue, and may be resolved by retrying\n                the request.\n            </HeaderText>\n        : unreachableCheck(p.type)}\n\n        { isInitialRequestError(p.type) && <HeaderText>\n            The data shown below is a best guess from the data that was available\n            and parseable, and may be incomplete or inaccurate.\n        </HeaderText> }\n\n        <HeaderButton onClick={p.ignoreError} onKeyPress={clickOnEnter}>\n            Ignore\n        </HeaderButton>\n\n        { isMockable(p.type)\n            ? <HeaderButton onClick={p.mockRequest} onKeyPress={clickOnEnter}>\n                Mock requests like this\n            </HeaderButton>\n        : isWhitelistable(p.type)\n            ? (p.isPaidUser\n                ? <HeaderButton onClick={() => p.navigate('/settings')} onKeyPress={clickOnEnter}>\n                    Go to Settings\n                </HeaderButton>\n                : <HeaderButton\n                    onClick={() => p.getPro(`error-header-${p.type}`)}\n                    onKeyPress={clickOnEnter}\n                >\n                    Get Pro\n                </HeaderButton>\n            )\n        : null }\n\n    </HeaderCard>;\n};","import * as React from 'react';\nimport { action, runInAction } from 'mobx';\nimport { observer, inject } from 'mobx-react';\n\nimport { CollectedEvent } from '../../../types';\nimport { styled, css } from '../../../styles';\nimport { Ctrl } from '../../../util/ui';\n\nimport { HttpExchange } from '../../../model/http/exchange';\nimport { RulesStore } from '../../../model/rules/rules-store';\nimport { buildRuleFromExchange } from '../../../model/rules/rule-creation';\n\nimport { HEADER_FOOTER_HEIGHT } from '../view-event-list-footer';\nimport { IconButton } from '../../common/icon-button';\n\nconst ButtonsContainer = styled.div`\n    height: ${HEADER_FOOTER_HEIGHT}px;\n    flex-shrink: 0;\n    width: 100%;\n    padding-left: 5px;\n    box-sizing: border-box;\n\n    background-color: ${p => p.theme.mainBackground};\n\n    display: flex;\n\n    align-items: center;\n    justify-content: center;\n\n    z-index: 1;\n    box-shadow: 0 -10px 30px -5px rgba(0,0,0,${p => p.theme.boxShadowAlpha});\n`;\n\nconst ScrollToButton = observer((p: {\n    onClick: () => void\n}) => <IconButton\n    icon={['fas', 'eye']}\n    title={'Scroll the list to show this exchange'}\n    onClick={p.onClick}\n/>);\n\nconst PinButton = styled(observer((p: {\n    className?: string,\n    pinned: boolean,\n    onClick: () => void\n}) => <IconButton\n    className={p.className}\n    icon={['fas', 'thumbtack']}\n    title={\n        (\n            p.pinned\n            ? \"Unpin this exchange so it can be deleted\"\n            : \"Pin this exchange, so it can't be deleted\"\n        ) + ` (${Ctrl}+P)`\n    }\n    onClick={p.onClick}\n/>))`\n    transition: transform 0.1s;\n\n    ${p => !p.pinned && css`\n        transform: rotate(45deg);\n    `}\n`;\n\nconst DeleteButton = observer((p: {\n    pinned: boolean,\n    onClick: () => void\n}) => <IconButton\n    icon={['far', 'trash-alt']}\n    title={`Delete this exchange (${Ctrl}+Delete)`}\n    onClick={p.onClick}\n/>);\n\nconst MockButton = observer((p: {\n    isExchange: boolean,\n    isPaidUser: boolean,\n    onClick: () => void\n}) => <IconButton\n    icon={['fas', 'theater-masks']}\n    onClick={p.onClick}\n    title={\n        p.isPaidUser\n            ? 'Create a mock rule from this exchange'\n            : 'With Pro: create a mock rule from this exchange'\n    }\n    disabled={!p.isExchange || !p.isPaidUser}\n/>);\n\nexport const HttpDetailsFooter = inject('rulesStore')(\n    observer(\n        (props: {\n            rulesStore?: RulesStore,\n\n            event: CollectedEvent,\n            onDelete: (event: CollectedEvent) => void,\n            onScrollToEvent: (event: CollectedEvent) => void,\n            onBuildRuleFromExchange: (event: HttpExchange) => void,\n            isPaidUser: boolean,\n            navigate: (url: string) => void\n        }) => {\n            const { event } = props;\n            const { pinned } = event;\n\n            return <ButtonsContainer>\n                <ScrollToButton\n                    onClick={() => props.onScrollToEvent(props.event)}\n                />\n                <PinButton\n                    pinned={pinned}\n                    onClick={action(() => {\n                        event.pinned = !event.pinned;\n                    })}\n                />\n                <DeleteButton\n                    pinned={pinned}\n                    onClick={() => props.onDelete(event)}\n                />\n                <MockButton\n                    isExchange={event.isHttp()}\n                    isPaidUser={props.isPaidUser}\n                    onClick={() => props.onBuildRuleFromExchange(props.event as HttpExchange)}\n                />\n            </ButtonsContainer>;\n        }\n    )\n);","import * as React from 'react';\n\nimport { WarningIcon } from '../../../icons';\n\nimport { versionSatisfies, serverVersion, CLOSE_IN_BREAKPOINT } from '../../../services/service-versions';\n\nimport { clickOnEnter } from '../../component-utils';\nimport {\n    HeaderCard,\n    HeaderText,\n    HeaderButton,\n    SecondaryHeaderButton\n} from '../header-card';\n\nexport const HttpRequestBreakpointHeader = (p: {\n    onResume: () => void,\n    onCreateResponse: () => void,\n    onClose: () => void\n}) =>\n    <HeaderCard>\n        <HeaderText>\n            <WarningIcon /> <strong>This request is paused at a breakpoint</strong>\n        </HeaderText>\n        <HeaderText>\n            {\n                versionSatisfies(serverVersion.value as string, CLOSE_IN_BREAKPOINT)\n                ? <>\n                    Edit the request and then resume to let your edited request continue to the target URL,\n                    respond directly to provide a response yourself, or close to immediately end the connection.\n                </>\n                : <>\n                    Respond directly to provide a response yourself, or edit the request as you'd like\n                    and then resume to let your edited request continue to the target URL.\n                </>\n            }\n        </HeaderText>\n\n        <SecondaryHeaderButton onClick={p.onCreateResponse} onKeyPress={clickOnEnter}>\n            Respond directly\n        </SecondaryHeaderButton>\n\n        { versionSatisfies(serverVersion.value as string, CLOSE_IN_BREAKPOINT)\n            ? <SecondaryHeaderButton onClick={p.onClose} onKeyPress={clickOnEnter}>\n                Close\n            </SecondaryHeaderButton>\n            : null\n        }\n\n        <HeaderButton onClick={p.onResume} onKeyPress={clickOnEnter}>\n            Resume\n        </HeaderButton>\n    </HeaderCard>;\n\nexport const HttpResponseBreakpointHeader = (p: {\n    onResume: () => void,\n    onClose: () => void\n}) =>\n    <HeaderCard>\n        <HeaderText>\n            <WarningIcon /> <strong>This response is paused at a breakpoint</strong>\n        </HeaderText>\n        <HeaderText>\n            {\n                versionSatisfies(serverVersion.value as string, CLOSE_IN_BREAKPOINT)\n                ? <>\n                    Edit it as you'd like and resume to let the edited response continue back to the client,\n                    or close to immediately end the connection.\n                </>\n                : <>\n                    Edit it as you'd like, then resume to let the edited response continue back to the client.\n                </>\n            }\n        </HeaderText>\n\n        { versionSatisfies(serverVersion.value as string, CLOSE_IN_BREAKPOINT)\n            ? <SecondaryHeaderButton onClick={p.onClose} onKeyPress={clickOnEnter}>\n                Close\n            </SecondaryHeaderButton>\n            : null\n        }\n\n        <HeaderButton onClick={p.onResume} onKeyPress={clickOnEnter}>\n            Resume\n        </HeaderButton>\n    </HeaderCard>;","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { action, observable, reaction, runInAction } from 'mobx';\nimport { disposeOnUnmount, observer } from 'mobx-react';\n\nimport { RawHeaders } from '../../types';\nimport { HEADER_NAME_PATTERN } from '../../util/headers';\n\nimport { EditablePairs, PairsArray } from './editable-pairs';\n\nconst tupleArrayToPairsArray = (headers: RawHeaders): PairsArray =>\n    headers.map(([key, value]) => ({ key, value }));\n\nconst withH2HeadersDisabled = (headers: PairsArray): PairsArray =>\n    headers.map(({ key, value }) =>\n        key.startsWith(':')\n        ? { key, value, disabled: true }\n        : { key, value }\n    );\n\nconst rawHeadersAsEditablePairs = (rawHeaders: RawHeaders) => {\n    return withH2HeadersDisabled(tupleArrayToPairsArray(rawHeaders));\n};\n\nconst outputToRawHeaders = (output: PairsArray): RawHeaders =>\n    output.map(({ key, value }) => [key, value]);\n\nconst stripPseudoHeaders = (headers: PairsArray): PairsArray =>\n    // Strip leading colons - HTTP/2 headers should never be entered raw (but don't lower case)\n    headers.map(({ key, value, disabled }) => ({\n        key: !disabled && key.startsWith(':')\n            ? key.slice(1)\n            : key,\n        value,\n        disabled\n    }));\n\nconst stripPseudoHeadersAndLowercase = (headers: PairsArray): PairsArray =>\n    // Lowercase header keys, and strip any leading colons - HTTP/2 headers should never be entered raw\n    headers.map(({ key, value, disabled }) => ({\n        key: !disabled && key.startsWith(':')\n            ? key.slice(1).toLowerCase()\n            : key.toLowerCase(),\n        value,\n        disabled\n    }));\n\ninterface EditableRawHeadersProps {\n    headers: RawHeaders;\n    onChange: (headers: RawHeaders) => void;\n\n    // It's unclear whether you're strictly allowed completely empty header values, but it's definitely\n    // not recommended and poorly supported. By default we disable it except for special use cases.\n    allowEmptyValues?: boolean;\n\n    // By default, we lowercase headers. This isn't strictly required, but it's generally clearer,\n    // simpler, and semantically meaningless. HTTP/2 is actually even forced lowercase on the wire.\n    // Nonetheless, sometimes (breakpoints) you want to ignore that and edit with case regardless\n    // because the real raw headers have existing cases and otherwise it's weird:\n    preserveKeyCase?: boolean;\n}\n\nexport const EditableRawHeaders = observer((\n    props: EditableRawHeadersProps\n) => {\n    const { headers, onChange, allowEmptyValues, preserveKeyCase } = props;\n\n    return <EditablePairs<RawHeaders>\n        pairs={rawHeadersAsEditablePairs(headers)}\n        onChange={onChange}\n        transformInput={\n            preserveKeyCase\n            ? stripPseudoHeaders\n            : stripPseudoHeadersAndLowercase\n        }\n        convertResult={outputToRawHeaders}\n\n        allowEmptyValues={allowEmptyValues}\n\n        keyPattern={HEADER_NAME_PATTERN}\n        keyTitle=\"Header names must contain only alphanumeric characters and !#$%&'*+-.^_`|~ symbols\"\n\n        keyPlaceholder='Header name'\n        valuePlaceholder='Header value'\n    />;\n});\n\ninterface EditableHeadersProps<T> {\n    headers: T;\n\n    convertToRawHeaders: (input: T) => RawHeaders;\n    convertFromRawHeaders: (headers: RawHeaders) => T;\n\n    onChange: (headers: T) => void;\n    onInvalidState?: () => void;\n\n    // It's unclear whether you're strictly allowed completely empty header values, but it's definitely\n    // not recommended and poorly supported. By default we disable it except for special use cases.\n    allowEmptyValues?: boolean;\n}\n\n// Editable headers acts as a wrapper around the raw header pair modification, converting to and from other\n// formats (most commonly header objects, rather than arrays) whilst avoiding unnecessary updates that\n// cause churn in the UI due to unrepresentable states in that format (e.g. duplicate headers that aren't\n// directly next to each other). This allows you to edit as if the data was in raw header format, but\n// get different data live as it changes, without collapsing to that state until later.\n@observer\nexport class EditableHeaders<T> extends React.Component<EditableHeadersProps<T>> {\n\n    @observable\n    private rawHeaders: RawHeaders = this.props.convertToRawHeaders(this.props.headers);\n\n    private output: T = this.props.headers;\n\n    componentDidMount() {\n        // Watch the input, but only update our state if its materially different\n        // to the last output we returned.\n        disposeOnUnmount(this, reaction(\n            () => this.props.headers,\n            (input) => {\n                if (!_.isEqual(input, this.output)) {\n                    const newInput = this.props.convertToRawHeaders(input);\n                    runInAction(() => {\n                        this.rawHeaders = newInput;\n                    });\n                }\n            }\n        ));\n    }\n\n    @action.bound\n    onChangeRawHeaders(rawHeaders: RawHeaders) {\n        this.rawHeaders = rawHeaders;\n\n        const { allowEmptyValues, convertFromRawHeaders, onChange, onInvalidState } = this.props;\n\n        if (allowEmptyValues) {\n            this.output = convertFromRawHeaders(rawHeaders);\n            onChange(this.output);\n        } else {\n            if (rawHeaders.some((([_, value]) => !value))) return onInvalidState?.();\n            if (rawHeaders.some(([key]) => !key)) return onInvalidState?.();\n\n            this.output = convertFromRawHeaders(rawHeaders);\n            onChange(this.output);\n        }\n    }\n\n    render() {\n        const { allowEmptyValues } = this.props;\n        const { rawHeaders, onChangeRawHeaders } = this;\n\n        return <EditableRawHeaders\n            headers={rawHeaders}\n            onChange={onChangeRawHeaders}\n            allowEmptyValues={allowEmptyValues}\n        />;\n    }\n\n}","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { action, computed } from 'mobx';\nimport { observer } from 'mobx-react';\nimport { Method } from 'mockttp';\n\nimport { BreakpointRequestResult, HttpExchange, RawHeaders } from '../../../types';\nimport { styled } from '../../../styles';\n\nimport { getSummaryColour } from '../../../model/events/categorization';\nimport { withHeaderValue } from '../../../util/headers';\n\nimport {\n    CollapsibleCardHeading,\n    CollapsibleCard,\n    CollapsibleCardProps,\n} from '../../common/card';\nimport { Pill } from '../../common/pill';\nimport { ContentLabelBlock, ContentLabel } from '../../common/text-content';\nimport { EditableRawHeaders } from '../../common/editable-headers';\nimport { TextInput, Select } from '../../common/inputs';\nimport { SourceIcon } from '../../common/source-icon';\n\ninterface RequestBreakpointCardProps extends CollapsibleCardProps {\n    exchange: HttpExchange;\n    onChange: (request: Partial<BreakpointRequestResult>) => void;\n}\n\nconst UrlInput = styled(TextInput)`\n    width: 100%;\n    box-sizing: border-box;\n    margin-bottom: 10px;\n`;\n\ntype MethodName = keyof typeof Method;\nconst validMethods = Object.values(Method)\n    .filter(\n        value => typeof value === 'string'\n    ) as Array<MethodName>;\n\nconst MethodSelect = styled(Select)`\n    font-size: ${p => p.theme.textSize};\n    display: inline-block;\n\n    width: auto;\n    margin-left: 8px;\n    margin-bottom: 5px;\n`;\n\n@observer\nexport class HttpBreakpointRequestCard extends React.Component<RequestBreakpointCardProps> {\n\n    render() {\n        const { exchange, onChange, ...cardProps } = this.props;\n        const { request } = exchange;\n\n        const { inProgressResult } = this.props.exchange.requestBreakpoint!;\n        const headers = inProgressResult.rawHeaders || [];\n        const { method, url } = inProgressResult;\n\n        return <CollapsibleCard {...cardProps} direction='right'>\n            <header>\n                <SourceIcon source={request.source} />\n                <Pill color={getSummaryColour(exchange)}>\n                    { method } {\n                        (request.hostname || '')\n                        // Add some tiny spaces to split up parts of the hostname\n                        .replace(/\\./g, '\\u2008.\\u2008')\n                    }\n                </Pill>\n                <CollapsibleCardHeading onCollapseToggled={cardProps.onCollapseToggled}>\n                    Request\n                </CollapsibleCardHeading>\n            </header>\n\n            <div>\n                <ContentLabel>Method:</ContentLabel>\n                <MethodSelect value={method} onChange={this.onMethodChanged}>\n                    { !validMethods.includes(method as MethodName) &&\n                        <option key={method} value={undefined}>\n                            { method }\n                        </option>\n                    }\n                    { validMethods.map((methodOption) =>\n                        <option\n                            key={methodOption}\n                            value={methodOption}\n                        >\n                            { methodOption }\n                        </option>\n                    ) }\n                </MethodSelect>\n            </div>\n\n            <ContentLabelBlock>URL</ContentLabelBlock>\n            <UrlInput value={url} onChange={this.onUrlChanged} />\n\n            <ContentLabelBlock>Headers</ContentLabelBlock>\n            <EditableRawHeaders\n                headers={headers}\n                onChange={this.onHeadersChanged}\n                preserveKeyCase={true}\n            />\n        </CollapsibleCard>;\n    }\n\n    @computed\n    get isHttp2() {\n        return this.props.exchange.httpVersion === 2;\n    }\n\n    @action.bound\n    onMethodChanged(event: React.ChangeEvent<HTMLSelectElement>) {\n        const method = event.target.value;\n        const { inProgressResult } = this.props.exchange.requestBreakpoint!;\n\n        if (method === inProgressResult.method) return;\n\n        if (this.isHttp2) {\n            this.props.onChange({\n                method,\n                rawHeaders: withHeaderValue(inProgressResult.rawHeaders, { ':method': method })\n            });\n        } else {\n            this.props.onChange({ method });\n        }\n    }\n\n    @action.bound\n    onUrlChanged(event: React.ChangeEvent<HTMLInputElement>) {\n        const url = event.target.value;\n        const { inProgressResult } = this.props.exchange.requestBreakpoint!;\n\n        let rawHeaders = inProgressResult.rawHeaders;\n\n        try {\n            // Automatically update the host/H2 headers to match, if we can:\n            const parsedUrl = new URL(url);\n\n            if (this.isHttp2) {\n                rawHeaders = withHeaderValue(rawHeaders, {\n                    ':authority': parsedUrl.host,\n                    ':path': parsedUrl.pathname + parsedUrl.search,\n                    ':scheme':  parsedUrl.protocol.slice(0, -1)\n                });\n            } else {\n                rawHeaders = withHeaderValue(rawHeaders, { host: parsedUrl.host });\n            }\n        } catch (e) { }\n\n        this.props.onChange({ url: event.target.value, rawHeaders });\n    }\n\n    @action.bound\n    onHeadersChanged(rawHeaders: RawHeaders) {\n        this.props.onChange({ rawHeaders });\n    }\n\n}","import * as _ from 'lodash';\nimport * as React from 'react';\n\nimport { styled } from '../../styles';\n\nimport { TextInput } from './inputs';\nimport { getStatusMessage } from '../../model/http/http-docs';\n\nconst StatusContainer = styled.div`\n    margin-top: 5px;\n\n    display: flex;\n    flex-direction: row;\n    align-items: stretch;\n\n    > :not(:last-child) {\n        margin-right: 5px;\n    }\n\n    > :last-child {\n        flex-grow: 1;\n    }\n`;\n\nfunction isDefaultMessage(statusMessage: string, statusCode: number | undefined) {\n    return statusMessage.toLowerCase() === getStatusMessage(statusCode).toLowerCase()\n}\n\nexport const EditableStatus = (props: {\n    className?: string,\n    httpVersion: 1 | 2,\n    statusCode: number | undefined,\n    statusMessage: string | undefined,\n    onChange: (statusCode: number | undefined, statusMessage: string | undefined) => void\n}) => {\n    const { statusCode } = props;\n\n    // Undefined status message = use default. Note that the status\n    // message can still be shown as _empty_, just not undefined.\n    const statusMessage = props.statusMessage === undefined || props.httpVersion === 2\n        ? getStatusMessage(statusCode)\n        : props.statusMessage;\n\n    return <StatusContainer className={props.className}>\n        <TextInput\n            type='number'\n            min='100'\n            max='999'\n            invalid={!statusCode}\n            value={statusCode}\n            onChange={(event) => {\n                let newStatusCode = (event.target.value !== '')\n                    ? parseInt(event.target.value, 10)\n                    : undefined;\n\n                if (_.isNaN(newStatusCode)) return;\n\n                // If the status message was the default message, update it to\n                // match the new status code\n                const newStatusMessage = isDefaultMessage(statusMessage, statusCode)\n                    ? undefined\n                    : props.statusMessage;\n\n                props.onChange(newStatusCode, newStatusMessage);\n            }}\n        />\n\n        <TextInput\n            disabled={props.httpVersion === 2}\n            value={statusMessage}\n            onChange={(event) => {\n                let newMessage: string | undefined = event.target.value;\n\n                if (isDefaultMessage(newMessage, statusCode)) {\n                    newMessage = undefined;\n                }\n\n                props.onChange(statusCode, newMessage);\n            }}\n        />\n    </StatusContainer>;\n}","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { action } from 'mobx';\nimport { observer } from 'mobx-react';\n\nimport { BreakpointResponseResult, HttpExchange, RawHeaders } from '../../../types';\nimport { styled, Theme } from '../../../styles';\n\nimport { getStatusColor } from '../../../model/events/categorization';\nimport { withHeaderValue } from '../../../util/headers';\n\nimport {\n    CollapsibleCardHeading,\n    CollapsibleCard,\n    CollapsibleCardProps,\n} from '../../common/card';\nimport { Pill } from '../../common/pill';\nimport { ContentLabelBlock, ContentLabel } from '../../common/text-content';\nimport { EditableRawHeaders } from '../../common/editable-headers';\nimport { EditableStatus } from '../../common/editable-status';\n\ninterface ResponseBreakpointCardProps extends CollapsibleCardProps {\n    theme: Theme;\n    exchange: HttpExchange;\n    onChange: (response: Partial<BreakpointResponseResult>) => void;\n}\n\nconst StatusContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: baseline;\n`;\n\nconst InlineEditableStatus = styled(EditableStatus)`\n    margin-left: 10px;\n    margin-bottom: 5px;\n    flex-basis: 100%;\n`;\n\n@observer\nexport class HttpBreakpointResponseCard extends React.Component<ResponseBreakpointCardProps> {\n\n    render() {\n        const { exchange, onChange, theme, ...cardProps } = this.props;\n\n        const { inProgressResult } = exchange.responseBreakpoint!;\n        const headers = inProgressResult.rawHeaders || [];\n        const { statusCode, statusMessage } = inProgressResult;\n\n        return <CollapsibleCard {...cardProps} direction='left'>\n            <header>\n                <Pill color={getStatusColor(inProgressResult.statusCode, theme!)}>{ statusCode }</Pill>\n                <CollapsibleCardHeading onCollapseToggled={cardProps.onCollapseToggled}>\n                    Response\n                </CollapsibleCardHeading>\n            </header>\n\n            <StatusContainer>\n                <ContentLabel>Status:</ContentLabel>\n                <InlineEditableStatus\n                    httpVersion={exchange.httpVersion}\n                    statusCode={statusCode}\n                    statusMessage={statusMessage}\n                    onChange={this.onStatusChange}\n                />\n            </StatusContainer>\n\n            <ContentLabelBlock>Headers</ContentLabelBlock>\n            <EditableRawHeaders\n                headers={headers}\n                onChange={this.onHeadersChanged}\n                preserveKeyCase={true}\n            />\n        </CollapsibleCard>;\n    }\n\n    @action.bound\n    onHeadersChanged(rawHeaders: RawHeaders) {\n        this.props.onChange({ rawHeaders });\n    }\n\n    @action.bound\n    onStatusChange(statusCode: number | undefined, statusMessage: string | undefined) {\n        if (this.props.exchange.httpVersion === 2) {\n            const { rawHeaders } = this.props.exchange.responseBreakpoint!.inProgressResult;\n            this.props.onChange({\n                statusCode: statusCode || NaN,\n                statusMessage,\n                rawHeaders: withHeaderValue(rawHeaders, {\n                    ':status': statusCode?.toString() ?? ''\n                })\n            });\n        } else {\n            this.props.onChange({ statusCode: statusCode || NaN, statusMessage });\n        }\n    }\n\n}","import * as React from 'react';\nimport { observable, action, reaction, computed } from 'mobx';\nimport { observer, disposeOnUnmount } from 'mobx-react';\nimport * as portals from 'react-reverse-portal';\n\nimport { RawHeaders } from '../../../types';\nimport {\n    isProbablyUtf8,\n    bufferToString,\n    stringToBuffer\n} from '../../../util';\nimport { getHeaderValue } from '../../../util/headers';\nimport {\n    EditableContentType,\n    EditableContentTypes,\n    getEditableContentType\n} from '../../../model/events/content-types';\n\nimport { CollapsibleCard, ExpandableCardProps } from '../../common/card';\nimport { SelfSizedEditor } from '../../editor/base-editor';\nimport { EditableBodyCardHeader, EditorCardContent } from '../../editor/body-card-components';\n\n@observer\nexport class HttpBreakpointBodyCard extends React.Component<ExpandableCardProps & {\n    title: string,\n    direction: 'left' | 'right',\n\n    exchangeId: string,\n    body: Buffer,\n    rawHeaders: RawHeaders,\n    onChange: (result: Buffer) => void,\n    editorNode: portals.HtmlPortalNode<typeof SelfSizedEditor>;\n}> {\n\n    @observable\n    private contentType: EditableContentType = 'text';\n\n    @action.bound\n    onChangeContentType(value: string) {\n        this.contentType = value as EditableContentType;\n    }\n\n    componentDidMount() {\n        // If the content header is changed (manually, or when switching requests), update the\n        // selected editor content type to match:\n        disposeOnUnmount(this, reaction(\n            () => getHeaderValue(this.props.rawHeaders, 'content-type'),\n            (contentTypeHeader) => {\n                this.contentType = getEditableContentType(contentTypeHeader) || 'text';\n            },\n            { fireImmediately: true }\n        ));\n    }\n\n    @computed\n    private get textEncoding() {\n        // If we're handling text data, we want to show & edit it as UTF8.\n        // If it's binary, that's a lossy operation, so we use binary (latin1) instead.\n        return isProbablyUtf8(this.props.body)\n            ? 'utf8'\n            : 'binary';\n    }\n\n    render() {\n        const {\n            body,\n            title,\n            exchangeId,\n            direction,\n            collapsed,\n            expanded,\n            onCollapseToggled,\n            onExpandToggled\n        } = this.props;\n\n        const bodyString = bufferToString(body, this.textEncoding);\n\n        return <CollapsibleCard\n            direction={direction}\n            collapsed={collapsed}\n            onCollapseToggled={onCollapseToggled}\n            expanded={expanded}\n        >\n            <header>\n                <EditableBodyCardHeader\n                    body={body}\n                    onBodyFormatted={this.onBodyChange}\n\n                    title={title}\n                    expanded={expanded}\n                    onExpandToggled={onExpandToggled}\n                    onCollapseToggled={onCollapseToggled}\n\n                    selectedContentType={this.contentType}\n                    contentTypeOptions={EditableContentTypes}\n                    onChangeContentType={this.onChangeContentType}\n                />\n            </header>\n            <EditorCardContent>\n                <portals.OutPortal<typeof SelfSizedEditor>\n                    contentId={`bp-${exchangeId}-${direction}`}\n                    node={this.props.editorNode}\n                    language={this.contentType}\n                    value={bodyString}\n                    onChange={this.onBodyChange}\n                    expanded={!!expanded}\n                />\n            </EditorCardContent>\n        </CollapsibleCard>;\n    }\n\n    private onBodyChange = (body: string) => {\n        this.props.onChange(stringToBuffer(body, this.textEncoding));\n    }\n\n}","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { action, computed } from 'mobx';\nimport { observer, inject } from 'mobx-react';\nimport * as portals from 'react-reverse-portal';\n\nimport { CollectedEvent, HtkResponse, HttpExchange } from '../../../types';\nimport { styled } from '../../../styles';\nimport { logError } from '../../../errors';\n\nimport { ExpandableViewCardKey, UiStore } from '../../../model/ui/ui-store';\nimport { RulesStore } from '../../../model/rules/rules-store';\nimport { AccountStore } from '../../../model/account/account-store';\nimport { ApiExchange } from '../../../model/api/api-interfaces';\nimport { buildRuleFromRequest } from '../../../model/rules/rule-creation';\nimport { findItem } from '../../../model/rules/rules-structure';\nimport { HtkMockRule, getRulePartKey } from '../../../model/rules/rules';\nimport { WebSocketStream } from '../../../model/websockets/websocket-stream';\n\nimport { PaneOuterContainer, PaneScrollContainer } from '../view-details-pane';\nimport { StreamMessageListCard } from '../stream-message-list-card';\nimport { WebSocketCloseCard } from '../websocket-close-card';\n\nimport { HttpBodyCard } from './http-body-card';\nimport { HttpApiCard, HttpApiPlaceholderCard } from './http-api-card';\nimport { HttpRequestCard } from './http-request-card';\nimport { HttpResponseCard } from './http-response-card';\nimport { HttpAbortedResponseCard } from './http-aborted-card';\nimport { HttpPerformanceCard } from './http-performance-card';\nimport { HttpExportCard } from './http-export-card';\nimport { SelfSizedEditor } from '../../editor/base-editor';\nimport { HttpErrorHeader, tagsToErrorType } from './http-error-header';\nimport { HttpDetailsFooter } from './http-details-footer';\nimport { HttpRequestBreakpointHeader, HttpResponseBreakpointHeader } from './http-breakpoint-header';\nimport { HttpBreakpointRequestCard } from './http-breakpoint-request-card';\nimport { HttpBreakpointResponseCard } from './http-breakpoint-response-card';\nimport { HttpBreakpointBodyCard } from './http-breakpoint-body-card';\n\n// Used to push all cards below it to the bottom (when less than 100% height)\nconst CardDivider = styled.div`\n    margin-top: auto;\n`;\n\nconst makeFriendlyApiName = (rawName: string) => {\n    // Some API names are camelCase: make *only* those more readable\n    const cleanedName = !rawName.includes(' ') && rawName.length > 6\n        ? _.startCase(rawName)\n        : rawName;\n\n    // Trim down any REALLY long names (\"U.S. EPA Enforcement and ...\")\n    return cleanedName.length > 75\n        ? cleanedName.slice(0, 72).trimRight() + '\\u2026' // ...\n        : cleanedName;\n}\n\n@inject('uiStore')\n@inject('accountStore')\n@inject('rulesStore')\n@observer\nexport class HttpDetailsPane extends React.Component<{\n    exchange: HttpExchange,\n\n    requestEditor: portals.HtmlPortalNode<typeof SelfSizedEditor>,\n    responseEditor: portals.HtmlPortalNode<typeof SelfSizedEditor>,\n    streamMessageEditor: portals.HtmlPortalNode<typeof SelfSizedEditor>,\n\n    navigate: (path: string) => void,\n    onDelete: (event: CollectedEvent) => void,\n    onScrollToEvent: (event: CollectedEvent) => void,\n    onBuildRuleFromExchange: (exchange: HttpExchange) => void,\n\n    // Injected:\n    uiStore?: UiStore,\n    accountStore?: AccountStore,\n    rulesStore?: RulesStore\n}> {\n\n    get cardProps() {\n        return this.props.uiStore!.viewCardProps;\n    }\n\n    render() {\n        const {\n            exchange,\n            onDelete,\n            onScrollToEvent,\n            onBuildRuleFromExchange,\n            uiStore,\n            accountStore,\n            navigate\n        } = this.props;\n\n        const { isPaidUser } = accountStore!;\n        const { expandedViewCard } = uiStore!;\n        const { requestBreakpoint, responseBreakpoint } = exchange;\n\n        // The full API details - for paid APIs, and non-paid users, we don't show\n        // the detailed API data in any of the cards, we just show the name (below)\n        // in a collapsed API card.\n        const apiExchange = (isPaidUser || exchange.api?.isBuiltInApi)\n            ? exchange.api\n            : undefined;\n\n        // We do still want the API name though, if there is one - we use this to\n        // show non-paid users when API data might be available, iff this request\n        // does actually match a documented operation.\n        const apiName = exchange.api?.matchedOperation()\n            ? makeFriendlyApiName(exchange.api.service.name)\n            : undefined;\n\n        const headerCard = this.renderHeaderCard(exchange);\n\n        if (expandedViewCard) {\n            return <PaneOuterContainer>\n                { headerCard }\n                { this.renderExpandedCard(expandedViewCard, exchange, apiExchange) }\n            </PaneOuterContainer>;\n        }\n\n        const cards = (requestBreakpoint || responseBreakpoint)\n            ? this.renderBreakpointCards(exchange, apiName, apiExchange)\n            : this.renderNormalCards(exchange, apiName, apiExchange);\n\n        return <PaneOuterContainer>\n            <PaneScrollContainer>\n                { headerCard }\n                { cards }\n            </PaneScrollContainer>\n            <HttpDetailsFooter\n                event={exchange}\n                onDelete={onDelete}\n                onScrollToEvent={onScrollToEvent}\n                onBuildRuleFromExchange={onBuildRuleFromExchange}\n                navigate={navigate}\n                isPaidUser={isPaidUser}\n            />\n        </PaneOuterContainer>;\n    }\n\n    renderHeaderCard(exchange: HttpExchange): JSX.Element | null {\n        const { accountStore, navigate } = this.props;\n        const { isPaidUser, getPro } = accountStore!;\n        const {\n            requestBreakpoint,\n            respondToBreakpointedRequest,\n            responseBreakpoint,\n            tags\n        } = exchange;\n\n        if (requestBreakpoint) {\n            return <HttpRequestBreakpointHeader\n                key='breakpoint-header'\n                onCreateResponse={respondToBreakpointedRequest}\n                onResume={requestBreakpoint.resume}\n                onClose={requestBreakpoint.close}\n            />;\n        }\n\n        if (responseBreakpoint) {\n            return <HttpResponseBreakpointHeader\n                key='breakpoint-header'\n                onResume={responseBreakpoint.resume}\n                onClose={responseBreakpoint.close}\n            />;\n        }\n\n        const errorHeaderProps = {\n            key: 'error-header',\n            isPaidUser,\n            getPro,\n            navigate,\n            mockRequest: this.mockRequest,\n            ignoreError: this.ignoreError\n        };\n\n        const errorType = tagsToErrorType(tags);\n\n        if (errorType) {\n            return <HttpErrorHeader type={errorType} {...errorHeaderProps} />;\n        } else {\n            return null;\n        }\n    }\n\n    private renderApiCard(\n        apiName: string | undefined,\n        apiExchange: ApiExchange | undefined\n    ) {\n        if (!apiName) return null;\n\n        if (!apiExchange) {\n            // If you're not a paid user, and it's a paid API, then we only have\n            // the basic API name here but no details, so we just show a placeholder:\n            return <HttpApiPlaceholderCard\n                {...this.cardProps.api}\n                apiName={apiName}\n            />;\n        }\n\n        // If paid/built-in API & we have a name, we must have full API details, show them:\n        return <HttpApiCard\n            {...this.cardProps.api}\n            apiName={apiName}\n            apiExchange={apiExchange!}\n        />;\n    }\n\n    private renderExpandedCard(\n        expandedCard: ExpandableViewCardKey,\n        exchange: HttpExchange,\n        apiExchange: ApiExchange | undefined\n    ) {\n        if (expandedCard === 'requestBody') {\n            return this.renderRequestBody(exchange, apiExchange);\n        } else if (\n            expandedCard === 'responseBody' && (\n                exchange.isSuccessfulExchange() ||\n                !!exchange.responseBreakpoint\n            )) {\n            return this.renderResponseBody(exchange, apiExchange);\n        } else if (\n            expandedCard === 'webSocketMessages' &&\n            exchange.isWebSocket() &&\n            exchange.wasAccepted()\n        ) {\n            return this.renderWebSocketMessages(exchange);\n        } else {\n            logError(`Expanded ${expandedCard}, but can't show anything`);\n            return null; // Shouldn't ever happen, unless we get into a funky broken state\n        }\n    }\n\n    private renderBreakpointCards(\n        exchange: HttpExchange,\n        apiName: string | undefined,\n        apiExchange: ApiExchange | undefined\n    ) {\n        const { uiStore } = this.props;\n        const { requestBreakpoint } = exchange;\n\n        const cards: Array<JSX.Element | null> = [];\n\n        if (requestBreakpoint) {\n            cards.push(<HttpBreakpointRequestCard\n                {...this.cardProps.request}\n                exchange={exchange}\n                onChange={requestBreakpoint.updateMetadata}\n            />);\n\n            cards.push(this.renderRequestBody(exchange, apiExchange));\n        } else {\n            const responseBreakpoint = exchange.responseBreakpoint!;\n\n            cards.push(this.renderApiCard(apiName, apiExchange));\n            cards.push(<HttpRequestCard\n                {...this.cardProps.request}\n                matchedRuleData={this.matchedRuleData}\n                onRuleClicked={this.jumpToRule}\n                exchange={exchange}\n            />);\n\n            if (exchange.hasRequestBody()) {\n                cards.push(this.renderRequestBody(exchange, apiExchange));\n            }\n\n            cards.push(<HttpBreakpointResponseCard\n                {...this.cardProps.response}\n                exchange={exchange}\n                onChange={responseBreakpoint.updateMetadata}\n                theme={uiStore!.theme}\n            />);\n\n            cards.push(this.renderResponseBody(exchange, apiExchange));\n        }\n\n        return cards;\n    }\n\n    private renderNormalCards(\n        exchange: HttpExchange,\n        apiName: string | undefined,\n        apiExchange: ApiExchange | undefined\n    ) {\n        const { uiStore } = this.props;\n        const { response } = exchange;\n\n        const cards: Array<JSX.Element | null> = [];\n\n        cards.push(this.renderApiCard(apiName, apiExchange));\n\n        cards.push(<HttpRequestCard\n            {...this.cardProps.request}\n            matchedRuleData={this.matchedRuleData}\n            onRuleClicked={this.jumpToRule}\n            exchange={exchange}\n        />);\n\n        if (exchange.hasRequestBody()) {\n            cards.push(this.renderRequestBody(exchange, apiExchange));\n        }\n\n        if (response === 'aborted') {\n            cards.push(<HttpAbortedResponseCard\n                key={this.cardProps.response.key}\n                cardProps={this.cardProps.response}\n                exchange={exchange}\n            />);\n        } else if (!!response) {\n            cards.push(<HttpResponseCard\n                {...this.cardProps.response}\n                response={response}\n                requestUrl={exchange.request.parsedUrl}\n                apiExchange={apiExchange}\n                theme={uiStore!.theme}\n            />);\n\n            if (exchange.hasResponseBody()) {\n                cards.push(this.renderResponseBody(exchange, apiExchange));\n            }\n        }\n\n        if (exchange.isWebSocket() && exchange.wasAccepted()) {\n            cards.push(this.renderWebSocketMessages(exchange));\n\n            if (exchange.closeState) {\n                cards.push(<WebSocketCloseCard\n                    {...this.cardProps.webSocketClose}\n                    theme={uiStore!.theme}\n                    closeState={exchange.closeState}\n                />);\n            }\n        } else {\n            // We only show performance & export for non-websockets, for now:\n\n            // Push all cards below this point to the bottom\n            cards.push(<CardDivider key='divider' />);\n\n            cards.push(<HttpPerformanceCard\n                exchange={exchange}\n                {...this.cardProps.performance}\n            />);\n\n            cards.push(<HttpExportCard\n                exchange={exchange}\n                {...this.cardProps.export}\n            />);\n        }\n\n        return cards;\n    }\n\n    private renderRequestBody(exchange: HttpExchange, apiExchange: ApiExchange | undefined) {\n        const { request, requestBreakpoint } = exchange;\n\n        return requestBreakpoint\n            ? <HttpBreakpointBodyCard\n                {...this.requestBodyParams()}\n                exchangeId={exchange.id}\n                body={requestBreakpoint.inProgressResult.body.decoded}\n                rawHeaders={requestBreakpoint.inProgressResult.rawHeaders}\n                onChange={requestBreakpoint.updateBody}\n            />\n            : <HttpBodyCard\n                {...this.requestBodyParams()}\n                isPaidUser={this.props.accountStore!.isPaidUser}\n                url={exchange.request.url}\n                message={request}\n                apiBodySchema={apiExchange?.request?.bodySchema}\n            />;\n    }\n\n    private renderResponseBody(exchange: HttpExchange, apiExchange: ApiExchange | undefined) {\n        const { response, responseBreakpoint } = exchange;\n\n        return responseBreakpoint\n            ? <HttpBreakpointBodyCard\n                {...this.responseBodyParams()}\n                exchangeId={exchange.id}\n                body={responseBreakpoint.inProgressResult.body.decoded}\n                rawHeaders={responseBreakpoint.inProgressResult.rawHeaders}\n                onChange={responseBreakpoint.updateBody}\n            />\n            : <HttpBodyCard\n                {...this.responseBodyParams()}\n                isPaidUser={this.props.accountStore!.isPaidUser}\n                url={exchange.request.url}\n                message={response as HtkResponse}\n                apiBodySchema={apiExchange?.response?.bodySchema}\n            />;\n    }\n\n    private renderWebSocketMessages(exchange: WebSocketStream) {\n        const urlParts = exchange.request.url.split('/');\n        const domain = urlParts[2].split(':')[0];\n        const baseName = urlParts.length >= 2 ? urlParts[urlParts.length - 1] : undefined;\n\n        const filenamePrefix = `${domain}${baseName ? `- ${baseName}` : ''} - websocket`;\n\n        return <StreamMessageListCard\n            {...this.cardProps.webSocketMessages}\n\n            // Link the key to the exchange, to ensure selected-message state gets\n            // reset when we switch between exchanges:\n            key={`${this.cardProps.webSocketMessages.key}-${this.props.exchange.id}`}\n            streamId={this.props.exchange.id}\n            streamType='WebSocket'\n\n            editorNode={this.props.streamMessageEditor}\n\n            isPaidUser={this.props.accountStore!.isPaidUser}\n            filenamePrefix={filenamePrefix}\n            messages={exchange.messages}\n        />;\n    }\n\n    // The common request body params, for both normal & breakpointed bodies\n    private requestBodyParams() {\n        return {\n            ...this.cardProps.requestBody,\n            title: 'Request Body',\n            direction: 'right' as const,\n            editorNode: this.props.requestEditor\n        };\n    }\n\n    // The common response body params, for both normal & breakpointed bodies\n    private responseBodyParams() {\n        return {\n            ...this.cardProps.responseBody,\n            title: 'Response Body',\n            direction: 'left' as const,\n            editorNode: this.props.responseEditor\n        };\n    }\n\n    @action.bound\n    private mockRequest() {\n        const { exchange, rulesStore, navigate } = this.props;\n\n        const rule = buildRuleFromRequest(rulesStore!, exchange.request);\n        rulesStore!.draftRules.items.unshift(rule);\n        navigate(`/mock/${rule.id}`);\n    }\n\n    @computed\n    private get matchedRuleData() {\n        const { exchange, rulesStore } = this.props;\n\n        const { matchedRule } = exchange;\n        if (!matchedRule) return;\n\n        const currentRuleDraft = findItem(rulesStore!.draftRules, { id: matchedRule.id }) as HtkMockRule | undefined;\n        if (!currentRuleDraft) {\n            return { stepTypes: matchedRule.handlerStepTypes, status: 'deleted' } as const;\n        }\n\n        const currentStepTypes = ('handler' in currentRuleDraft\n            ? [currentRuleDraft.handler]\n            : currentRuleDraft.steps\n        ).map(s => getRulePartKey(s));\n\n        if (!_.isEqual(currentStepTypes, matchedRule.handlerStepTypes)) {\n            return { stepTypes: matchedRule.handlerStepTypes, status: 'modified-types' } as const;\n        }\n\n        return { stepTypes: matchedRule.handlerStepTypes, status: 'unchanged' } as const;\n    }\n\n    @action.bound\n    private jumpToRule() {\n        const { navigate, exchange } = this.props;\n        const { matchedRule } = exchange;\n        if (!matchedRule) return;\n        navigate(`/mock/${matchedRule.id}`);\n    }\n\n    @action.bound\n    private ignoreError() {\n        const { exchange } = this.props;\n\n        // Drop all error tags from this exchange\n        exchange.tags = exchange.tags.filter(t =>\n            !t.startsWith('passthrough-error:') &&\n            !t.startsWith('passthrough-tls-error:') &&\n            !t.startsWith('client-error:') &&\n            !['header-overflow', 'http-2'].includes(t)\n        );\n    }\n\n};","import * as _ from 'lodash';\nimport * as React from 'react';\n\nimport { styled } from '../../../styles';\nimport { Icon, SourceIcons } from '../../../icons';\n\nimport { getReadableIP } from '../../../model/network';\nimport { FailedTlsConnection } from '../../../model/tls/failed-tls-connection';\n\nimport { MediumCard } from '../../common/card';\nimport { ContentLabelBlock, Content, CopyableMonoValue } from '../../common/text-content';\nimport { PaneOuterContainer, PaneScrollContainer } from '../view-details-pane';\n\nconst AndroidIcon = styled(Icon).attrs({\n    icon: SourceIcons.Android.icon\n})`\n    float: left;\n    margin-right: 10px;\n    margin-top: 3px;\n    color: ${SourceIcons.Android.color};\n`;\n\nexport class TlsFailureDetailsPane extends React.Component<{\n    failure: FailedTlsConnection,\n    certPath: string\n}> {\n    render() {\n        const { failure, certPath } = this.props;\n\n        const sourceDetailParts = getReadableIP(failure.remoteIpAddress).split(' ');\n        const sourceIp = sourceDetailParts[0];\n        const sourceDetails = sourceDetailParts.slice(1).join(' ');\n\n        return <PaneOuterContainer>\n            <PaneScrollContainer>\n                <MediumCard>\n                    <header>\n                        <h1>Failed HTTPS Request</h1>\n                    </header>\n\n                    <ContentLabelBlock>Details</ContentLabelBlock>\n                    <Content>\n                        <p>{\n                            ({\n                                'closed': <>\n                                    This connection was aborted and closed before any HTTP request was sent.\n                                </>,\n                                'reset': <>\n                                    This connection was aborted and reset before any HTTP request was sent.\n                                </>,\n                                'cert-rejected': <>\n                                    This connection was aborted, before any HTTP request was sent,\n                                    because the client did not trust the HTTP Toolkit certificate.\n                                </>,\n                                'no-shared-cipher': <>\n                                    This connection was aborted, before any HTTP request was sent,\n                                    because the client failed to agree on a TLS configuration.\n                                </>,\n                                'unknown': <>\n                                    This connection was aborted, before any HTTP request was sent,\n                                    due to a TLS error.\n                                </>,\n                            } as _.Dictionary<JSX.Element>)[failure.failureCause]\n                        }</p>\n                        <p>\n                            The request was sent by <CopyableMonoValue>\n                                { sourceIp }\n                            </CopyableMonoValue> { sourceDetails }.\n                        </p>\n                    </Content>\n\n                    <ContentLabelBlock>Cause</ContentLabelBlock>\n                    <Content>{\n                        failure.failureCause === 'cert-rejected'\n                            ? <p>\n                                This means that the client hasn't yet been fully configured\n                                to work with HTTP Toolkit. It has the proxy settings,\n                                but it doesn't trust our certificate authority (CA), so we\n                                can't we can't intercept its HTTPS traffic.\n                            </p>\n                        : failure.failureCause === 'no-shared-cipher'\n                            ? <>\n                                <p>\n                                    This usually means that the client hasn't yet been 100% configured\n                                    to work with HTTP Toolkit, although it's also possible that\n                                    it has an unusual TLS setup.\n                                </p>\n                                <p>\n                                    The former case is much more likely. That would mean that the\n                                    client has the right proxy settings, but doesn't trust our\n                                    certificate authority (CA), so we can't imitate HTTPS sites and\n                                    we can't collect or see its HTTPS traffic.\n                                </p>\n                            </>\n                        : <>\n                            <p>This could be caused by a few things:</p>\n                            <ul>\n                                <li>The client might no longer want to make the request</li>\n                                <li>The client might have connection issues</li>\n                                <li>The client might not trust our HTTPS certificate</li>\n                            </ul>\n                        </>\n                    }</Content>\n                    <ContentLabelBlock>Solutions</ContentLabelBlock>\n                    <Content>\n                        <p>\n                            {\n                                failure.failureCause === 'cert-rejected'\n                                    ? <>\n                                        To resolve this, you need to configure the client to trust\n                                        your HTTP Toolkit CA.\n                                    </>\n                                : failure.failureCause === 'no-shared-cipher'\n                                    ? <>\n                                        You probably need to ensure the client is configured to trust the\n                                        HTTP Toolkit CA.\n                                    </>\n                                : <>\n                                    In the first two cases, this is not related to HTTP Toolkit.\n                                    In the third case, you need to configure the client to trust your\n                                    HTTP Toolkit CA.\n                                </>\n                            }\n                        </p>\n                        <p>\n                            How you do this depends on the specific client. Opening the certificate file\n                            on the device may prompt you to trust it device-wide, or you may need a\n                            specific option for the HTTP library or tool that's being used.\n                        </p>\n\n                        <p>\n                            Your HTTP Toolkit certificate is stored on your machine at <CopyableMonoValue>\n                                { certPath }\n                            </CopyableMonoValue>\n                        </p>\n                        <AndroidIcon />\n                        <p>\n                            <strong>For Android devices</strong>, modern apps will not\n                            trust your installed CA certificates by default. For apps targeting\n                            API level 24+, the app must opt in to trusting user CA certificates, or\n                            you need to inject a system certificate (only possible on rooted devices\n                            and emulators).\n                        </p>\n                        <p>\n                            Trusting user CA certificates in your own app is a small & simple\n                            configuration change, see <a\n                                href=\"https://httptoolkit.com/docs/guides/android#intercepting-traffic-from-your-own-android-app\"\n                            >the HTTP Toolkit docs</a> for more details. Alternatively HTTP Toolkit\n                            can inject the system certificate for you automatically, on devices that\n                            support this, by connecting the device with ADB and using the \"Android\n                            device via ADB\" interception option.\n                        </p>\n                        <p>\n                            Take a look at the <a href=\"https://httptoolkit.com/docs/guides/android/\">\n                                Android interception guide\n                            </a> for more information.\n                        </p>\n                    </Content>\n                </MediumCard>\n            </PaneScrollContainer>\n        </PaneOuterContainer>;\n    }\n}","import * as _ from 'lodash';\nimport * as React from 'react';\n\nimport { getReadableIP } from '../../../model/network';\nimport { TlsTunnel } from '../../../model/tls/tls-tunnel';\n\nimport { MediumCard } from '../../common/card';\nimport { ContentLabelBlock, Content, CopyableMonoValue } from '../../common/text-content';\nimport { PaneOuterContainer, PaneScrollContainer } from '../view-details-pane';\n\nexport class TlsTunnelDetailsPane extends React.Component<{\n    tunnel: TlsTunnel\n}> {\n    render() {\n        const { tunnel } = this.props;\n\n        const sourceDetailParts = getReadableIP(tunnel.remoteIpAddress).split(' ');\n        const sourceIp = sourceDetailParts[0];\n        const sourceDetails = sourceDetailParts.slice(1).join(' ');\n\n        return <PaneOuterContainer>\n            <PaneScrollContainer>\n                <MediumCard>\n                    <header>\n                        <h1>TLS Tunnel</h1>\n                    </header>\n\n                    <ContentLabelBlock>Details</ContentLabelBlock>\n                    <Content>\n                        <p>\n                            This TLS connection was not intercepted by HTTP Toolkit, as it matched\n                            a hostname that is configured for TLS passthrough in your settings.\n                        </p>\n                    </Content>\n                    <Content>\n                        <p>\n                            The connection was made from <CopyableMonoValue>{\n                                sourceIp\n                            }:{\n                                tunnel.remotePort\n                            }</CopyableMonoValue> { sourceDetails } to <CopyableMonoValue>{\n                                tunnel.upstreamHostname\n                            }:{\n                                tunnel.upstreamPort\n                            }</CopyableMonoValue>.\n                        </p>\n                    </Content>\n                </MediumCard>\n            </PaneScrollContainer>\n        </PaneOuterContainer>;\n    }\n}","/*\n * SPDX-FileCopyrightText: 2022 Tim Perry <tim@httptoolkit.com>\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport * as React from 'react';\nimport { observer } from 'mobx-react';\nimport * as portals from 'react-reverse-portal';\n\nimport { RTCDataChannel } from '../../../model/webrtc/rtc-data-channel';\n\nimport { ExpandableCardProps } from '../../common/card';\nimport { SelfSizedEditor } from '../../editor/base-editor';\nimport { StreamMessageListCard } from '../stream-message-list-card';\n\nexport const RTCDataChannelCard = observer(({\n    dataChannel,\n    isPaidUser,\n    streamMessageEditor,\n    ...cardProps\n}: ExpandableCardProps & {\n    dataChannel: RTCDataChannel,\n    isPaidUser: boolean,\n    streamMessageEditor: portals.HtmlPortalNode<typeof SelfSizedEditor>\n}) => <StreamMessageListCard\n    {...cardProps}\n\n    // Link the key to the channel, to ensure selected-message state gets\n    // reset when we switch between traffic:\n    key={dataChannel.id}\n    streamId={dataChannel.id}\n    streamType='DataChannel'\n    streamLabel={dataChannel.label}\n\n    editorNode={streamMessageEditor}\n\n    isPaidUser={isPaidUser}\n    filenamePrefix={'DataChannel ' + (dataChannel.label || dataChannel.channelId)}\n    messages={dataChannel.messages}\n/>);","/*\n * SPDX-FileCopyrightText: 2022 Tim Perry <tim@httptoolkit.com>\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport * as React from 'react';\nimport { observer } from 'mobx-react';\n\nimport { RTCConnection } from '../../../model/webrtc/rtc-connection';\n\nimport { clickOnEnter } from '../../component-utils';\nimport {\n    HeaderCard,\n    HeaderText,\n    HeaderButton,\n    SecondaryHeaderButton\n} from '../header-card';\nimport { CopyableMonoValue } from '../../common/text-content';\n\nexport const RTCConnectionHeader = observer((p: {\n    connection: RTCConnection,\n\n    hideConnection: () => void,\n    jumpToConnection: () => void\n}) => <HeaderCard>\n    <HeaderText>\n        Part of a WebRTC Connection from <CopyableMonoValue>{\n            p.connection.clientURL\n        }</CopyableMonoValue> to <CopyableMonoValue>{\n            p.connection.remoteURL\n        }</CopyableMonoValue>\n    </HeaderText>\n\n    <SecondaryHeaderButton\n        onClick={p.hideConnection}\n        onKeyPress={clickOnEnter}\n    >\n        Hide\n    </SecondaryHeaderButton>\n\n    <HeaderButton\n        onClick={p.jumpToConnection}\n        onKeyPress={clickOnEnter}\n    >\n        Jump to connection\n    </HeaderButton>\n</HeaderCard>);","/*\n * SPDX-FileCopyrightText: 2022 Tim Perry <tim@httptoolkit.com>\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport * as _ from 'lodash';\nimport * as React from 'react';\nimport { action, observable } from 'mobx';\nimport { observer, inject } from 'mobx-react';\nimport * as portals from 'react-reverse-portal';\n\nimport { AccountStore } from '../../../model/account/account-store';\nimport { RTCDataChannel } from '../../../model/webrtc/rtc-data-channel';\n\nimport { PaneOuterContainer } from '../view-details-pane';\nimport { SelfSizedEditor } from '../../editor/base-editor';\nimport { RTCDataChannelCard } from './rtc-data-channel-card';\nimport { RTCConnectionHeader } from './rtc-connection-header';\n\n@inject('accountStore')\n@observer\nexport class RTCDataChannelDetailsPane extends React.Component<{\n    dataChannel: RTCDataChannel,\n\n    streamMessageEditor: portals.HtmlPortalNode<typeof SelfSizedEditor>,\n    navigate: (path: string) => void,\n\n    // Injected:\n    accountStore?: AccountStore\n}> {\n\n    @observable\n    private isConnectionHidden = false;\n\n    @action.bound\n    hideConnection() {\n        this.isConnectionHidden = true;\n    }\n\n    jumpToConnection = () => {\n        const { rtcConnection } = this.props.dataChannel;\n        this.props.navigate(`/view/${rtcConnection.id}`);\n    }\n\n    render() {\n        const {\n            dataChannel,\n            streamMessageEditor,\n            accountStore\n        } = this.props;\n\n        return <PaneOuterContainer>\n            { !this.isConnectionHidden &&\n                <RTCConnectionHeader\n                    connection={dataChannel.rtcConnection}\n                    hideConnection={this.hideConnection}\n                    jumpToConnection={this.jumpToConnection}\n                />\n            }\n            <RTCDataChannelCard\n                dataChannel={dataChannel}\n                isPaidUser={accountStore!.isPaidUser}\n                streamMessageEditor={streamMessageEditor}\n\n                collapsed={false}\n                expanded={true}\n                onExpandToggled={this.jumpToConnection}\n                onCollapseToggled={undefined} // Hide the collapse button\n            />\n        </PaneOuterContainer>;\n\n    }\n\n};","import _ from 'lodash';\nimport React from 'react';\n\nimport { ScaleLinear, scaleLinear } from 'd3-scale';\nimport { AreaClosed, LinePath } from '@vx/shape';\nimport { curveMonotoneX } from '@vx/curve';\nimport { Group } from '@vx/group';\nimport { AxisLeft } from '@vx/axis';\n\nimport { styled } from '../../styles';\n\nimport { getSummaryColour } from '../../model/events/categorization';\nimport { getReadableSize } from '../../model/events/bodies';\n\n// Somewhat arbitrary colour selections, but picking from our existing category\n// pallet for vaugely related colours, that work together and which don't have\n// accessibility issues for colourblind usersL\nexport const SentDataColour = getSummaryColour('data');\nexport const ReceivedDataColour = getSummaryColour('rtc-media');\n\nconst GraphSvg = styled.svg`\n    background-color: ${p => p.theme.mainLowlightBackground};\n    color: ${p => p.theme.mainColor};\n\n    .axis-label {\n        font-size: 15px;\n    }\n\n    .axis-tick text {\n        font-size: 12px;\n    }\n`;\n\nexport const SendReceiveGraph = ({\n    width,\n    height,\n    graphPaddingPx,\n    data\n}: {\n    width: number,\n    height: number,\n    graphPaddingPx: number\n    data: Array<{ sent: number, received: number }>\n}) => {\n    const top = graphPaddingPx;\n    const bottom = height - graphPaddingPx;\n    const innerHeight = bottom - top;\n\n    const axisMargin = 85 + graphPaddingPx;\n    const innerWidth = width - axisMargin;\n    // ^ Note we don't subtract right-edge padding: we go fully up to the right edge\n\n    const xScale = scaleLinear()\n        .domain([0, data.length - 1])\n        .range([0, innerWidth]);\n\n    const dataMax = _.max(data.map(d => Math.max(d.sent, d.received))) ?? 0;\n\n    const sentYScale = scaleLinear()\n        .domain([0, dataMax])\n        .range([innerHeight / 2, top]);\n\n    const receivedYScale = scaleLinear()\n        .domain([0, dataMax])\n        .range([innerHeight / 2, bottom]);\n\n    const sentData = data.map(d => d.sent);\n    const receivedData = data.map(d => d.received);\n\n    return <GraphSvg\n        width={width}\n        height={height}\n    >\n        <Group left={axisMargin}>\n            <GraphArea\n                label='Received'\n                data={receivedData}\n                xScale={xScale}\n                yScale={receivedYScale}\n                fill={ReceivedDataColour}\n            />\n            <GraphArea\n                label='Sent'\n                data={sentData}\n                xScale={xScale}\n                yScale={sentYScale}\n                fill={SentDataColour}\n            />\n        </Group>\n    </GraphSvg>;\n};\n\nconst GraphArea = (props: {\n    label: string,\n    data: Array<number>,\n    xScale: ScaleLinear<number, number>,\n    yScale: ScaleLinear<number, number>,\n    fill: string\n}) => {\n    return <>\n        <AxisLeft\n            scale={props.yScale}\n\n            label={props.label}\n            labelOffset={55}\n            labelClassName='axis-label'\n\n            tickFormat={d => getReadableSize(d.valueOf())}\n            tickClassName='axis-tick'\n            numTicks={6}\n        />\n\n        <AreaClosed\n            data={props.data}\n\n            x={(d, i) => props.xScale(i)!}\n            y={d => props.yScale(d) ?? 0}\n            yScale={props.yScale}\n\n            fill={props.fill}\n            curve={curveMonotoneX}\n        />\n        <LinePath\n            data={props.data}\n\n            x={(d, i) => props.xScale(i)!}\n            y={d => props.yScale(d) ?? 0}\n\n            stroke=\"#222\"\n            strokeWidth={1.5}\n            curve={curveMonotoneX}\n\n        />\n    </>\n};","/*\n * SPDX-FileCopyrightText: 2022 Tim Perry <tim@httptoolkit.com>\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport * as _ from 'lodash';\nimport * as React from 'react';\nimport { computed } from 'mobx';\nimport { Observer, observer } from 'mobx-react';\nimport { ParentSize } from '@vx/responsive';\n\nimport { styled } from '../../../styles';\n\nimport { getReadableSize } from '../../../model/events/bodies';\nimport { RTCMediaTrack } from '../../../model/webrtc/rtc-media-track';\n\nimport {\n    CollapsibleCard,\n    CollapsibleCardHeading\n} from '../../common/card';\nimport { Pill } from '../../common/pill';\nimport {\n    SendReceiveGraph,\n    SentDataColour,\n    ReceivedDataColour\n} from '../../common/send-recieve-graph';\nimport { CollapsingButtons } from '../../common/collapsing-buttons';\nimport { ExpandShrinkButton } from '../../common/expand-shrink-button';\n\nexport type RTCMediaCardProps = {\n    mediaTrack: RTCMediaTrack,\n\n    collapsed: boolean,\n    expanded: boolean,\n    onExpandToggled: () => void,\n    onCollapseToggled?: () => void\n};\n\nexport const RTCMediaCard = observer((props: RTCMediaCardProps) => {\n    const { mediaTrack, ...cardProps } = props;\n\n    return <CollapsibleCard {...cardProps}>\n        <header>\n            <CollapsingButtons>\n                <ExpandShrinkButton\n                    expanded={cardProps.expanded}\n                    onClick={cardProps.onExpandToggled}\n                />\n            </CollapsingButtons>\n\n            <Pill color={SentDataColour}>\n                { getReadableSize(mediaTrack.totalBytesSent) } sent\n            </Pill>\n            <Pill color={ReceivedDataColour}>\n                { getReadableSize(mediaTrack.totalBytesReceived) } received\n            </Pill>\n            <CollapsibleCardHeading onCollapseToggled={cardProps.onCollapseToggled}>\n                RTC { mediaTrack.type }\n            </CollapsibleCardHeading>\n        </header>\n\n        <StatsGraphWrapper>\n            <RTCMediaStats mediaTrack={mediaTrack} />\n        </StatsGraphWrapper>\n    </CollapsibleCard>;\n});\n\nconst StatsGraphWrapper = styled.div`\n    margin: 0 -20px -20px -20px;\n    border-top: solid 1px ${p => p.theme.containerBorder};\n    background-color: ${p => p.theme.highlightBackground};\n\n    position: relative;\n    flex-grow: 1;\n\n    min-height: 400px;\n\n    /* Fix the ParentSize measuring div to match our size exactly. */\n    > div {\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n    }\n`;\n\n@observer\nclass RTCMediaStats extends React.Component<{ mediaTrack: RTCMediaTrack }> {\n\n    @computed\n    get graphData(): Array<{ sent: number, received: number }> {\n        const { stats } = this.props.mediaTrack;\n        return _.map(stats, (stat) => ({ sent: stat.sentDelta, received: stat.receivedDelta }));\n    }\n\n    render() {\n        return <ParentSize>{ parent =>\n            <Observer>{() =>\n                <SendReceiveGraph\n                    width={parent.width}\n                    height={parent.height}\n                    graphPaddingPx={10}\n                    data={this.graphData}\n                />\n            }</Observer>\n        }</ParentSize>;\n    }\n}","/*\n * SPDX-FileCopyrightText: 2022 Tim Perry <tim@httptoolkit.com>\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport * as _ from 'lodash';\nimport * as React from 'react';\nimport { action, observable } from 'mobx';\nimport { observer } from 'mobx-react';\n\nimport { RTCMediaTrack } from '../../../model/webrtc/rtc-media-track';\n\nimport { PaneOuterContainer } from '../view-details-pane';\nimport { RTCMediaCard } from './rtc-media-card';\nimport { RTCConnectionHeader } from './rtc-connection-header';\n\n@observer\nexport class RTCMediaDetailsPane extends React.Component<{\n    mediaTrack: RTCMediaTrack,\n    navigate: (path: string) => void\n}> {\n\n    @observable\n    private isConnectionHidden = false;\n\n    @action.bound\n    hideConnection() {\n        this.isConnectionHidden = true;\n    }\n\n    jumpToConnection = () => {\n        const { rtcConnection } = this.props.mediaTrack;\n        this.props.navigate(`/view/${rtcConnection.id}`);\n    }\n\n    render() {\n        const {\n            mediaTrack\n        } = this.props;\n\n        return <PaneOuterContainer>\n            { !this.isConnectionHidden &&\n                <RTCConnectionHeader\n                    connection={mediaTrack.rtcConnection}\n                    hideConnection={this.hideConnection}\n                    jumpToConnection={this.jumpToConnection}\n                />\n            }\n            <RTCMediaCard\n                collapsed={false}\n                expanded={true}\n                onExpandToggled={this.jumpToConnection}\n                onCollapseToggled={undefined} // Hide the collapse button\n\n                // Link the key to the track, to ensure selected-message state gets\n                // reset when we switch between traffic:\n                key={mediaTrack.id}\n\n                mediaTrack={mediaTrack}\n            />\n        </PaneOuterContainer>;\n\n    }\n\n};","/*\n * SPDX-FileCopyrightText: 2022 Tim Perry <tim@httptoolkit.com>\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport * as _ from 'lodash';\nimport * as React from 'react';\nimport { computed } from 'mobx';\nimport { observer } from 'mobx-react';\n\nimport { UNKNOWN_SOURCE } from '../../../model/http/sources';\nimport { RTCConnection } from '../../../model/webrtc/rtc-connection';\nimport { getSummaryColour } from '../../../model/events/categorization';\n\nimport {\n    CollapsibleCard,\n    CollapsibleCardHeading,\n    ExpandableCardProps\n} from '../../common/card';\nimport {\n    CollapsibleSection,\n    CollapsibleSectionSummary,\n    CollapsibleSectionBody\n} from '../../common/collapsible-section';\nimport {\n    ContentLabel,\n    ContentLabelBlock,\n    ContentMonoValueInline,\n    ContentValue\n} from '../../common/text-content';\nimport { SourceIcon } from '../../common/source-icon';\nimport { Pill } from '../../common/pill';\nimport { UrlBreakdown } from '../url-breakdown';\n\ninterface RTCConnectionCardProps extends ExpandableCardProps {\n    connection: RTCConnection;\n    onCollapseToggled?: () => void;\n};\n\n@observer\nexport class RTCConnectionCard extends React.Component<RTCConnectionCardProps> {\n\n    @computed\n    get hasData() {\n        const { streams } = this.props.connection;\n        return streams.some(s => s.isRTCDataChannel());\n    }\n\n    @computed\n    get hasAudio() {\n        const { streams } = this.props.connection;\n        return streams.some(s =>\n            s.isRTCMediaTrack() && s.type === 'audio'\n        );\n    }\n\n    @computed\n    get hasVideo() {\n        const { streams } = this.props.connection;\n        return streams.some(s =>\n            s.isRTCMediaTrack() && s.type === 'video'\n        );\n    }\n\n    render() {\n        const { connection, ...cardProps } = this.props;\n\n        return <CollapsibleCard {...cardProps}>\n            <header>\n                <SourceIcon source={connection.source} />\n\n                { this.hasData &&\n                    <Pill color={getSummaryColour('data')}>Data</Pill>\n                }\n\n                { this.hasVideo &&\n                    <Pill color={getSummaryColour('image')}>Video</Pill>\n                }\n\n                { this.hasAudio &&\n                    <Pill color={getSummaryColour('css')}>Audio</Pill>\n                }\n\n                <CollapsibleCardHeading onCollapseToggled={cardProps.onCollapseToggled}>\n                    WebRTC Connection\n                </CollapsibleCardHeading>\n            </header>\n\n            <CollapsibleSection>\n                <CollapsibleSectionSummary>\n                    <ContentLabel>Connection type: </ContentLabel>\n                    <ContentValue>\n                        {\n                            connection.remoteCandidate.type === 'host'\n                                ? 'Direct'\n                            : connection.remoteCandidate.type === 'relay'\n                                ? 'TURN-relayed'\n                            : connection.remoteCandidate.type === 'srflx'\n                                ? 'STUN-directed'\n                            : // === prflx\n                                'Peer-reflexive'\n                        } {\n                            connection.remoteCandidate.protocol.toUpperCase()\n                        }\n                    </ContentValue>\n                </CollapsibleSectionSummary>\n            </CollapsibleSection>\n\n            <CollapsibleSection>\n                <CollapsibleSectionSummary>\n                    <ContentLabel>From: </ContentLabel>\n                    <ContentMonoValueInline>{ connection.clientURL }</ContentMonoValueInline>\n                </CollapsibleSectionSummary>\n            </CollapsibleSection>\n\n            <CollapsibleSection>\n                <CollapsibleSectionSummary>\n                    <ContentLabel>To: </ContentLabel>\n                    <ContentMonoValueInline>{ connection.remoteURL }</ContentMonoValueInline>\n                </CollapsibleSectionSummary>\n            </CollapsibleSection>\n\n            { connection.sourceURL && <>\n                <ContentLabelBlock>Source page: </ContentLabelBlock>\n\n                <CollapsibleSection prefixTrigger={true}>\n                    <CollapsibleSectionSummary>\n                        <ContentMonoValueInline>\n                            { connection.sourceURL.toString() }\n                        </ContentMonoValueInline>\n                    </CollapsibleSectionSummary>\n\n                    <CollapsibleSectionBody>\n                        <UrlBreakdown url={connection.sourceURL} />\n                    </CollapsibleSectionBody>\n                </CollapsibleSection>\n            </> }\n\n            { connection.source !== UNKNOWN_SOURCE && <>\n                <ContentLabelBlock>Client: </ContentLabelBlock>\n\n                <CollapsibleSection prefixTrigger={true}>\n                    <CollapsibleSectionSummary>\n                        <ContentMonoValueInline>\n                            { connection.source.ua }\n                        </ContentMonoValueInline>\n                    </CollapsibleSectionSummary>\n\n                    <CollapsibleSectionBody>\n                        <p>{ connection.source.description }</p>\n                    </CollapsibleSectionBody>\n                </CollapsibleSection>\n            </> }\n        </CollapsibleCard>;\n    }\n}","/*\n * SPDX-FileCopyrightText: 2022 Tim Perry <tim@httptoolkit.com>\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport * as _ from 'lodash';\nimport * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { MockRTCSessionDescription } from 'mockrtc';\nimport * as portals from 'react-reverse-portal';\n\nimport {\n    CollapsibleCard,\n    CollapsibleCardHeading,\n    ExpandableCardProps\n} from '../../common/card';\nimport { SelfSizedEditor } from '../../editor/base-editor';\nimport { ContentViewer } from '../../editor/content-viewer';\nimport { EditorCardContent } from '../../editor/body-card-components';\n\nimport { RTCConnection } from '../../../model/webrtc/rtc-connection';\n\ninterface RtcSdpCardProps extends ExpandableCardProps {\n    connection: RTCConnection;\n    type: 'local' | 'remote';\n    sessionDescription: MockRTCSessionDescription;\n    editorNode: portals.HtmlPortalNode<typeof SelfSizedEditor>;\n}\n\n@observer\nexport class SDPCard extends React.Component<RtcSdpCardProps> {\n\n    render() {\n        const {\n            connection,\n            type,\n            sessionDescription,\n            editorNode,\n            ...cardProps\n        } = this.props;\n\n        return <CollapsibleCard {...cardProps}>\n            <header>\n                <CollapsibleCardHeading onCollapseToggled={cardProps.onCollapseToggled}>\n                    {\n                        type === 'local' ? 'Sent' : 'Received'\n                    } Session {\n                        _.capitalize(sessionDescription.type)\n                    }\n                </CollapsibleCardHeading>\n            </header>\n\n            <EditorCardContent>\n                <ContentViewer\n                    contentId={`${connection.id}:${type}:${sessionDescription.type}:sdp`}\n                    editorNode={this.props.editorNode}\n                    contentType='text'\n                    expanded={false}\n                    cache={connection.cache}\n                >\n                    { sessionDescription.sdp }\n                </ContentViewer>\n            </EditorCardContent>\n        </CollapsibleCard>;\n    }\n}","/*\n * SPDX-FileCopyrightText: 2022 Tim Perry <tim@httptoolkit.com>\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport * as React from 'react';\nimport { action, computed, observable } from 'mobx';\nimport { inject, observer } from 'mobx-react';\nimport * as portals from 'react-reverse-portal';\n\nimport { UiStore } from '../../../model/ui/ui-store';\nimport { AccountStore } from '../../../model/account/account-store';\nimport { RTCConnection } from '../../../model/webrtc/rtc-connection';\nimport { RTCDataChannel } from '../../../model/webrtc/rtc-data-channel';\nimport { RTCMediaTrack } from '../../../model/webrtc/rtc-media-track';\n\nimport { SelfSizedEditor } from '../../editor/base-editor';\nimport { PaneOuterContainer, PaneScrollContainer } from '../view-details-pane';\n\nimport { RTCConnectionCard } from './rtc-connection-card';\nimport { SDPCard } from './sdp-card';\nimport { RTCDataChannelCard } from './rtc-data-channel-card';\nimport { RTCMediaCard } from './rtc-media-card';\n\n@inject('uiStore')\n@inject('accountStore')\n@observer\nexport class RTCConnectionDetailsPane extends React.Component<{\n    connection: RTCConnection,\n\n    offerEditor: portals.HtmlPortalNode<typeof SelfSizedEditor>,\n    answerEditor: portals.HtmlPortalNode<typeof SelfSizedEditor>,\n\n    navigate: (path: string) => void,\n\n    uiStore?: UiStore,\n    accountStore?: AccountStore\n}> {\n\n    @computed.struct\n    get mediaTracks() {\n        const { streams } = this.props.connection;\n        return streams.filter((s): s is RTCMediaTrack => s.isRTCMediaTrack());\n    }\n\n    @computed.struct\n    get dataChannels() {\n        const { streams } = this.props.connection;\n        return streams.filter((s): s is RTCDataChannel => s.isRTCDataChannel());\n    }\n\n    // Create a editor portal node for every data channel.\n    private readonly dataChannelEditors = this.dataChannels.map(() =>\n        portals.createHtmlPortalNode<typeof SelfSizedEditor>()\n    );\n\n    @observable\n    private streamCardState: {\n        [streamId: string]: { collapsed: boolean } | undefined\n    } = {};\n\n    @action.bound\n    toggleCollapse(streamId: string) {\n        this.streamCardState[streamId] = {\n            collapsed: !this.streamCardState[streamId]?.collapsed ?? true\n        };\n    }\n\n    expandStream(streamId: string) {\n        this.props.navigate(`/view/${streamId}`);\n    }\n\n    render() {\n        const {\n            connection,\n            uiStore,\n            offerEditor,\n            answerEditor,\n            accountStore\n        } = this.props;\n        const {\n            localSessionDescription,\n            remoteSessionDescription\n        } = connection;\n\n        const locallyInitiated = localSessionDescription.type === 'offer';\n\n        const offerDescription = locallyInitiated\n            ? localSessionDescription\n            : remoteSessionDescription;\n        const answerDescription = locallyInitiated\n            ? remoteSessionDescription\n            : localSessionDescription;\n\n        const offerCardProps = {\n            ...uiStore!.viewCardProps.rtcSessionOffer,\n            direction: locallyInitiated ? 'right' : 'left'\n        } as const;\n\n        const answerCardProps = {\n            ...uiStore!.viewCardProps.rtcSessionAnswer,\n            direction: locallyInitiated ? 'left' : 'right'\n        } as const;\n\n        return <PaneOuterContainer>\n            <PaneScrollContainer>\n                <RTCConnectionCard\n                    {...uiStore!.viewCardProps.rtcConnection}\n                    connection={connection}\n                />\n                <SDPCard\n                    {...offerCardProps}\n                    connection={connection}\n                    type={locallyInitiated ? 'local' : 'remote'}\n                    sessionDescription={offerDescription}\n                    editorNode={offerEditor}\n                />\n                <SDPCard\n                    {...answerCardProps}\n                    connection={connection}\n                    type={locallyInitiated ? 'remote' : 'local'}\n                    sessionDescription={answerDescription}\n                    editorNode={answerEditor}\n                />\n\n                {\n                    this.mediaTracks.map((mediaTrack) =>\n                        <RTCMediaCard\n                            // Link the key to the track, to ensure selected-message state gets\n                            // reset when we switch between traffic:\n                            key={mediaTrack.id}\n\n                            mediaTrack={mediaTrack}\n\n                            expanded={false}\n                            collapsed={!!this.streamCardState[mediaTrack.id]?.collapsed}\n                            onCollapseToggled={this.toggleCollapse.bind(this, mediaTrack.id)}\n                            onExpandToggled={this.expandStream.bind(this, mediaTrack.id)}\n                        />\n                    )\n                }\n\n                {\n                    this.dataChannels.map((dataChannel, i) =>\n                        <RTCDataChannelCard\n                            key={dataChannel.id}\n                            dataChannel={dataChannel}\n                            isPaidUser={accountStore!.isPaidUser}\n                            streamMessageEditor={this.dataChannelEditors[i]}\n\n                            expanded={false}\n                            collapsed={!!this.streamCardState[dataChannel.id]?.collapsed}\n                            onCollapseToggled={this.toggleCollapse.bind(this, dataChannel.id)}\n                            onExpandToggled={this.expandStream.bind(this, dataChannel.id)}\n                        />\n                    )\n                }\n\n                { this.dataChannelEditors.map((node, i) =>\n                    <portals.InPortal key={i} node={node}>\n                        <SelfSizedEditor\n                            contentId={null}\n                        />\n                    </portals.InPortal>\n                )}\n            </PaneScrollContainer>\n        </PaneOuterContainer>;\n    }\n\n}","import * as React from 'react';\nimport * as _ from 'lodash';\nimport {\n    observable,\n    autorun,\n    action,\n    computed,\n    runInAction,\n    when,\n    comparer,\n    observe\n} from 'mobx';\nimport { observer, disposeOnUnmount, inject } from 'mobx-react';\nimport * as portals from 'react-reverse-portal';\n\nimport { WithInjected, CollectedEvent } from '../../types';\nimport { NARROW_LAYOUT_BREAKPOINT, styled } from '../../styles';\nimport { useHotkeys, isEditable, windowSize } from '../../util/ui';\nimport { debounceComputed } from '../../util/observable';\nimport { UnreachableCheck } from '../../util/error';\n\nimport { UiStore } from '../../model/ui/ui-store';\nimport { ProxyStore } from '../../model/proxy-store';\nimport { EventsStore } from '../../model/events/events-store';\nimport { RulesStore } from '../../model/rules/rules-store';\nimport { AccountStore } from '../../model/account/account-store';\nimport { HttpExchange } from '../../model/http/exchange';\nimport { FilterSet } from '../../model/filters/search-filters';\nimport { buildRuleFromExchange } from '../../model/rules/rule-creation';\n\nimport { SplitPane } from '../split-pane';\nimport { EmptyState } from '../common/empty-state';\nimport { SelfSizedEditor } from '../editor/base-editor';\n\nimport { ViewEventList } from './view-event-list';\nimport { ViewEventListFooter } from './view-event-list-footer';\nimport { ViewEventContextMenuBuilder } from './view-context-menu-builder';\nimport { HttpDetailsPane } from './http/http-details-pane';\nimport { TlsFailureDetailsPane } from './tls/tls-failure-details-pane';\nimport { TlsTunnelDetailsPane } from './tls/tls-tunnel-details-pane';\nimport { RTCDataChannelDetailsPane } from './rtc/rtc-data-channel-details-pane';\nimport { RTCMediaDetailsPane } from './rtc/rtc-media-details-pane';\nimport { RTCConnectionDetailsPane } from './rtc/rtc-connection-details-pane';\n\ninterface ViewPageProps {\n    className?: string;\n    eventsStore: EventsStore;\n    proxyStore: ProxyStore;\n    uiStore: UiStore;\n    accountStore: AccountStore;\n    rulesStore: RulesStore;\n    navigate: (path: string) => void;\n    eventId?: string;\n}\n\nconst ViewPageKeyboardShortcuts = (props: {\n    selectedEvent: CollectedEvent | undefined,\n    moveSelection: (distance: number) => void,\n    onPin: (event: HttpExchange) => void,\n    onDelete: (event: CollectedEvent) => void,\n    onClear: () => void,\n    onStartSearch: () => void\n}) => {\n    useHotkeys('j', (event) => {\n        if (isEditable(event.target)) return;\n        props.moveSelection(1);\n    }, [props.moveSelection]);\n\n    useHotkeys('k', (event) => {\n        if (isEditable(event.target)) return;\n        props.moveSelection(-1);\n    }, [props.moveSelection]);\n\n    useHotkeys('Ctrl+p, Cmd+p', (event) => {\n        if (props.selectedEvent?.isHttp()) {\n            props.onPin(props.selectedEvent);\n            event.preventDefault();\n        }\n    }, [props.selectedEvent, props.onPin]);\n\n    useHotkeys('Ctrl+Delete, Cmd+Delete', (event) => {\n        if (isEditable(event.target)) return;\n\n        if (props.selectedEvent) {\n            props.onDelete(props.selectedEvent);\n        }\n    }, [props.selectedEvent, props.onDelete]);\n\n    useHotkeys('Ctrl+Shift+Delete, Cmd+Shift+Delete', (event) => {\n        props.onClear();\n        event.preventDefault();\n    }, [props.onClear]);\n\n    useHotkeys('Ctrl+f, Cmd+f', (event) => {\n        props.onStartSearch();\n        event.preventDefault();\n    }, [props.onStartSearch]);\n\n    return null;\n};\n\nconst EDITOR_KEYS = [\n    'request',\n    'response',\n    'streamMessage'\n] as const;\ntype EditorKey = typeof EDITOR_KEYS[number];\n\n@inject('eventsStore')\n@inject('proxyStore')\n@inject('uiStore')\n@inject('accountStore')\n@inject('rulesStore')\n@observer\nclass ViewPage extends React.Component<ViewPageProps> {\n\n    @computed\n    private get splitDirection(): 'vertical' | 'horizontal' {\n        if (windowSize.width >= NARROW_LAYOUT_BREAKPOINT) {\n            return 'vertical';\n        } else {\n            return 'horizontal';\n        }\n    }\n\n    private readonly editors = EDITOR_KEYS.reduce((v, key) => ({\n        ...v,\n        [key]: portals.createHtmlPortalNode<typeof SelfSizedEditor>()\n    }), {} as {\n        [K in EditorKey]: portals.HtmlPortalNode<typeof SelfSizedEditor>\n    });\n\n    searchInputRef = React.createRef<HTMLInputElement>();\n\n    private listRef = React.createRef<ViewEventList>();\n\n    @observable\n    private searchFiltersUnderConsideration: FilterSet | undefined;\n\n    get confirmedSearchFilters() {\n        return this.props.uiStore.activeFilterSet;\n    }\n\n    @debounceComputed(250, { equals: comparer.structural })\n    get currentSearchFilters() {\n        // While we're considering some search filters, show the result in the view list.\n        return this.searchFiltersUnderConsideration ?? this.confirmedSearchFilters;\n    }\n\n    @debounceComputed(10) // Debounce slightly - most important for body filtering performance\n    get filteredEventState(): {\n        filteredEvents: CollectedEvent[],\n        filteredEventCount: [filtered: number, fromTotal: number]\n    } {\n        const { events } = this.props.eventsStore;\n\n        const filteredEvents = (this.currentSearchFilters.length === 0)\n            ? events\n            : events.filter((event) =>\n                this.currentSearchFilters.every((f) => f.matches(event))\n            );\n\n        return {\n            filteredEvents,\n            filteredEventCount: [filteredEvents.length, events.length]\n        };\n    }\n\n    @computed\n    get selectedEvent() {\n        return _.find(this.props.eventsStore.events, {\n            id: this.props.eventId\n        });\n    }\n\n    private readonly contextMenuBuilder = new ViewEventContextMenuBuilder(\n        this.props.accountStore,\n        this.props.uiStore,\n        this.onPin,\n        this.onDelete,\n        this.onBuildRuleFromExchange\n    );\n\n    componentDidMount() {\n        disposeOnUnmount(this, observe(this, 'selectedEvent', ({ oldValue, newValue }) => {\n            if (this.splitDirection !== 'horizontal') return;\n\n            // In horizontal mode, the details pane appears and disappears, so we need to do some\n            // tricks to stop the scroll position in the list doing confusing things.\n\n            if (!oldValue && newValue) {\n                // If we're bringing the details pane into view, we want to jump to where we were\n                // but then shift slightly to make sure the selected row is visible too.\n                setTimeout(() => {\n                    if (!this.selectedEvent) return;\n                    this.listRef.current?.scrollToEvent(this.selectedEvent);\n                }, 50); // We need to delay slightly to let DOM and then UI state catch up\n            }\n        }));\n\n        disposeOnUnmount(this, autorun(() => {\n            if (!this.props.eventId) return;\n            const selectedEvent = this.selectedEvent;\n\n            // If you somehow have a non-existent event selected, unselect it\n            if (!selectedEvent) {\n                this.onSelected(undefined);\n                return;\n            }\n\n            const { expandedViewCard } = this.props.uiStore;\n\n            if (!expandedViewCard) return;\n\n            // If you have a pane expanded, and select an event with no data\n            // for that pane, then disable the expansion\n            if (\n                !(selectedEvent.isHttp()) ||\n                (\n                    expandedViewCard === 'requestBody' &&\n                    !selectedEvent.hasRequestBody() &&\n                    !selectedEvent.requestBreakpoint\n                ) ||\n                (\n                    expandedViewCard === 'responseBody' &&\n                    !selectedEvent.hasResponseBody() &&\n                    !selectedEvent.responseBreakpoint\n                ) ||\n                (\n                    expandedViewCard === 'webSocketMessages' &&\n                    !selectedEvent.isWebSocket()\n                )\n            ) {\n                runInAction(() => {\n                    this.props.uiStore.expandedViewCard = undefined;\n                });\n                return;\n            }\n        }));\n\n        // Due to https://github.com/facebook/react/issues/16087 in React, which is fundamentally caused by\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=1218275 in Chrome, we can leak filtered event\n        // list references, which means that HTTP exchanges persist in memory even after they're cleared.\n        // This observer ensures that the persisted array reference is always emptied after a new value appears:\n        disposeOnUnmount(this,\n            observe(this, 'filteredEventState', ({ newValue, oldValue }) => {\n                const newFilteredEvents = newValue.filteredEvents;\n                const oldFilteredEvents = oldValue?.filteredEvents;\n\n                if (\n                    oldFilteredEvents &&\n                    oldFilteredEvents !== newFilteredEvents &&\n                    oldFilteredEvents !== this.props.eventsStore.events\n                ) {\n                    oldFilteredEvents.length = 0;\n                }\n            })\n        );\n    }\n\n    render(): JSX.Element {\n        const { isPaused, events } = this.props.eventsStore;\n        const { certPath } = this.props.proxyStore;\n\n        const { filteredEvents, filteredEventCount } = this.filteredEventState;\n\n        let rightPane: JSX.Element | null;\n        if (!this.selectedEvent) {\n            if (this.splitDirection === 'vertical') {\n                rightPane = <EmptyState key='details' icon={['fas', 'arrow-left']}>\n                    Select an exchange to see the full details.\n                </EmptyState>;\n            } else {\n                rightPane = null;\n            }\n        } else if (this.selectedEvent.isHttp()) {\n            rightPane = <HttpDetailsPane\n                exchange={this.selectedEvent}\n\n                requestEditor={this.editors.request}\n                responseEditor={this.editors.response}\n                streamMessageEditor={this.editors.streamMessage}\n\n                navigate={this.props.navigate}\n                onDelete={this.onDelete}\n                onScrollToEvent={this.onScrollToCenterEvent}\n                onBuildRuleFromExchange={this.onBuildRuleFromExchange}\n            />;\n        } else if (this.selectedEvent.isTlsFailure()) {\n            rightPane = <TlsFailureDetailsPane\n                failure={this.selectedEvent}\n                certPath={certPath}\n            />;\n        } else if (this.selectedEvent.isTlsTunnel()) {\n            rightPane = <TlsTunnelDetailsPane\n                tunnel={this.selectedEvent}\n            />;\n        } else if (this.selectedEvent.isRTCDataChannel()) {\n            rightPane = <RTCDataChannelDetailsPane\n                dataChannel={this.selectedEvent}\n                streamMessageEditor={this.editors.streamMessage}\n                navigate={this.props.navigate}\n            />\n        } else if (this.selectedEvent.isRTCMediaTrack()) {\n            rightPane = <RTCMediaDetailsPane\n                mediaTrack={this.selectedEvent}\n                navigate={this.props.navigate}\n            />\n        } else if (this.selectedEvent.isRTCConnection()) {\n            rightPane = <RTCConnectionDetailsPane\n                connection={this.selectedEvent}\n                offerEditor={this.editors.request}\n                answerEditor={this.editors.response}\n                navigate={this.props.navigate}\n            />\n        } else {\n            throw new UnreachableCheck(this.selectedEvent);\n        }\n\n        const minSize = this.splitDirection === 'vertical'\n            ? 300\n            : 200;\n\n        return <div className={this.props.className}>\n            <ViewPageKeyboardShortcuts\n                selectedEvent={this.selectedEvent}\n                moveSelection={this.moveSelection}\n                onPin={this.onPin}\n                onDelete={this.onDelete}\n                onClear={this.onForceClear}\n                onStartSearch={this.onStartSearch}\n            />\n\n            <SplitPane\n                split={this.splitDirection}\n                primary='second'\n                defaultSize='50%'\n                minSize={minSize}\n                maxSize={-minSize}\n                hiddenPane={rightPane === null ? '2' : undefined}\n            >\n                <LeftPane>\n                    <ViewEventListFooter // Footer above the list to ensure correct tab order\n                        searchInputRef={this.searchInputRef}\n                        allEvents={events}\n                        filteredEvents={filteredEvents}\n                        filteredCount={filteredEventCount}\n                        onFiltersConsidered={this.onSearchFiltersConsidered}\n                        onClear={this.onClear}\n                        onScrollToEnd={this.onScrollToEnd}\n                    />\n                    <ViewEventList\n                        events={events}\n                        filteredEvents={filteredEvents}\n                        selectedEvent={this.selectedEvent}\n                        isPaused={isPaused}\n\n                        moveSelection={this.moveSelection}\n                        onSelected={this.onSelected}\n\n                        contextMenuBuilder={this.contextMenuBuilder}\n\n                        ref={this.listRef}\n                    />\n                </LeftPane>\n                {\n                    rightPane ?? <div />\n                    // The <div/> is hidden by hiddenPane, so does nothing, but avoids\n                    // a React error in react-split-pane for undefined children\n                }\n            </SplitPane>\n\n            {Object.values(this.editors).map((node, i) =>\n                <portals.InPortal key={i} node={node}>\n                    <SelfSizedEditor\n                        contentId={null}\n                    />\n                </portals.InPortal>\n            )}\n        </div>;\n    }\n\n    @action.bound\n    onSearchFiltersConsidered(filters: FilterSet | undefined) {\n        this.searchFiltersUnderConsideration = filters;\n    }\n\n    @action.bound\n    onSelected(event: CollectedEvent | undefined) {\n        this.props.navigate(event\n            ? `/view/${event.id}`\n            : '/view'\n        );\n    }\n\n    @action.bound\n    moveSelection(distance: number) {\n        const { filteredEvents } = this.filteredEventState;\n\n        if (filteredEvents.length === 0) return;\n\n        const currentIndex = this.selectedEvent\n            ? _.findIndex(filteredEvents, { id: this.selectedEvent.id })\n            : -1;\n\n        const targetIndex = (currentIndex === -1)\n            ? (distance >= 0 ? 0 : filteredEvents.length - 1) // Jump to the start or end\n            : _.clamp(  // Move, but clamped to valid values\n                currentIndex + distance,\n                0,\n                filteredEvents.length - 1\n            );\n\n        const targetEvent = filteredEvents[targetIndex];\n        this.onSelected(targetEvent);\n        this.onScrollToEvent(targetEvent);\n    }\n\n    @action.bound\n    onPin(event: CollectedEvent) {\n        event.pinned = !event.pinned;\n    }\n\n    @action.bound\n    onBuildRuleFromExchange(exchange: HttpExchange) {\n        const { rulesStore, navigate } = this.props;\n\n        const rule = buildRuleFromExchange(exchange);\n        rulesStore!.draftRules.items.unshift(rule);\n        navigate(`/mock/${rule.id}`);\n    }\n\n    @action.bound\n    onDelete(event: CollectedEvent) {\n        const { filteredEvents } = this.filteredEventState;\n\n        // Prompt before deleting pinned events:\n        if (event.pinned && !confirm(\"Delete this pinned exchange?\")) return;\n\n        const rowIndex = filteredEvents.indexOf(event);\n        const wasSelected = event === this.selectedEvent;\n\n        // If you delete the selected event, select the next event in the list\n        if (rowIndex !== -1 && wasSelected && filteredEvents.length > 0) {\n            // Because navigate is async, we can't delete & change selection together.\n            // Instead, we update the selection now, and delete the event later.\n            const nextEvent = filteredEvents[\n                Math.min(rowIndex + 1, filteredEvents.length - 1)\n            ];\n\n            this.onSelected(nextEvent);\n            when(() => this.selectedEvent === nextEvent, () => {\n                this.props.eventsStore.deleteEvent(event);\n            });\n        } else {\n            this.props.eventsStore.deleteEvent(event);\n        }\n    }\n\n    @action.bound\n    onForceClear() {\n        this.onClear(false);\n    }\n\n    @action.bound\n    onClear(confirmRequired = true) {\n        const { events } = this.props.eventsStore;\n        const someEventsPinned = _.some(events, { pinned: true });\n        const allEventsPinned = events.length > 0 &&\n            _.every(events, { pinned: true });\n\n        if (allEventsPinned) {\n            // We always confirm deletion of pinned exchanges:\n            const confirmResult = confirm(\"Delete pinned traffic?\");\n            if (!confirmResult) return;\n        } else if (confirmRequired && events.length > 0) {\n            // We confirm deletion of non-pinned exchanges when triggered from the\n            // button, but not from keyboard shortcuts (which set confirmRequired=false).\n            const confirmResult = confirm(\n                someEventsPinned\n                    ? \"Delete all non-pinned traffic?\"\n                    : \"Delete all collected traffic?\"\n            );\n            if (!confirmResult) return;\n        }\n\n        this.props.eventsStore.clearInterceptedData(allEventsPinned);\n    }\n\n    @action.bound\n    onStartSearch() {\n        this.searchInputRef.current?.focus();\n    }\n\n    @action.bound\n    onScrollToEvent(event: CollectedEvent) {\n        this.listRef.current?.scrollToEvent(event);\n    }\n\n    @action.bound\n    onScrollToCenterEvent(event: CollectedEvent) {\n        this.listRef.current?.scrollToCenterEvent(event);\n    }\n\n    @action.bound\n    onScrollToEnd() {\n        this.listRef.current?.scrollToEnd();\n    }\n}\n\nconst LeftPane = styled.div`\n    position: relative;\n\n    height: 100%;\n    box-sizing: border-box;\n\n    display: flex;\n    flex-direction: column;\n`;\n\nconst StyledViewPage = styled(\n    // Exclude stores etc from the external props, as they're injected\n    ViewPage as unknown as WithInjected<typeof ViewPage,\n        'uiStore' | 'proxyStore' | 'eventsStore' | 'rulesStore' | 'accountStore' | 'navigate'\n    >\n)`\n    height: 100vh;\n    position: relative;\n`;\n\nexport { StyledViewPage as ViewPage };","import * as React from 'react';\n\nimport { styled } from '../../styles';\nimport { Icon } from '../../icons';\n\nconst FloatingDragHandle = styled.div`\n    position: absolute;\n    left: -31px;\n    top: calc(50% - 1px);\n    transform: translateY(-50%);\n\n    cursor: row-resize;\n\n    opacity: 0;\n\n    :focus, :active {\n        outline: none;\n        opacity: 0.5;\n        color: ${p => p.theme.popColor};\n    }\n\n    && svg {\n        margin: 0;\n    }\n`;\n\nexport const DragHandle = styled((props: {}) =>\n    <FloatingDragHandle {...props}>\n        <Icon icon={['fas', 'grip-vertical']} />\n    </FloatingDragHandle>\n)``;","import * as _ from 'lodash';\nimport * as React from 'react';\n\nimport { styled, css } from '../../styles';\nimport { IconProp } from '../../icons';\n\nimport { IconButton } from '../common/icon-button';\n\nexport const IconMenu = styled.div<{ topOffset: number }>`\n    position: absolute;\n    top: ${p => p.topOffset}px;\n    right: 10px;\n\n    display: none; /* Made flex by container, on hover/expand */\n    flex-direction: row-reverse;\n    align-items: center;\n`;\n\nexport const IconMenuButton = styled(React.memo((p: {\n    className?: string,\n    icon: IconProp,\n    title: string,\n    onClick: (event: React.MouseEvent) => void,\n    disabled?: boolean\n}) => <IconButton\n    className={p.className}\n    icon={p.icon}\n    title={p.title}\n    disabled={p.disabled}\n    onClick={p.onClick}\n/>))`\n    padding: 5px;\n    margin: 0 5px;\n\n    z-index: 10;\n\n    font-size: 1.2em;\n\n    > svg {\n        display: block;\n    }\n\n    :disabled {\n        opacity: 1;\n        color: ${p => p.theme.containerWatermark};\n    }\n\n    :not(:disabled) {\n        cursor: pointer;\n        color: ${p => p.theme.primaryInputBackground};\n\n        &:hover, &:focus {\n            outline: none;\n            color: ${p => p.theme.popColor};\n        }\n    }\n`;","import * as React from 'react';\nimport { action } from 'mobx';\nimport { observer, Observer } from 'mobx-react-lite'\nimport { Method, matchers } from 'mockttp';\nimport {\n    Draggable,\n    DraggingStyle,\n    NotDraggingStyle,\n    DraggableStateSnapshot\n} from 'react-beautiful-dnd';\n\nimport { styled, css } from '../../styles';\nimport { Icon } from '../../icons';\n\nimport {\n    isRuleGroup,\n    ItemPath,\n    HtkMockRuleGroup,\n    mapRules,\n    flattenRules\n} from '../../model/rules/rules-structure';\nimport { getMethodColor } from '../../model/events/categorization';\n\nimport { clickOnEnter, noPropagation } from '../component-utils';\nimport { TextInput } from '../common/inputs';\nimport { DragHandle } from './mock-drag-handle';\nimport { IconMenu, IconMenuButton } from './mock-item-menu';\n\nconst CollapsedItemPlaceholder = styled.div<{\n    index: number,\n    borderColor: string,\n    activated: boolean\n}>`\n    position: absolute;\n    top: calc(50% - ${p => p.index * 3}px);\n    transform: translateY(-50%);\n    height: 150%;\n\n    left: calc(-5px + ${p => p.index * 10}px);\n    right: ${p => p.index * 10}px;\n\n    background-color: ${p => p.theme.mainBackground};\n    border-radius: 4px;\n    box-shadow: 0 2px 10px 0 rgba(0,0,0,${p => p.theme.boxShadowAlpha});\n\n    opacity: ${p => (p.activated ? 1 : 0.6) - p.index * 0.2};\n    z-index: ${p => 9 - p.index};\n\n    border-left: 5px solid ${(p) => p.borderColor};\n`;\n\nconst TitleButtonContainer = styled.div`\n    display: none; /* Made flex by container, on hover/expand */\n    flex-direction: row;\n    align-items: center;\n    margin-left: 5px;\n`;\n\nconst TitleButton = styled(IconMenuButton)`\n    font-size: 1em;\n    padding: 0;\n`;\n\nconst RuleGroupMenu = (p: {\n    toggleState: boolean,\n    onToggleActivation: (event: React.MouseEvent) => void,\n    onClone: (event: React.MouseEvent) => void,\n    onDelete: (event: React.MouseEvent) => void,\n}) => <IconMenu topOffset={-2}>\n    <IconMenuButton\n        title='Delete these rules'\n        icon={['far', 'trash-alt']}\n        onClick={p.onDelete}\n    />\n    <IconMenuButton\n        title='Clone this rule'\n        icon={['far', 'clone']}\n        onClick={p.onClone}\n    />\n    <IconMenuButton\n        title={p.toggleState ? 'Deactivate these rules' : 'Activate these rules'}\n        icon={['fas', p.toggleState ? 'toggle-on' : 'toggle-off']}\n        onClick={p.onToggleActivation}\n    />\n</IconMenu>;\n\nconst GroupHeaderContainer = styled.header<{\n    depth: number,\n    collapsed: boolean,\n    editingTitle: boolean\n}>`\n    ${p => p.collapsed\n        ? `\n            margin-top: 22px;\n            margin-bottom: 17px;\n        `\n        : `\n            margin-top: 10px;\n        `\n    }\n\n    width: calc(100% - 5px - ${p => p.depth * 40}px);\n    margin-left: calc(5px + ${p => p.depth * 40}px);\n\n    transition: padding 0.1s ease-out;\n    padding: ${p => p.collapsed\n        ? '5px 20px 5px 15px'\n        : '5px 20px 5px 0px'};\n    box-sizing: border-box;\n\n    display: flex;\n    align-items: center;\n\n    position: relative;\n\n    cursor: pointer;\n    &:focus {\n        outline: none;\n        > h2 > svg {\n            color: ${p => p.theme.popColor};\n        }\n    }\n    &:hover {\n        ${DragHandle} {\n            opacity: 0.5;\n        }\n\n        ${TitleButtonContainer}, ${IconMenu} {\n            display: flex;\n        }\n\n        ${p => !p.collapsed\n            ? 'text-shadow: 0 0 5px rgba(0,0,0,0.2);'\n            : css`\n                > ${CollapsedItemPlaceholder} {\n                    box-shadow: 0 2px 20px 0 rgba(0,0,0,${p => p.theme.boxShadowAlpha});\n                }\n            `\n        }\n    }\n\n    ${p => p.editingTitle && css`\n        ${TitleButtonContainer} {\n            display: flex;\n        }\n    `}\n\n    font-size: ${(p) => p.theme.headingSize};\n\n    > h2 {\n        user-select: none;\n        z-index: 10;\n\n        > svg {\n            margin-right: 10px;\n        }\n    }\n\n    input[type=text] {\n        margin: -7px 0;\n        position: relative;\n        top: -3px;\n    }\n`;\n\nconst extendGroupDraggableStyles = (\n    style: DraggingStyle | NotDraggingStyle | undefined,\n    snapshot: DraggableStateSnapshot\n) => {\n    const overrideStyles: _.Dictionary<string> = { };\n\n    if (style && style.transition) {\n        overrideStyles.transition = style.transition.replace(\n            /transform [\\d.]+s/,\n            'transform 100ms'\n        );\n    }\n\n    if (snapshot.combineWith && snapshot.combineWith.endsWith('-tail')) {\n        overrideStyles.opacity = '1';\n    }\n\n    return {\n        ...style,\n        ...overrideStyles\n    };\n};\n\nconst isFullyActiveGroup = (group: HtkMockRuleGroup) =>\n    flattenRules(group).every(r => r.activated);\n\nexport const GroupHeader = observer((p: {\n    group: HtkMockRuleGroup,\n    path: ItemPath,\n    index: number,\n    collapsed: boolean,\n\n    updateGroupTitle: (groupId: string, title: string) => void,\n    cloneGroup: (path: ItemPath) => void\n    deleteGroup: (path: ItemPath) => void\n}) => {\n    const [isEditing, setEditing] = React.useState(false);\n    const [unsavedTitle, setUnsavedTitle] = React.useState(p.group.title);\n\n    const toggleCollapsed = action(() => { p.group.collapsed = !p.group.collapsed });\n\n    const startEditing = () => {\n        setEditing(true);\n        setUnsavedTitle(p.group.title);\n    };\n    const editTitle = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setUnsavedTitle(e.target.value)\n    }\n    const resetTitle = () => {\n        setEditing(false);\n    };\n    const saveTitle = () => {\n        setEditing(false);\n        p.updateGroupTitle(p.group.id, unsavedTitle);\n    };\n\n    const allRulesActivated = isFullyActiveGroup(p.group);\n    const toggleActivation = noPropagation(action(() => {\n        mapRules(p.group, (rule) => {\n            rule.activated = !allRulesActivated;\n        });\n    }));\n\n    const deleteGroup = noPropagation(() => p.deleteGroup(p.path));\n    const cloneGroup = noPropagation(() => p.cloneGroup(p.path));\n\n    return <Draggable\n        draggableId={p.group.id}\n        index={p.index}\n    >{ (provided, snapshot) => <Observer>{ () =>\n        <GroupHeaderContainer\n            depth={p.path.length - 1}\n            collapsed={p.collapsed}\n            editingTitle={isEditing}\n\n            {...provided.draggableProps}\n            style={extendGroupDraggableStyles(provided.draggableProps.style, snapshot)}\n            ref={provided.innerRef}\n\n            onClick={toggleCollapsed}\n            onKeyPress={clickOnEnter}\n            tabIndex={0}\n        >\n            <DragHandle {...provided.dragHandleProps} />\n\n            <h2>\n                <Icon\n                    icon={['fas', p.group.collapsed ? 'chevron-down' : 'chevron-up']}\n                />\n                { isEditing\n                    ? <TextInput\n                        autoFocus\n                        value={unsavedTitle}\n                        onChange={editTitle}\n                        onClick={(e) => e.stopPropagation()}\n                        onKeyPress={(e) => {\n                            if (e.key === 'Enter') saveTitle();\n                        }}\n                    />\n                    : p.group.title\n                }\n            </h2>\n\n            <TitleButtonContainer>\n                { isEditing\n                    ? <>\n                        <TitleButton\n                            title=\"Save group name\"\n                            icon={['fas', 'save']}\n                            onClick={noPropagation(saveTitle)}\n                        />\n                        <TitleButton\n                            title=\"Reset group name\"\n                            icon={['fas', 'undo']}\n                            onClick={noPropagation(resetTitle)}\n                        />\n                    </>\n                    : <TitleButton\n                        title=\"Edit group name\"\n                        icon={['fas', 'edit']}\n                        onClick={noPropagation(startEditing)}\n                    />\n                }\n            </TitleButtonContainer>\n\n            <RuleGroupMenu\n                toggleState={allRulesActivated}\n                onToggleActivation={toggleActivation}\n                onClone={cloneGroup}\n                onDelete={deleteGroup}\n            />\n\n            { p.collapsed && p.group.items.slice(0, 5).map((item, index) => {\n                const initialMatcher = isRuleGroup(item) ? undefined : item.matchers[0];\n                const method = initialMatcher === undefined\n                        ? undefined\n                    : initialMatcher instanceof matchers.MethodMatcher\n                        ? Method[initialMatcher.method]\n                    : 'unknown'\n\n                const borderColor = method === undefined\n                    ? 'transparent'\n                    : getMethodColor(method);\n\n                const activated = isRuleGroup(item)\n                    ? isFullyActiveGroup(item)\n                    : item.activated;\n\n                return <CollapsedItemPlaceholder\n                    key={index}\n                    index={index}\n                    borderColor={borderColor}\n                    activated={activated}\n                />\n            }) }\n        </GroupHeaderContainer>\n    }</Observer>}</Draggable>;\n});\n\nconst GroupTailPlaceholder = styled.div`\n    width: 100%;\n    height: 30px;\n    margin-bottom: -20px;\n`;\n\nexport const GroupTail = (p: { group: HtkMockRuleGroup, index: number }) =>\n    <Draggable\n        draggableId={p.group.id + '-tail'}\n        index={p.index}\n        isDragDisabled={true}\n    >{ (provided) =>\n        <GroupTailPlaceholder\n            {...provided.draggableProps}\n            ref={provided.innerRef}\n        />\n    }</Draggable>;","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { observable, action, autorun, runInAction, reaction, computed } from 'mobx';\nimport { observer, disposeOnUnmount } from 'mobx-react';\nimport * as Randexp from 'randexp';\n\nimport { matchers, Method, RawHeaders } from \"mockttp\";\n\nimport { css, styled } from '../../styles';\n\nimport { tryParseJson } from '../../util';\nimport { asError, UnreachableCheck } from '../../util/error';\nimport {\n    FlatHeaders,\n    headersToFlatHeaders,\n    headersToRawHeaders,\n    rawHeadersToHeaders\n} from '../../util/headers';\n\nimport {\n    Matcher,\n    MatcherClass,\n    MatcherClassKeyLookup,\n    InitialMatcher,\n    InitialMatcherKey,\n    AdditionalMatcherKey,\n    getRulePartKey,\n    isHiddenMatcherKey\n} from '../../model/rules/rules';\nimport { summarizeMatcherClass } from '../../model/rules/rule-descriptions';\nimport {\n    WebSocketMethodMatcher\n} from '../../model/rules/definitions/websocket-rule-definitions';\nimport {\n    EthereumMethod,\n    EthereumMethodMatcher,\n    EthereumMethods,\n    EthereumParamsMatcher\n} from '../../model/rules/definitions/ethereum-rule-definitions';\nimport {\n    IpfsInteraction,\n    IpfsInteractionMatcher,\n    IpfsArgMatcher,\n    IpfsInteractions,\n    IpfsArgDescription\n} from '../../model/rules/definitions/ipfs-rule-definitions';\nimport {\n    HasDataChannelMatcherDefinition,\n    HasVideoTrackMatcherDefinition,\n    HasAudioTrackMatcherDefinition,\n    HasMediaTrackMatcherDefinition\n} from '../../model/rules/definitions/rtc-rule-definitions';\n\nimport { Select, TextInput } from '../common/inputs';\nimport { EditablePairs, PairsArray } from '../common/editable-pairs';\nimport { EditableHeaders } from '../common/editable-headers';\nimport { SelfSizedEditor } from '../editor/base-editor';\n\ntype MatcherConfigProps<M extends Matcher> = {\n    matcher?: M;\n    matcherIndex: number | undefined,\n    onChange: (...matchers: Matcher[] & { 0?: M }) => void;\n    onInvalidState: () => void;\n};\n\nabstract class MatcherConfig<M extends Matcher, P = {}> extends\n    React.Component<MatcherConfigProps<M> & P> { }\n\nexport function InitialMatcherConfiguration(props: {\n        matcher?: InitialMatcher,\n        onChange: (matcher: InitialMatcher) => void\n    }\n) {\n    const { matcher } = props;\n\n    // If no there's matcher class selected, we have no config to show:\n    if (!matcher) return null;\n\n    const matcherKey = getRulePartKey(matcher) as InitialMatcherKey;\n\n    const configProps = {\n        matcher: matcher as any,\n        matcherIndex: 0,\n        onChange: props.onChange,\n        onInvalidState: _.noop\n    };\n\n    switch (matcherKey) {\n        case 'eth-method':\n            return <EthereumMethodMatcherConfig {...configProps} />;\n        case 'ipfs-interaction':\n            return <IpfsInteractionMatcherConfig {...configProps} />;\n        // All the other initial matchers need no configuration:\n        case 'wildcard':\n        case 'ws-wildcard':\n        case 'default-wildcard':\n        case 'default-ws-wildcard':\n        case 'rtc-wildcard':\n        case 'GET':\n        case 'POST':\n        case 'PUT':\n        case 'PATCH':\n        case 'DELETE':\n        case 'HEAD':\n        case 'OPTIONS':\n            return null;\n        default:\n            throw new UnreachableCheck(matcherKey);\n    }\n}\n\nexport function AdditionalMatcherConfiguration(props:\n    ({ matcher: Matcher } | { matcherClass?: MatcherClass }) & {\n        matcherIndex: number | undefined,\n        onChange: (...matchers: Matcher[]) => void,\n        onInvalidState?: () => void\n    }\n) {\n    const { matcher } = props as { matcher?: Matcher };\n    const { matcherClass } = props as { matcherClass?: MatcherClass };\n\n    let matcherKey = ('matcher' in props\n        ? getRulePartKey(props.matcher)\n        : MatcherClassKeyLookup.get(props.matcherClass!)\n    ) as AdditionalMatcherKey | undefined;\n\n    // If no there's matcher class selected, we have no config to show:\n    if (!matcherKey) return null;\n\n    if (isHiddenMatcherKey(matcherKey)) {\n        // This only happens, when we load a rule from elsewhere (defaults or file), and then\n        // you try to configure it. Notably case: the am-i-using matcher.\n\n        if (matcher && !isHiddenMatcherKey(matcher.type)) {\n            // For special cases like these, we show and allow reconfiguring the rule as its non-hidden\n            // base type, if there is one. I.e. we give some matchers a special display, which isn't selectable\n            // but we allow modifying them as a normal selectable format if you want to mess around.\n            matcherKey = matcher.type as AdditionalMatcherKey;\n        } else {\n            throw new Error(`Cannot configure hidden matcher type ${matcherKey}`);\n        }\n    }\n\n    const configProps = {\n        matcher: matcher as any,\n        matcherIndex: props.matcherIndex,\n        onChange: props.onChange,\n        onInvalidState: props.onInvalidState || _.noop\n    };\n\n    switch (matcherKey) {\n        case 'method':\n            return <WsMethodMatcherConfig {...configProps} />;\n        case 'host':\n            return <HostMatcherConfig {...configProps} />;\n        case 'simple-path':\n            return <SimplePathMatcherConfig {...configProps} />;\n        case 'regex-path':\n            return <RegexPathMatcherConfig {...configProps} />;\n        case 'query':\n            return <QueryMatcherConfig {...configProps} />;\n        case 'exact-query-string':\n            return <ExactQueryMatcherConfig {...configProps} />;\n        case 'header':\n            return <HeaderMatcherConfig {...configProps} />;\n        case 'raw-body':\n            return <RawBodyExactMatcherConfig {...configProps} />;\n        case 'raw-body-includes':\n            return <RawBodyIncludesMatcherConfig {...configProps} />;\n        case 'json-body':\n            return <JsonBodyExactMatcherConfig {...configProps} />;\n        case 'json-body-matching':\n            return <JsonBodyIncludingMatcherConfig {...configProps} />;\n        case 'eth-params':\n            return <EthParamsMatcherConfig {...configProps} />;\n        case 'ipfs-arg':\n            return <IpfsArgMatcherConfig {...configProps} />;\n\n        case 'has-rtc-data-channel':\n        case 'has-rtc-video-track':\n        case 'has-rtc-audio-track':\n        case 'has-rtc-media-track':\n            return <RTCContentMatcherConfig\n                matcherKey={matcherKey}\n                matcherClass={matcherClass as any} // Any because it must be the class for this key\n                {...configProps}\n            />;\n\n        default:\n            throw new UnreachableCheck(matcherKey);\n    }\n}\n\nconst ConfigLabel = styled.label`\n    margin: 5px 0;\n\n    text-transform: uppercase;\n    font-size: ${p => p.theme.textSize};\n    opacity: ${p => p.theme.lowlightTextOpacity};\n`;\n\nconst MatcherConfigContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\n\n@observer\nclass WsMethodMatcherConfig extends MatcherConfig<WebSocketMethodMatcher> {\n\n    private fieldId = _.uniqueId();\n\n    @observable\n    private method: Method = Method.GET;\n\n    componentDidMount() {\n        disposeOnUnmount(this, autorun(() => {\n            const method = this.props.matcher?.method ?? Method.GET;\n            runInAction(() => { this.method = method });\n        }));\n\n        // The matcher is valid by default, so immediately announce that (making the\n        // add button enabled) if this is a new matcher that we're adding:\n        if (!this.props.matcher) {\n            this.props.onChange(new WebSocketMethodMatcher(this.method));\n        }\n    }\n\n    render() {\n        const { method } = this;\n        const { matcherIndex } = this.props;\n\n        const methodName = Method[method];\n\n        // Extract the real numeric enum values from the TS enum:\n        const methodValues = Object.values(Method).filter(n => !isNaN(Number(n))) as Method[];\n\n        return <MatcherConfigContainer title={\n            methodName\n                ? `Matches all ${\n                    methodName\n                } requests`\n                : undefined\n        }>\n            { matcherIndex !== undefined &&\n                <ConfigLabel htmlFor={this.fieldId}>\n                    { matcherIndex !== 0 && 'and ' } with method\n                </ConfigLabel>\n            }\n            <Select\n                id={this.fieldId}\n                value={method}\n                onChange={this.onChange}\n            >\n                { methodValues.map((method) =>\n                    <option value={method} key={method}>\n                        { Method[method] }\n                    </option>\n                )}\n            </Select>\n        </MatcherConfigContainer>;\n    }\n\n    @action.bound\n    onChange(event: React.ChangeEvent<HTMLSelectElement>) {\n        this.method = parseInt(event.currentTarget.value, 10);\n        this.props.onChange(new WebSocketMethodMatcher(this.method));\n    }\n}\n\n@observer\nclass EthereumMethodMatcherConfig extends React.Component<{\n    matcher?: EthereumMethodMatcher;\n    matcherIndex: number | undefined,\n    onChange: (matcher: InitialMatcher) => void;\n}> {\n\n    private fieldId = _.uniqueId();\n\n    @observable\n    private method: EthereumMethod = 'eth_call';\n\n    componentDidMount() {\n        disposeOnUnmount(this, autorun(() => {\n            const method = this.props.matcher?.methodName ?? 'eth_call';\n            runInAction(() => { this.method = method });\n        }));\n\n        // The matcher is valid by default, so immediately announce that (making the\n        // add button enabled) if this is a new matcher that we're adding:\n        if (!this.props.matcher) {\n            this.props.onChange(new EthereumMethodMatcher(this.method));\n        }\n    }\n\n    render() {\n        const { method } = this;\n\n        return <MatcherConfigContainer title={\n            `Match ${\n                method\n            } requests to Ethereum nodes`\n        }>\n            <ConfigLabel htmlFor={this.fieldId}>\n                Requesting a node to\n            </ConfigLabel>\n            <Select\n                id={this.fieldId}\n                value={method}\n                onChange={this.onChange}\n            >\n                { (Object.keys(EthereumMethods) as EthereumMethod[]).map((method) =>\n                    <option value={method} key={method}>\n                        { EthereumMethods[method] }\n                    </option>\n                )}\n            </Select>\n        </MatcherConfigContainer>;\n    }\n\n    @action.bound\n    onChange(event: React.ChangeEvent<HTMLSelectElement>) {\n        this.method = event.currentTarget.value as EthereumMethod;\n        this.props.onChange(new EthereumMethodMatcher(this.method));\n    }\n}\n\n@observer\nclass IpfsInteractionMatcherConfig extends React.Component<{\n    matcher?: IpfsInteractionMatcher;\n    matcherIndex: number | undefined,\n    onChange: (matcher: InitialMatcher) => void;\n}> {\n\n    private fieldId = _.uniqueId();\n\n    @observable\n    private interaction: IpfsInteraction = 'cat';\n\n    componentDidMount() {\n        disposeOnUnmount(this, autorun(() => {\n            const interaction = this.props.matcher?.interactionName ?? 'cat';\n            runInAction(() => { this.interaction = interaction });\n        }));\n\n        // The matcher is valid by default, so immediately announce that (making the\n        // add button enabled) if this is a new matcher that we're adding:\n        if (!this.props.matcher) {\n            this.props.onChange(new IpfsInteractionMatcher(this.interaction));\n        }\n    }\n\n    render() {\n        const { interaction } = this;\n\n        return <MatcherConfigContainer title={\n            `Match ${\n                interaction\n            } IPFS interactions`\n        }>\n            <ConfigLabel htmlFor={this.fieldId}>\n                Requesting an IPFS node to\n            </ConfigLabel>\n            <Select\n                id={this.fieldId}\n                value={interaction}\n                onChange={this.onChange}\n            >\n                { (Object.keys(IpfsInteractions) as IpfsInteraction[]).map((interaction) =>\n                    <option value={interaction} key={interaction}>\n                        { IpfsInteractions[interaction] }\n                    </option>\n                )}\n            </Select>\n        </MatcherConfigContainer>;\n    }\n\n    @action.bound\n    onChange(event: React.ChangeEvent<HTMLSelectElement>) {\n        this.interaction = event.currentTarget.value as IpfsInteraction;\n        this.props.onChange(new IpfsInteractionMatcher(this.interaction));\n    }\n}\n\n@observer\nclass HostMatcherConfig extends MatcherConfig<matchers.HostMatcher> {\n\n    private fieldId = _.uniqueId();\n\n    @observable\n    private error: Error | undefined;\n\n    @observable\n    private host = '';\n\n    componentDidMount() {\n        disposeOnUnmount(this, autorun(() => {\n            const host = this.props.matcher ? this.props.matcher.host : '';\n            runInAction(() => { this.host = host });\n        }));\n    }\n\n    render() {\n        const { host } = this;\n        const { matcherIndex } = this.props;\n\n        return <MatcherConfigContainer title={\n            host\n                ? `Matches all requests to ${\n                    host\n                }, regardless of their path or protocol`\n                : undefined\n        }>\n            { matcherIndex !== undefined &&\n                <ConfigLabel htmlFor={this.fieldId}>\n                    { matcherIndex !== 0 && 'and ' } for host\n                </ConfigLabel>\n            }\n            <TextInput\n                id={this.fieldId}\n                invalid={!!this.error}\n                spellCheck={false}\n                value={host}\n                onChange={this.onChange}\n                placeholder='A specific host to match: example.com'\n            />\n        </MatcherConfigContainer>;\n    }\n\n    @action.bound\n    onChange(event: React.ChangeEvent<HTMLInputElement>) {\n        this.host = event.target.value;\n\n        try {\n            this.props.onChange(new matchers.HostMatcher(this.host));\n            this.error = undefined;\n            event.target.setCustomValidity('');\n        } catch (e) {\n            console.log(e);\n\n            this.error = asError(e);\n            this.props.onInvalidState();\n            event.target.setCustomValidity(this.error.message);\n        }\n        event.target.reportValidity();\n    }\n}\n\n@observer\nclass SimplePathMatcherConfig extends MatcherConfig<matchers.SimplePathMatcher> {\n\n    private fieldId = _.uniqueId();\n\n    @observable\n    private error: Error | undefined;\n\n    @observable\n    private url = '';\n\n    componentDidMount() {\n        // Avoid overriding state for new matchers, this lets us allow ? in the\n        // string initially, and delay splitting into two matchers until later.\n        if (this.props.matcherIndex === undefined) return;\n\n        disposeOnUnmount(this, autorun(() => {\n            const url = this.props.matcher ? this.props.matcher.path : '';\n\n            runInAction(() => { this.url = url });\n        }));\n    }\n\n    render() {\n        const { url } = this;\n        const { matcherIndex } = this.props;\n\n        const urlMatch = (/(\\w+:\\/\\/)?([^/?#]+)?(\\/[^?#]*)?/.exec(url) || []);\n        const [fullMatch, protocol, host, path] = urlMatch;\n\n        return <MatcherConfigContainer title={\n            (host || path)\n                ? `Matches ${\n                    protocol ? protocol.slice(0, -3) : 'any'\n                } requests to ${\n                    host ? `host ${host}` : 'any host'\n                } at ${\n                    path ? `path ${path}` : 'path /'\n                }`\n                : undefined\n        }>\n            { matcherIndex !== undefined &&\n                <ConfigLabel htmlFor={this.fieldId}>\n                    { matcherIndex !== 0 && 'and ' } for URL\n                </ConfigLabel>\n            }\n            <TextInput\n                id={this.fieldId}\n                invalid={!!this.error}\n                spellCheck={false}\n                value={url}\n                onChange={this.onChange}\n                placeholder='A specific URL to match: http://example.com/abc'\n            />\n        </MatcherConfigContainer>;\n    }\n\n    ensurePathIsValid() {\n        if (!this.url) throw new Error('The URL must not be empty');\n\n        // If you start a URL with a protocol, it must be fully parseable:\n        if (this.url.match(/\\w+:\\//)) {\n            new URL(this.url);\n        }\n\n        // We leave the rest of the parsing to the SimplePathMatcher itself\n    }\n\n    @action.bound\n    onChange(event: React.ChangeEvent<HTMLInputElement>) {\n        this.url = event.target.value.split('#')[0];\n\n        try {\n            this.ensurePathIsValid();\n\n            const [baseUrl, query] = this.url.split('?');\n\n            if (query === undefined) {\n                this.props.onChange(new matchers.SimplePathMatcher(baseUrl));\n            } else {\n                if (this.props.matcherIndex !== undefined) this.url = baseUrl;\n\n                this.props.onChange(\n                    new matchers.SimplePathMatcher(baseUrl),\n                    new matchers.ExactQueryMatcher('?' + query)\n                );\n            }\n            this.error = undefined;\n            event.target.setCustomValidity('');\n        } catch (e) {\n            console.log(e);\n\n            this.error = asError(e);\n            this.props.onInvalidState();\n            event.target.setCustomValidity(this.error.message);\n        }\n        event.target.reportValidity();\n    }\n}\n\nfunction unescapeRegexp(input: string): string {\n    return input.replace(/\\\\\\//g, '/');\n}\n\nconst RegexInput = styled(TextInput)`\n    font-family: ${p => p.theme.monoFontFamily};\n`;\n\n// A crazy (but fun) regex to spot literal ? characters in regular expression strings.\n// Has some false (crazy) negatives but should have no false positives. Example false negative: [\\]?]\n// This is a big silly - if it ever breaks, fall back to using regjsparser instead (spot codepoint 63)\nconst containsLiteralQuestionMark = /([^\\\\]|^)\\\\(\\?|u003F|x3F)|([^\\\\]|^)\\[[^\\]]*(\\?|u003F|x3F)/;\n\n@observer\nclass RegexPathMatcherConfig extends MatcherConfig<matchers.RegexPathMatcher> {\n\n    private fieldId = _.uniqueId();\n\n    @observable\n    private error: Error | undefined;\n\n    @observable\n    private pattern = '';\n\n    componentDidMount() {\n        disposeOnUnmount(this, autorun(() => {\n            const pattern = this.props.matcher\n                ? unescapeRegexp(this.props.matcher.regexSource)\n                : '';\n\n            runInAction(() => { this.pattern = pattern });\n        }));\n    }\n\n    render() {\n        const { matcherIndex } = this.props;\n\n        let examples: string[] = [];\n        let matchType: 'including' | 'that start with' | 'that end with' | 'like' = 'like';\n\n        if (!this.error && this.props.matcher) {\n            const { regexSource } = this.props.matcher;\n            const regex = new RegExp(regexSource);\n            const exp = new Randexp(regex);\n\n            exp.defaultRange.subtract(32, 47); // Symbols\n            exp.defaultRange.subtract(58, 64); // More symbols\n            exp.defaultRange.subtract(123, 126); // Yet more symbols\n\n            // For infinite ranges (.*), use up to 10 chars\n            exp.max = 10;\n\n            examples = _.uniq([exp.gen(), exp.gen(), exp.gen()])\n                .filter((example) => example.length && example.match(regex))\n                .sort();\n\n            matchType =\n                (regexSource.startsWith('^') && regexSource.endsWith('$'))\n                    ? 'like'\n                : regexSource.startsWith('^')\n                    ? 'that start with'\n                : regexSource.endsWith('$')\n                    ? 'that end with'\n                : 'including';\n        }\n\n        return <MatcherConfigContainer title={\n                examples.length === 0\n                    ? undefined\n                : examples.length === 1\n                    ? `Would match absolute URLs ${matchType} ${examples[0]}`\n                : `Would match absolute URLs ${matchType}:\\n\\n${examples.join('\\n')}`\n            }>\n            { matcherIndex !== undefined &&\n                <ConfigLabel htmlFor={this.fieldId}>\n                    { matcherIndex !== 0 && 'and ' } for URLs matching\n                </ConfigLabel>\n            }\n            <RegexInput\n                id={this.fieldId}\n                invalid={!!this.error}\n                spellCheck={false}\n                value={this.pattern}\n                onChange={this.onChange}\n                placeholder='Any regular expression: https?://abc.com/.*'\n            />\n        </MatcherConfigContainer>;\n    }\n\n    @action.bound\n    onChange(event: React.ChangeEvent<HTMLInputElement>) {\n        this.pattern = event.target.value;\n\n        try {\n            if (!this.pattern) throw new Error('A pattern to match is required');\n            if (this.pattern.match(containsLiteralQuestionMark)) {\n                throw new Error(\n                    'Query strings are matched separately, so a literal ? character will never match'\n                );\n            }\n            this.props.onChange(\n                new matchers.RegexPathMatcher(new RegExp(this.pattern))\n            );\n            this.error = undefined;\n            event.target.setCustomValidity('');\n        } catch (e) {\n            console.log(e);\n\n            this.error = asError(e);\n            this.props.onInvalidState();\n            event.target.setCustomValidity(this.error.message);\n        }\n        event.target.reportValidity();\n    }\n}\n\ntype QueryObject = { [key: string]: string | string[] };\n\nconst queryObjectToPairsArray = (query: QueryObject): PairsArray =>\n    _.flatMap(Object.entries(query), ([key, value]) => {\n        if (_.isArray(value)) {\n            return value.map((v) => ({ key, value: v }));\n        } else {\n            return { key, value };\n        }\n    });\n\nconst pairsArrayToQueryObject = (queryPairs: PairsArray): QueryObject =>\n    _.mapValues(\n        _.groupBy(queryPairs, ({ key }) => key),\n        (pairs) =>\n            pairs.length === 1\n            ? pairs[0].value // Work around a Mockttp bug: 1-element arrays don't match single values\n            : pairs.map(p => p.value)\n    );\n\n@observer\nclass QueryMatcherConfig extends MatcherConfig<matchers.QueryMatcher> {\n\n    render() {\n        const { matcherIndex, matcher } = this.props;\n\n        const queryParams = queryObjectToPairsArray(matcher?.queryObject || {});\n\n        return <MatcherConfigContainer>\n            { matcherIndex !== undefined &&\n                <ConfigLabel>\n                    { matcherIndex !== 0 && 'and ' } with query parameters including\n                </ConfigLabel>\n            }\n            <EditablePairs\n                pairs={queryParams}\n                convertResult={pairsArrayToQueryObject}\n                onChange={this.onChange}\n                keyPlaceholder='Query parameter name'\n                valuePlaceholder='Query parameter value'\n                allowEmptyValues={true}\n            />\n        </MatcherConfigContainer>;\n    }\n\n    @action.bound\n    onChange(queryParams: QueryObject) {\n        try {\n            if (Object.keys(queryParams).some(key => !key)) {\n                throw new Error(\"Invalid query parameter; query parameter names can't be empty\");\n            }\n\n            if (Object.keys(queryParams).length === 0) {\n                this.props.onChange();\n            } else {\n                this.props.onChange(new matchers.QueryMatcher(queryParams));\n            }\n        } catch (e) {\n            console.log(e);\n            this.props.onInvalidState();\n        }\n    }\n}\n\n@observer\nclass ExactQueryMatcherConfig extends MatcherConfig<matchers.ExactQueryMatcher> {\n\n    private fieldId = _.uniqueId();\n\n    @observable\n    private error: Error | undefined;\n\n    @observable\n    private query = '';\n\n    componentDidMount() {\n        disposeOnUnmount(this, autorun(() => {\n            const query = this.props.matcher ? this.props.matcher.query : '';\n\n            runInAction(() => { this.query = query });\n        }));\n    }\n\n    render() {\n        const { matcherIndex } = this.props;\n\n        return <MatcherConfigContainer>\n            { matcherIndex !== undefined &&\n                <ConfigLabel htmlFor={this.fieldId}>\n                    { matcherIndex !== 0 && 'and ' } with query\n                </ConfigLabel>\n            }\n            <TextInput\n                id={this.fieldId}\n                invalid={!!this.error}\n                spellCheck={false}\n                value={this.query}\n                onChange={this.onChange}\n                placeholder='An exact query string to match, e.g. ?a=b'\n            />\n        </MatcherConfigContainer>;\n    }\n\n    @action.bound\n    onChange(event: React.ChangeEvent<HTMLInputElement>) {\n        this.query = event.target.value;\n\n        try {\n            this.props.onChange(new matchers.ExactQueryMatcher(this.query));\n            this.error = undefined;\n            event.target.setCustomValidity('');\n        } catch (e) {\n            console.log(e);\n\n            this.error = asError(e);\n            this.props.onInvalidState();\n            event.target.setCustomValidity(this.error.message);\n        }\n        event.target.reportValidity();\n    }\n}\n\n@observer\nclass HeaderMatcherConfig extends MatcherConfig<matchers.HeaderMatcher> {\n\n    render() {\n        const { matcherIndex } = this.props;\n\n        const headers = this.props.matcher?.headers || {};\n\n        return <MatcherConfigContainer>\n            { matcherIndex !== undefined &&\n                <ConfigLabel>\n                    { matcherIndex !== 0 && 'and ' } with headers including\n                </ConfigLabel>\n            }\n            <EditableHeaders<FlatHeaders>\n                headers={headers}\n                convertToRawHeaders={this.convertInput}\n                convertFromRawHeaders={this.convertResult}\n                onChange={this.onChange}\n                onInvalidState={this.props.onInvalidState}\n            />\n        </MatcherConfigContainer>;\n    }\n\n    convertInput(input: FlatHeaders) {\n        return headersToRawHeaders(input);\n    }\n\n    convertResult(result: RawHeaders) {\n        return headersToFlatHeaders(rawHeadersToHeaders(result));\n    }\n\n    @action.bound\n    onChange(headers: FlatHeaders) {\n        if (Object.keys(headers).length === 0) {\n            this.props.onChange();\n        } else {\n            this.props.onChange(new matchers.HeaderMatcher(headers));\n        }\n    }\n}\n\nconst BodyContainer = styled.div<{ error?: boolean }>`\n    > div {\n        border-radius: 4px;\n        border: solid 1px ${p => p.theme.containerBorder};\n        padding: 1px;\n\n        ${p => p.error && css`\n            border-color: ${p => p.theme.warningColor};\n        `}\n    }\n`;\n\nclass RawBodyExactMatcherConfig extends MatcherConfig<matchers.RawBodyMatcher> {\n\n    render() {\n        return <RawBodyMatcherConfig\n            {...this.props}\n            matcherClass={matchers.RawBodyMatcher}\n            description='with a decoded body exactly matching'\n        />;\n    }\n\n}\n\nclass RawBodyIncludesMatcherConfig extends MatcherConfig<matchers.RawBodyIncludesMatcher> {\n\n    render() {\n        return <RawBodyMatcherConfig\n            {...this.props}\n            matcherClass={matchers.RawBodyIncludesMatcher}\n            description='with a decoded body including'\n        />;\n    }\n\n}\n\n@observer\nclass RawBodyMatcherConfig<\n    M extends (typeof matchers.RawBodyMatcher | typeof matchers.RawBodyIncludesMatcher)\n> extends MatcherConfig<InstanceType<M>, {\n    matcherClass: M,\n    description: string\n}> {\n\n    @observable\n    private content: string = '';\n\n    componentDidMount() {\n        disposeOnUnmount(this, autorun(() => {\n            const content = this.props.matcher ? this.props.matcher.content : '';\n            runInAction(() => { this.content = content });\n        }));\n\n        // Create the matcher immediately, so that this is already valid & addable,\n        // if that's what you want to do.\n        this.onBodyChange(this.content);\n    }\n\n    render() {\n        const { content } = this;\n        const { matcherIndex } = this.props;\n\n        return <MatcherConfigContainer>\n            { matcherIndex !== undefined &&\n                <ConfigLabel>\n                    { matcherIndex !== 0 && 'and ' } { this.props.description }\n                </ConfigLabel>\n            }\n            <BodyContainer>\n                <SelfSizedEditor\n                    contentId={null}\n                    value={content}\n                    onChange={this.onBodyChange}\n                    language='text'\n                />\n            </BodyContainer>\n        </MatcherConfigContainer>;\n    }\n\n    @action.bound\n    onBodyChange(content: string) {\n        this.content = content;\n        this.props.onChange(new this.props.matcherClass(content) as InstanceType<M>);\n    }\n}\n\nclass JsonBodyExactMatcherConfig extends MatcherConfig<matchers.JsonBodyMatcher> {\n\n    render() {\n        return <JsonMatcherConfig\n            {...this.props}\n            matcherClass={matchers.JsonBodyMatcher}\n            description='with a JSON body equivalent to'\n        />;\n    }\n\n}\n\nclass JsonBodyIncludingMatcherConfig extends MatcherConfig<matchers.JsonBodyFlexibleMatcher> {\n\n    render() {\n        return <JsonMatcherConfig\n            {...this.props}\n            matcherClass={matchers.JsonBodyFlexibleMatcher}\n            description='with a JSON body including'\n        />;\n    }\n\n}\n\n@observer\nclass JsonMatcherConfig<\n    M extends (typeof matchers.JsonBodyMatcher | typeof matchers.JsonBodyFlexibleMatcher)\n> extends MatcherConfig<InstanceType<M>, {\n    matcherClass: M,\n    description: string\n}> {\n\n    @observable\n    private content: string = this.props.matcher?.body\n        ? JSON.stringify(this.props.matcher?.body, null, 2)\n        : '{\\n    \\n}'; // Set up with a convenient open body initially\n\n    @observable\n    private error: Error | undefined;\n\n    componentDidMount() {\n        // When the matcher state changes (only that one direction) so that it's out of\n        // sync with the shown content, update the content here to match.\n        disposeOnUnmount(this, reaction(\n            () => this.props.matcher?.body ?? {},\n            (matcherContent) => {\n                const parsedContent = tryParseJson(this.content);\n\n                // If the matcher has changed and the content here either doesn't parse or\n                // doesn't match the matcher, we override the shown content:\n                if (parsedContent === undefined || !_.isEqual(parsedContent, matcherContent)) {\n                    runInAction(() => {\n                        this.content = JSON.stringify(matcherContent, null, 2);\n                    });\n                }\n            }\n        ));\n\n        // Create the matcher immediately, so that this is already valid & addable,\n        // if that's what you want to do.\n        this.onBodyChange(this.content);\n    }\n\n    render() {\n        const { content, error } = this;\n        const { matcherIndex } = this.props;\n\n        return <MatcherConfigContainer>\n            { matcherIndex !== undefined &&\n                <ConfigLabel>\n                    { matcherIndex !== 0 && 'and ' } { this.props.description }\n                </ConfigLabel>\n            }\n            <BodyContainer error={!!error}>\n                <SelfSizedEditor\n                    contentId={null}\n                    value={content}\n                    onChange={this.onBodyChange}\n                    language='json'\n                />\n            </BodyContainer>\n        </MatcherConfigContainer>;\n    }\n\n    @action.bound\n    onBodyChange(content: string) {\n        this.content = content;\n\n        try {\n            const parsedContent = JSON.parse(content);\n            this.props.onChange(new this.props.matcherClass(parsedContent) as InstanceType<M>);\n            this.error = undefined;\n        } catch (e) {\n            console.log(e);\n            this.error = asError(e);\n            this.props.onInvalidState();\n        }\n    }\n}\n\n@observer\nclass IpfsArgMatcherConfig extends MatcherConfig<IpfsArgMatcher> {\n\n    private fieldId = _.uniqueId();\n\n    @observable\n    private arg: string | undefined;\n\n    @computed get interaction(): IpfsInteraction {\n        return this.props.matcher?.interaction || 'cat';\n    }\n\n    componentDidMount() {\n        disposeOnUnmount(this, autorun(() => {\n            const arg = this.props.matcher?.argValue || undefined;\n            runInAction(() => { this.arg = arg });\n        }));\n    }\n\n    render() {\n        const { matcherIndex } = this.props;\n\n        const { placeholder, argType } = IpfsArgDescription[this.interaction]\n            ?? { placeholder: '', argType: 'IPFS argument' };\n\n        return <MatcherConfigContainer>\n            { matcherIndex !== undefined &&\n                <ConfigLabel htmlFor={this.fieldId}>\n                    { matcherIndex !== 0 && 'and ' } for { argType }\n                </ConfigLabel>\n            }\n            <TextInput\n                id={this.fieldId}\n                spellCheck={false}\n                value={this.arg || ''}\n                onChange={this.onChange}\n                placeholder={placeholder}\n            />\n        </MatcherConfigContainer>;\n    }\n\n    @action.bound\n    onChange(event: React.ChangeEvent<HTMLInputElement>) {\n        this.arg = event.target.value;\n        this.props.onChange(new IpfsArgMatcher(this.interaction, this.arg));\n    }\n}\n\n@observer\nclass EthParamsMatcherConfig extends MatcherConfig<EthereumParamsMatcher> {\n\n    @observable\n    private content: string = this.props.matcher?.params\n        ? JSON.stringify(this.props.matcher?.params, null, 2)\n        : '[\\n    \\n]'; // Set up with a convenient open array body initially\n\n    @observable\n    private error: Error | undefined;\n\n    componentDidMount() {\n        // When the matcher state changes (only that one direction) so that it's out of\n        // sync with the shown content, update the content here to match.\n        disposeOnUnmount(this, reaction(\n            () => this.props.matcher?.params ?? {},\n            (matcherContent) => {\n                const parsedContent = tryParseJson(this.content);\n\n                // If the matcher has changed and the content here either doesn't parse or\n                // doesn't match the matcher, we override the shown content:\n                if (parsedContent === undefined || !_.isEqual(parsedContent, matcherContent)) {\n                    runInAction(() => {\n                        this.content = JSON.stringify(matcherContent, null, 2);\n                    });\n                }\n            }\n        ));\n\n        // Create the matcher immediately, so that this is already valid & addable,\n        // if that's what you want to do.\n        this.onJsonChange(this.content);\n    }\n\n    render() {\n        const { content, error } = this;\n        const { matcherIndex } = this.props;\n\n        return <MatcherConfigContainer>\n            { matcherIndex !== undefined &&\n                <ConfigLabel>\n                    { matcherIndex !== 0 && 'and ' } with Ethereum parameters matching\n                </ConfigLabel>\n            }\n            <BodyContainer error={!!error}>\n                <SelfSizedEditor\n                    contentId={null}\n                    value={content}\n                    onChange={this.onJsonChange}\n                    language='json'\n                />\n            </BodyContainer>\n        </MatcherConfigContainer>;\n    }\n\n    @action.bound\n    onJsonChange(content: string) {\n        this.content = content;\n\n        try {\n            const parsedContent = JSON.parse(content);\n            this.props.onChange(new EthereumParamsMatcher(parsedContent));\n            this.error = undefined;\n        } catch (e) {\n            console.log(e);\n            this.error = asError(e);\n            this.props.onInvalidState();\n        }\n    }\n}\n\n@observer\nclass RTCContentMatcherConfig<T extends\n    | typeof HasDataChannelMatcherDefinition\n    | typeof HasVideoTrackMatcherDefinition\n    | typeof HasAudioTrackMatcherDefinition\n    | typeof HasMediaTrackMatcherDefinition\n> extends MatcherConfig<InstanceType<T>, { matcherClass?: T, matcherKey: InstanceType<T>['type'] }> {\n\n    componentDidMount() {\n        disposeOnUnmount(this, autorun(() => {\n            const { matcher, matcherClass, onChange } = this.props;\n\n            // Instantiate the matcher as-is, showing nothing.\n            if (!matcher && matcherClass) onChange(new matcherClass() as InstanceType<T>);\n        }));\n    }\n\n    render() {\n        const { matcherIndex, matcherKey } = this.props;\n\n        return <MatcherConfigContainer>\n            { matcherIndex !== undefined &&\n                <ConfigLabel>\n                    { matcherIndex !== 0 && 'and ' } {\n                        summarizeMatcherClass(matcherKey)\n                    }\n                </ConfigLabel>\n            }\n        </MatcherConfigContainer>;\n    }\n}","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { action, observable } from 'mobx';\n\nimport { styled } from '../../styles';\nimport { Icon } from '../../icons';\nimport { Button, Select } from '../common/inputs';\n\nimport {\n    Matcher,\n    MatcherClass,\n    MatcherClassKeyLookup,\n    MatcherLookup,\n    MatcherClassKey,\n    InitialMatcher,\n    InitialMatcherClass,\n    getInitialMatchers,\n    getRuleTypeFromInitialMatcher\n} from '../../model/rules/rules';\nimport {\n    summarizeMatcherClass\n} from '../../model/rules/rule-descriptions';\n\nimport {\n    InitialMatcherConfiguration,\n    AdditionalMatcherConfiguration\n} from './matcher-config';\n\nconst getMatcherKey = (m: MatcherClass | Matcher | undefined) =>\n    MatcherClassKeyLookup.get(m as any) || MatcherClassKeyLookup.get(m?.constructor as any);\n\nconst getMatcherClassByKey = (k: MatcherClassKey) => MatcherLookup[k];\n\nconst MatcherRow = styled.li`\n    display: flex;\n    flex-direction: row;\n    margin: 5px 0;\n\n    &:first-child {\n        margin-top: 0;\n    }\n\n    &:last-child {\n        margin-bottom: 0;\n    }\n`;\n\nconst MatcherInputsContainer = styled.div`\n    flex-grow: 1;\n    flex-shrink: 1;\n    width: 0; /* Required to keep body editors resizing properly */\n`;\n\nconst MatcherButton = styled(Button)`\n    font-size: ${p => p.theme.textSize};\n    padding: 6px 10px;\n    display: inline-block;\n    margin-left: 5px;\n\n    flex-grow: 0;\n    flex-shrink: 0;\n`;\n\nconst InitialMatcherConfigContainer = styled.div`\n    &:not(:empty) {\n        margin-top: 5px;\n    }\n`\n\nexport const InitialMatcherRow = React.forwardRef((p: {\n    matcher?: InitialMatcher,\n    onChange: (m: InitialMatcher) => void\n}, ref: React.Ref<HTMLSelectElement>) => {\n    const availableInitialMatchers = getInitialMatchers();\n\n    const [httpMatchers, otherMatchers] = _.partition(availableInitialMatchers, m =>\n        getRuleTypeFromInitialMatcher(getMatcherKey(m)!) === 'http'\n    );\n\n    return <MatcherRow>\n        <MatcherInputsContainer>\n            <Select\n                ref={ref}\n                value={getMatcherKey(p.matcher)}\n                onChange={(event) => {\n                    const value = event.currentTarget.value as MatcherClassKey | undefined;\n                    if (value) {\n                        const MatcherCls = getMatcherClassByKey(value) as InitialMatcherClass;\n                        p.onChange(new MatcherCls());\n                    }\n                }}\n            >\n                { p.matcher === undefined &&\n                    <option value={''}>\n                        Never\n                    </option>\n                }\n\n                <MatcherOptions matchers={httpMatchers} />\n\n                { otherMatchers.length > 0 &&\n                    <optgroup label='Experimental'>\n                        <MatcherOptions matchers={otherMatchers} />\n                    </optgroup>\n                }\n            </Select>\n\n            <InitialMatcherConfigContainer>\n                <InitialMatcherConfiguration\n                    matcher={p.matcher}\n                    onChange={p.onChange}\n                />\n            </InitialMatcherConfigContainer>\n        </MatcherInputsContainer>\n    </MatcherRow>\n});\n\ninterface ExistingMatcherRowProps {\n    matcher: Matcher;\n    matcherIndex: number;\n    onDelete: () => void;\n    onChange: (m: Matcher, ...ms: Matcher[]) => void;\n}\n\n@observer\nexport class ExistingMatcherRow extends React.Component<ExistingMatcherRowProps> {\n    render() {\n        const { matcher, onChange, onDelete, matcherIndex } = this.props;\n\n        return <MatcherRow>\n            <MatcherInputsContainer>\n                <AdditionalMatcherConfiguration\n                    matcherIndex={matcherIndex}\n                    matcher={matcher}\n                    onChange={onChange}\n                />\n            </MatcherInputsContainer>\n\n            <MatcherButton onClick={onDelete}>\n                <Icon icon={['far', 'trash-alt']} />\n            </MatcherButton>\n        </MatcherRow>;\n    }\n}\n\n\nconst MatcherOptions = (p: { matchers: Array<MatcherClass> }) => <>{\n    p.matchers.map((matcher): JSX.Element | null => {\n        const key = getMatcherKey(matcher)!;\n        const description = summarizeMatcherClass(key);\n\n        return <option key={key} value={key}>\n            { description }\n        </option>;\n    })\n}</>\n\nconst NewMatcherConfigContainer = styled.form`\n    :not(:empty) {\n        margin-top: 5px;\n    }\n`;\n\nconst LowlightedOption = styled.option`\n    color: ${p => p.theme.containerWatermark};\n`;\n\n@observer\nexport class NewMatcherRow extends React.Component<{\n    onAdd: (matcher: Matcher) => void,\n    availableMatchers: MatcherClass[],\n    existingMatchers: Matcher[]\n}> {\n\n    @observable\n    matcherClass: MatcherClass | undefined;\n\n    @observable\n    draftMatchers: Array<Matcher> = [];\n\n    @observable\n    invalidMatcherState = false;\n\n    private dropdownRef = React.createRef<HTMLSelectElement>();\n\n    @action.bound\n    selectMatcher(event: React.ChangeEvent<HTMLSelectElement>) {\n        const matcherKey = event.target.value as MatcherClassKey;\n        this.matcherClass = MatcherLookup[matcherKey];\n\n        // Clear the existing matchers:\n        this.updateDraftMatcher();\n    }\n\n    @action.bound\n    updateDraftMatcher(...matchers: Matcher[]) {\n        this.draftMatchers = matchers;\n        this.invalidMatcherState = false;\n    }\n\n    @action.bound\n    markMatcherInvalid() {\n        this.invalidMatcherState = true;\n    }\n\n    @action.bound\n    saveMatcher(e?: React.FormEvent) {\n        if (e) e.preventDefault();\n\n        if (!this.draftMatchers.length) return;\n        this.draftMatchers.forEach(m => this.props.onAdd(m));\n\n        this.matcherClass = undefined;\n        this.draftMatchers = [];\n        this.invalidMatcherState = false;\n\n        // Reset the focus ready to add another element\n        const dropdown = this.dropdownRef.current;\n        if (dropdown) dropdown.focus();\n    }\n\n    render() {\n        const { availableMatchers } = this.props;\n\n        const {\n            matcherClass,\n            draftMatchers,\n            updateDraftMatcher,\n            invalidMatcherState,\n            markMatcherInvalid,\n            saveMatcher\n        } = this;\n\n        return <MatcherRow>\n            <MatcherInputsContainer>\n                <Select\n                    onChange={this.selectMatcher}\n                    value={getMatcherKey(matcherClass) ?? ''}\n                    ref={this.dropdownRef}\n                >\n                    <LowlightedOption value={''}>Add another matcher:</LowlightedOption>\n                    <LowlightedOption disabled>─────────────</LowlightedOption>\n                    <MatcherOptions matchers={availableMatchers} />\n                </Select>\n\n                <NewMatcherConfigContainer onSubmit={\n                    !invalidMatcherState && draftMatchers.length\n                        ? saveMatcher\n                        : (e) => e.preventDefault()\n                }>\n                    { draftMatchers.length >= 1\n                        ? <AdditionalMatcherConfiguration\n                            matcherIndex={undefined}\n                            matcher={draftMatchers[0]}\n                            onChange={updateDraftMatcher}\n                            onInvalidState={markMatcherInvalid}\n                        />\n                        : <AdditionalMatcherConfiguration\n                            matcherIndex={undefined}\n                            matcherClass={matcherClass}\n                            onChange={updateDraftMatcher}\n                            onInvalidState={markMatcherInvalid}\n                        />\n                    }\n                </NewMatcherConfigContainer>\n            </MatcherInputsContainer>\n\n            <MatcherButton\n                disabled={!draftMatchers.length || invalidMatcherState}\n                onClick={saveMatcher}\n            >\n                <Icon icon={['fas', 'plus']} />\n            </MatcherButton>\n        </MatcherRow>;\n    }\n}","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { inject, observer } from 'mobx-react';\n\nimport { styled } from '../../styles';\nimport { UnreachableCheck } from '../../util/error';\n\nimport { RulesStore } from '../../model/rules/rules-store';\nimport { AccountStore } from '../../model/account/account-store';\nimport {\n    HandlerClass,\n    Handler,\n    AvailableHandlerKey,\n    HandlerClassKeyLookup,\n    isPaidHandlerClass,\n    RuleType,\n} from '../../model/rules/rules';\nimport { summarizeHandlerClass } from '../../model/rules/rule-descriptions';\nimport {\n    StaticResponseHandler,\n    ForwardToHostHandler,\n    TransformingHandler,\n    RequestBreakpointHandler,\n    ResponseBreakpointHandler,\n    RequestAndResponseBreakpointHandler,\n    PassThroughHandler,\n    TimeoutHandler,\n    CloseConnectionHandler,\n    ResetConnectionHandler,\n    FromFileResponseHandler\n} from '../../model/rules/definitions/http-rule-definitions';\nimport {\n    WebSocketPassThroughHandler,\n    EchoWebSocketHandlerDefinition,\n    RejectWebSocketHandlerDefinition,\n    ListenWebSocketHandlerDefinition,\n    WebSocketForwardToHostHandler\n} from '../../model/rules/definitions/websocket-rule-definitions';\nimport {\n    EthereumCallResultHandler,\n    EthereumNumberResultHandler,\n    EthereumHashResultHandler,\n    EthereumReceiptResultHandler,\n    EthereumBlockResultHandler,\n    EthereumErrorHandler\n} from '../../model/rules/definitions/ethereum-rule-definitions';\nimport {\n    IpfsCatTextHandler,\n    IpfsCatFileHandler,\n    IpfsAddResultHandler,\n    IpnsResolveResultHandler,\n    IpnsPublishResultHandler,\n    IpfsPinsResultHandler,\n    IpfsPinLsResultHandler\n} from '../../model/rules/definitions/ipfs-rule-definitions';\nimport {\n    DynamicProxyStepDefinition,\n    EchoStepDefinition,\n    CloseStepDefinition,\n    WaitForMediaStepDefinition,\n    WaitForDurationStepDefinition,\n    WaitForChannelStepDefinition,\n    WaitForMessageStepDefinition,\n    CreateChannelStepDefinition,\n    SendStepDefinition\n} from '../../model/rules/definitions/rtc-rule-definitions';\n\nimport { Select } from '../common/inputs';\n\nconst getHandlerKey = (h: HandlerClass | Handler) =>\n    HandlerClassKeyLookup.get(h as any) || HandlerClassKeyLookup.get(h.constructor as any);\n\nconst HandlerOptions = (p: { handlers: Array<HandlerClass> }) => <>{\n    p.handlers.map((handler): JSX.Element | null => {\n        const key = getHandlerKey(handler)!;\n        const description = summarizeHandlerClass(key);\n\n        return <option key={key} value={key}>\n            { description }\n        </option>;\n    })\n}</>;\n\nconst HandlerSelect = styled(Select)`\n    &:not(:first-of-type) {\n        margin-top: 10px;\n    }\n`;\n\nconst instantiateHandler = (\n    handlerKey: AvailableHandlerKey,\n    rulesStore: RulesStore\n): Handler => {\n    switch (handlerKey) {\n        case 'simple':\n            return new StaticResponseHandler(200);\n        case 'file':\n            return new FromFileResponseHandler(200, undefined, '');\n        case 'passthrough':\n            return new PassThroughHandler(rulesStore);\n        case 'forward-to-host':\n            return new ForwardToHostHandler('', true, rulesStore);\n        case 'req-res-transformer':\n            return new TransformingHandler(rulesStore, {}, {});\n        case 'request-breakpoint':\n            return new RequestBreakpointHandler(rulesStore);\n        case 'response-breakpoint':\n            return new ResponseBreakpointHandler(rulesStore);\n        case 'request-and-response-breakpoint':\n            return new RequestAndResponseBreakpointHandler(rulesStore);\n        case 'timeout':\n            return new TimeoutHandler();\n        case 'close-connection':\n            return new CloseConnectionHandler();\n        case 'reset-connection':\n            return new ResetConnectionHandler();\n\n        case 'ws-passthrough':\n            return new WebSocketPassThroughHandler(rulesStore);\n        case 'ws-forward-to-host':\n            return new WebSocketForwardToHostHandler('', true, rulesStore);\n        case 'ws-echo':\n            return new EchoWebSocketHandlerDefinition();\n        case 'ws-reject':\n            return new RejectWebSocketHandlerDefinition(400);\n        case 'ws-listen':\n            return new ListenWebSocketHandlerDefinition();\n\n        case 'eth-call-result':\n            return new EthereumCallResultHandler([], []);\n        case 'eth-number-result':\n            return new EthereumNumberResultHandler(0);\n        case 'eth-hash-result':\n            return new EthereumHashResultHandler('0x0');\n        case 'eth-receipt-result':\n            return new EthereumReceiptResultHandler(undefined);\n        case 'eth-block-result':\n            return new EthereumBlockResultHandler(undefined);\n        case 'eth-error':\n            return new EthereumErrorHandler('Unknown Error');\n\n        case 'ipfs-cat-text':\n            return new IpfsCatTextHandler('');\n        case 'ipfs-cat-file':\n            return new IpfsCatFileHandler('');\n        case 'ipfs-add-result':\n            return new IpfsAddResultHandler();\n        case 'ipns-resolve-result':\n            return new IpnsResolveResultHandler();\n        case 'ipns-publish-result':\n            return new IpnsPublishResultHandler();\n        case 'ipfs-pins-result':\n            return new IpfsPinsResultHandler();\n        case 'ipfs-pin-ls-result':\n            return new IpfsPinLsResultHandler();\n\n        case 'rtc-dynamic-proxy':\n            return new DynamicProxyStepDefinition();\n        case 'echo-rtc':\n            return new EchoStepDefinition();\n        case 'close-rtc-connection':\n            return new CloseStepDefinition();\n        case 'wait-for-rtc-media':\n            return new WaitForMediaStepDefinition();\n        case 'wait-for-duration':\n            return new WaitForDurationStepDefinition(0);\n        case 'wait-for-rtc-data-channel':\n            return new WaitForChannelStepDefinition();\n        case 'wait-for-rtc-message':\n            return new WaitForMessageStepDefinition();\n        case 'create-rtc-data-channel':\n            return new CreateChannelStepDefinition('mock-channel');\n        case 'send-rtc-data-message':\n            return new SendStepDefinition(undefined, '');\n\n        default:\n            throw new UnreachableCheck(handlerKey);\n    }\n}\n\nexport const HandlerSelector = inject('rulesStore', 'accountStore')(observer((p: {\n    rulesStore?: RulesStore,\n    accountStore?: AccountStore,\n    ruleType: RuleType,\n    availableHandlers: Array<HandlerClass>,\n    value: Handler,\n    onChange: (handler: Handler) => void\n}) => {\n    let [ allowedHandlers, needProHandlers ] = _.partition(\n        p.availableHandlers,\n        (handlerClass) => p.accountStore!.isPaidUser || !isPaidHandlerClass(p.ruleType, handlerClass)\n    );\n\n    // Pull the breakpoint handlers to the top, since they're kind of separate\n    allowedHandlers = _.sortBy(allowedHandlers, h =>\n        getHandlerKey(h)!.includes('breakpoint') ? 0 : 1\n    );\n\n    return <HandlerSelect\n        value={getHandlerKey(p.value)}\n        onChange={(event) => {\n            const handlerKey = event.target.value as AvailableHandlerKey;\n            const handler = instantiateHandler(handlerKey, p.rulesStore!);\n            p.onChange(handler);\n        }}\n    >\n        <HandlerOptions handlers={allowedHandlers} />\n        { needProHandlers.length &&\n            <optgroup label='With HTTP Toolkit Pro:'>\n                <HandlerOptions handlers={needProHandlers} />\n            </optgroup>\n        }\n    </HandlerSelect>\n}));","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { action, observable, reaction, autorun, observe, runInAction, computed } from 'mobx';\nimport { observer, disposeOnUnmount, inject } from 'mobx-react';\nimport * as dedent from 'dedent';\n\nimport { Headers, RawHeaders } from '../../types';\nimport { css, styled } from '../../styles';\nimport { WarningIcon } from '../../icons';\nimport { uploadFile } from '../../util/ui';\nimport { asError, isErrorLike, unreachableCheck, UnreachableCheck } from '../../util/error';\nimport {\n    byteLength,\n    asBuffer,\n    isProbablyUtf8,\n    stringToBuffer,\n    bufferToString\n} from '../../util';\nimport {\n    getHeaderValue,\n    headersToRawHeaders,\n    rawHeadersToHeaders,\n    HEADER_NAME_REGEX,\n    setHeaderValue\n} from '../../util/headers';\n\nimport {\n    Handler,\n    RuleType,\n    getRulePartKey,\n    AvailableHandlerKey,\n    isHttpCompatibleType\n} from '../../model/rules/rules';\nimport {\n    StaticResponseHandler,\n    ForwardToHostHandler,\n    PassThroughHandler,\n    TransformingHandler,\n    RequestTransform,\n    ResponseTransform,\n    RequestBreakpointHandler,\n    ResponseBreakpointHandler,\n    RequestAndResponseBreakpointHandler,\n    TimeoutHandler,\n    CloseConnectionHandler,\n    ResetConnectionHandler,\n    FromFileResponseHandler\n} from '../../model/rules/definitions/http-rule-definitions';\nimport {\n    WebSocketPassThroughHandler,\n    EchoWebSocketHandlerDefinition,\n    RejectWebSocketHandlerDefinition,\n    ListenWebSocketHandlerDefinition,\n    WebSocketForwardToHostHandler\n} from '../../model/rules/definitions/websocket-rule-definitions';\nimport {\n    EthereumCallResultHandler,\n    EthereumNumberResultHandler,\n    EthereumHashResultHandler,\n    EthereumReceiptResultHandler,\n    EthereumBlockResultHandler,\n    EthereumErrorHandler\n} from '../../model/rules/definitions/ethereum-rule-definitions';\nimport {\n    IpfsCatTextHandler,\n    IpfsCatFileHandler,\n    IpfsAddResultHandler,\n    IpnsResolveResultHandler,\n    IpnsPublishResultHandler,\n    IpfsPinsResultHandler,\n    IpfsPinLsResultHandler\n} from '../../model/rules/definitions/ipfs-rule-definitions';\nimport {\n    DynamicProxyStepDefinition,\n    EchoStepDefinition,\n    CloseStepDefinition,\n    WaitForMediaStepDefinition,\n    WaitForDurationStepDefinition,\n    WaitForChannelStepDefinition,\n    WaitForMessageStepDefinition,\n    CreateChannelStepDefinition,\n    SendStepDefinition\n} from '../../model/rules/definitions/rtc-rule-definitions';\n\nimport { getStatusMessage } from '../../model/http/http-docs';\nimport { MethodName, MethodNames } from '../../model/http/methods';\nimport { NATIVE_ETH_TYPES } from '../../model/rules/definitions/ethereum-abi';\nimport {\n    getDefaultMimeType,\n    EditableContentType,\n    getEditableContentType\n} from '../../model/events/content-types';\nimport { RulesStore } from '../../model/rules/rules-store';\n\nimport { SelfSizedEditor } from '../editor/base-editor';\nimport { TextInput, Select, Button } from '../common/inputs';\nimport { EditableHeaders, EditableRawHeaders } from '../common/editable-headers';\nimport { EditableStatus } from '../common/editable-status';\nimport { FormatButton } from '../common/format-button';\nimport { EditablePairs, PairsArray } from '../common/editable-pairs';\nimport { ContentMonoValue } from '../common/text-content';\n\ntype HandlerConfigProps<H extends Handler> = {\n    ruleType: RuleType;\n    handler: H;\n    onChange: (handler: H) => void;\n    onInvalidState: () => void;\n};\n\nabstract class HandlerConfig<\n    H extends Handler,\n    P extends {} = {}\n> extends React.Component<HandlerConfigProps<H> & P> { }\n\nconst ConfigContainer = styled.div`\n    margin-top: 10px;\n    font-size: ${p => p.theme.textSize};\n`;\n\nconst ConfigExplanation = styled.p`\n    font-size: ${p => p.theme.textSize};\n    line-height: 1.3;\n    opacity: ${p => p.theme.lowlightTextOpacity};\n    font-style: italic;\n    overflow-wrap: break-word;\n\n    &:not(:first-child) {\n        margin-top: 10px;\n    }\n`;\n\nexport function HandlerConfiguration(props: {\n    ruleType: RuleType,\n    handler: Handler,\n    onChange: (handler: Handler) => void,\n    onInvalidState?: () => void // Currently unused - intended to improve invalid entry UX later on\n}) {\n    const { handler, onChange, onInvalidState } = props;\n\n    const configProps = {\n        ruleType: props.ruleType,\n        handler: handler as any,\n        onChange,\n        onInvalidState: onInvalidState || _.noop\n    };\n\n    const handlerKey = getRulePartKey(handler) as AvailableHandlerKey;\n\n    switch (handlerKey) {\n        case 'simple':\n            return <StaticResponseHandlerConfig {...configProps} />;\n        case 'file':\n            return <FromFileResponseHandlerConfig {...configProps} />;\n        case 'forward-to-host':\n        case 'ws-forward-to-host':\n            return <ForwardToHostHandlerConfig\n                {...configProps}\n                handlerKey={handlerKey}\n            />;\n        case 'passthrough':\n        case 'ws-passthrough':\n            return <PassThroughHandlerConfig {...configProps} />;\n        case 'req-res-transformer':\n            return <TransformingHandlerConfig {...configProps} />;\n        case 'request-breakpoint':\n            return <RequestBreakpointHandlerConfig {...configProps} />;\n        case 'response-breakpoint':\n            return <ResponseBreakpointHandlerConfig {...configProps} />;\n        case 'request-and-response-breakpoint':\n            return <RequestAndResponseBreakpointHandlerConfig {...configProps} />;\n        case 'timeout':\n            return <TimeoutHandlerConfig {...configProps} />;\n        case 'close-connection':\n            return <CloseConnectionHandlerConfig {...configProps} />;\n        case 'reset-connection':\n            return <ResetConnectionHandlerConfig {...configProps} />;\n\n        case 'ws-echo':\n            return <WebSocketEchoHandlerConfig {...configProps} />;\n        case 'ws-reject':\n            return <StaticResponseHandlerConfig {...configProps} />;\n        case 'ws-listen':\n            return <WebSocketListenHandlerConfig {...configProps} />;\n        case 'eth-call-result':\n            return <EthCallResultHandlerConfig {...configProps} />;\n        case 'eth-number-result':\n            return <EthNumberResultHandlerConfig {...configProps} />;\n        case 'eth-hash-result':\n            return <EthHashResultHandlerConfig {...configProps} />;\n        case 'eth-receipt-result':\n            return <EthReceiptResultHandlerConfig {...configProps} />;\n        case 'eth-block-result':\n            return <EthBlockResultHandlerConfig {...configProps} />;\n        case 'eth-error':\n            return <EthErrorHandlerConfig {...configProps} />;\n        case 'ipfs-cat-text':\n            return <IpfsCatTextHandlerConfig {...configProps} />;\n        case 'ipfs-cat-file':\n            return <IpfsCatFileHandlerConfig {...configProps} />;\n        case 'ipfs-add-result':\n            return <IpfsAddResultHandlerConfig {...configProps} />;\n        case 'ipns-resolve-result':\n            return <IpnsResolveResultHandlerConfig {...configProps} />;\n        case 'ipns-publish-result':\n            return <IpnsPublishResultHandlerConfig {...configProps} />;\n        case 'ipfs-pins-result':\n            return <IpfsPinsResultHandlerConfig {...configProps} />;\n        case 'ipfs-pin-ls-result':\n            return <IpfsPinLsResultHandlerConfig {...configProps} />;\n\n        case 'rtc-dynamic-proxy':\n            return <PassThroughHandlerConfig {...configProps} />;\n        case 'echo-rtc':\n            return <RTCEchoHandlerConfig {...configProps} />;\n        case 'close-rtc-connection':\n            return <RTCCloseHandlerConfig {...configProps} />;\n        case 'wait-for-rtc-media':\n            return <RTCWaitForMediaConfig {...configProps} />;\n        case 'wait-for-duration':\n            return <RTCWaitForDurationConfig {...configProps} />;\n        case 'wait-for-rtc-data-channel':\n            return <RTCWaitForChannelConfig {...configProps} />;\n        case 'wait-for-rtc-message':\n            return <RTCWaitForDataMessaageConfig {...configProps} />;\n        case 'create-rtc-data-channel':\n            return <RTCCreateChannelStepConfig {...configProps} />;\n        case 'send-rtc-data-message':\n            return <RTCSendMessageStepConfig {...configProps} />;\n\n        default:\n            throw new UnreachableCheck(handlerKey);\n    }\n}\n\nconst SectionLabel = styled.h2`\n    margin-bottom: 5px;\n    &:not(:first-child) {\n        margin-top: 10px;\n    }\n\n    text-transform: uppercase;\n    opacity: ${p => p.theme.lowlightTextOpacity};\n    width: 100%;\n`;\n\nconst ConfigSelect = styled(Select)`\n    font-size: ${p => p.theme.textSize};\n    width: auto;\n`;\n\nconst WideTextInput = styled(TextInput)`\n    width: 100%;\n    box-sizing: border-box;\n`;\n\nconst BodyHeader = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    margin: 5px 0;\n\n    > ${SectionLabel} {\n        align-self: flex-end;\n        flex-grow: 1;\n        margin-bottom: 0;\n        margin: 0;\n    }\n\n    > button {\n        padding-top: 0;\n        padding-bottom: 0;\n    }\n`;\n\nconst BodyContainer = styled.div`\n    margin-top: 5px;\n\n    > div {\n        margin-top: 5px;\n        border-radius: 4px;\n        border: solid 1px ${p => p.theme.containerBorder};\n        padding: 1px;\n    }\n`;\n\n@observer\nclass StaticResponseHandlerConfig extends HandlerConfig<StaticResponseHandler | RejectWebSocketHandlerDefinition> {\n\n    @observable\n    statusCode: number | undefined = (this.props.handler instanceof StaticResponseHandler)\n        ? this.props.handler.status\n        : this.props.handler.statusCode;\n\n    @observable\n    statusMessage = this.props.handler.statusMessage;\n\n    // We have to model raw header data here (even though handlers use header objects) because want to mutate\n    // the headers (e.g. appending content-type) without losing object-unrepresentable (e.g. dupe key order) UI state.\n    @observable\n    rawHeaders = headersToRawHeaders(this.props.handler.headers || {});\n\n    @computed\n    get headers(): Headers {\n        return rawHeadersToHeaders(this.rawHeaders);\n    }\n    set headers(headers: Headers | undefined) {\n        if (_.isEqual(headers, this.headers)) return;\n        if (headers === undefined && Object.keys(this.headers).length === 0) return;\n        this.rawHeaders = headersToRawHeaders(headers || {});\n    }\n\n    @observable\n    contentType: EditableContentType = 'text';\n\n    @observable\n    body = asBuffer(this.props.handler instanceof StaticResponseHandler\n        ? this.props.handler.data\n        : this.props.handler.body\n    );\n\n    componentDidMount() {\n        // If any of our data fields change, rebuild & update the handler\n        disposeOnUnmount(this, reaction(() => {\n            return JSON.stringify(_.pick(this, ['statusCode', 'statusMessage', 'headers', 'body']));\n        }, () => this.updateHandler()));\n\n        // If the handler changes (or when its set initially), update our data fields\n        disposeOnUnmount(this, autorun(() => {\n            const { status, statusMessage } = this.props.handler instanceof StaticResponseHandler\n                ? this.props.handler\n                : { ...this.props.handler, status: this.props.handler.statusCode };\n\n            runInAction(() => {\n                this.statusCode = status;\n                this.statusMessage = statusMessage;\n            });\n        }));\n        disposeOnUnmount(this, autorun(() => {\n            const { data } = this.props.handler instanceof StaticResponseHandler\n                ? this.props.handler\n                : { data: this.props.handler.body };\n\n            runInAction(() => {\n                this.body = asBuffer(data); // Usually returns data directly, since we set it as a buffer anyway\n            });\n        }));\n        disposeOnUnmount(this, autorun(() => {\n            const { headers } = this.props.handler;\n\n            runInAction(() => {\n                this.headers = headers;\n            });\n        }));\n\n        // If you enter a relevant content-type header, consider updating the editor content type:\n        disposeOnUnmount(this, autorun(() => {\n            const detectedContentType = getEditableContentType(getHeaderValue(this.rawHeaders, 'content-type'));\n            if (detectedContentType) runInAction(() => {\n                this.contentType = detectedContentType;\n            });\n            // If not a known type, we leave the content type as whatever it currently is\n        }));\n\n        // If you set the editor content type, keep the content-type header up to date\n        disposeOnUnmount(this, observe(this, 'contentType', ({\n            oldValue: previousContentType,\n            newValue: newContentType\n        }) => {\n            const contentTypeHeader = getHeaderValue(this.rawHeaders, 'content-type');\n            const expectedContentType = getDefaultMimeType(newContentType);\n\n            if (!contentTypeHeader) {\n                // If you pick a body content type with no header set, we add one\n                runInAction(() => {\n                    this.rawHeaders.push(['content-type', expectedContentType]);\n                });\n            } else {\n                const headerContentType = getEditableContentType(contentTypeHeader);\n\n                // If the body type changes, and the old header matched the old type, update the header\n                if (previousContentType === headerContentType) {\n                    runInAction(() => {\n                        setHeaderValue(this.rawHeaders, 'content-type', expectedContentType);\n                    });\n                }\n                // If there is a header, but it didn't match the body, leave it as-is\n            }\n        }));\n\n        // If you change the body, and the content length _was_ correct, keep it up to date\n        disposeOnUnmount(this, observe(this, 'body', ({\n            oldValue: previousBody,\n            newValue: newBody\n        }) => {\n            const lengthHeader = getHeaderValue(this.rawHeaders, 'content-length');\n\n            if (!lengthHeader) return;\n\n            if (parseInt(lengthHeader || '', 10) === byteLength(previousBody)) {\n                runInAction(() => {\n                    // If the content-length was previously correct, keep it correct:\n                    runInAction(() => {\n                        setHeaderValue(this.rawHeaders, 'content-length', byteLength(newBody).toString());\n                    });\n                });\n            }\n        }));\n    }\n\n    @computed\n    private get textEncoding() {\n        // If we're handling text data, we want to show & edit it as UTF8.\n        // If it's binary, that's a lossy operation, so we use binary (latin1) instead.\n        return isProbablyUtf8(this.body)\n            ? 'utf8'\n            : 'binary';\n    }\n\n    render() {\n        const { statusCode, statusMessage, rawHeaders, body } = this;\n\n        const bodyAsString = body.toString(this.textEncoding);\n\n        return <ConfigContainer>\n            <SectionLabel>Status</SectionLabel>\n            <EditableStatus\n                httpVersion={1}\n                statusCode={statusCode}\n                statusMessage={statusMessage}\n                onChange={this.setStatus}\n            />\n\n            <SectionLabel>Headers</SectionLabel>\n            <EditableRawHeaders\n                headers={rawHeaders}\n                onChange={this.onHeadersChanged}\n            />\n\n            <BodyHeader>\n                <SectionLabel>Response body</SectionLabel>\n                <FormatButton\n                    format={this.contentType}\n                    content={body}\n                    onFormatted={this.setBody}\n                />\n                <ConfigSelect value={this.contentType} onChange={this.setContentType}>\n                    <option value=\"text\">Plain text</option>\n                    <option value=\"json\">JSON</option>\n                    <option value=\"xml\">XML</option>\n                    <option value=\"html\">HTML</option>\n                    <option value=\"css\">CSS</option>\n                    <option value=\"javascript\">JavaScript</option>\n                </ConfigSelect>\n            </BodyHeader>\n            <BodyContainer>\n                <SelfSizedEditor\n                    contentId={null}\n                    language={this.contentType}\n                    value={bodyAsString}\n                    onChange={this.setBody}\n                />\n            </BodyContainer>\n        </ConfigContainer>;\n    }\n\n    @action.bound\n    setStatus(statusCode: number | undefined, statusMessage: string | undefined) {\n        this.statusCode = statusCode;\n        this.statusMessage = statusMessage;\n    }\n\n    @action.bound\n    onHeadersChanged(rawHeaders: RawHeaders) {\n        this.rawHeaders = rawHeaders;\n    }\n\n    @action.bound\n    setContentType(event: React.ChangeEvent<HTMLSelectElement>) {\n        const value = event.target.value;\n        this.contentType = value as EditableContentType;\n    }\n\n    @action.bound\n    setBody(body: string) {\n        this.body = stringToBuffer(body, this.textEncoding);\n    }\n\n    updateHandler() {\n        if (\n            !this.statusCode ||\n            this.statusCode < 100 ||\n            this.statusCode >= 1000 ||\n            this.rawHeaders.some(([key]) => !key.match(HEADER_NAME_REGEX)) ||\n            this.rawHeaders.some(([_, value]) => !value)\n        ) return this.props.onInvalidState();\n\n        this.props.onChange(\n            this.props.ruleType === 'http'\n            ? new StaticResponseHandler(\n                this.statusCode,\n                this.statusMessage,\n                this.body,\n                this.headers\n            )\n            : new RejectWebSocketHandlerDefinition(\n                this.statusCode,\n                this.statusMessage ?? getStatusMessage(this.statusCode),\n                this.headers,\n                this.body\n            )\n        );\n    }\n}\n\nconst BodyFileContainer = styled.div`\n    margin-top: 1px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n`;\n\nconst BodyFileButton = styled(Button)`\n    font-size: ${p => p.theme.textSize};\n    padding: 10px 24px;\n\n    flex-grow: 1;\n    white-space: nowrap;\n`;\n\nconst BodyFilePath = styled.div`\n    margin-left: 15px;\n    flex-shrink: 1;\n\n    font-family: ${p => p.theme.monoFontFamily};\n    word-break: break-word;\n`;\n\n@observer\nclass FromFileResponseHandlerConfig extends HandlerConfig<FromFileResponseHandler> {\n\n    @observable\n    statusCode: number | undefined = this.props.handler.status;\n\n    @observable\n    statusMessage = this.props.handler.statusMessage;\n\n    @observable\n    headers = this.props.handler.headers || {};\n\n    @observable\n    filePath = (this.props.handler.filePath || '').toString();\n\n    componentDidMount() {\n        // If any of our data fields change, rebuild & update the handler\n        disposeOnUnmount(this, reaction(() => (\n            JSON.stringify(_.pick(this, ['statusCode', 'statusMessage', 'headers', 'filePath']))\n        ), () => this.updateHandler()));\n\n        // If the handler changes (or when its set initially), update our data fields\n        disposeOnUnmount(this, autorun(() => {\n            const { status, statusMessage, headers, filePath } = this.props.handler;\n            runInAction(() => {\n                this.statusCode = status;\n                this.statusMessage = statusMessage;\n                this.headers = headers || {};\n                this.filePath = filePath;\n            });\n        }));\n    }\n\n    render() {\n        const { statusCode, statusMessage, headers } = this;\n\n        return <ConfigContainer>\n            <SectionLabel>Status</SectionLabel>\n            <EditableStatus\n                httpVersion={1}\n                statusCode={statusCode}\n                statusMessage={statusMessage}\n                onChange={this.setStatus}\n            />\n\n            <SectionLabel>Headers</SectionLabel>\n            <EditableHeaders\n                headers={headers}\n                convertToRawHeaders={headersToRawHeaders}\n                convertFromRawHeaders={rawHeadersToHeaders}\n                onChange={this.onHeadersChanged}\n            />\n\n            <SectionLabel>Response body</SectionLabel>\n            <BodyFileContainer>\n                <BodyFileButton onClick={this.selectFile}>\n                    { this.filePath\n                        ? 'Change file'\n                        : <>\n                            Select file <WarningIcon />\n                        </>\n                    }\n                </BodyFileButton>\n                { this.filePath && <BodyFilePath>\n                    { this.filePath }\n                </BodyFilePath> }\n            </BodyFileContainer>\n\n            <ConfigExplanation>\n                All matching requests will receive a { this.statusCode } response, with the response\n                body containing the contents of the selected file.\n            </ConfigExplanation>\n            <ConfigExplanation>\n                This file will be read fresh for each request, so future changes to the file will\n                immediately affect matching requests.\n            </ConfigExplanation>\n        </ConfigContainer>;\n    }\n\n    @action.bound\n    setStatus(statusCode: number | undefined, statusMessage: string | undefined) {\n        this.statusCode = statusCode;\n        this.statusMessage = statusMessage;\n    }\n\n    @action.bound\n    onHeadersChanged(headers: Headers) {\n        this.headers = headers;\n    }\n\n    selectFile = async () => {\n        const result = await uploadFile(\"path\", []);\n        if (result) {\n            runInAction(() => {\n                this.filePath = result;\n            });\n        }\n    }\n\n    updateHandler() {\n        if (\n            !this.statusCode ||\n            this.statusCode < 100 ||\n            this.statusCode >= 1000 ||\n            _.some(Object.keys(this.headers), (key) => !key.match(HEADER_NAME_REGEX))\n        ) return this.props.onInvalidState();\n\n        this.props.onChange(\n            new FromFileResponseHandler(\n                this.statusCode,\n                this.statusMessage,\n                this.filePath,\n                this.headers\n            )\n        );\n    }\n}\n\nconst UrlInput = styled(TextInput)`\n    margin-top: 5px;\n    width: 100%;\n    box-sizing: border-box;\n`;\n\n@inject('rulesStore')\n@observer\nclass ForwardToHostHandlerConfig extends HandlerConfig<\n    | ForwardToHostHandler\n    | WebSocketForwardToHostHandler,\n    {\n        rulesStore?: RulesStore,\n        handlerKey: 'forward-to-host' | 'ws-forward-to-host'\n    }\n> {\n\n    @observable\n    private error: Error | undefined;\n\n    @observable\n    private targetHost: string | undefined;\n\n    @observable\n    private updateHostHeader: true | false = true;\n\n    componentDidMount() {\n        disposeOnUnmount(this, autorun(() => {\n            const targetHost = this.props.handler ? this.props.handler.forwarding!.targetHost : '';\n            const updateHostHeader = this.props.handler ? this.props.handler.forwarding!.updateHostHeader : true;\n            runInAction(() => {\n                this.targetHost = targetHost\n                this.updateHostHeader = !!updateHostHeader;\n            });\n        }));\n    }\n\n    render() {\n        const {\n            targetHost,\n            updateHostHeader,\n            error,\n            onTargetChange,\n            onUpdateHeaderChange\n        } = this;\n        const { targetHost: savedTargetHost } = this.props.handler.forwarding!;\n\n        const messageType = this.props.handlerKey === 'ws-forward-to-host'\n            ? 'WebSocket'\n            : 'request';\n\n        return <ConfigContainer>\n            <SectionLabel>Replacement host</SectionLabel>\n            <UrlInput\n                value={targetHost || ''}\n                invalid={!!error}\n                spellCheck={false}\n                onChange={onTargetChange}\n            />\n\n            <SectionLabel>Host header</SectionLabel>\n            <ConfigSelect\n                value={updateHostHeader.toString()}\n                onChange={onUpdateHeaderChange}\n                title={dedent`\n                    Most servers will not accept ${messageType}s that arrive\n                    with the wrong host header, so it's typically useful\n                    to automatically change it to match the new host\n                `}\n            >\n                <option value={'true'}>Update the host header automatically (recommended)</option>\n                <option value={'false'}>Leave the host header untouched</option>\n            </ConfigSelect>\n            { savedTargetHost &&\n                <ConfigExplanation>\n                    All matching {messageType}s will be forwarded to {savedTargetHost},\n                    keeping their existing path{\n                        !savedTargetHost.includes('://') ? ', protocol,' : ''\n                    } and query string.{\n                        updateHostHeader\n                        ? ' Their host header will be automatically updated to match.'\n                        : ''\n                    }\n                </ConfigExplanation>\n            }\n        </ConfigContainer>;\n    }\n\n    updateHandler() {\n        try {\n            if (!this.targetHost) throw new Error('A target host is required');\n\n            let urlWithoutProtocol: string;\n\n            const protocolMatch = this.targetHost.match(/^(\\w+):\\/\\//);\n            if (protocolMatch) {\n                const validProtocols = this.props.handlerKey === 'ws-forward-to-host'\n                    ? ['ws', 'wss']\n                    : ['http', 'https'];\n\n                if (!validProtocols.includes(protocolMatch[1].toLowerCase())) {\n                    throw new Error(\n                        `The protocol must be either ${validProtocols[0]} or ${validProtocols[1]}`\n                    );\n                }\n\n                urlWithoutProtocol = this.targetHost.slice(protocolMatch[0].length);\n            } else {\n                urlWithoutProtocol = this.targetHost;\n            }\n\n            if (urlWithoutProtocol.includes('/')) {\n                throw new Error(\n                    'The replacement host shouldn\\'t include a path, since it won\\'t be used'\n                );\n            }\n            if (urlWithoutProtocol.includes('?')) {\n                throw new Error(\n                    'The replacement host shouldn\\'t include a query string, since it won\\'t be used'\n                );\n            }\n\n            const HandlerClass = this.props.handlerKey === 'ws-forward-to-host'\n                ? WebSocketForwardToHostHandler\n                : ForwardToHostHandler;\n\n            this.props.onChange(\n                new HandlerClass(\n                    this.targetHost,\n                    this.updateHostHeader,\n                    this.props.rulesStore!\n                )\n            );\n            this.error = undefined;\n        } catch (e) {\n            console.log(e);\n            this.error = asError(e);\n            if (this.props.onInvalidState) this.props.onInvalidState();\n            throw e;\n        }\n    }\n\n    @action.bound\n    onTargetChange(event: React.ChangeEvent<HTMLInputElement>) {\n        this.targetHost = event.target.value;\n\n        try {\n            this.updateHandler();\n            event.target.setCustomValidity('');\n        } catch (e) {\n            event.target.setCustomValidity(asError(e).message);\n        }\n        event.target.reportValidity();\n    }\n\n    @action.bound\n    onUpdateHeaderChange(event: React.ChangeEvent<HTMLSelectElement>) {\n        this.updateHostHeader = event.target.value === 'true';\n\n        try {\n            this.updateHandler();\n        } catch (e) {\n            // If there's an error, it must be in the host name, so it's reported elsewhere\n        }\n    }\n}\n\nconst TransformSectionLabel = styled(SectionLabel)`\n    margin-top: 10px;\n`;\n\nconst TransformSectionSeparator = styled.hr`\n    width: 100%;\n    box-sizing: border-box;\n    margin: 20px 0;\n    border: solid 1px ${p => p.theme.containerWatermark};\n`;\n\nconst TransformConfig = styled.div`\n    margin: 0 0 5px;\n\n    ${(p: { active: boolean }) => p.active && css`\n        border-left: solid 5px ${p => p.theme.containerWatermark};\n\n        &:focus-within {\n            border-left: solid 5px ${p => p.theme.primaryInputBackground};\n        }\n\n        padding-left: 5px;\n        margin: 10px 0 15px;\n    `}\n`;\n\nconst TransformDetails = styled.div`\n    > :first-child {\n        margin-top: 0;\n    }\n\n    padding-top: 5px;\n`;\n\nconst SelectTransform = styled(Select)`\n    margin: 0;\n\n    ${p => p.value === 'none' && css`\n        color: ${p => p.theme.mainColor};\n        background-color: ${p => p.theme.mainBackground};\n    `}\n`;\n\n@inject('rulesStore')\n@observer\nclass TransformingHandlerConfig extends HandlerConfig<TransformingHandler, { rulesStore?: RulesStore }> {\n\n    @observable\n    transformRequest = this.props.handler.transformRequest || {};\n\n    @observable\n    transformResponse = this.props.handler.transformResponse || {};\n\n    render() {\n        return <ConfigContainer>\n            <TransformSectionLabel>Request Transforms:</TransformSectionLabel>\n            <MethodTransformConfig\n                replacementMethod={this.transformRequest?.replaceMethod}\n                onChange={this.transformField('transformRequest')('replaceMethod')}\n            />\n            <HeadersTransformConfig\n                type='request'\n                transform={this.transformRequest}\n                onChange={this.transformField('transformRequest')}\n            />\n            <BodyTransformConfig\n                type='request'\n                transform={this.transformRequest}\n                onChange={this.transformField('transformRequest')}\n            />\n\n            <TransformSectionSeparator />\n\n            <TransformSectionLabel>Response Transforms:</TransformSectionLabel>\n            <StatusTransformConfig\n                replacementStatus={this.transformResponse?.replaceStatus}\n                onChange={this.transformField('transformResponse')('replaceStatus')}\n            />\n            <HeadersTransformConfig\n                type='response'\n                transform={this.transformResponse}\n                onChange={this.transformField('transformResponse')}\n            />\n            <BodyTransformConfig\n                type='response'\n                transform={this.transformResponse}\n                onChange={this.transformField('transformResponse')}\n            />\n        </ConfigContainer>;\n    }\n\n    transformField = <T extends keyof this>(\n        objName: T\n    ) => <K extends keyof this[T]>(\n        key: K\n    ) => action(\n        (value: this[T][K]) => {\n            this[objName] = {\n                ...this[objName],\n                [key]: value\n            };\n\n            this.updateHandler();\n        }\n    );\n\n    updateHandler() {\n        this.props.onChange(new TransformingHandler(\n            this.props.rulesStore!,\n            this.transformRequest,\n            this.transformResponse\n        ));\n    }\n}\n\nconst MethodTransformConfig = (props: {\n    replacementMethod: string | undefined,\n    onChange: (method: MethodName | undefined) => void\n}) => {\n    return <TransformConfig active={!!props.replacementMethod}>\n        <SelectTransform\n            value={props.replacementMethod ?? 'none'}\n            onChange={(event: React.ChangeEvent<HTMLSelectElement>) => {\n                const value = event.target.value as 'none' | MethodName;\n\n                if (value === 'none') {\n                    props.onChange(undefined);\n                } else {\n                    props.onChange(value);\n                }\n            }\n        }>\n            <option value='none'>Pass through the real request method</option>\n            {\n                MethodNames.map((name) =>\n                    <option key={name} value={name}>\n                        Replace the request method with { name }\n                    </option>\n                )\n            }\n        </SelectTransform>\n    </TransformConfig>;\n};\n\nconst StatusTransformConfig = (props: {\n    replacementStatus: number | undefined,\n    onChange: (status: number | undefined) => void\n}) => {\n    const selected = props.replacementStatus !== undefined\n        ? 'replace'\n        : 'none';\n\n    return <TransformConfig active={selected !== 'none'}>\n        <SelectTransform\n            value={selected ?? 'none'}\n            onChange={(event: React.ChangeEvent<HTMLSelectElement>) => {\n                const value = event.target.value as 'none' | 'replace';\n\n                if (value === 'none') {\n                    props.onChange(undefined);\n                } else {\n                    props.onChange(200);\n                }\n            }\n        }>\n            <option value='none'>Pass through the real response status</option>\n            <option value='replace'>Replace the response status</option>\n        </SelectTransform>\n        {\n            selected === 'replace' && <TransformDetails>\n                <EditableStatus\n                    statusCode={props.replacementStatus}\n                    onChange={props.onChange}\n                    // We don't bother supporting status message transforms:\n                    httpVersion={2}\n                    statusMessage={undefined}\n                />\n            </TransformDetails>\n        }\n    </TransformConfig>\n};\n\n@observer\nclass HeadersTransformConfig<T extends RequestTransform | ResponseTransform> extends React.Component<{\n    type: 'request' | 'response',\n    transform: T,\n    onChange: <K extends typeof HeadersTransformConfig.FIELDS[number]>(updatedField: K) => (updatedValue: T[K]) => void\n}> {\n\n    private static readonly FIELDS = [\n        'replaceHeaders',\n        'updateHeaders'\n    ] as const;\n\n    @computed\n    get selected() {\n        return _.find(HeadersTransformConfig.FIELDS, (field) =>\n            this.props.transform[field] !== undefined\n        ) ?? 'none';\n    }\n\n    @computed\n    get headers() {\n        if (this.selected === 'none') return {};\n        return this.props.transform[this.selected] || {};\n    }\n\n    render() {\n        const { type } = this.props;\n        const {\n            selected,\n            convertResultFromRawHeaders,\n            onTransformTypeChange,\n            setHeadersValue\n        } = this;\n\n        return <TransformConfig active={selected !== 'none'}>\n            <SelectTransform\n                value={selected}\n                onChange={onTransformTypeChange}\n            >\n                <option value='none'>Pass through the real { type } headers</option>\n                <option value='updateHeaders'>Update the { type } headers</option>\n                <option value='replaceHeaders'>Replace the { type } headers</option>\n            </SelectTransform>\n            {\n                selected !== 'none' && <TransformDetails>\n                    <EditableHeaders\n                        headers={this.headers}\n                        convertToRawHeaders={headersToRawHeaders}\n                        convertFromRawHeaders={convertResultFromRawHeaders}\n                        onChange={setHeadersValue}\n                        allowEmptyValues={selected === 'updateHeaders'}\n                    />\n                </TransformDetails>\n            }\n        </TransformConfig>;\n    }\n\n    convertResultFromRawHeaders = (headers: RawHeaders): Headers => {\n        if (this.selected === 'updateHeaders') {\n            return rawHeadersToHeaders(\n                headers.map(([key, value]) =>\n                    [key, value === '' ? undefined as any : value] // => undefined to explicitly remove headers\n            ));\n        } else {\n            return rawHeadersToHeaders(headers);\n        }\n    };\n\n    @action.bound\n    setHeadersValue(value: Headers) {\n        this.clearValues();\n        if (this.selected !== 'none') {\n            this.props.onChange(this.selected)(value);\n        }\n    }\n\n    @action.bound\n    onTransformTypeChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        const value = event.currentTarget.value as 'none' | typeof HeadersTransformConfig.FIELDS[number];\n\n        this.clearValues();\n        if (value !== 'none') this.props.onChange(value)({});\n    };\n\n    @action.bound\n    clearValues() {\n        HeadersTransformConfig.FIELDS.forEach((field) =>\n            this.props.onChange(field)(undefined)\n        );\n    }\n};\n\n@observer\nclass BodyTransformConfig<T extends RequestTransform | ResponseTransform> extends React.Component<{\n    type: 'request' | 'response',\n    transform: T,\n    onChange: <K extends typeof BodyTransformConfig.FIELDS[number]>(updatedField: K) => (updatedValue: T[K]) => void\n}> {\n\n    private static readonly FIELDS = [\n        'replaceBody',\n        'replaceBodyFromFile',\n        'updateJsonBody'\n    ] as const;\n\n    @computed\n    get bodyReplacementBuffer() {\n        return asBuffer(this.props.transform.replaceBody);\n    }\n\n    render() {\n        const { type, transform } = this.props;\n        const {\n            bodyReplacementBuffer,\n            onTransformTypeChange,\n            setBodyReplacement,\n            selectBodyReplacementFile,\n            setJsonBodyUpdate\n        } = this;\n\n        const selected = _.find(BodyTransformConfig.FIELDS, (field) =>\n            transform[field] !== undefined\n        ) ?? 'none';\n\n        return <TransformConfig active={selected !== 'none'}>\n            <SelectTransform\n                value={selected}\n                onChange={onTransformTypeChange}>\n                <option value='none'>Pass through the real { type } body</option>\n                <option value='replaceBody'>Replace the { type } body with a fixed value</option>\n                <option value='replaceBodyFromFile'>Replace the { type } body with a file</option>\n                <option value='updateJsonBody'>Update values within a JSON { type } body</option>\n            </SelectTransform>\n            {\n                selected === 'replaceBody'\n                    ? <RawBodyTransfomConfig\n                        type={type}\n                        body={bodyReplacementBuffer}\n                        updateBody={setBodyReplacement}\n                    />\n                : selected === 'replaceBodyFromFile'\n                    ? <TransformDetails>\n                        <BodyFileContainer>\n                            <BodyFileButton onClick={selectBodyReplacementFile}>\n                                { transform.replaceBodyFromFile\n                                    ? 'Change file'\n                                    : <>\n                                        Select file <WarningIcon />\n                                    </>\n                                }\n                            </BodyFileButton>\n                            { transform.replaceBodyFromFile && <BodyFilePath>\n                                { transform.replaceBodyFromFile }\n                            </BodyFilePath> }\n                        </BodyFileContainer>\n                    </TransformDetails>\n                : selected === 'updateJsonBody'\n                    ? <JsonUpdateTransformConfig\n                        type={type}\n                        body={transform.updateJsonBody!}\n                        updateBody={setJsonBodyUpdate}\n                    />\n                : null\n            }\n        </TransformConfig>;\n    }\n\n    onTransformTypeChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        const value = event.currentTarget.value as 'none' | typeof BodyTransformConfig.FIELDS[number];\n\n        this.clearValues();\n        if (value === 'updateJsonBody') {\n            this.props.onChange('updateJsonBody')({});\n        } else if (value === 'replaceBody') {\n            this.props.onChange('replaceBody')('');\n        } else if (value === 'replaceBodyFromFile') {\n            this.props.onChange('replaceBodyFromFile')('');\n        }\n    };\n\n    @action.bound\n    clearValues() {\n        BodyTransformConfig.FIELDS.forEach((field) =>\n            this.props.onChange(field)(undefined)\n        );\n    };\n\n    @action.bound\n    setBodyReplacement(body: string) {\n        this.clearValues();\n        this.props.onChange('replaceBody')(body);\n    };\n\n    selectBodyReplacementFile = async () => {\n        const result = await uploadFile(\"path\", []);\n        if (result) {\n            runInAction(() => {\n                this.clearValues();\n                this.props.onChange('replaceBodyFromFile')(result);\n            });\n        }\n    };\n\n    @action.bound\n    setJsonBodyUpdate(body: {}) {\n        this.clearValues();\n        this.props.onChange('updateJsonBody')(body);\n    };\n};\n\nconst RawBodyTransfomConfig = (props: {\n    type: 'request' | 'response',\n    body: Buffer,\n    updateBody: (body: string) => void\n}) => {\n    const [contentType, setContentType] = React.useState<EditableContentType>('text');\n    const onContentTypeChanged = (e: React.ChangeEvent<HTMLSelectElement>) =>\n        setContentType(e.target.value as EditableContentType);\n\n    return <TransformDetails>\n        <BodyHeader>\n            <SectionLabel>Replacement { props.type } body</SectionLabel>\n            <FormatButton\n                format={contentType}\n                content={props.body}\n                onFormatted={props.updateBody}\n            />\n            <ConfigSelect value={contentType} onChange={onContentTypeChanged}>\n                <option value=\"text\">Plain text</option>\n                <option value=\"json\">JSON</option>\n                <option value=\"xml\">XML</option>\n                <option value=\"html\">HTML</option>\n                <option value=\"css\">CSS</option>\n                <option value=\"javascript\">JavaScript</option>\n            </ConfigSelect>\n        </BodyHeader>\n        <BodyContainer>\n            <SelfSizedEditor\n                contentId={null}\n                language={contentType}\n                value={bufferToString(props.body)}\n                onChange={props.updateBody}\n            />\n        </BodyContainer>\n    </TransformDetails>;\n};\n\nconst StandaloneFormatButton = styled(FormatButton)`\n    padding-right: 0;\n`;\n\nconst JsonUpdateTransformConfig = (props: {\n    type: 'request' | 'response',\n    body: {},\n    updateBody: (body: {}) => void\n}) => {\n    const [error, setError] = React.useState<Error>();\n\n    const [bodyString, setBodyString] = React.useState<string>(\n        JSON.stringify(props.body, null, 2)\n    );\n\n    React.useEffect(() => {\n        try {\n            props.updateBody(JSON.parse(bodyString));\n            setError(undefined);\n        } catch (e) {\n            setError(asError(e));\n        }\n    }, [bodyString]);\n\n    return <TransformDetails>\n        <BodyHeader>\n            <SectionLabel>JSON { props.type } body patch</SectionLabel>\n            { error && <WarningIcon title={error.message} /> }\n\n            <StandaloneFormatButton\n                format='json'\n                content={asBuffer(bodyString)}\n                onFormatted={setBodyString}\n            />\n        </BodyHeader>\n        <BodyContainer>\n            <SelfSizedEditor\n                contentId={null}\n                language='json'\n                value={bodyString}\n                onChange={(content) => setBodyString(content)}\n            />\n        </BodyContainer>\n    </TransformDetails>;\n};\n\n@observer\nclass PassThroughHandlerConfig extends HandlerConfig<\n    | PassThroughHandler\n    | WebSocketPassThroughHandler\n    | DynamicProxyStepDefinition\n> {\n    render() {\n        return <ConfigContainer>\n            <ConfigExplanation>\n                All matching {\n                    isHttpCompatibleType(this.props.ruleType)\n                        ? 'requests'\n                    : this.props.ruleType === 'websocket'\n                        ? 'WebSockets'\n                    : this.props.ruleType === 'webrtc'\n                        ? 'data and media'\n                    : unreachableCheck(this.props.ruleType)\n                } will be transparently passed through to the upstream {\n                    this.props.ruleType === 'webrtc'\n                        ? 'RTC peer, once one is connected'\n                        : 'target host'\n                }.\n            </ConfigExplanation>\n        </ConfigContainer>;\n    }\n}\n\n@observer\nclass RequestBreakpointHandlerConfig extends HandlerConfig<RequestBreakpointHandler> {\n    render() {\n        return <ConfigContainer>\n            <ConfigExplanation>\n                All matching traffic will breakpoint when a request is sent.\n            </ConfigExplanation>\n            <ConfigExplanation>\n                Once a request is breakpointed, you can edit the request URL to redirect\n                the request elsewhere, edit the method, headers, or body before they are sent upstream,\n                or provide your own response manually so the request is never sent onwards at all.\n            </ConfigExplanation>\n        </ConfigContainer>;\n    }\n}\n\n@observer\nclass ResponseBreakpointHandlerConfig extends HandlerConfig<ResponseBreakpointHandler> {\n    render() {\n        return <ConfigContainer>\n            <ConfigExplanation>\n                All matching traffic will breakpoint when a response is received from the upstream server.\n            </ConfigExplanation>\n            <ConfigExplanation>\n                Once a response is breakpointed, you can rewrite the received message, to edit the status\n                code, headers or body before they're returned to the downstream HTTP client.\n            </ConfigExplanation>\n        </ConfigContainer>;\n    }\n}\n\n@observer\nclass RequestAndResponseBreakpointHandlerConfig extends HandlerConfig<RequestAndResponseBreakpointHandler> {\n    render() {\n        return <ConfigContainer>\n            <ConfigExplanation>\n                All matching traffic will breakpoint when a request is sent, and when a response\n                is received.\n            </ConfigExplanation>\n            <ConfigExplanation>\n                From a request breakpoint, you can edit the request URL to redirect\n                the request elsewhere, edit the method, headers, or body before they are sent upstream,\n                or provide your own response manually so the request is never sent onwards at all.\n            </ConfigExplanation>\n            <ConfigExplanation>\n                From a response breakpoint, you can rewrite a received response, to edit the status\n                code, headers or body before they're returned to the downstream HTTP client.\n            </ConfigExplanation>\n        </ConfigContainer>;\n    }\n}\n\n@observer\nclass TimeoutHandlerConfig extends HandlerConfig<TimeoutHandler> {\n    render() {\n        return <ConfigContainer>\n            <ConfigExplanation>\n                When a matching {\n                    isHttpCompatibleType(this.props.ruleType)\n                        ? 'request'\n                    : this.props.ruleType === 'websocket'\n                        ? 'WebSocket'\n                    : this.props.ruleType === 'webrtc'\n                        ? (() => { throw new Error('Not compatible with WebRTC rules') })\n                    : unreachableCheck(this.props.ruleType)\n                } is received, the server will keep the connection open but do nothing.\n                With no data or response, most clients will time out and abort the\n                request after sufficient time has passed.\n            </ConfigExplanation>\n        </ConfigContainer>;\n    }\n}\n\n@observer\nclass CloseConnectionHandlerConfig extends HandlerConfig<CloseConnectionHandler> {\n    render() {\n        return <ConfigContainer>\n            <ConfigExplanation>\n                As soon as a matching {\n                    isHttpCompatibleType(this.props.ruleType)\n                        ? 'request'\n                    : this.props.ruleType === 'websocket'\n                        ? 'WebSocket'\n                    : this.props.ruleType === 'webrtc'\n                        ? (() => { throw new Error('Not compatible with WebRTC rules') })\n                    : unreachableCheck(this.props.ruleType)\n                } is received, the connection will be cleanly closed, with no response.\n            </ConfigExplanation>\n        </ConfigContainer>;\n    }\n}\n\n@observer\nclass ResetConnectionHandlerConfig extends HandlerConfig<ResetConnectionHandler> {\n    render() {\n        return <ConfigContainer>\n            <ConfigExplanation>\n                As soon as a matching {\n                    isHttpCompatibleType(this.props.ruleType)\n                        ? 'request'\n                    : this.props.ruleType === 'websocket'\n                        ? 'WebSocket'\n                    : this.props.ruleType === 'webrtc'\n                        ? (() => { throw new Error('Not compatible with WebRTC rules') })\n                    : unreachableCheck(this.props.ruleType)\n                } is received, the connection will be killed with a TCP RST packet (or a\n                RST_STREAM frame, for HTTP/2 requests).\n            </ConfigExplanation>\n        </ConfigContainer>;\n    }\n}\n\n@observer\nclass WebSocketEchoHandlerConfig extends HandlerConfig<EchoWebSocketHandlerDefinition> {\n    render() {\n        return <ConfigContainer>\n            <ConfigExplanation>\n                The WebSocket will be opened successfully, but not forwarded upstream, and every\n                message that's sent will be echoed back to the client until the client closes\n                the connection.\n            </ConfigExplanation>\n        </ConfigContainer>;\n    }\n}\n\n@observer\nclass WebSocketListenHandlerConfig extends HandlerConfig<ListenWebSocketHandlerDefinition> {\n    render() {\n        return <ConfigContainer>\n            <ConfigExplanation>\n                The WebSocket will be opened successfully, but not forwarded upstream. All\n                messages from the client will be accepted, but no responses will be sent.\n            </ConfigExplanation>\n        </ConfigContainer>;\n    }\n}\n\nconst NATIVE_ETH_TYPES_PATTERN = `(${NATIVE_ETH_TYPES.join('|')})(\\\\[\\\\])?`;\n\n@observer\nclass EthCallResultHandlerConfig extends HandlerConfig<EthereumCallResultHandler> {\n\n    @observable\n    typeValuePairs: PairsArray = [];\n\n    @observable error: Error | undefined;\n\n    componentDidMount() {\n        // If the handler changes (or when its set initially), update our data fields\n        disposeOnUnmount(this, autorun(() => {\n            const { outputTypes, values } = this.props.handler;\n\n            const stringValues = values.map(v => {\n                if (Array.isArray(v)) return v.join(', ');\n                else return (v as any)?.toString();\n            });\n\n            runInAction(() => {\n                this.typeValuePairs = _.zip(outputTypes, stringValues)\n                    .map(([key, value]) => ({ key, value })) as PairsArray;\n            });\n        }));\n    }\n\n    render() {\n        const { typeValuePairs } = this;\n        const encodedData = this.props.handler.result.result;\n\n        return <ConfigContainer>\n            <SectionLabel>Eth_Call return values</SectionLabel>\n\n            <EditablePairs\n                pairs={typeValuePairs}\n                onChange={this.onChange}\n                keyPlaceholder='Return value type (e.g. string, int256, etc)'\n                keyPattern={NATIVE_ETH_TYPES_PATTERN}\n                valuePlaceholder='Return value'\n                allowEmptyValues={true}\n            />\n\n            { this.error\n                ? <>\n                    <ConfigExplanation>\n                        <WarningIcon /> Could not encode data. { this.error.message }\n                    </ConfigExplanation>\n                </>\n                : <>\n                    <ConfigExplanation>\n                        Encoded return value:\n                    </ConfigExplanation>\n                    <ContentMonoValue>\n                        { encodedData }\n                    </ContentMonoValue>\n                </>\n            }\n\n            <ConfigExplanation>\n                All matching Ethereum JSON-RPC calls will be intercepted, and the encoded output\n                above returned directly, without forwarding the call to the real Ethereum node.\n            </ConfigExplanation>\n        </ConfigContainer>;\n    }\n\n    @action.bound\n    onChange(newPairs: PairsArray) {\n        this.typeValuePairs = newPairs;\n\n        // Allow array values, separated by commas:\n        const parsedValues = this.typeValuePairs.map(({ key, value }) => {\n            if (key === 'string[]') {\n                return { key, value: value.split(/,\\s?/g) };\n            } else if (key.startsWith('bytes') || key.endsWith('[]')) {\n                return { key, value: value.split(/,\\s?/g).map(x => parseInt(x, 10)) };\n            } else {\n                return { key, value };\n            }\n        });\n\n        try {\n            this.props.onChange(\n                new EthereumCallResultHandler(\n                    parsedValues.map(({ key }) => key),\n                    parsedValues.map(({ value }) => value)\n                )\n            );\n            this.error = undefined;\n        } catch (err) {\n            if (!isErrorLike(err)) throw err;\n\n            if (err.code === 'INVALID_ARGUMENT') {\n                const { argument, value, reason } = err as {\n                    argument: string,\n                    value: string,\n                    reason: string\n                };\n\n                if (argument === 'type' || argument === 'param') {\n                    this.error = new Error(`Invalid type: ${value}`);\n                } else if (argument === 'value') {\n                    this.error = new Error(`Invalid value: '${value}' (${reason})`);\n                } else {\n                    this.error = err as Error;\n                }\n            } else {\n                this.error = err as Error;\n            }\n\n            this.props.onInvalidState();\n        }\n    }\n}\n\n@observer\nclass EthNumberResultHandlerConfig extends HandlerConfig<EthereumNumberResultHandler> {\n\n    @observable\n    value: number | '' = this.props.handler.value;\n\n    componentDidMount() {\n        // If the handler changes (or when its set initially), update our data fields\n        disposeOnUnmount(this, autorun(() => {\n            const { value } = this.props.handler;\n            runInAction(() => {\n                if (value === 0 && this.value === '') return; // Allows clearing the input, making it *implicitly* 0\n                this.value = value;\n            });\n        }));\n    }\n\n    render() {\n        const { value } = this;\n\n        return <ConfigContainer>\n            <SectionLabel>Return value</SectionLabel>\n\n            <WideTextInput\n                type='number'\n                min={0}\n                value={value}\n                onChange={this.onChange}\n            />\n\n            <ConfigExplanation>\n                All matching Ethereum JSON-RPC requests will be intercepted, and { this.value } will\n                be returned directly, without forwarding the call to the real Ethereum node.\n            </ConfigExplanation>\n        </ConfigContainer>;\n    }\n\n    @action.bound\n    onChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const inputValue = event.target.value;\n\n        const newValue = (inputValue !== '')\n            ? parseInt(inputValue, 10)\n            : '';\n\n        if (_.isNaN(newValue)) return; // I.e. reject the edit\n\n        this.value = newValue;\n\n        this.props.onChange(\n            new EthereumNumberResultHandler(newValue || 0)\n        );\n    }\n}\n\n@observer\nclass EthHashResultHandlerConfig extends HandlerConfig<EthereumHashResultHandler> {\n\n    @observable\n    value = this.props.handler.value;\n\n    componentDidMount() {\n        // If the handler changes (or when its set initially), update our data fields\n        disposeOnUnmount(this, autorun(() => {\n            const { value } = this.props.handler;\n            runInAction(() => { this.value = value; });\n        }));\n    }\n\n    render() {\n        const { value } = this;\n\n        return <ConfigContainer>\n            <SectionLabel>Return hash value</SectionLabel>\n\n            <WideTextInput\n                type='text'\n                value={value}\n                onChange={this.onChange}\n            />\n\n            <ConfigExplanation>\n                All matching Ethereum JSON-RPC requests will be intercepted, and { this.value } will\n                be returned directly, without forwarding the call to the real Ethereum node.\n            </ConfigExplanation>\n\n            <ConfigExplanation>\n                <WarningIcon /> In most cases, you will also want to add a rule for transaction receipts\n                matching this value, to mock subsequent queries for the transaction's result.\n            </ConfigExplanation>\n        </ConfigContainer>;\n    }\n\n    @action.bound\n    onChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const newValue = event.target.value;\n\n        if (!/^0x[0-9a-fA-F]*$/.test(newValue)) return; // Ignore anything that's not a valid hash\n\n        this.props.onChange(\n            new EthereumHashResultHandler(event.target.value)\n        );\n    }\n}\n\n// Base component, used to build the various \"JSON input into a JSON-wrapping handler\" configs\n@observer\nclass JsonBasedHandlerConfig<H extends Handler> extends HandlerConfig<H, {\n    name: string,\n    explanation: string[],\n    handlerFactory: (body: any) => H,\n    valueGetter: (handler: H) => unknown\n}> {\n\n    @observable\n    valueString: string = JSON.stringify(this.props.valueGetter(this.props.handler), null, 2);\n\n    @observable\n    error: Error | undefined;\n\n    componentDidMount() {\n        // If the handler changes (or when its set initially), update our data fields\n        disposeOnUnmount(this, reaction(\n            () => JSON.stringify(this.props.valueGetter(this.props.handler), null, 2),\n            (handlerStringValue) => {\n                let normalizedCurrentValue: {} | undefined;\n                try {\n                    normalizedCurrentValue = JSON.stringify(JSON.parse(this.valueString), null, 2);\n                } catch (err) { }\n\n                // If the handler value changes, and either it doesn't match the existing value here,\n                // or the existing value isn't parseable at all, we reset the editor value:\n                if (handlerStringValue !== normalizedCurrentValue) {\n                    runInAction(() => {\n                        this.valueString = handlerStringValue;\n                        this.error = undefined;\n                    });\n                }\n            }\n        ));\n    }\n\n    render() {\n        const { valueString, error } = this;\n        const { name, explanation } = this.props;\n\n        return <ConfigContainer>\n            <BodyHeader>\n                <SectionLabel>{ name }</SectionLabel>\n                { error && <WarningIcon title={error.message} /> }\n\n                <StandaloneFormatButton\n                    format='json'\n                    content={asBuffer(valueString)}\n                    onFormatted={this.onChange}\n                />\n            </BodyHeader>\n            <BodyContainer>\n                <SelfSizedEditor\n                    contentId={null}\n                    language='json'\n                    value={valueString}\n                    onChange={this.onChange}\n                />\n            </BodyContainer>\n\n            { explanation.map((explanationPart, i) =>\n                <ConfigExplanation key={i}>\n                    { explanationPart }\n                </ConfigExplanation>\n            ) }\n        </ConfigContainer>;\n    }\n\n    @action.bound\n    onChange(newContent: string) {\n        this.valueString = newContent;\n\n        try {\n            const newValue = JSON.parse(newContent);\n            this.props.onChange(\n                this.props.handlerFactory(newValue)\n            );\n            this.error = undefined;\n        } catch (e) {\n            if (!isErrorLike(e)) throw e;\n            this.error = e as Error;\n            this.props.onInvalidState();\n        }\n    }\n}\n\n@observer\nclass EthReceiptResultHandlerConfig extends HandlerConfig<EthereumReceiptResultHandler> {\n\n    render() {\n        return <JsonBasedHandlerConfig\n            name='Ethereum Transaction Receipt'\n            explanation={[\n                'All matching Ethereum JSON-RPC requests will be intercepted, and this transaction ' +\n                'receipt will returned directly, without forwarding the call to the real Ethereum node.'\n            ]}\n            handlerFactory={(data) => new EthereumReceiptResultHandler(data)}\n            valueGetter={handler => handler.receiptValue}\n            { ...this.props }\n        />;\n    }\n\n}\n\n@observer\nclass EthBlockResultHandlerConfig extends HandlerConfig<EthereumBlockResultHandler> {\n\n    render() {\n        return <JsonBasedHandlerConfig\n            name='Ethereum Block Data'\n            explanation={[\n                'All matching Ethereum JSON-RPC requests will be intercepted, and this fixed block data ' +\n                'will returned directly, without forwarding the call to the real Ethereum node.'\n            ]}\n            handlerFactory={(data) => new EthereumBlockResultHandler(data)}\n            valueGetter={handler => handler.blockValue}\n            { ...this.props }\n        />;\n    }\n\n}\n\n@observer\nclass EthErrorHandlerConfig extends HandlerConfig<EthereumErrorHandler> {\n\n    @observable\n    inputError: Error | undefined; // A form error - not error data for the handler, unlike the rest\n\n    @observable\n    errorMessage = this.props.handler.message;\n\n    @observable\n    errorCode: '' | number = this.props.handler.code || '';\n\n    @observable\n    errorData = this.props.handler.data;\n\n    @observable\n    errorName = this.props.handler.name;\n\n    componentDidMount() {\n        // If any of our data fields change, rebuild & update the handler\n        disposeOnUnmount(this, reaction(() => (\n            JSON.stringify(_.pick(this, ['errorMessage', 'errorCode', 'errorData', 'errorName']))\n        ), () => this.updateHandler()));\n\n        // If the handler changes (or when its set initially), update our data fields\n        disposeOnUnmount(this, autorun(() => {\n            const { message, code, data, name } = this.props.handler;\n\n            runInAction(() => {\n                this.errorMessage = message;\n                this.errorData = data;\n                this.errorName = name;\n\n                if (this.errorCode === '' && code === 0) {\n                    // Do nothing - this allows you to clear the field without fuss\n                } else {\n                    this.errorCode = code;\n                }\n            });\n        }));\n    }\n\n    render() {\n        const {\n            errorMessage,\n            errorCode,\n            errorData,\n            errorName\n        } = this;\n\n        return <ConfigContainer>\n            <SectionLabel>Error Message</SectionLabel>\n            <WideTextInput\n                type='text'\n                value={errorMessage}\n                onChange={this.onChangeMessage}\n            />\n\n            <SectionLabel>Error Code</SectionLabel>\n            <WideTextInput\n                type='number'\n                value={errorCode}\n                onChange={this.onChangeCode}\n            />\n\n            <SectionLabel>Error Data</SectionLabel>\n            <WideTextInput\n                type='text'\n                value={errorData}\n                onChange={this.onChangeData}\n            />\n\n            <SectionLabel>Error Name</SectionLabel>\n            <WideTextInput\n                type='text'\n                value={errorName || ''}\n                onChange={this.onChangeName}\n            />\n\n            <ConfigExplanation>\n                All matching Ethereum JSON-RPC requests will be intercepted, and this error response\n                will returned directly, without forwarding the call to the real Ethereum node.\n            </ConfigExplanation>\n        </ConfigContainer>;\n    }\n\n    @action.bound\n    onChangeMessage(event: React.ChangeEvent<HTMLInputElement>) {\n        this.errorMessage = event.target.value;\n    }\n\n    @action.bound\n    onChangeCode(event: React.ChangeEvent<HTMLInputElement>) {\n        const inputValue = event.target.value;\n        if (!inputValue) {\n            this.errorCode = '';\n            return;\n        }\n\n        const value = parseInt(inputValue, 10);\n        if (!_.isNaN(value)) {\n            this.errorCode = value;\n        }\n    }\n\n    @action.bound\n    onChangeData(event: React.ChangeEvent<HTMLInputElement>) {\n        this.errorData = event.target.value;\n    }\n\n    @action.bound\n    onChangeName(event: React.ChangeEvent<HTMLInputElement>) {\n        this.errorName = event.target.value;\n    }\n\n    updateHandler() {\n        this.props.onChange(\n            new EthereumErrorHandler(\n                this.errorMessage,\n                this.errorData,\n                this.errorCode || 0,\n                this.errorName\n            )\n        );\n    }\n}\n\n@observer\nclass IpfsCatTextHandlerConfig extends HandlerConfig<IpfsCatTextHandler> {\n\n    @observable\n    contentType: EditableContentType = 'text';\n\n    @observable\n    body = asBuffer(this.props.handler.data);\n\n    componentDidMount() {\n        // If the handler changes (or when its set initially), update our data fields\n        disposeOnUnmount(this, autorun(() => {\n            const { data } = this.props.handler;\n            runInAction(() => {\n                this.body = asBuffer(data);\n            });\n        }));\n    }\n\n    @computed\n    private get textEncoding() {\n        // If we're handling text data, we want to show & edit it as UTF8.\n        // If it's binary, that's a lossy operation, so we use binary (latin1) instead.\n        return isProbablyUtf8(this.body)\n            ? 'utf8'\n            : 'binary';\n    }\n\n    render() {\n        const { body } = this;\n\n        const bodyAsString = body.toString(this.textEncoding);\n\n        return <ConfigContainer>\n            <BodyHeader>\n                <SectionLabel>IPFS content</SectionLabel>\n                <FormatButton\n                    format={this.contentType}\n                    content={body}\n                    onFormatted={this.setBody}\n                />\n                <ConfigSelect value={this.contentType} onChange={this.setContentType}>\n                    <option value=\"text\">Plain text</option>\n                    <option value=\"json\">JSON</option>\n                    <option value=\"xml\">XML</option>\n                    <option value=\"html\">HTML</option>\n                    <option value=\"css\">CSS</option>\n                    <option value=\"javascript\">JavaScript</option>\n                </ConfigSelect>\n            </BodyHeader>\n            <BodyContainer>\n                <SelfSizedEditor\n                    contentId={null}\n                    language={this.contentType}\n                    value={bodyAsString}\n                    onChange={this.setBody}\n                />\n            </BodyContainer>\n        </ConfigContainer>;\n    }\n\n    @action.bound\n    setContentType(event: React.ChangeEvent<HTMLSelectElement>) {\n        const value = event.target.value;\n        this.contentType = value as EditableContentType;\n    }\n\n    @action.bound\n    setBody(body: string) {\n        this.body = stringToBuffer(body, this.textEncoding);\n        this.props.onChange(\n            new IpfsCatTextHandler(this.body)\n        );\n    }\n}\n\n\n@observer\nclass IpfsCatFileHandlerConfig extends HandlerConfig<FromFileResponseHandler> {\n\n    @observable\n    filePath = (this.props.handler.filePath || '').toString();\n\n    componentDidMount() {\n        // If the handler changes (or when its set initially), update our data fields\n        disposeOnUnmount(this, autorun(() => {\n            const { filePath } = this.props.handler;\n            runInAction(() => {\n                this.filePath = filePath;\n            });\n        }));\n    }\n\n    render() {\n        return <ConfigContainer>\n            <SectionLabel>IPFS content</SectionLabel>\n            <BodyFileContainer>\n                <BodyFileButton onClick={this.selectFile}>\n                    { this.filePath\n                        ? 'Change file'\n                        : <>\n                            Select file <WarningIcon />\n                        </>\n                    }\n                </BodyFileButton>\n                { this.filePath && <BodyFilePath>\n                    { this.filePath }\n                </BodyFilePath> }\n            </BodyFileContainer>\n\n            <ConfigExplanation>\n                All matching requests will receive a successful response containing the contents of the\n                selected file.\n            </ConfigExplanation>\n            <ConfigExplanation>\n                This file will be read fresh for each request, so future changes to the file will\n                immediately affect matching requests.\n            </ConfigExplanation>\n        </ConfigContainer>;\n    }\n\n    selectFile = async () => {\n        const result = await uploadFile(\"path\", []);\n        if (result) {\n            runInAction(() => {\n                this.filePath = result;\n            });\n\n            this.props.onChange(\n                new IpfsCatFileHandler(\n                    this.filePath\n                )\n            );\n        }\n    }\n}\n\n@observer\nclass IpfsAddResultHandlerConfig extends HandlerConfig<IpfsAddResultHandler> {\n\n    @observable\n    resultPairs: PairsArray = [];\n\n    componentDidMount() {\n        // If the handler changes (or when its set initially), update our data fields\n        disposeOnUnmount(this, autorun(() => {\n            const { result } = this.props.handler;\n\n            runInAction(() => {\n                this.resultPairs = result.map(({ Name, Hash }) => ({ key: Name, value: Hash }));\n            });\n        }));\n    }\n\n    render() {\n        const { resultPairs } = this;\n\n        return <ConfigContainer>\n            <SectionLabel>IPFS Add Results</SectionLabel>\n\n            <EditablePairs\n                pairs={resultPairs}\n                onChange={this.onChange}\n                keyPlaceholder='Name of the added file'\n                valuePlaceholder='Hash of the added file'\n            />\n            <ConfigExplanation>\n                All matching IPFS Add calls will be intercepted, and the above results will always\n                be returned directly, without forwarding the call to the real IPFS node.\n            </ConfigExplanation>\n        </ConfigContainer>;\n    }\n\n    @action.bound\n    onChange(newPairs: PairsArray) {\n        this.resultPairs = newPairs;\n\n        this.props.onChange(\n            new IpfsAddResultHandler(\n                this.resultPairs.map(({ key, value }) => ({ Name: key, Hash: value }))\n            )\n        );\n    }\n\n}\n\n@observer\nclass IpnsResolveResultHandlerConfig extends HandlerConfig<IpnsResolveResultHandler> {\n\n    render() {\n        return <JsonBasedHandlerConfig\n            name='IPNS Resolve Result'\n            explanation={[\n                'All matching requests will be receive this data as a successful IPNS resolution.'\n            ]}\n            handlerFactory={(data) => new IpnsResolveResultHandler(data)}\n            valueGetter={handler => handler.result}\n            { ...this.props }\n        />;\n    }\n\n}\n\n@observer\nclass IpnsPublishResultHandlerConfig extends HandlerConfig<IpnsPublishResultHandler> {\n\n    render() {\n        return <JsonBasedHandlerConfig\n            name='IPNS Publish Result'\n            explanation={[\n                'All matching requests will be receive this data as a successful IPNS publish result.'\n            ]}\n            handlerFactory={(data) => new IpnsPublishResultHandler(data)}\n            valueGetter={handler => handler.result}\n            { ...this.props }\n        />;\n    }\n\n}\n\n@observer\nclass IpfsPinsResultHandlerConfig extends HandlerConfig<IpfsPinsResultHandler> {\n\n    render() {\n        return <JsonBasedHandlerConfig\n            name='IPFS Pinning Result'\n            explanation={[\n                'All matching requests will be receive this data as a successful response.'\n            ]}\n            handlerFactory={(data) => new IpfsPinsResultHandler(data)}\n            valueGetter={handler => handler.result}\n            { ...this.props }\n        />;\n    }\n\n}\n\n@observer\nclass IpfsPinLsResultHandlerConfig extends HandlerConfig<IpfsPinLsResultHandler> {\n\n    @observable\n    resultPairs: PairsArray = [];\n\n    componentDidMount() {\n        // If the handler changes (or when its set initially), update our data fields\n        disposeOnUnmount(this, autorun(() => {\n            const { result } = this.props.handler;\n\n            runInAction(() => {\n                this.resultPairs = result.map(({ Type, Cid }) => ({ key: Type, value: Cid }));\n            });\n        }));\n    }\n\n    render() {\n        const { resultPairs } = this;\n\n        return <ConfigContainer>\n            <SectionLabel>IPFS Pin Ls Results</SectionLabel>\n\n            <EditablePairs\n                pairs={resultPairs}\n                onChange={this.onChange}\n                keyPlaceholder='Type of pin (recursive, direct, indirect)'\n                valuePlaceholder='CID of the pinned content'\n            />\n            <ConfigExplanation>\n                All matching IPFS Pin Ls calls will be intercepted, and the above results will always\n                be returned directly, without forwarding the call to the real IPFS node.\n            </ConfigExplanation>\n        </ConfigContainer>;\n    }\n\n    @action.bound\n    onChange(newPairs: PairsArray) {\n        this.resultPairs = newPairs;\n\n        this.props.onChange(\n            new IpfsPinLsResultHandler(\n                this.resultPairs.map(({ key, value }) => ({ Type: key, Cid: value }))\n            )\n        );\n    }\n\n}\n\n@observer\nclass RTCEchoHandlerConfig extends HandlerConfig<EchoStepDefinition> {\n\n    render() {\n        return <ConfigContainer>\n            <ConfigExplanation>\n                Echo all sent data messages and all streamed video and audio media\n                back to the intercepted peer wherever possible, until the connection is\n                closed. No data will be forwarded to any connected remote peer.\n            </ConfigExplanation>\n            <ConfigExplanation>\n                Note that in some cases echoing isn't possible - e.g. if the client opens\n                a one-way video stream - in which case that data will simply be dropped.\n            </ConfigExplanation>\n        </ConfigContainer>;\n    }\n\n}\n\n@observer\nclass RTCCloseHandlerConfig extends HandlerConfig<CloseStepDefinition> {\n\n    render() {\n        return <ConfigContainer>\n            <ConfigExplanation>\n                Immediately close the WebRTC connection, with no further response and no\n                data forwarded to any connected remote peer.\n            </ConfigExplanation>\n        </ConfigContainer>;\n    }\n\n}\n\n@observer\nclass RTCWaitForMediaConfig extends HandlerConfig<WaitForMediaStepDefinition> {\n\n    render() {\n        return <ConfigContainer>\n            <ConfigExplanation>\n                Wait until the next WebRTC media data is sent by the client.\n            </ConfigExplanation>\n        </ConfigContainer>\n    }\n\n}\n\n@observer\nclass RTCWaitForDurationConfig extends HandlerConfig<WaitForDurationStepDefinition> {\n\n    @observable\n    duration: number | '' = this.props.handler.durationMs;\n\n    componentDidMount() {\n        // If the handler changes (or when its set initially), update our data fields\n        disposeOnUnmount(this, autorun(() => {\n            const { durationMs } = this.props.handler;\n            runInAction(() => {\n                if (durationMs === 0 && this.duration === '') return; // Allows clearing the input, making it *implicitly* 0\n                this.duration = durationMs;\n            });\n        }));\n    }\n\n    render() {\n        const { duration } = this;\n\n        return <ConfigContainer>\n            Wait for <TextInput\n                type='number'\n                min='0'\n                placeholder='Duration (ms)'\n                value={duration}\n                onChange={this.onChange}\n            /> milliseconds.\n        </ConfigContainer>\n    }\n\n    @action.bound\n    onChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const inputValue = event.target.value;\n\n        const newValue = inputValue === ''\n            ? ''\n            : parseInt(inputValue, 10);\n\n        if (_.isNaN(newValue)) return; // I.e. reject the edit\n\n        this.duration = newValue;\n        this.props.onChange(new WaitForDurationStepDefinition(newValue || 0));\n    }\n\n}\n\n@observer\nclass RTCWaitForChannelConfig extends HandlerConfig<WaitForChannelStepDefinition> {\n\n    render() {\n        const { channelLabel } = this.props.handler;\n\n        return <ConfigContainer>\n            <SectionLabel>Channel Label</SectionLabel>\n            <WideTextInput\n                placeholder='The channel to wait for, or nothing to wait for any channel'\n                value={channelLabel ?? ''}\n                onChange={this.onChange}\n            />\n            <ConfigExplanation>\n                Wait until the client opens a WebRTC data channel {\n                    channelLabel\n                        ? `with the label \"${channelLabel}\"`\n                        : 'with any label'\n                }.\n            </ConfigExplanation>\n        </ConfigContainer>\n    }\n\n    @action.bound\n    onChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const inputValue = event.target.value;\n        this.props.onChange(\n            new WaitForChannelStepDefinition(inputValue || '')\n        );\n    }\n\n}\n\n@observer\nclass RTCWaitForDataMessaageConfig extends HandlerConfig<WaitForMessageStepDefinition> {\n\n    render() {\n        const { channelLabel } = this.props.handler;\n\n        return <ConfigContainer>\n            <SectionLabel>Channel Label</SectionLabel>\n            <WideTextInput\n                placeholder='The channel to watch for messages, or nothing to watch every channel'\n                value={channelLabel ?? ''}\n                onChange={this.onChange}\n            />\n            <ConfigExplanation>\n                Wait until the client sends a WebRTC data message {\n                    channelLabel\n                        ? `on a channel with the label \"${channelLabel}\"`\n                        : 'on any data channel'\n                }.\n            </ConfigExplanation>\n        </ConfigContainer>\n    }\n\n    @action.bound\n    onChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const inputValue = event.target.value;\n        this.props.onChange(\n            new WaitForMessageStepDefinition(inputValue || '')\n        );\n    }\n\n}\n\n@observer\nclass RTCCreateChannelStepConfig extends HandlerConfig<CreateChannelStepDefinition> {\n\n    render() {\n        const { channelLabel } = this.props.handler;\n\n        return <ConfigContainer>\n            <SectionLabel>Channel Label</SectionLabel>\n            <WideTextInput\n                placeholder='A label for the channel that will be created'\n                value={channelLabel}\n                onChange={this.onChange}\n            />\n            <ConfigExplanation>\n                Create a data channel on the WebRTC connection labelled \"{\n                    channelLabel\n                }\".\n            </ConfigExplanation>\n        </ConfigContainer>\n    }\n\n    @action.bound\n    onChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const inputValue = event.target.value;\n        this.props.onChange(new CreateChannelStepDefinition(inputValue));\n    }\n\n}\n\n@observer\nclass RTCSendMessageStepConfig extends HandlerConfig<SendStepDefinition> {\n\n    @observable\n    channelLabel: string | undefined = this.props.handler.channelLabel;\n\n    @observable\n    contentType: EditableContentType = 'text';\n\n    @observable\n    message = asBuffer(this.props.handler.message);\n\n    componentDidMount() {\n        // If the handler changes (or when its set initially), update our data fields\n        disposeOnUnmount(this, autorun(() => {\n            const { channelLabel, message } = this.props.handler;\n            runInAction(() => {\n                this.channelLabel = channelLabel;\n                this.message = asBuffer(message);\n            });\n        }));\n    }\n\n    @computed\n    private get textEncoding() {\n        // If we're handling text data, we want to show & edit it as UTF8.\n        // If it's binary, that's a lossy operation, so we use binary (latin1) instead.\n        return isProbablyUtf8(this.message)\n            ? 'utf8'\n            : 'binary';\n    }\n\n    render() {\n        const { channelLabel, message } = this;\n\n        const messageAsString = message.toString(this.textEncoding);\n\n        return <ConfigContainer>\n            <SectionLabel>Channel Label</SectionLabel>\n            <WideTextInput\n                placeholder='The channel to send the message to, or nothing to send on all open channels'\n                value={channelLabel ?? ''}\n                onChange={this.setChannelLabel}\n            />\n\n            <BodyHeader>\n                <SectionLabel>Message content</SectionLabel>\n                <FormatButton\n                    format={this.contentType}\n                    content={message}\n                    onFormatted={this.setMessage}\n                />\n                <ConfigSelect value={this.contentType} onChange={this.setContentType}>\n                    <option value=\"text\">Plain text</option>\n                    <option value=\"json\">JSON</option>\n                    <option value=\"xml\">XML</option>\n                </ConfigSelect>\n            </BodyHeader>\n            <BodyContainer>\n                <SelfSizedEditor\n                    contentId={null}\n                    language={this.contentType}\n                    value={messageAsString}\n                    onChange={this.setMessage}\n                />\n            </BodyContainer>\n\n            <ConfigExplanation>\n                Send {\n                    message.length === 0\n                        ? 'an empty'\n                        : 'the above'\n                } message on {\n                    channelLabel\n                        ? `any open channel with the label \"${channelLabel}\"`\n                        : 'every open data channel'\n                }.\n            </ConfigExplanation>\n        </ConfigContainer>\n    }\n\n    @action.bound\n    setContentType(event: React.ChangeEvent<HTMLSelectElement>) {\n        const value = event.target.value;\n        this.contentType = value as EditableContentType;\n    }\n\n    @action.bound\n    setChannelLabel(event: React.ChangeEvent<HTMLInputElement>) {\n        const inputValue = event.target.value;\n        this.channelLabel = inputValue || undefined;\n        this.updateHandler();\n    }\n\n    @action.bound\n    setMessage(message: string) {\n        this.message = stringToBuffer(message, this.textEncoding);\n        this.updateHandler();\n    }\n\n    updateHandler() {\n        this.props.onChange(\n            new SendStepDefinition(\n                this.channelLabel,\n                this.message.toString(this.textEncoding) // MockRTC currently (0.3.0) has a bug with sending buffer data\n            )\n        );\n    }\n\n\n}","import * as React from 'react';\n\nimport { styled } from '../../styles';\nimport { noPropagation } from '../component-utils';\n\nimport { TextInput } from '../common/inputs';\nimport { IconMenuButton } from './mock-item-menu';\n\nexport const RuleTitle = styled.h2`\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n\n    flex-basis: 100%;\n    width: 100%;\n    box-sizing: border-box;\n\n    /* Required to avoid overflow trimming hanging chars */\n    padding: 5px;\n    margin: -5px;\n\n    font-style: italic;\n`;\n\nconst EditableTitleContainer = styled.div`\n    flex-basis: 100%;\n    margin: -4px;\n`;\n\nconst TitleInput = styled(TextInput)`\n    width: 30%;\n    margin-right: 5px;\n    margin-bottom: 10px;\n`;\n\nconst TitleEditButton = styled(IconMenuButton)`\n    font-size: 1em;\n    padding: 0;\n    vertical-align: middle;\n`;\n\nexport const EditableRuleTitle = (p: {\n    value: string,\n    onEditTitle: (newValue: string) => void,\n    onSave: (event: React.UIEvent) => void,\n    onCancel?: () => void\n}) => {\n    const editTitle = (e: React.ChangeEvent<HTMLInputElement>) => {\n        p.onEditTitle(e.target.value)\n    };\n\n    return <EditableTitleContainer>\n        <TitleInput\n            autoFocus\n            value={p.value}\n            placeholder='A custom name for this rule'\n            onChange={editTitle}\n            onClick={(e) => e.stopPropagation()}\n            onKeyPress={(e) => {\n                if (e.key === 'Enter') p.onSave(e);\n            }}\n        />\n        <TitleEditButton\n            title=\"Reset changes to rule name\"\n            icon={['fas', 'undo']}\n            disabled={!p.onCancel}\n            onClick={noPropagation(p.onCancel ?? (() => {}))}\n        />\n    </EditableTitleContainer>;\n};","import * as _ from 'lodash';\nimport * as React from 'react';\nimport * as polished from 'polished';\nimport { observer, inject, disposeOnUnmount, Observer } from 'mobx-react';\nimport { action, observable, reaction } from 'mobx';\nimport { Method, matchers } from 'mockttp';\nimport {\n    Draggable,\n    DraggingStyle,\n    NotDraggingStyle,\n    DraggableStateSnapshot\n} from 'react-beautiful-dnd';\n\nimport { styled, css } from '../../styles';\nimport { Icon } from '../../icons';\nimport { UnreachableCheck } from '../../util/error';\n\nimport { getMethodColor, getSummaryColour } from '../../model/events/categorization';\nimport {\n    HtkMockRule,\n    Matcher,\n    Handler,\n    AvailableHandler,\n    isPaidHandler,\n    InitialMatcher,\n    getRuleTypeFromInitialMatcher,\n    isCompatibleHandler,\n    getAvailableAdditionalMatchers,\n    getAvailableHandlers,\n    RuleType,\n    HandlerStep,\n    isFinalHandler,\n    isStepPoweredRule\n} from '../../model/rules/rules';\nimport { ItemPath } from '../../model/rules/rules-structure';\nimport {\n    getRuleDefaultMatchers,\n    updateRuleAfterInitialMatcherChange\n} from '../../model/rules/rule-creation';\nimport {\n    summarizeMatcher,\n    summarizeHandler\n} from '../../model/rules/rule-descriptions';\nimport { AccountStore } from '../../model/account/account-store';\n\nimport { clickOnEnter, noPropagation } from '../component-utils';\nimport { GetProOverlay } from '../account/pro-placeholders';\nimport { LittleCard } from '../common/card';\nimport {\n    InitialMatcherRow,\n    ExistingMatcherRow,\n    NewMatcherRow\n} from './matcher-selection';\nimport { HandlerSelector } from './handler-selection';\nimport { HandlerConfiguration } from './handler-config';\nimport { DragHandle } from './mock-drag-handle';\nimport { IconMenu, IconMenuButton } from './mock-item-menu';\nimport { RuleTitle, EditableRuleTitle } from './mock-rule-title';\n\nconst RowContainer = styled(LittleCard)<{\n    deactivated?: boolean,\n    collapsed: boolean,\n    disabled: boolean,\n    borderColor: string,\n    depth: number\n}>`\n    margin-top: 10px;\n\n    width: calc(100% - ${p => p.depth * 40}px);\n    margin-left: ${p => p.depth * 40}px;\n\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n\n    font-size: ${(p) => p.theme.headingSize};\n\n    overflow: initial;\n\n    ${(p) => p.collapsed && !p.disabled\n        ? css`\n            user-select: none;\n\n            &:hover {\n                ${IconMenu} {\n                    display: flex;\n                }\n\n                ${DragHandle} {\n                    opacity: 0.5;\n                }\n\n                box-shadow: 0 2px 15px 0 rgba(0,0,0,${p => p.theme.boxShadowAlpha * 1.5});\n            }\n\n            ${p.deactivated && 'opacity: 0.6;'}\n        `\n        : !p.collapsed\n            ? css`\n                ${IconMenu} {\n                    display: flex;\n                }\n            `\n        : ''\n    }\n\n    border-left: 5px solid ${(p) => p.borderColor};\n\n    &:focus {\n        outline: none;\n        box-shadow: 0 0 1px 2px ${p =>\n            polished.rgba(p.theme.popColor, 0.5)\n        };\n        background-color: ${p => p.theme.mainBackground};\n    }\n`;\n\nexport const AddRuleRow = styled((p: {\n    onAdd: () => void,\n    disabled: boolean\n} & React.HTMLAttributes<HTMLDivElement>) =>\n    <RowContainer\n        collapsed={true}\n        borderColor='transparent'\n        {..._.omit(p, 'onAdd')}\n\n        tabIndex={0}\n        depth={0}\n        onClick={p.onAdd}\n        onKeyPress={clickOnEnter}\n    >\n        <Icon icon={['fas', 'plus']} />\n        Add a new rule to rewrite requests or responses\n    </RowContainer>\n)`\n    > svg {\n        margin: 0 5px;\n    }\n\n    margin-top: 20px;\n\n    justify-content: center;\n    background-color: ${p =>\n        polished.rgba(p.theme.mainBackground, 0.4)\n    };\n    box-shadow: 0 0 4px 0 rgba(0,0,0,${p => p.theme.boxShadowAlpha});\n`;\n\nconst MatcherOrHandler = styled.section`\n    align-self: stretch;\n    flex-grow: 1;\n    flex-basis: 0;\n    max-width: calc(50% - 30px);\n`;\n\nconst Summary = styled.h1`\n    ${(p: { collapsed: boolean }) => !p.collapsed && css`\n        opacity: 0.3;\n    `}\n\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n\n    /* Required to avoid overflow trimming hanging chars */\n    padding: 5px;\n    margin: -5px;\n`;\n\nconst ArrowIcon = styled(Icon).attrs(() => ({\n    icon: ['fas', 'arrow-left']\n}))`\n    transform: rotate(180deg);\n    padding: 0 15px;\n`;\n\nconst Details = styled.div`\n    display: flex;\n    flex-direction: column;\n    text-align: left;\n`;\n\nconst DetailsHeader = styled.div`\n    margin-top: 20px;\n    margin-bottom: 20px;\n`;\n\n\nconst RuleMenuContainer = styled(IconMenu)`\n    background-image: radial-gradient(\n        ${p => polished.rgba(p.theme.mainBackground, 0.9)} 50%,\n        transparent 100%\n    );\n    z-index: 1;\n`;\n\nconst RuleMenu = (p: {\n    isCollapsed: boolean,\n    isNewRule: boolean,\n    hasUnsavedChanges: boolean,\n    isEditingTitle: boolean,\n    onSetCustomTitle: (event: React.UIEvent) => void,\n    onToggleCollapse: (event: React.UIEvent) => void,\n    onSave: (event: React.UIEvent) => void,\n    onReset: (event: React.UIEvent) => void,\n    onClone: (event: React.UIEvent) => void,\n    toggleState: boolean,\n    onToggleActivation: (event: React.UIEvent) => void,\n    onDelete: (event: React.UIEvent) => void,\n}) => <RuleMenuContainer topOffset={7}>\n        <IconMenuButton\n            title='Delete this rule'\n            icon={['far', 'trash-alt']}\n            onClick={p.onDelete}\n        />\n        <IconMenuButton\n            title='Clone this rule'\n            icon={['far', 'clone']}\n            onClick={p.onClone}\n        />\n        <IconMenuButton\n            title={p.toggleState ? 'Deactivate this rule' : 'Activate this rule'}\n            icon={['fas', p.toggleState ? 'toggle-on' : 'toggle-off']}\n            onClick={p.onToggleActivation}\n        />\n        <IconMenuButton\n            title='Give this rule a custom name'\n            icon={['fas', 'edit']}\n            disabled={p.isEditingTitle}\n            onClick={p.onSetCustomTitle}\n        />\n        <IconMenuButton\n            title='Revert this rule to the last saved version'\n            icon={['fas', 'undo']}\n            disabled={!p.hasUnsavedChanges || p.isNewRule}\n            onClick={p.onReset}\n        />\n        <IconMenuButton\n            icon={['fas',\n                p.hasUnsavedChanges\n                    ? 'save'\n                : p.isCollapsed\n                    ? 'chevron-down'\n                : 'chevron-up']}\n            title={\n                p.hasUnsavedChanges\n                    ? 'Save changes to this rule'\n                : p.isCollapsed\n                    ? 'Show rule details'\n                : 'Hide rule details'}\n            onClick={p.hasUnsavedChanges ? p.onSave : p.onToggleCollapse}\n        />\n    </RuleMenuContainer>;\n\nconst extendRowDraggableStyles = (\n    style: DraggingStyle | NotDraggingStyle | undefined,\n    snapshot: DraggableStateSnapshot\n) => {\n    const overrideStyles: _.Dictionary<string> = { };\n\n    if (style && style.transition) {\n        overrideStyles.transition = style.transition.replace(\n            /transform [\\d.]+s/,\n            'transform 100ms'\n        );\n    }\n\n    if (snapshot.combineWith && snapshot.combineWith.endsWith('-tail')) {\n        overrideStyles.opacity = '1';\n    }\n\n    return {\n        ...style,\n        ...overrideStyles\n    };\n};\n\n@inject('accountStore')\n@observer\nexport class RuleRow extends React.Component<{\n    accountStore?: AccountStore,\n\n    index: number;\n    path: ItemPath;\n    rule: HtkMockRule;\n    isNewRule: boolean;\n    hasUnsavedChanges: boolean;\n    collapsed: boolean;\n    disabled: boolean;\n\n    toggleRuleCollapsed: (ruleId: string) => void;\n\n    saveRule: (path: ItemPath) => void;\n    resetRule: (path: ItemPath) => void;\n    deleteRule: (path: ItemPath) => void;\n    cloneRule: (path: ItemPath) => void;\n\n    getRuleDefaultHandler: (type: RuleType) => Handler;\n}> {\n\n    initialMatcherSelect = React.createRef<HTMLSelectElement>();\n    containerRef: HTMLElement | null = null;\n\n    @observable\n    private titleEditState: undefined | { originalTitle?: string };\n\n    render() {\n        const {\n            index,\n            rule,\n            path,\n            isNewRule,\n            hasUnsavedChanges,\n            collapsed,\n            disabled\n        } = this.props;\n        const {\n            isPaidUser,\n            getPro\n        } = this.props.accountStore!;\n\n        const ruleType = rule.type;\n        const initialMatcher = rule.matchers.length ? rule.matchers[0] : undefined;\n\n        let ruleColour: string;\n        if (ruleType === 'http') {\n            if (initialMatcher instanceof matchers.MethodMatcher) {\n                ruleColour = getMethodColor(Method[initialMatcher.method]);\n            } else if (initialMatcher !== undefined) {\n                ruleColour = getMethodColor('unknown');\n            } else {\n                ruleColour = 'transparent';\n            }\n        } else if (ruleType === 'websocket') {\n            ruleColour = getSummaryColour('websocket');\n        } else if (ruleType === 'ethereum') {\n            ruleColour = getSummaryColour('mutative');\n        } else if (ruleType === 'ipfs') {\n            ruleColour = getSummaryColour('html');\n        } else if (ruleType === 'webrtc') {\n            ruleColour = getSummaryColour('rtc-data');\n        } else {\n            throw new UnreachableCheck(ruleType);\n        }\n\n        const availableMatchers = getAvailableAdditionalMatchers(ruleType);\n        const availableHandlers = getAvailableHandlers(ruleType, initialMatcher);\n\n        const ruleHandlers = 'handler' in rule\n            ? [rule.handler]\n            : rule.steps;\n\n        // We show the summary by default, but if you set a custom title, we only show it when expanded:\n        const shouldShowSummary = !collapsed || (!rule.title && !this.titleEditState);\n        const isEditingTitle = !!this.titleEditState && !collapsed;\n\n        return <Draggable\n            draggableId={rule.id}\n            index={index}\n            isDragDisabled={!collapsed}\n        >{ (provided, snapshot) => <Observer>{ () =>\n            <RowContainer\n                {...provided.draggableProps}\n                borderColor={ruleColour}\n                ref={(ref: HTMLElement | null) => {\n                    provided.innerRef(ref);\n                    this.containerRef = ref;\n                }}\n                collapsed={collapsed}\n                deactivated={!rule.activated}\n                disabled={disabled}\n                tabIndex={collapsed ? 0 : undefined}\n                onClick={collapsed ? this.toggleCollapse : undefined}\n                onKeyPress={clickOnEnter}\n                depth={path.length - 1}\n                style={extendRowDraggableStyles(provided.draggableProps.style, snapshot)}\n            >\n                <RuleMenu\n                    isCollapsed={collapsed}\n                    isNewRule={isNewRule}\n                    hasUnsavedChanges={hasUnsavedChanges}\n                    onToggleCollapse={this.toggleCollapse}\n                    onSave={this.saveRule}\n                    onReset={this.resetRule}\n                    toggleState={rule.activated}\n                    onToggleActivation={this.toggleActivation}\n                    onClone={this.cloneRule}\n                    onDelete={this.deleteRule}\n                    isEditingTitle={isEditingTitle}\n                    onSetCustomTitle={this.startEnteringCustomTitle}\n                />\n                <DragHandle {...provided.dragHandleProps} />\n\n                { rule.title && !isEditingTitle &&\n                    <RuleTitle>\n                        { rule.title }\n                    </RuleTitle>\n                }\n\n                { isEditingTitle &&\n                    <EditableRuleTitle\n                        value={rule.title || ''}\n                        onEditTitle={this.editTitle}\n                        onSave={this.saveRule}\n                        onCancel={\n                            this.titleEditState!.originalTitle !== this.props.rule.title\n                            ? this.cancelEditingTitle\n                            : undefined\n                        }\n                    />\n                }\n\n                <MatcherOrHandler>\n                    { shouldShowSummary &&\n                        <Summary collapsed={collapsed} title={summarizeMatcher(rule)}>\n                            { summarizeMatcher(rule) }\n                        </Summary>\n                    }\n\n                    {\n                        !collapsed && <Details>\n                            <DetailsHeader>Match:</DetailsHeader>\n\n                            <ul>\n                                <InitialMatcherRow\n                                    ref={this.initialMatcherSelect}\n                                    matcher={initialMatcher}\n                                    onChange={this.setInitialMatcher}\n                                />\n\n                                { rule.matchers.slice(1).map((matcher, i) =>\n                                    <ExistingMatcherRow\n                                        key={`${i}/${rule.matchers.length}`}\n                                        matcher={matcher}\n                                        matcherIndex={i}\n                                        onChange={(...ms) => this.updateMatcher(i + 1, ...ms)}\n                                        onDelete={() => this.deleteMatcher(matcher)}\n                                    />\n                                )}\n\n                                { rule.matchers.length > 0 &&\n                                    <NewMatcherRow\n                                        key={rule.type} // Reset when type changes\n                                        availableMatchers={availableMatchers}\n                                        existingMatchers={rule.matchers}\n                                        onAdd={this.addMatcher}\n                                    />\n                                }\n                            </ul>\n                        </Details>\n                    }\n                </MatcherOrHandler>\n\n\n                { shouldShowSummary &&\n                    <ArrowIcon />\n                }\n\n                <MatcherOrHandler>\n                    { shouldShowSummary &&\n                        <Summary collapsed={collapsed} title={ summarizeHandler(rule) }>\n                            { summarizeHandler(rule) }\n                        </Summary>\n                    }\n\n                    {\n                        !collapsed && <Details>\n                            <DetailsHeader>Then:</DetailsHeader>\n\n                            { ruleHandlers.map((ruleHandler, i) =>\n                                <HandlerStepSection\n                                    key={i}\n\n                                    handler={ruleHandler}\n                                    handlerIndex={i}\n\n                                    isPaidUser={isPaidUser}\n                                    getPro={getPro}\n                                    ruleType={ruleType}\n                                    availableHandlers={availableHandlers}\n                                    updateHandler={this.updateHandler}\n                                />\n                            )}\n                        </Details>\n                    }\n                </MatcherOrHandler>\n            </RowContainer>\n        }</Observer>}</Draggable>;\n    }\n\n    saveRule = noPropagation(() => {\n        this.stopEditingTitle();\n        this.props.saveRule(this.props.path);\n    });\n    resetRule = noPropagation(() => {\n        this.stopEditingTitle();\n        this.props.resetRule(this.props.path);\n    });\n    deleteRule = noPropagation(() => this.props.deleteRule(this.props.path));\n    cloneRule = noPropagation(() => this.props.cloneRule(this.props.path));\n\n    @action.bound\n    toggleActivation(event: React.UIEvent) {\n        const { rule } = this.props;\n        rule.activated = !rule.activated;\n        event.stopPropagation();\n    }\n\n    toggleCollapse = noPropagation(() => {\n        // Scroll the row into view, after giving it a moment to rerender\n        requestAnimationFrame(() => {\n            if (this.containerRef) {\n                this.containerRef.scrollIntoView({\n                    block: 'nearest',\n                    behavior: 'smooth'\n                });\n            }\n            if (this.initialMatcherSelect.current) {\n                this.initialMatcherSelect.current.focus();\n                // Clear selection too (sometimes clicking fast selects the rule title)\n                getSelection()?.empty();\n            }\n        });\n\n        this.props.toggleRuleCollapsed(this.props.rule.id);\n        this.stopEditingTitle();\n    });\n\n    @action.bound\n    setInitialMatcher(matcher: InitialMatcher) {\n        const currentRuleType = this.props.rule.type;\n        const newRuleType = getRuleTypeFromInitialMatcher(matcher);\n\n        if (currentRuleType === newRuleType) {\n            this.props.rule.matchers[0] = matcher;\n        } else {\n            this.props.rule.type = newRuleType;\n\n            this.props.rule.matchers = getRuleDefaultMatchers(\n                newRuleType,\n                matcher,\n                this.props.rule.matchers // Update from the old matchers\n            ) as any[];\n        }\n\n        // Reset the rule handler/steps, if incompatible:\n        const handlerResetRequired = 'handler' in this.props.rule\n            ? !isCompatibleHandler(this.props.rule.handler, matcher)\n            : !this.props.rule.steps.every(step => isCompatibleHandler(step, matcher));\n\n        if (handlerResetRequired) {\n            const newHandler = this.props.getRuleDefaultHandler(newRuleType);\n            if (isStepPoweredRule(this.props.rule)) {\n                (this.props.rule as { steps: HandlerStep[] }).steps = [newHandler as HandlerStep];\n                delete (this.props.rule as any).handler;\n            } else {\n                (this.props.rule as { handler: Handler }).handler = newHandler;\n                delete (this.props.rule as any).steps;\n            }\n        }\n\n        updateRuleAfterInitialMatcherChange(this.props.rule);\n    }\n\n    @action.bound\n    addMatcher(matcher: Matcher) {\n        // TS struggles with complex union types here, so we cast more generally:\n        const rule = this.props.rule as { matchers: Matcher[] };\n        rule.matchers.push(matcher);\n    }\n\n    @action.bound\n    updateMatcher(index: number, ...matchers: Matcher[]) {\n        // TS struggles with complex union types here, so we cast more generally:\n        const rule = this.props.rule as { matchers: Matcher[] };\n        rule.matchers.splice(index, 1, ...matchers);\n    }\n\n    @action.bound\n    deleteMatcher(matcher: Matcher) {\n        // TS struggles with complex union types here, so we cast more generally:\n        const rule = this.props.rule as { matchers: Matcher[] };\n        rule.matchers = rule.matchers.filter(m => m !== matcher);\n    }\n\n    @action.bound\n    updateHandler(handlerIndex: number, handler: Handler) {\n        // TS struggles with complex union types here, so we cast more generally:\n        const rule = this.props.rule as\n            | { handler: Handler }\n            | { steps: HandlerStep[] };\n\n        if ('handler' in rule) {\n            if (handlerIndex !== 0) throw new Error('Single-handler rules cannot have additional steps');\n            rule.handler = handler;\n        } else {\n            rule.steps[handlerIndex] = handler as HandlerStep;\n\n            if (isFinalHandler(handler)) {\n                // If this is final, slice off anything after this step, it's all invalid\n                rule.steps = rule.steps.slice(0, handlerIndex + 1);\n            } else {\n                // If at any point you change the last step to be a non-final step, we append a default\n                // (must be final) step to allow continuing the rule:\n                if (handlerIndex === rule.steps.length - 1) {\n                    rule.steps.push(this.props.getRuleDefaultHandler(this.props.rule.type) as HandlerStep);\n                }\n            }\n        }\n    }\n\n    @action.bound\n    startEnteringCustomTitle(event: React.UIEvent) {\n        this.titleEditState = { originalTitle: this.props.rule.title };\n        // We expand the row, but not with toggleCollapsed, because we don't want\n        // to auto-focus the matcher like normal:\n        if (this.props.collapsed) this.props.toggleRuleCollapsed(this.props.rule.id);\n        event.stopPropagation();\n    }\n\n    @action.bound\n    editTitle(newTitle: string | undefined) {\n        this.props.rule.title = newTitle || undefined;\n    }\n\n    @action.bound\n    cancelEditingTitle() {\n        if (!this.titleEditState) return;\n        this.editTitle(this.titleEditState.originalTitle);\n        this.titleEditState = undefined;\n    }\n\n    @action.bound\n    stopEditingTitle() {\n        if (!this.titleEditState) return;\n\n        // Trim titles on save, so that e.g. space-only titles are dropped:\n        if (this.props.rule.title !== this.titleEditState.originalTitle) {\n            this.props.rule.title = this.props.rule.title?.trim() || undefined;\n        }\n\n        this.titleEditState = undefined;\n    }\n\n}\n\n@observer\nclass HandlerStepSection extends React.Component<{\n    isPaidUser: boolean;\n    getPro: (source: string) => void;\n    ruleType: RuleType;\n    handlerIndex: number;\n    handler: Handler;\n\n    availableHandlers: AvailableHandler[];\n    updateHandler: (handlerIndex: number, handler: Handler) => void;\n}> {\n\n    @observable\n    private demoHandler: Handler | undefined;\n\n    componentDidMount() {\n        // If the actual handler ever changes, dump our demo handler state:\n        disposeOnUnmount(this, reaction(\n            () => this.props.handler,\n            () => { this.demoHandler = undefined; }\n        ));\n    }\n\n    render() {\n        const {\n            isPaidUser,\n            getPro,\n            ruleType,\n            availableHandlers,\n            handler\n        } = this.props;\n\n        const shownHandler = this.demoHandler ?? handler;\n\n        const isHandlerDemo = !isPaidUser &&\n            shownHandler &&\n            isPaidHandler(ruleType, shownHandler);\n\n        return <>\n            <HandlerSelector\n                value={shownHandler}\n                ruleType={ruleType}\n                onChange={this.updateHandler}\n                availableHandlers={availableHandlers}\n            />\n\n            { isHandlerDemo\n                // If you select a paid handler with an unpaid account,\n                // show a handler demo with a 'Get Pro' overlay:\n                ? <GetProOverlay getPro={getPro} source={`rule-${handler.type}`}>\n                    <HandlerConfiguration\n                        ruleType={ruleType}\n                        handler={shownHandler}\n                        onChange={_.noop}\n                    />\n                </GetProOverlay>\n                : <HandlerConfiguration\n                    ruleType={ruleType}\n                    handler={shownHandler}\n                    onChange={this.updateHandler}\n                />\n            }\n        </>;\n    }\n\n    @action.bound\n    updateHandler(handler: Handler) {\n        const { isPaidUser, handlerIndex, ruleType, updateHandler } = this.props;\n\n        // You can never update a paid handler if you're not a paid user\n        if (!isPaidUser && isPaidHandler(ruleType, handler)) {\n            this.demoHandler = handler;\n        } else {\n            updateHandler(handlerIndex, handler);\n        }\n    }\n\n}","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { observable, action } from 'mobx';\nimport { observer, Observer } from 'mobx-react'\nimport { Droppable, DragDropContext, BeforeCapture, DropResult } from 'react-beautiful-dnd';\n\nimport { styled } from '../../styles';\n\nimport {\n    areItemsEqual,\n    HtkMockRuleGroup,\n    ItemPath,\n    findItemPath,\n    HtkMockRuleRoot,\n    getItemParentByPath,\n    isRuleGroup,\n    comparePaths,\n    getItemAtPath,\n    findItem,\n} from '../../model/rules/rules-structure';\nimport { Handler, HandlerStep, HtkMockRule, RuleType } from '../../model/rules/rules';\n\nimport { GroupHeader, GroupTail } from './mock-rule-group';\nimport { AddRuleRow, RuleRow } from './mock-rule-row';\n\nconst MockRuleListContainer = styled.ol`\n    padding: 0 40px 20px;\n    min-height: calc(100% - 40px);\n`;\n\nfunction getDragTarget(\n    indexMapping: Array<ItemPath>,\n    rules: HtkMockRuleRoot,\n    sourceIndex: number,\n    destinationIndex: number\n) {\n    const sourcePath = indexMapping[sourceIndex];\n    const displacedItemPath = indexMapping[destinationIndex];\n\n    const pathComparison = comparePaths(sourcePath, displacedItemPath);\n\n    const displacedItemParent = getItemParentByPath(rules, displacedItemPath);\n    const displacedItemIndex = _.last(displacedItemPath)!;\n\n    // Avoid reading off the end of the children (for group tail elements),\n    // to stop mobx complaining at us.\n    const displacedItem = displacedItemParent.items.length > displacedItemIndex\n        ? getItemAtPath(rules, displacedItemPath)\n        : undefined;\n\n    const sourceParentPath = sourcePath.slice(0, -1);\n    const targetParentPath = displacedItemPath.slice(0, -1);\n\n    if (\n        displacedItem &&\n        isRuleGroup(displacedItem) &&\n        !displacedItem.collapsed &&\n        pathComparison > 0\n    ) {\n        // If you displace an expanded group header below you from above, then\n        // you're actually entering the top of the group\n        return { sourcePath, targetPath: displacedItemPath.concat(0) };\n    }\n\n    if (displacedItem === undefined && pathComparison > 0) {\n        // If you displace the empty space at the end of a group from above,\n        // then you actually want to be just after the outside of the group\n\n        // If the group (tail's parent) has the same parent we do, then removing\n        // this node will update it's index, so we need to avoid overshooting\n        const targetParentParentPath = targetParentPath.slice(0, -1);\n        const offset = _.isEqual(sourceParentPath, targetParentParentPath)\n            ? 0\n            : 1;\n\n        return {\n            sourcePath,\n            targetPath: displacedItemPath\n                .slice(0, -2) // Without the tail or parent group index\n                .concat(displacedItemPath[displacedItemPath.length - 2] + offset) // _After_ the parent group\n        }\n    }\n\n    if (!_.isEqual(sourceParentPath, targetParentPath)) {\n        // Moving in/out of a group, displacing an item there. This means we can't\n        // do a simple move, because the displaced target won't move as we expect\n        // (when we remove the source element, the targets index won't change).\n        const targetIndex = _.last(displacedItemPath)!;\n\n        return {\n            sourcePath,\n            targetPath: pathComparison < 0\n                // The item to displace is above the source item (going upwards)\n                ? targetParentPath.concat(targetIndex)\n                // The item to displace is below the source item (going downwards)\n                // We know its not equal, due to the outer equal parent check\n                : targetParentPath.concat(targetIndex + 1)\n        };\n    }\n\n    return { sourcePath, targetPath: displacedItemPath };\n}\n\n@observer\nexport class MockRuleList extends React.Component<{\n    draftRules: HtkMockRuleRoot,\n    activeRules: HtkMockRuleRoot,\n\n    addRule: () => void,\n    saveRule: (path: ItemPath) => void,\n    resetRule: (path: ItemPath) => void,\n    cloneItem: (path: ItemPath) => void,\n    deleteItem: (path: ItemPath) => void,\n    toggleRuleCollapsed: (id: string) => void,\n    updateGroupTitle: (groupId: string, title: string) => void,\n    getRuleDefaultHandler: (ruleType: RuleType) => Handler,\n\n    moveRule: (currentPath: ItemPath, targetPath: ItemPath) => void,\n    combineRulesAsGroup: (sourcePath: ItemPath, targetPath: ItemPath) => void,\n\n    collapsedRulesMap: { [id: string]: boolean }\n}> {\n\n    @observable currentlyDraggingRuleId: string | undefined;\n\n    private wasGroupOpenBeforeDrag: boolean | undefined;\n\n    @action.bound\n    beforeDrag({ draggableId }: BeforeCapture) {\n        this.currentlyDraggingRuleId = draggableId;\n\n        const item = findItem(this.props.draftRules, { id: draggableId });\n        if (item && isRuleGroup(item)) {\n            this.wasGroupOpenBeforeDrag = !item.collapsed;\n            item.collapsed = true;\n        } else {\n            this.wasGroupOpenBeforeDrag = undefined;\n        }\n    }\n\n    buildDragEndListener = (indexMapping: Array<ItemPath>, rules: HtkMockRuleRoot) =>\n        action(({ source, destination, combine }: DropResult) => {\n            this.currentlyDraggingRuleId = undefined;\n\n            const { draftRules } = this.props;\n\n            if (combine) {\n                const sourcePath = indexMapping[source.index];\n                const isTail = combine.draggableId.endsWith('-tail');\n                const targetId = isTail ? combine.draggableId.slice(0, -5) : combine.draggableId;\n\n                const targetPath = findItemPath(draftRules, { id: targetId })!;\n                const targetItem = getItemAtPath(draftRules, targetPath);\n\n                if (isRuleGroup(targetItem)) {\n                    this.props.moveRule(\n                        sourcePath,\n                        targetPath.concat(isTail ? targetItem.items.length : 0)\n                    );\n                } else {\n                    this.props.combineRulesAsGroup(\n                        sourcePath,\n                        targetPath\n                    );\n                }\n\n                return;\n            }\n\n            if (!destination) {\n                if (this.wasGroupOpenBeforeDrag) {\n                    const path = indexMapping[source.index];\n                    const item = getItemAtPath(draftRules, path) as HtkMockRuleGroup;\n                    item.collapsed = false;\n                }\n\n                return;\n            }\n\n            const { sourcePath, targetPath } = getDragTarget(\n                indexMapping,\n                rules,\n                source.index,\n                destination.index\n            );\n\n            this.props.moveRule(\n                sourcePath,\n                targetPath\n            );\n\n            if (this.wasGroupOpenBeforeDrag) {\n                const item = getItemAtPath(draftRules, targetPath) as HtkMockRuleGroup;\n                item.collapsed = false;\n            }\n        });\n\n    render() {\n        const {\n            draftRules,\n            activeRules,\n\n            addRule,\n            saveRule,\n            resetRule,\n            deleteItem,\n            cloneItem,\n            toggleRuleCollapsed,\n            updateGroupTitle,\n            getRuleDefaultHandler,\n\n            collapsedRulesMap\n        } = this.props;\n        const {\n            beforeDrag,\n            buildDragEndListener,\n            currentlyDraggingRuleId,\n        } = this;\n\n\n        const { ruleRows, indexMapping } = buildRuleRows(\n            draftRules,\n            activeRules,\n            collapsedRulesMap,\n            currentlyDraggingRuleId,\n            toggleRuleCollapsed,\n            saveRule,\n            resetRule,\n            cloneItem,\n            deleteItem,\n            updateGroupTitle,\n            getRuleDefaultHandler\n        );\n\n        return <DragDropContext\n            onBeforeCapture={beforeDrag}\n            onDragEnd={buildDragEndListener(indexMapping, draftRules)}\n        >\n            <Droppable\n                isCombineEnabled={true}\n                droppableId='mock-rule-list'\n            >{(provided) => <Observer>{() =>\n                <MockRuleListContainer\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                >\n                    <AddRuleRow\n                        onAdd={addRule}\n                        disabled={currentlyDraggingRuleId !== undefined}\n                    />\n\n                    { ruleRows }\n\n                    { provided.placeholder }\n                </MockRuleListContainer>\n            }</Observer>}</Droppable>\n        </DragDropContext>\n    };\n}\n\ntype RuleRowsData = { indexMapping: Array<ItemPath>, ruleRows: Array<React.ReactNode> };\n\nfunction buildRuleRows(\n    allDraftRules: HtkMockRuleRoot,\n    allActiveRules: HtkMockRuleRoot,\n    collapsedRulesMap: { [id: string]: boolean },\n    currentlyDraggingRuleId: string | undefined,\n\n    toggleRuleCollapsed: (ruleId: string) => void,\n    saveRule: (path: ItemPath) => void,\n    resetRule: (path: ItemPath) => void,\n    cloneItem: (path: ItemPath) => void,\n    deleteItem: (path: ItemPath) => void,\n    updateGroupTitle: (groupId: string, title: string) => void,\n    getRuleDefaultHandler: (ruleType: RuleType) => Handler,\n\n    ruleGroup: HtkMockRuleGroup = allDraftRules,\n    ruleGroupPath: ItemPath = [],\n    overallStartIndex = 0,\n): RuleRowsData {\n    const rowEventHandlers = {\n        toggleRuleCollapsed,\n        saveRule,\n        resetRule,\n        cloneRule: cloneItem,\n        deleteRule: deleteItem,\n        getRuleDefaultHandler\n    };\n\n    return ruleGroup.items.reduce<RuleRowsData>((result, item, index) => {\n        const itemPath = ruleGroupPath.concat(index);\n\n        if (isRuleGroup(item)) {\n            result.ruleRows.push(\n                <GroupHeader\n                    key={item.id}\n                    group={item}\n                    path={itemPath}\n                    index={overallStartIndex + result.indexMapping.length}\n                    collapsed={!!item.collapsed}\n                    updateGroupTitle={updateGroupTitle}\n                    cloneGroup={cloneItem}\n                    deleteGroup={deleteItem}\n                />\n            );\n            result.indexMapping.push(itemPath);\n\n            // We skip the children & tail of collapsed groups\n            if (item.collapsed) return result;\n\n            const subResult = buildRuleRows(\n                allDraftRules,\n                allActiveRules,\n                collapsedRulesMap,\n                currentlyDraggingRuleId,\n\n                toggleRuleCollapsed,\n                saveRule,\n                resetRule,\n                cloneItem,\n                deleteItem,\n                updateGroupTitle,\n                getRuleDefaultHandler,\n\n                item,\n                itemPath,\n                overallStartIndex + result.indexMapping.length\n            );\n\n            result.ruleRows.push(...subResult.ruleRows);\n            result.indexMapping.push(...subResult.indexMapping);\n\n            result.ruleRows.push(\n                <GroupTail\n                    key={item.id + '-tail'}\n                    group={item}\n                    index={overallStartIndex + result.indexMapping.length}\n                />\n            );\n            // The tail element maps to the empty space after the end of the group\n            result.indexMapping.push(itemPath.concat(item.items.length));\n        } else {\n            const isCollapsed = collapsedRulesMap[item.id];\n            const changed = getChangedState(item, itemPath, allDraftRules, allActiveRules);\n\n            result.ruleRows.push(<RuleRow\n                key={item.id}\n                index={overallStartIndex + result.indexMapping.length}\n\n                path={itemPath}\n                rule={item}\n\n                isNewRule={changed === 'new'}\n                hasUnsavedChanges={!!changed}\n\n                collapsed={isCollapsed}\n                disabled={\n                    // When dragging, disable all other rules\n                    currentlyDraggingRuleId !== undefined &&\n                    currentlyDraggingRuleId !== item.id\n                }\n\n                {...rowEventHandlers}\n            />);\n\n            result.indexMapping.push(itemPath);\n        }\n\n        return result;\n    }, { indexMapping: [], ruleRows: [] });\n}\n\nfunction getChangedState(\n    draftRule: HtkMockRule,\n    draftPath: ItemPath,\n    draftRules: HtkMockRuleRoot,\n    activeRules: HtkMockRuleRoot\n): 'changed' | 'new' | false {\n    const activePath = findItemPath(activeRules, { id: draftRule.id });\n    if (!activePath) return 'new';\n\n    const draftParent = getItemParentByPath(draftRules, draftPath);\n    const activeParent = getItemParentByPath(activeRules, activePath);\n    const activeRule = activeParent.items[_.last(activePath)!];\n\n    if (activeParent.id !== draftParent.id) {\n        // Changed group\n        return 'changed';\n    }\n\n    const activeCommonSiblings = _.intersectionBy(activeParent.items, draftParent.items, 'id');\n    const draftCommonSiblings = _.intersectionBy(draftParent.items, activeParent.items, 'id');\n\n    if (activeCommonSiblings.indexOf(activeRule) !== draftCommonSiblings.indexOf(draftRule)) {\n        // Changed order within group\n        return 'changed';\n    }\n\n    if (!_.isEqualWith(activeRule, draftRule, areItemsEqual)) {\n        // Rule content changed\n        return 'changed';\n    }\n\n    return false;\n}","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { action, observable, autorun, runInAction } from 'mobx';\nimport { observer, inject, disposeOnUnmount } from 'mobx-react';\nimport * as dateFns from 'date-fns';\n\nimport { styled } from '../../styles';\nimport { WithInjected } from '../../types';\nimport { Icon } from '../../icons';\nimport { logError } from '../../errors';\nimport { uploadFile, saveFile } from '../../util/ui';\n\nimport { RulesStore } from '../../model/rules/rules-store';\nimport { AccountStore } from '../../model/account/account-store';\n\nimport { RuleType } from '../../model/rules/rules';\nimport { getNewRule, getRuleDefaultHandler } from '../../model/rules/rule-creation';\nimport {\n    cloneItem,\n    getItemAtPath,\n    isRuleGroup,\n    ItemPath,\n    mapRules\n} from '../../model/rules/rules-structure';\nimport { SERIALIZED_RULES_MIME_TYPE, serializeRules } from '../../model/rules/rule-serialization';\n\nimport { clickOnEnter } from '../component-utils';\nimport { Button, SecondaryButton } from '../common/inputs';\nimport { MockRuleList } from './mock-rule-list';\n\ninterface MockPageProps {\n    className?: string;\n    rulesStore: RulesStore;\n    accountStore: AccountStore;\n\n    navigate: (path: string) => void;\n    initialRuleId?: string;\n}\n\nconst MockPageContainer = styled.section`\n    box-sizing: border-box;\n    height: 100%;\n    width: 100%;\n    display: flex;\n    flex-flow: column;\n    align-items: stretch;\n`;\n\nconst MockPageScrollContainer = styled.div`\n    overflow-y: scroll;\n    flex-grow: 1;\n`;\n\nconst MockPageHeader = styled.header`\n    box-sizing: border-box;\n    width: 100%;\n    padding: 20px calc(40px + 16px) 20px 40px; /* ~16px to match scrollbar below */\n    background-color: ${p => p.theme.containerBackground};\n    border-bottom: 1px solid rgba(0,0,0,0.12);\n    box-sizing: border-box;\n\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n`;\n\nconst MockHeading = styled.h1`\n    font-size: ${p => p.theme.loudHeadingSize};\n    font-weight: bold;\n    flex-grow: 1;\n`;\n\nconst SaveButton = styled(Button)`\n    font-size: ${p => p.theme.textSize};\n    font-weight: bold;\n    padding: 10px 24px;\n    margin-left: 20px;\n\n    svg {\n        margin-right: 5px;\n    }\n`;\nconst OtherButton = styled(SecondaryButton)`\n    border: none;\n    font-size: 1.2em;\n    padding: 5px 10px;\n    margin-left: 10px;\n`;\n\n@inject('rulesStore')\n@inject('accountStore')\n@observer\nclass MockPage extends React.Component<MockPageProps> {\n\n    containerRef = React.createRef<HTMLDivElement>();\n\n    // Map from rule id -> collapsed (true/false)\n    @observable\n    collapsedRulesMap = _.fromPairs(\n        mapRules(this.props.rulesStore.draftRules, (rule) =>\n            [\n                rule.id,\n                rule.id !== this.props.initialRuleId // We might start with a rule expanded\n            ] as [string, boolean]\n        )\n    );\n\n    componentDidMount() {\n        // If the list of rules ever changes, update the collapsed list accordingly.\n        // Drop now-unnecessary ids, and add new rules (defaulting to collapsed)\n        disposeOnUnmount(this, autorun(() => {\n            const ruleIds = mapRules(this.props.rulesStore.draftRules, r => r.id);\n            const ruleMapIds = _.keys(this.collapsedRulesMap);\n\n            const extraIds = _.difference(ruleMapIds, ruleIds);\n            const missingIds = _.difference(ruleIds, ruleMapIds);\n\n            runInAction(() => {\n                extraIds.forEach((extraId) => {\n                    delete this.collapsedRulesMap[extraId];\n                });\n\n                missingIds.forEach((missingId) => {\n                    this.collapsedRulesMap[missingId] = true;\n                });\n            });\n        }));\n\n        // If a rule was initially selected, scroll to it.\n        const { initialRuleId } = this.props;\n        const container = this.containerRef.current;\n        if (initialRuleId && container) {\n            const ruleElement = container.querySelector(\n                `[data-rbd-draggable-id=\"${initialRuleId}\"]`\n            );\n\n            // Leave a little time for e.g. Monaco to render, then hop to it.\n            requestAnimationFrame(() => ruleElement?.scrollIntoView());\n        }\n    }\n\n    render(): JSX.Element {\n        const {\n            rules,\n            draftRules,\n            areSomeRulesUnsaved,\n            areSomeRulesNonDefault,\n            deleteDraftItem,\n            moveDraftRule,\n            updateGroupTitle,\n            combineDraftRulesAsGroup\n        } = this.props.rulesStore;\n        const { isPaidUser } = this.props.accountStore;\n\n        return <MockPageContainer ref={this.containerRef}>\n            <MockPageHeader>\n                <MockHeading>Mock & Rewrite HTTP</MockHeading>\n\n                <OtherButton\n                    disabled={!areSomeRulesNonDefault}\n                    onClick={this.resetToDefaults}\n                    onKeyPress={clickOnEnter}\n                    title=\"Reset rules to default\"\n                >\n                    <Icon icon={['far', 'trash-alt']} />\n                </OtherButton>\n                <OtherButton\n                    disabled={!isPaidUser}\n                    onClick={this.importRules}\n                    onKeyPress={clickOnEnter}\n                    title={\n                        isPaidUser\n                            ? 'Import a saved set of rules'\n                            : (\n                                'With Pro: Import a set of saved rules, so you can build your ' +\n                                'own ready-to-use collections of predefined rules'\n                            )\n                    }\n                >\n                    <Icon icon={['fas', 'folder-open']} />\n                </OtherButton>\n                <OtherButton\n                    disabled={!isPaidUser || !areSomeRulesNonDefault || draftRules.items.length === 0}\n                    onClick={this.exportRules}\n                    onKeyPress={clickOnEnter}\n                    title={\n                        isPaidUser\n                            ? 'Export these rules'\n                            : 'With Pro: Export these rules, to save them for quick reuse later'\n                    }\n                >\n                    <Icon icon={['fas', 'download']} />\n                </OtherButton>\n                <OtherButton\n                    disabled={!areSomeRulesUnsaved}\n                    onClick={this.resetRuleDrafts}\n                    onKeyPress={clickOnEnter}\n                    title=\"Revert changes since the last save\"\n                >\n                    <Icon icon={['fas', 'undo']} />\n                </OtherButton>\n                <SaveButton\n                    disabled={!areSomeRulesUnsaved}\n                    onClick={this.saveAll}\n                    onKeyPress={clickOnEnter}\n                    title=\"Save all rule changes\"\n                >\n                    <Icon icon={['fas', 'save']} /> Save changes\n                </SaveButton>\n            </MockPageHeader>\n\n            <MockPageScrollContainer>\n                <MockRuleList\n                    activeRules={rules}\n                    draftRules={draftRules}\n                    collapsedRulesMap={this.collapsedRulesMap}\n\n                    addRule={this.addRule}\n                    saveRule={this.saveRule}\n                    resetRule={this.resetRule}\n                    cloneItem={this.cloneItem}\n                    deleteItem={deleteDraftItem}\n                    toggleRuleCollapsed={this.toggleRuleCollapsed}\n                    updateGroupTitle={updateGroupTitle}\n                    getRuleDefaultHandler={this.getRuleDefaultHandler}\n\n                    moveRule={moveDraftRule}\n                    combineRulesAsGroup={combineDraftRulesAsGroup}\n                />\n            </MockPageScrollContainer>\n        </MockPageContainer>\n    }\n\n    @action.bound\n    collapseAll() {\n        Object.keys(this.collapsedRulesMap).forEach((ruleId) => {\n            this.collapsedRulesMap[ruleId] = true;\n        });\n    }\n\n    @action.bound\n    saveRule(path: ItemPath) {\n        const savedRule = this.props.rulesStore.saveItem(path);\n        this.collapsedRulesMap[savedRule.id] = true;\n    }\n\n    @action.bound\n    resetRule(path: ItemPath) {\n        this.props.rulesStore.resetRule(path);\n    }\n\n    @action.bound\n    cloneItem(path: ItemPath) {\n        const rules = this.props.rulesStore.draftRules;\n\n        const clonedItem = cloneItem(getItemAtPath(rules, path));\n\n        if (isRuleGroup(clonedItem)) {\n            clonedItem.collapsed = true;\n        } else {\n            this.collapsedRulesMap[clonedItem.id] = true;\n        }\n\n        const existingChildIndex = _.last(path)!;\n\n        this.props.rulesStore.addDraftItem(\n            clonedItem,\n            // Place the cloned rule directly after the existing rule\n            [...path.slice(0, -1), existingChildIndex + 1]\n        );\n    }\n\n    @action.bound\n    saveAll() {\n        this.props.rulesStore.saveRules();\n        this.collapseAll();\n    }\n\n    @action.bound\n    resetToDefaults() {\n        const confirmResult = confirm(\"Reset all rules?\");\n        if (!confirmResult) return;\n\n        this.props.rulesStore.resetRulesToDefault();\n        this.collapseAll();\n    }\n\n    @action.bound\n    resetRuleDrafts() {\n        this.props.rulesStore.resetRuleDrafts();\n        this.collapseAll();\n    }\n\n    @action.bound\n    addRule() {\n        const newRule = getNewRule(this.props.rulesStore);\n        // When you explicitly add a new rule, start it off expanded.\n        this.collapsedRulesMap[newRule.id] = false;\n        this.props.rulesStore.addDraftItem(newRule);\n\n        // Wait briefly for the new rule to appear, then focus its first dropdown\n        setTimeout(() => {\n            const container = this.containerRef.current;\n            if (!container) return;\n\n            const dropdown = container.querySelector(\n                'ol > section:nth-child(2) select'\n            ) as HTMLSelectElement | undefined;\n            if (dropdown) dropdown.focus();\n            // If there's a race, this will just do nothing\n        }, 100);\n    }\n\n    @action.bound\n    toggleRuleCollapsed(ruleId: string) {\n        this.collapsedRulesMap[ruleId] = !this.collapsedRulesMap[ruleId];\n    }\n\n    getRuleDefaultHandler = (type: RuleType) => {\n        return getRuleDefaultHandler(type, this.props.rulesStore);\n    };\n\n    readonly importRules = async () => {\n        const uploadedFile = await uploadFile('text', [\n            '.htkrules',\n            'application/json',\n            'application/htkrules+json'\n        ]);\n        if (uploadedFile) {\n            try {\n                this.props.rulesStore.loadSavedRules(\n                    JSON.parse(uploadedFile)\n                );\n            } catch (e) {\n                logError(e);\n                alert(`Rules could not be imported: ${e}`);\n            }\n        }\n    }\n\n    readonly exportRules = async () => {\n        const rulesetContent = JSON.stringify(\n            serializeRules(this.props.rulesStore.draftRules)\n        );\n\n        const filename = `HTTPToolkit_${\n            dateFns.format(Date.now(), 'YYYY-MM-DD_HH-mm')\n        }.htkrules`;\n\n        saveFile(filename, SERIALIZED_RULES_MIME_TYPE, rulesetContent);\n    }\n}\n\n// Exclude stores etc from the external props, as they're injected\nconst InjectedMockPage = MockPage as unknown as WithInjected<\n    typeof MockPage,\n    'rulesStore' | 'accountStore' | 'navigate'\n>;\nexport { InjectedMockPage as MockPage };","import { reaction } from 'mobx';\n\nimport { RawHeaders } from '../../types';\nimport { getHeaderValue, setHeaderValue, removeHeader } from '../../util/headers';\n\nexport function getExpectedHost(url: string) {\n    try {\n        return new URL(url).host;\n    } catch (e) {\n        return undefined;\n    }\n}\n\n/**\n * Whenever the observable result of getUrl changes, if the Host header in getHeaders was\n * previously in sync, we keep it in sync, updating the host header to match.\n */\nexport function syncUrlToHeaders(getUrl: () => string, getHeaders: () => RawHeaders) {\n    // Track the previous value of the URL, so we know whether we were in sync before.\n    let lastHost: string | undefined; // Undefined means 'initially invalid URL' - we consider that updatable\n\n    const initialUrl = getUrl();\n    if (!initialUrl) lastHost = '';\n    lastHost = getExpectedHost(initialUrl);\n\n    return reaction(() => getUrl(), (url) => {\n        const headers = getHeaders();\n        const hostHeader = getHeaderValue(headers, 'host') ?? '';\n\n        const newHost = getExpectedHost(url);\n        // Ignore intermediate invalid states - but if the URL is totally cleared, and was\n        // in sync, then we do clear the host header too.\n\n        // We only keep the host header in sync unless you change it. As soon as they're\n        // out of sync, we just give up. Note that this does include unset/empty though,\n        // to autopopulate the Host header right at the beginning.\n        if (hostHeader === lastHost || lastHost === undefined) {\n            if (newHost) {\n                setHeaderValue(headers, 'host', newHost, { prepend: true });\n            } else {\n                removeHeader(headers, 'host');\n            }\n        }\n\n        lastHost = newHost;\n    });\n}","import * as React from 'react';\nimport { Method } from 'mockttp';\n\nimport { styled } from '../../styles';\nimport { Icon, ArrowIcon } from '../../icons';\n\nimport { Button, Select, TextInput } from '../common/inputs';\nimport { getMethodColor } from '../../model/events/categorization';\n\ntype MethodName = keyof typeof Method;\nconst validMethods = Object.values(Method)\n    .filter(\n        value => typeof value === 'string'\n    ) as Array<MethodName>;\n\nconst SendRequestLineContainer = styled.form`\n    background-color: ${p => p.theme.mainBackground};\n    flex-grow: 0;\n    display: flex;\n`;\n\nconst MethodSelectArrow = styled(Icon).attrs(() => ({\n    icon: ['fas', 'chevron-down']\n}))`\n    position: absolute;\n    top: 50%;\n    right: 8px;\n    transform: translateY(-50%);\n\n    color: ${p => p.theme.mainColor};\n    opacity: ${p => p.theme.lowlightTextOpacity};\n    font-size: ${p => p.theme.textInputFontSize};\n\n    pointer-events: none;\n`;\n\nconst MethodSelect = styled(Select)`\n    border-radius: 0;\n    border: none;\n    outline: none;\n    appearance: none;\n\n    border-left: 5px solid ${(p: { borderColor: string }) => p.borderColor};\n\n    padding: 5px 0 5px 15px;\n    font-size: ${p => p.theme.textInputFontSize};\n\n    height: 100%;\n    width: 100%;\n\n    color: ${p => p.theme.mainColor};\n    background-color: ${p => p.theme.mainLowlightBackground};\n`;\n\nconst MethodSelectContainer = styled.div`\n    position: relative;\n    font-size: ${p => p.theme.textSize};\n\n    flex-shrink: 0;\n    flex-grow: 0;\n    flex-basis: 105px;\n\n    &:focus-within > svg {\n        color: ${p => p.theme.popColor};\n        opacity: 1;\n    }\n`;\n\nconst UrlInput = styled(TextInput)`\n    flex-basis: 100%;\n    flex-grow: 1;\n\n    border-radius: 0;\n    border: none;\n\n    padding: 10px 10px 10px;\n\n    font-size: ${p => p.theme.textSize};\n\n    &:focus {\n        outline: none;\n    }\n`;\n\nconst SendButton = styled(Button)`\n    padding: 4px 18px 5px;\n    border-radius: 0;\n\n    font-size: ${p => p.theme.textSize};\n\n    > svg {\n        padding: 0;\n    }\n`;\n\nexport const SendRequestLine = (props: {\n    method: string;\n    updateMethod: (method: string) => void;\n\n    url: string;\n    updateUrl: (url: string) => void;\n\n    isSending: boolean;\n    sendRequest: () => void;\n}) => {\n    const updateMethodFromEvent = React.useCallback((changeEvent: React.ChangeEvent<HTMLSelectElement>) => {\n        props.updateMethod(changeEvent.target.value);\n    }, [props.updateMethod]);\n\n    const updateUrlFromEvent = React.useCallback((changeEvent: React.ChangeEvent<HTMLInputElement>) => {\n        props.updateUrl(changeEvent.target.value);\n    }, [props.updateUrl]);\n\n    const prepopulateUrl = React.useCallback((focusEvent: React.FocusEvent<HTMLInputElement>) => {\n        const inputField = focusEvent.target;\n        if (!inputField.value) inputField.value = 'https://';\n    }, []);\n\n    const sendRequest = React.useCallback((event: React.SyntheticEvent<HTMLElement>) => {\n        event.preventDefault();\n        props.sendRequest();\n        return false;\n    }, [props.sendRequest]);\n\n    const borderColor = getMethodColor(props.method);\n\n    return <SendRequestLineContainer onSubmit={sendRequest}>\n        <MethodSelectContainer>\n            <MethodSelect\n                value={props.method}\n                onChange={updateMethodFromEvent}\n                borderColor={borderColor}\n            >\n                { validMethods.map((methodOption) =>\n                    <option\n                        key={methodOption}\n                        value={methodOption}\n                    >\n                        { methodOption }\n                    </option>\n                ) }\n            </MethodSelect>\n            <MethodSelectArrow />\n        </MethodSelectContainer>\n        <UrlInput\n            type='url'\n            spellCheck='false'\n            placeholder='https://example.com/hello?name=world'\n\n            value={props.url}\n            onFocus={prepopulateUrl}\n            onChange={updateUrlFromEvent}\n        />\n        <SendButton\n            type='submit'\n            disabled={props.isSending}\n            title='Send this request'\n        >\n            { props.isSending\n                ? <Icon spin fixedWidth={true} icon={['fas', 'spinner']} />\n                : <ArrowIcon direction='right' />\n            }\n        </SendButton>\n    </SendRequestLineContainer>;\n\n};","import * as React from 'react';\nimport { observer } from 'mobx-react';\n\nimport { styled } from '../../styles';\nimport { RawHeaders } from '../../types';\n\nimport {\n    CollapsibleCardHeading,\n    ExpandableCardProps\n} from '../common/card';\nimport {\n    SendCardSection\n} from './send-card-section';\nimport { EditableRawHeaders } from '../common/editable-headers';\nimport { ExpandShrinkButton } from '../common/expand-shrink-button';\nimport { CollapsingButtons } from '../common/collapsing-buttons';\n\nexport interface SendRequestHeadersProps extends ExpandableCardProps {\n    headers: RawHeaders;\n    updateHeaders: (headers: RawHeaders) => void;\n}\n\nconst HeaderFieldsContainer = styled.div`\n    overflow-y: auto;\n\n    flex-grow: 1;\n    flex-shrink: 1;\n\n    margin: 0 -20px -20px -20px;\n    padding: 0 20px 20px 20px;\n`;\n\nexport const SendRequestHeadersCard = observer(({\n    headers,\n    updateHeaders,\n    ...cardProps\n}: SendRequestHeadersProps) => {\n    return <SendCardSection\n        {...cardProps}\n        headerAlignment='left'\n    >\n        <header>\n            <CollapsingButtons>\n                <ExpandShrinkButton\n                    expanded={cardProps.expanded}\n                    onClick={cardProps.onExpandToggled}\n                />\n            </CollapsingButtons>\n            <CollapsibleCardHeading onCollapseToggled={cardProps.onCollapseToggled}>\n                Request Headers\n            </CollapsibleCardHeading>\n        </header>\n        <HeaderFieldsContainer>\n            <EditableRawHeaders\n                headers={headers}\n                onChange={updateHeaders}\n            />\n        </HeaderFieldsContainer>\n    </SendCardSection>;\n});","import * as React from 'react';\nimport { action, computed, observable } from 'mobx';\nimport { observer } from 'mobx-react';\nimport * as portals from 'react-reverse-portal';\n\nimport { bufferToString, isProbablyUtf8, stringToBuffer } from '../../util';\n\nimport { EditableContentType, EditableContentTypes } from '../../model/events/content-types';\n\nimport { ExpandableCardProps } from '../common/card';\nimport { SendBodyCardSection } from './send-card-section';\nimport { ContainerSizedEditor } from '../editor/base-editor';\nimport {\n    EditableBodyCardHeader,\n    ContainerSizedEditorCardContent\n} from '../editor/body-card-components';\n\nexport interface SendRequestBodyProps extends ExpandableCardProps {\n    body: Buffer;\n    onBodyUpdated: (body: Buffer) => void;\n    editorNode: portals.HtmlPortalNode<typeof ContainerSizedEditor>;\n}\n\n@observer\nexport class SendRequestBodyCard extends React.Component<SendRequestBodyProps> {\n\n    @observable\n    private contentType: EditableContentType = 'text';\n\n    @action.bound\n    onChangeContentType(value: string) {\n        this.contentType = value as EditableContentType;\n    }\n\n    @computed\n    get textEncoding() {\n        return isProbablyUtf8(this.props.body)\n            ? 'utf8'\n            : 'binary';\n    }\n\n    updateBody = (input: string) => {\n        this.props.onBodyUpdated(\n            stringToBuffer(input, this.textEncoding)\n        );\n    }\n\n    render() {\n        const {\n            editorNode,\n            expanded,\n            onExpandToggled,\n            onCollapseToggled,\n            body\n        } = this.props;\n\n        const bodyString = bufferToString(body, this.textEncoding);\n\n        return <SendBodyCardSection\n            {...this.props}\n            headerAlignment='left'\n        >\n            <header>\n                <EditableBodyCardHeader\n                    body={body}\n                    onBodyFormatted={this.updateBody}\n\n                    title='Request body'\n                    expanded={expanded}\n                    onExpandToggled={onExpandToggled}\n                    onCollapseToggled={onCollapseToggled}\n\n                    selectedContentType={this.contentType}\n                    contentTypeOptions={EditableContentTypes}\n                    onChangeContentType={this.onChangeContentType}\n                />\n            </header>\n            <ContainerSizedEditorCardContent>\n                <portals.OutPortal<typeof ContainerSizedEditor>\n                    node={editorNode}\n\n                    contentId='request'\n                    language={this.contentType}\n                    value={bodyString}\n                    onChange={this.updateBody}\n                />\n            </ContainerSizedEditorCardContent>\n        </SendBodyCardSection>;\n    }\n}","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { action, flow, observable } from 'mobx';\nimport { disposeOnUnmount, inject, observer } from 'mobx-react';\nimport * as portals from 'react-reverse-portal';\n\nimport { RawHeaders } from '../../types';\nimport { css, styled } from '../../styles';\n\nimport { RulesStore } from '../../model/rules/rules-store';\nimport { UiStore } from '../../model/ui/ui-store';\nimport { RequestInput } from '../../model/send/send-request-model';\nimport { syncUrlToHeaders } from '../../model/http/editable-request-parts';\n\nimport { ContainerSizedEditor } from '../editor/base-editor';\nimport { SendRequestLine } from './send-request-line';\nimport { SendRequestHeadersCard } from './send-request-headers-card';\nimport { SendRequestBodyCard } from './send-request-body-card';\n\nconst RequestPaneContainer = styled.section<{\n    hasExpandedChild: boolean\n}>`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n\n    ${p => p.hasExpandedChild && css`\n        > * {\n            /* CollapsibleCard applies its own display property to override this for the expanded card */\n            display: none;\n        }\n    `}\n`;\n\n// Layout here is tricky. Current setup seems to work (flex hrink everywhere, grow bodies,\n// card basis: auto, and min-height: 0, with editor 50% + min-height, and then\n// overflow-y: auto and basis: auto on the card contents too).\n//\n// It's worth reiterating the UI goals here explicitly for reference\n// - When multiple areas are open & full+, the area is split even-ish with scrolling\n//   in any areas required\n// - When areas are closed, body areas expand to the space, otherwise it collapses upwards\n// - When multiple areas are open, if there is spare space (e.g. few headers), the\n//   other areas that need it (body editor) expand and use the space.\n\n@inject('rulesStore')\n@inject('uiStore')\n@observer\nexport class RequestPane extends React.Component<{\n    rulesStore?: RulesStore,\n    uiStore?: UiStore,\n\n    editorNode: portals.HtmlPortalNode<typeof ContainerSizedEditor>,\n\n    requestInput: RequestInput,\n    sendRequest: (requestInput: RequestInput) => void\n}> {\n\n    get cardProps() {\n        return this.props.uiStore!.sendCardProps;\n    }\n\n    componentDidMount() {\n        disposeOnUnmount(this, syncUrlToHeaders(\n            () => this.props.requestInput.url,\n            () => this.props.requestInput.headers\n        ));\n    }\n\n    render() {\n        const { requestInput, editorNode, uiStore } = this.props;\n\n        return <RequestPaneContainer hasExpandedChild={!!uiStore?.expandedSendRequestCard}>\n            <SendRequestLine\n                method={requestInput.method}\n                updateMethod={this.updateMethod}\n                url={requestInput.url}\n                updateUrl={this.updateUrl}\n                isSending={this.isSending}\n                sendRequest={this.sendRequest}\n            />\n            <SendRequestHeadersCard\n                {...this.cardProps.requestHeaders}\n                headers={requestInput.headers}\n                updateHeaders={this.updateHeaders}\n            />\n            <SendRequestBodyCard\n                {...this.cardProps.requestBody}\n                body={requestInput.rawBody.decoded}\n                onBodyUpdated={this.updateBody}\n                editorNode={editorNode}\n            />\n        </RequestPaneContainer>;\n    }\n\n    @action.bound\n    updateMethod(method: string) {\n        this.props.requestInput.method = method;\n    }\n\n    @action.bound\n    updateUrl(url: string) {\n        this.props.requestInput.url = url;\n    }\n\n    @action.bound\n    updateHeaders(headers: RawHeaders) {\n        const { requestInput } = this.props;\n        requestInput.headers = headers;\n    }\n\n    @action.bound\n    updateBody(input: Buffer) {\n        const { requestInput } = this.props;\n        requestInput.rawBody.updateDecodedBody(input);\n    }\n\n    @observable\n    private isSending = false;\n\n    sendRequest = flow(function * (this: RequestPane) {\n        if (this.isSending) return;\n\n        this.isSending = true;\n\n        try {\n            yield this.props.sendRequest(this.props.requestInput);\n        } catch (e) {\n            console.warn('Sending request failed', e);\n        } finally {\n            this.isSending = false;\n        }\n    }).bind(this);\n\n}","import * as React from 'react';\n\nimport { Theme, styled } from '../../styles';\n\nimport { getStatusColor } from '../../model/events/categorization';\nimport { getStatusMessage } from '../../model/http/http-docs';\nimport { getReadableSize } from '../../model/events/bodies';\nimport { SuccessfulExchange } from '../../model/http/exchange';\n\nimport { SendCardSection } from './send-card-section';\nimport { Pill } from '../common/pill';\nimport { DurationPill } from '../common/duration-pill';\n\nconst ResponseStatusSectionCard = styled(SendCardSection)`\n    padding-top: 7px;\n    padding-bottom: 7px;\n    flex-shrink: 0;\n\n    > header {\n        flex-direction: row;\n        justify-content: flex-start;\n    }\n`;\n\nexport const ResponseStatusSection = (props: {\n    exchange: SuccessfulExchange,\n    theme: Theme\n}) => {\n    const response = props.exchange.response;\n\n    return <ResponseStatusSectionCard\n        collapsed={false}\n        headerAlignment='left'\n    >\n        <header>\n            <Pill\n                color={getStatusColor(response.statusCode, props.theme)}\n            >\n                { response.statusCode }: { response.statusMessage || getStatusMessage(response.statusCode) }\n            </Pill>\n            <DurationPill timingEvents={props.exchange.timingEvents} />\n            <Pill title=\"The size of the raw encoded response body\">\n                { getReadableSize(response.body.encoded.byteLength) }\n            </Pill>\n        </header>\n    </ResponseStatusSectionCard>;\n}","import * as React from 'react';\n\nimport { RawHeaders } from '../../types';\n\nimport {\n    CollapsibleCardHeading,\n    ExpandableCardProps\n} from '../common/card';\n\nimport { HeaderDetails } from '../view/http/header-details';\nimport { SendCardSection } from './send-card-section';\nimport { CollapsingButtons } from '../common/collapsing-buttons';\nimport { ExpandShrinkButton } from '../common/expand-shrink-button';\n\nexport interface ResponseHeaderSectionProps extends ExpandableCardProps {\n    requestUrl: URL;\n    headers: RawHeaders;\n}\n\nexport const SentResponseHeaderSection = ({\n    requestUrl,\n    headers,\n    ...cardProps\n}: ResponseHeaderSectionProps) => {\n    return <SendCardSection {...cardProps}>\n        <header>\n            <CollapsingButtons>\n                <ExpandShrinkButton\n                    expanded={cardProps.expanded}\n                    onClick={cardProps.onExpandToggled}\n                />\n            </CollapsingButtons>\n            <CollapsibleCardHeading onCollapseToggled={cardProps.onCollapseToggled}>\n                Response Headers\n            </CollapsibleCardHeading>\n        </header>\n        <HeaderDetails\n            requestUrl={requestUrl}\n            headers={headers}\n        />\n    </SendCardSection>;\n};","import * as React from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport * as portals from 'react-reverse-portal';\n\nimport { css, styled } from '../../styles';\nimport { HttpExchange } from \"../../types\";\n\nimport { UiStore } from '../../model/ui/ui-store';\nimport { AccountStore } from '../../model/account/account-store';\nimport { SuccessfulExchange } from \"../../model/http/exchange\";\n\nimport { ContainerSizedEditor } from '../editor/base-editor';\nimport { LoadingCard } from '../common/loading-card';\nimport { HttpAbortedResponseCard } from '../view/http/http-aborted-card';\n\nimport { ResponseStatusSection } from './sent-response-status';\nimport { SentResponseHeaderSection } from './sent-response-headers';\nimport { SentResponseBodyCard } from './sent-response-body';\n\nconst ResponsePaneContainer = styled.section<{\n    hasExpandedChild: boolean\n}>`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n\n    ${p => p.hasExpandedChild && css`\n        > * {\n            /* CollapsibleCard applies its own display property to override this for the expanded card */\n            display: none;\n        }\n    `}\n`;\n\n@inject('uiStore')\n@inject('accountStore')\n@observer\nexport class ResponsePane extends React.Component<{\n    uiStore?: UiStore,\n    accountStore?: AccountStore,\n\n    exchange: HttpExchange | undefined,\n    editorNode: portals.HtmlPortalNode<typeof ContainerSizedEditor>\n}> {\n\n    get cardProps() {\n        return this.props.uiStore!.sendCardProps;\n    }\n\n    render() {\n        const { exchange, uiStore } = this.props;\n        if (!exchange) return null;\n\n        return <ResponsePaneContainer hasExpandedChild={!!uiStore?.expandedSentResponseCard}>\n            {\n                exchange.isSuccessfulExchange()\n                    ? this.renderSuccessfulResponse(exchange)\n                : exchange.isCompletedExchange()\n                    ? this.renderAbortedResponse(exchange)\n                : this.renderInProgressResponse()\n            }\n        </ResponsePaneContainer>;\n    }\n\n    renderSuccessfulResponse(exchange: SuccessfulExchange) {\n        const { uiStore, editorNode } = this.props;\n        const response = exchange.response;\n\n        return <>\n            <ResponseStatusSection\n                exchange={exchange}\n                theme={uiStore!.theme}\n            />\n            <SentResponseHeaderSection\n                {...this.cardProps.responseHeaders}\n                requestUrl={exchange.request.parsedUrl}\n                headers={response.rawHeaders}\n            />\n            <SentResponseBodyCard\n                {...this.cardProps.responseBody}\n                isPaidUser={this.props.accountStore!.isPaidUser}\n                url={exchange.request.url}\n                message={response}\n                editorNode={editorNode}\n            />\n        </>;\n\n    }\n\n    renderAbortedResponse(exchange: HttpExchange) {\n        return <HttpAbortedResponseCard\n            cardProps={this.cardProps.responseHeaders}\n            exchange={exchange}\n        />;\n    }\n\n    renderInProgressResponse() {\n        return <LoadingCard {...this.cardProps.responseHeaders}>\n            <header>\n                <h1>Response...</h1>\n            </header>\n        </LoadingCard>;\n    }\n\n}","import * as React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport * as portals from 'react-reverse-portal';\n\nimport { styled } from '../../styles';\n\nimport { SendStore } from '../../model/send/send-store';\n\nimport { ContainerSizedEditor } from '../editor/base-editor';\n\nimport { SplitPane } from '../split-pane';\nimport { RequestPane } from './request-pane';\nimport { ResponsePane } from './response-pane';\n\nconst SendPageContainer = styled.div`\n    height: 100vh;\n    position: relative;\n`;\n\n@inject('sendStore')\n@observer\nexport class SendPage extends React.Component<{\n    sendStore?: SendStore\n}> {\n\n    private requestEditorNode = portals.createHtmlPortalNode<typeof ContainerSizedEditor>({\n        attributes: { 'style': 'height: 100%' }\n    });\n    private responseEditorNode = portals.createHtmlPortalNode<typeof ContainerSizedEditor>({\n        attributes: { 'style': 'height: 100%' }\n    });\n\n    render() {\n        const {\n            requestInputs,\n            sendRequest,\n            sentExchange\n        } = this.props.sendStore!;\n\n        return <SendPageContainer>\n            <SplitPane\n                split='vertical'\n                primary='second'\n                defaultSize='50%'\n                minSize={300}\n                maxSize={-300}\n            >\n                <RequestPane\n                    requestInput={requestInputs[0]}\n                    sendRequest={sendRequest}\n                    editorNode={this.requestEditorNode}\n                />\n                <ResponsePane\n                    exchange={sentExchange}\n                    editorNode={this.responseEditorNode}\n                />\n            </SplitPane>\n\n            <portals.InPortal node={this.requestEditorNode}>\n                <ContainerSizedEditor contentId={null} />\n            </portals.InPortal>\n            <portals.InPortal node={this.responseEditorNode}>\n                <ContainerSizedEditor contentId={null} />\n            </portals.InPortal>\n        </SendPageContainer>;\n    }\n\n}","import * as React from 'react';\n\nimport { Icon, IconProp } from '../../icons';\nimport { styled, css } from '../../styles';\nimport { omit } from 'lodash';\nimport { UnstyledButton } from './inputs';\n\nexport const TabbedOptionsContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n`;\n\ninterface TabClickEvent extends React.MouseEvent {\n    tabValue?: any;\n}\n\nexport const TabsContainer = styled((p: {\n    onClick: (tabValue: any) => void,\n    isSelected: (value: any) => boolean,\n    children: Array<React.ReactElement<any, typeof Tab>>\n}) => <nav\n    {...omit(p, 'isSelected')}\n    onClick={(event: TabClickEvent) => {\n        if (event.tabValue) p.onClick(event.tabValue);\n    }}\n>\n    {\n        p.children.map((tab) =>\n            React.cloneElement(tab, {\n                key: tab.props.value,\n                selected: p.isSelected(tab.props.value)\n            })\n        )\n    }\n</nav>)`\n    width: 80px;\n    border-right: solid 2px ${p => p.theme.containerBackground};\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: flex-start;\n`;\n\nexport const Tab = styled((p: {\n    className?: string,\n    selected?: boolean,\n    icon: IconProp,\n    value: any,\n    children: React.ReactNode\n}) =>\n    <UnstyledButton\n        className={p.className}\n        onClick={(event: TabClickEvent) => {\n            // Attach our value to the event before it bubbles to the container\n            event.tabValue = p.value;\n        }}\n    >\n        <Icon icon={p.icon} size='2x' />\n        { p.children }\n    </UnstyledButton>\n)`\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n    align-items: center;\n\n    width: 100%;\n    font-size: ${p => p.theme.textSize};\n    box-sizing: border-box;\n\n    padding: 10px 20px 10px 0;\n\n    user-select: none;\n    &:hover, &:focus {\n        outline: none;\n        color: ${p => p.theme.popColor};\n    }\n\n    opacity: 0.6;\n    ${p => p.selected && css`\n        opacity: 1;\n        font-weight: bold;\n        border-right: solid 3px ${p.theme.popColor};\n        padding-right: 22px;\n        position: relative;\n        right: -2px;\n    `}\n\n    > svg {\n        margin-bottom: 10px;\n    }\n`;","import { styled, css } from '../../styles';\n\nimport { Button, ButtonLink } from '../common/inputs';\nimport { ContentLabel } from '../common/text-content';\n\nconst SettingsButtonCss = css`\n    font-size: ${p => p.theme.textSize};\n    padding: 6px 16px;\n\n    ${(p: { highlight?: boolean }) => p.highlight && css`\n        &:not(:disabled) {\n            background-color: ${p => p.theme.popColor};\n        }\n    `}\n`;\n\nexport const SettingsButton = styled(Button)`${SettingsButtonCss}`;\nexport const SettingsButtonLink = styled(ButtonLink)<{\n    highlight?: boolean\n}>`${SettingsButtonCss}`;\n\nexport const SettingsExplanation = styled.p`\n    font-style: italic;\n    line-height: 1.3;\n`;\n\nexport const SettingsSubheading = styled(ContentLabel)`\n    &:not(header + &) {\n        margin-top: 40px;\n    }\n`;","import * as React from 'react';\nimport { observable, action, computed } from 'mobx';\nimport { observer } from 'mobx-react';\n\nimport { styled } from '../../styles';\nimport { Icon } from '../../icons';\nimport { isValidHost } from '../../model/network';\n\nimport { inputValidation } from '../component-utils';\nimport { TextInput } from '../common/inputs';\nimport { SettingsButton } from './settings-components';\n\nconst StringListContainer = styled.div`\n    width: 100%;\n\n    display: grid;\n    grid-template-columns: auto min-content;\n    grid-gap: 10px;\n    margin: 10px 0;\n\n    align-items: baseline;\n\n    ${TextInput} {\n        align-self: stretch;\n    }\n`;\n\nexport const ConfigValueRow = styled.div`\n    min-width: 300px;\n    font-family: ${p => p.theme.monoFontFamily};\n`;\n\n@observer\nexport class StringSettingsList extends React.Component<{\n    values: string[],\n    onDelete: (value: string) => void,\n    onAdd: (value: string) => void,\n    placeholder: string,\n\n    validationFn: (input: HTMLInputElement) => void\n}> {\n\n    @observable\n    inputValue = '';\n\n    render() {\n        const {\n            values,\n            onDelete,\n            placeholder\n        } = this.props;\n\n        return <StringListContainer>\n            { values.map((value) => [\n                <ConfigValueRow key={`value-${value}`}>\n                    { value }\n                </ConfigValueRow>,\n                <SettingsButton\n                    key={`delete-${value}`}\n                    onClick={() => onDelete(value)}\n                >\n                    <Icon icon={['far', 'trash-alt']} />\n                </SettingsButton>\n            ]) }\n\n            <TextInput\n                placeholder={placeholder}\n                value={this.inputValue}\n                onChange={this.changeInput}\n            />\n            <SettingsButton\n                disabled={\n                    !isValidHost(this.inputValue) ||\n                    values.includes(this.inputValue)\n                }\n                onClick={this.addHost}\n            >\n                <Icon icon={['fas', 'plus']} />\n            </SettingsButton>\n        </StringListContainer>;\n    }\n\n    @action.bound\n    addHost(e: React.MouseEvent<HTMLButtonElement>) {\n        this.props.onAdd(this.inputValue);\n        this.inputValue = '';\n    }\n\n    @action.bound\n    changeInput(e: React.ChangeEvent<HTMLInputElement>) {\n        this.inputValue = e.target.value;\n        this.props.validationFn(e.target);\n    }\n}","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { observable, action, computed } from 'mobx';\nimport { observer, inject } from \"mobx-react\";\n\nimport { styled } from '../../styles';\nimport { WarningIcon, Icon } from '../../icons';\n\nimport { isValidPortConfiguration, ProxyStore } from '../../model/proxy-store';\nimport { isValidHostname } from '../../model/network';\nimport {\n    serverVersion,\n    versionSatisfies,\n    INITIAL_HTTP2_RANGE,\n    TLS_PASSTHROUGH_SUPPORTED\n} from '../../services/service-versions';\n\nimport { inputValidation } from '../component-utils';\nimport {\n    CollapsibleCardProps,\n    CollapsibleCard,\n    CollapsibleCardHeading\n} from '../common/card';\nimport { ContentLabel } from '../common/text-content';\nimport { Select, TextInput } from '../common/inputs';\nimport {\n    SettingsButton,\n    SettingsExplanation,\n    SettingsSubheading\n} from './settings-components';\nimport { StringSettingsList } from './string-settings-list';\n\nconst RestartApp = styled(SettingsButton).attrs(() => ({\n    children: 'Restart app to activate',\n    onClick: () => window.location.reload()\n}))`\n    position: absolute;\n    top: 18px;\n    left: 20px;\n    font-weight: bold;\n\n    &:not(:disabled) {\n        background-color: ${p => p.theme.popColor};\n    }\n\n    ${(p: { visible: boolean }) => !p.visible && 'display: none;'}\n`;\n\nconst UnsavedIcon = styled(Icon).attrs(() => ({\n    icon: ['fas', 'save'],\n}))`\n    margin-left: 10px;\n    color: ${p => p.theme.warningColor};\n`;\n\nconst ProxyPortsContainer = styled.div`\n    display: grid;\n    grid-template-columns: fit-content(45%) fit-content(45%) fit-content(10%);\n    align-items: baseline;\n\n    grid-gap: 10px;\n    margin-bottom: 10px;\n\n    input {\n        & + ${WarningIcon} {\n            visibility: hidden;\n            align-self: center;\n        }\n\n        &:invalid + ${WarningIcon} {\n            visibility: visible;\n        }\n    }\n`;\n\nconst ProxyPortStateExplanation = styled.p`\n    margin-bottom: 10px;\n`;\n\nconst Http2Select = styled(Select)`\n    display: inline-block;\n    margin-top: 10px;\n    width: auto;\n    font-size: ${p => p.theme.textSize};\n    padding: 3px;\n`;\n\nconst hostnameValidation = inputValidation(isValidHostname, \"Should be a valid hostname\");\n\n@inject('proxyStore')\n@observer\nexport class ProxySettingsCard extends React.Component<\n    CollapsibleCardProps & {\n        proxyStore?: ProxyStore\n    }\n> {\n\n    @observable\n    minPortValue = (this.props.proxyStore!.portConfig?.startPort || 8000).toString();\n\n    @observable\n    maxPortValue = (this.props.proxyStore!.portConfig?.endPort || 65535).toString();\n\n    @action.bound\n    onMinPortChange({ target: { value } }: React.ChangeEvent<HTMLInputElement>) {\n        this.minPortValue = value;\n        this.updatePortConfig();\n    }\n\n    @action.bound\n    onMaxPortChange({ target: { value } }: React.ChangeEvent<HTMLInputElement>) {\n        this.maxPortValue = value;\n        this.updatePortConfig();\n    }\n\n    @computed\n    get isCurrentPortInRange() {\n        const { httpProxyPort, portConfig } = this.props.proxyStore!;\n\n        if (!portConfig) {\n            return httpProxyPort >= 8000;\n        } else {\n            return httpProxyPort >= portConfig.startPort && httpProxyPort <= portConfig.endPort;\n        }\n    }\n\n    @computed\n    get portConfig() {\n        return {\n            startPort: parseInt(this.minPortValue, 10),\n            endPort: parseInt(this.maxPortValue, 10)\n        };\n    }\n\n    @computed\n    get isCurrentPortConfigValid() {\n        return isValidPortConfiguration(this.portConfig);\n    }\n\n    updatePortConfig() {\n        if (!this.isCurrentPortConfigValid) return;\n        else this.props.proxyStore!.setPortConfig(this.portConfig);\n    }\n\n    @action.bound\n    addTlsPassthroughHostname(hostname: string) {\n        const { tlsPassthroughConfig } = this.props.proxyStore!;\n        tlsPassthroughConfig.push({ hostname });\n    }\n\n    @action.bound\n    removeTlsPassthroughHostname(hostname: string) {\n        const { tlsPassthroughConfig } = this.props.proxyStore!;\n        const hostnameIndex = _.findIndex(tlsPassthroughConfig, (passthroughItem) =>\n            passthroughItem.hostname === hostname\n        );\n\n        if (hostnameIndex === -1) return;\n\n        tlsPassthroughConfig.splice(hostnameIndex, 1);\n    }\n\n    render() {\n        const { proxyStore, ...cardProps } = this.props;\n        const {\n            httpProxyPort,\n\n            http2Enabled,\n            http2CurrentlyEnabled,\n\n            tlsPassthroughConfig,\n            currentTlsPassthroughConfig\n        } = proxyStore!;\n\n        return <CollapsibleCard {...cardProps}>\n            <header>\n                <CollapsibleCardHeading onCollapseToggled={\n                    cardProps.onCollapseToggled\n                }>\n                    Proxy Settings\n                </CollapsibleCardHeading>\n            </header>\n            <RestartApp\n                visible={\n                    (this.isCurrentPortConfigValid && !this.isCurrentPortInRange) ||\n                    http2Enabled !== http2CurrentlyEnabled ||\n                    !_.isEqual(tlsPassthroughConfig, currentTlsPassthroughConfig)\n                }\n            />\n\n            <ProxyPortsContainer>\n                <ContentLabel>\n                    Minimum port\n                </ContentLabel>\n                <TextInput\n                    type=\"number\"\n                    required\n                    min=\"1\"\n                    max=\"65535\"\n                    value={this.minPortValue}\n                    onChange={this.onMinPortChange}\n                />\n                <WarningIcon />\n\n                <ContentLabel>\n                    Maximum port\n                </ContentLabel>\n                <TextInput\n                    type=\"number\"\n                    required\n                    min={this.minPortValue}\n                    max=\"65535\"\n                    value={this.maxPortValue}\n                    onChange={this.onMaxPortChange}\n                />\n                <WarningIcon />\n            </ProxyPortsContainer>\n            <ProxyPortStateExplanation>\n                The proxy is currently using port <strong>\n                    { httpProxyPort }\n                </strong>{\n                    (this.isCurrentPortConfigValid && !this.isCurrentPortInRange)\n                    ? ', outside this range. Restart the app now to use this configuration.'\n                    : '.'\n                }\n            </ProxyPortStateExplanation>\n            <SettingsExplanation>\n                When opening HTTP Toolkit, it will start the proxy on the first port in\n                this range that is available. If all ports in the range are in use, the\n                first free port above 8000 will be used instead.\n            </SettingsExplanation>\n\n            {\n                versionSatisfies(serverVersion.value, TLS_PASSTHROUGH_SUPPORTED) && <>\n                    <SettingsSubheading>\n                        TLS Passthrough { !_.isEqual(tlsPassthroughConfig, currentTlsPassthroughConfig) &&\n                            <UnsavedIcon />\n                        }\n                    </SettingsSubheading>\n\n                    <StringSettingsList\n                        values={tlsPassthroughConfig.map(c => c.hostname)}\n                        onAdd={this.addTlsPassthroughHostname}\n                        onDelete={this.removeTlsPassthroughHostname}\n                        placeholder='A hostname whose TLS connections should not be intercepted'\n                        validationFn={hostnameValidation}\n                    />\n\n                    <SettingsExplanation>\n                        Incoming TLS connections to these hostnames will bypass HTTP Toolkit, and will\n                        be forwarded upstream untouched instead of being intercepted. Clients will not see\n                        HTTP Toolkit's certificate, which may solve some connection issues, but traffic\n                        within these TLS connections will not be accessible.\n                    </SettingsExplanation>\n                </>\n            }\n\n            {\n                versionSatisfies(serverVersion.value, INITIAL_HTTP2_RANGE) && <>\n                    <SettingsSubheading>\n                        HTTP/2 Support { http2Enabled !== http2CurrentlyEnabled &&\n                            <UnsavedIcon />\n                        }\n                    </SettingsSubheading>\n\n                    <Http2Select\n                        value={JSON.stringify(http2Enabled)}\n                        onChange={action((event: React.ChangeEvent<HTMLSelectElement>) => {\n                            const value = event.currentTarget.value;\n                            if (value) {\n                                proxyStore!.http2Enabled = JSON.parse(value);\n                            }\n                        })}\n                    >\n                        <option value={'true'}>Enabled for all clients</option>\n                        <option value={'\"fallback\"'}>Enabled only for HTTP/2-only clients</option>\n                        <option value={'false'}>Disabled for all clients</option>\n                    </Http2Select>\n                </>\n            }\n        </CollapsibleCard>\n    }\n\n}","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { observable, action, flow } from 'mobx';\nimport { observer, inject } from \"mobx-react\";\n\nimport { styled } from '../../styles';\nimport { WarningIcon, Icon } from '../../icons';\nimport { trackEvent } from '../../metrics';\n\nimport { uploadFile } from '../../util/ui';\nimport { UnreachableCheck, asError, unreachableCheck } from '../../util/error';\n\nimport { UpstreamProxyType, RulesStore } from '../../model/rules/rules-store';\nimport { ParsedCertificate, ValidationResult } from '../../model/crypto';\nimport { isValidHost } from '../../model/network';\nimport { parseCert, validatePKCS } from '../../services/ui-worker-api';\nimport {\n    serverVersion,\n    versionSatisfies,\n    CLIENT_CERT_SERVER_RANGE,\n    PROXY_CONFIG_RANGE,\n    CUSTOM_CA_TRUST_RANGE\n} from '../../services/service-versions';\n\nimport { inputValidation } from '../component-utils';\nimport {\n    CollapsibleCardProps,\n    CollapsibleCard,\n    CollapsibleCardHeading\n} from '../common/card';\nimport { Select, TextInput } from '../common/inputs';\nimport {\n    SettingsSubheading,\n    SettingsButton,\n    SettingsExplanation\n} from './settings-components';\nimport { StringSettingsList, ConfigValueRow } from './string-settings-list';\n\n\nconst UpstreamProxySettings = styled.div`\n    margin-top: 10px;\n\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n\n    > ${SettingsSubheading}, > ${SettingsExplanation} {\n        flex-basis: 100%;\n    }\n\n    > ${WarningIcon} {\n        align-self: center;\n    }\n\n    > ${TextInput} {\n        flex-grow: 1;\n    }\n\n    > ${SettingsButton} {\n        margin-left: 10px;\n    }\n`;\n\nconst UpstreamProxyDropdown = styled(Select)`\n    width: auto;\n    font-size: ${p => p.theme.textSize};\n    padding: 3px;\n\n    margin-right: 10px;\n`;\n\nconst validateHost = inputValidation(isValidHost,\n    \"Should be a plain hostname, optionally with a specific port\"\n);\n\nconst isValidProxyHost = (host: string | undefined): boolean =>\n    !!host?.match(/^([^/@]*@)?[A-Za-z0-9\\-.]+(:\\d+)?$/);\nconst validateProxyHost = inputValidation(isValidProxyHost,\n    \"Should be a plain hostname, optionally with a specific port and/or username:password\"\n);\n\n@observer\nclass UpstreamProxyConfig extends React.Component<{ rulesStore: RulesStore }> {\n\n    @observable\n    private proxyType: UpstreamProxyType = this.props.rulesStore.upstreamProxyType;\n\n    @action.bound\n    setProxyType(event: React.ChangeEvent<HTMLSelectElement>) {\n        const value = event.currentTarget.value;\n        this.proxyType = value as UpstreamProxyType;\n\n        trackEvent({ category: \"Config\", action: \"Set Proxy\", value: this.proxyType });\n\n        if (value === 'direct' || value === 'system') {\n            // Only update immediately when switching to a type that doesn't need a host input.\n            // For other types, we update when we set a host, in setUpstreamProxyHost\n            const rulesStore = this.props.rulesStore;\n            rulesStore.upstreamProxyType = this.proxyType;\n        }\n    }\n\n    @observable\n    private proxyHostInput = this.props.rulesStore.upstreamProxyHost || '';\n\n    @action.bound\n    setProxyHostInput(event: React.ChangeEvent<HTMLInputElement>) {\n        validateProxyHost(event.target);\n        this.proxyHostInput = event.target.value;\n    }\n\n    @action.bound\n    saveProxyHost() {\n        if (this.proxyType === 'direct' || this.proxyType === 'system') {\n            throw new Error(`Can't save proxy host for ${this.proxyType} proxy`);\n        }\n\n        // We update the rules store proxy type only at the point where we save the host:\n        const rulesStore = this.props.rulesStore;\n        rulesStore.upstreamProxyType = this.proxyType;\n        rulesStore.upstreamProxyHost = this.proxyHostInput;\n    }\n\n    @action.bound\n    addNoProxyHost(hostname: string) {\n        const { rulesStore } = this.props;\n        rulesStore.upstreamNoProxyHosts = [...rulesStore.upstreamNoProxyHosts, hostname];\n    }\n\n    @action.bound\n    removeNoProxyHost(hostname: string) {\n        const { rulesStore } = this.props;\n        rulesStore.upstreamNoProxyHosts = _.without(rulesStore.upstreamNoProxyHosts, hostname);\n    }\n\n    render() {\n        const {\n            effectiveSystemProxyConfig,\n            upstreamProxyType: savedProxyType,\n            upstreamProxyHost: savedProxyHost,\n            upstreamNoProxyHosts: noProxyHosts\n        } = this.props.rulesStore;\n\n        const {\n            proxyType,\n            proxyHostInput,\n\n            setProxyType,\n            setProxyHostInput,\n            saveProxyHost,\n            addNoProxyHost,\n            removeNoProxyHost\n        } = this;\n\n        return <>\n            <SettingsSubheading>Upstream Proxy</SettingsSubheading>\n\n            <UpstreamProxySettings>\n                <UpstreamProxyDropdown\n                    value={proxyType}\n                    onChange={setProxyType}\n                >\n                    <option value={'system'}>Use system settings</option>\n                    <option value={'direct'}>Connect directly</option>\n                    <option value={'http'}>Use an HTTP proxy</option>\n                    <option value={'https'}>Use an HTTPS proxy</option>\n                    <option value={'socks4'}>Use a SOCKS 4 proxy</option>\n                    <option value={'socks4a'}>Use a SOCKS 4a proxy</option>\n                    <option value={'socks5'}>Use a SOCKS 5 proxy</option>\n                    <option value={'socks5h'}>Use a SOCKS 5h proxy</option>\n                </UpstreamProxyDropdown>\n\n                { proxyType === 'system' && (\n                        effectiveSystemProxyConfig === 'ignored' ||\n                        effectiveSystemProxyConfig === 'unparseable'\n                    ) &&\n                    <WarningIcon />\n                }\n\n                { proxyType === 'system' && effectiveSystemProxyConfig &&\n                    <SettingsExplanation>{\n                        effectiveSystemProxyConfig === 'ignored'\n                            ? <>\n                                The system is configured with a localhost proxy.\n                                To avoid issues with recursive proxy loops, this will be ignored\n                                and requests will be sent directly. Localhost proxies must be\n                                manually configured.\n                            </>\n                        : effectiveSystemProxyConfig === 'unparseable'\n                            ? <>\n                                The system proxy settings could not be\n                                parsed, so requests will be sent directly.\n                            </>\n                        : <>\n                            The configured system proxy is {\n                                effectiveSystemProxyConfig.proxyUrl\n                            }.\n                        </>\n                    }</SettingsExplanation>\n                }\n\n                { proxyType !== 'direct' && proxyType !== 'system' && <>\n                    <TextInput\n                        placeholder={`The ${proxyType} proxy host details, e.g. example.com or user:pwd@example.com:8080`}\n                        value={proxyHostInput}\n                        onChange={setProxyHostInput}\n                    />\n                    <SettingsButton\n                        disabled={\n                            !isValidProxyHost(proxyHostInput) ||\n                            (proxyHostInput === savedProxyHost && proxyType === savedProxyType)\n                        }\n                        onClick={saveProxyHost}\n                    >\n                        <Icon icon={['fas', 'save']} />\n                    </SettingsButton>\n                </> }\n            </UpstreamProxySettings>\n\n            { proxyType !== 'direct' && proxyType !== 'system' && <>\n                <SettingsSubheading>\n                    Non-proxied hosts\n                </SettingsSubheading>\n\n                <StringSettingsList\n                    placeholder='A host whose traffic should not be sent via the proxy'\n                    onAdd={addNoProxyHost}\n                    onDelete={removeNoProxyHost}\n                    values={noProxyHosts}\n                    validationFn={validateHost}\n                />\n                <SettingsExplanation>\n                    Requests to these hosts will always be sent directly, not via the configured proxy.\n                </SettingsExplanation>\n            </> }\n        </>;\n    }\n};\n\nconst ClientCertificatesList = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr min-content;\n    grid-gap: 10px;\n    margin: 10px 0;\n\n    align-items: baseline;\n\n    ${TextInput} {\n        align-self: stretch;\n    }\n\n    input[type=file] {\n        display: none;\n    }\n`;\n\nconst CertificateFilename = styled.div`\n    font-style: italic;\n`;\n\nconst DecryptionInput = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: baseline;\n\n    > :first-child {\n        flex: 1 1;\n    }\n\n    > button {\n        margin-left: 10px;\n    }\n\n    > svg {\n        flex: 1 1 100%;\n        text-align: center;\n    }\n`;\n\nconst DecryptionSpinner = styled(Icon).attrs(() => ({\n    icon: ['fas', 'spinner'],\n    spin: true\n}))`\n    margin: 0 auto;\n`;\n\n@observer\nclass ClientCertificateConfig extends React.Component<{ rulesStore: RulesStore }> {\n\n    @observable\n    clientCertHostInput = '';\n\n    readonly certFileInputRef = React.createRef<HTMLInputElement>();\n\n    @action.bound\n    removeClientCertificate(host: string) {\n        const { clientCertificateHostMap } = this.props.rulesStore!;\n        delete clientCertificateHostMap[host];\n    }\n\n    @action.bound\n    addClientCertificate() {\n        const { clientCertificateHostMap } = this.props.rulesStore!;\n        clientCertificateHostMap[this.clientCertHostInput] = this.clientCertData!;\n\n        trackEvent({ category: \"Config\", action: \"Add Client Cert\" });\n\n        this.clientCertHostInput = '';\n        this.clientCertData = undefined;\n        this.clientCertState = undefined;\n    }\n\n    @observable\n    clientCertData: undefined | { pfx: ArrayBuffer, filename: string, passphrase?: string };\n\n    @observable\n    clientCertState: undefined | 'encrypted' | 'processing' | 'error' | 'decrypted';\n\n    @observable\n    clientCertError: string | undefined;\n\n    @action.bound\n    onClientCertSelected(event: React.ChangeEvent<HTMLInputElement>) {\n        const input = event.target;\n        if (!input.files || !input.files.length) return;\n\n        const file = input.files[0];\n        const fileReader = new FileReader();\n        fileReader.readAsArrayBuffer(file);\n\n        this.clientCertState = 'processing';\n        this.clientCertError = undefined;\n\n        const thisConfig = this; // fileReader events set 'this'\n        fileReader.addEventListener('load', flow(function * () {\n            thisConfig.clientCertData = {\n                pfx: fileReader.result as ArrayBuffer,\n                filename: file.name\n            };\n\n            let result: ValidationResult;\n\n            result = yield validatePKCS(thisConfig.clientCertData.pfx, undefined);\n\n            if (result === 'invalid-passphrase') {\n                // If it fails, try again with an empty key, since that is sometimes used for 'no passphrase'\n                result = yield validatePKCS(thisConfig.clientCertData.pfx, '');\n\n                if (result === 'valid') {\n                    thisConfig.clientCertData.passphrase = '';\n                }\n\n                thisConfig.handleClientCertValidationResult(result);\n            } else {\n                thisConfig.handleClientCertValidationResult(result);\n            }\n        }));\n\n        fileReader.addEventListener('error', () => {\n            thisConfig.clientCertState = 'error';\n        });\n    }\n\n    readonly decryptClientCertData = flow(function * (this: ClientCertificateConfig) {\n        const { pfx, passphrase } = this.clientCertData!;\n\n        this.clientCertState = 'processing';\n        this.clientCertError = undefined;\n\n        const result = yield validatePKCS(pfx, passphrase);\n        this.handleClientCertValidationResult(result);\n    });\n\n    handleClientCertValidationResult(result: ValidationResult) {\n        this.clientCertError = undefined;\n\n        if (result === 'valid') {\n            this.clientCertState = 'decrypted';\n        } else if (result === 'invalid-passphrase') {\n            this.clientCertState = 'encrypted';\n        } else if (result === 'invalid-format') {\n            this.clientCertState = 'error';\n            this.clientCertError = 'Parsing failed';\n        } else if (result === 'missing-key') {\n            this.clientCertState = 'error';\n            this.clientCertError = 'No private key found';\n        } else if (result === 'missing-cert') {\n            this.clientCertState = 'error';\n            this.clientCertError = 'No certificate found';\n        } else unreachableCheck(result);\n    }\n\n    @action.bound\n    dropClientCertData() {\n        this.clientCertData = undefined;\n        this.clientCertState = undefined;\n    }\n\n    render() {\n        const { clientCertificateHostMap } = this.props.rulesStore!;\n\n        return <>\n            <SettingsSubheading>\n                Client Certificates\n            </SettingsSubheading>\n            <ClientCertificatesList>\n                { Object.entries(clientCertificateHostMap).map(([host, cert]) => [\n                    <ConfigValueRow key={`host-${host}`}>\n                        { host }\n                    </ConfigValueRow>,\n\n                    <CertificateFilename key={`filename-${host}`}>\n                        { cert.filename }\n                    </CertificateFilename>,\n\n                    <SettingsButton\n                        key={`delete-${host}`}\n                        onClick={() => this.removeClientCertificate(host)}\n                    >\n                        <Icon icon={['far', 'trash-alt']} />\n                    </SettingsButton>\n                ]) }\n\n                <TextInput\n                    placeholder='A host where the certificate should be used'\n                    value={this.clientCertHostInput}\n                    onChange={action((e: React.ChangeEvent<HTMLInputElement>) => {\n                        this.clientCertHostInput = e.target.value;\n                        validateHost(e.target);\n                    })}\n                />\n                { this.clientCertState === undefined\n                    ? <>\n                        <SettingsButton onClick={() => this.certFileInputRef.current!.click()}>\n                            Load a client certificate\n                        </SettingsButton>\n                        <input\n                            ref={this.certFileInputRef}\n                            type=\"file\"\n                            accept='.pfx,.p12,application/x-pkcs12'\n                            onChange={this.onClientCertSelected}\n                        />\n                    </>\n                    : this.clientCertState === 'processing'\n                        ? <DecryptionSpinner />\n                    : this.clientCertState === 'decrypted'\n                        ? <DecryptionInput>\n                            <CertificateFilename>{ this.clientCertData!.filename }</CertificateFilename>\n                            <SettingsButton onClick={this.dropClientCertData}>\n                                <Icon icon={['fas', 'undo']} title='Deselect this certificate' />\n                            </SettingsButton>\n                        </DecryptionInput>\n                    : this.clientCertState === 'encrypted'\n                        ? <DecryptionInput>\n                            <TextInput\n                                placeholder={`The passphrase for ${this.clientCertData!.filename}`}\n                                value={this.clientCertData!.passphrase || ''}\n                                onChange={action((e: React.ChangeEvent<HTMLInputElement>) => {\n                                    this.clientCertData!.passphrase = e.target.value;\n                                })}\n                            />\n                            <SettingsButton onClick={() => this.decryptClientCertData()}>\n                                <Icon icon={['fas', 'unlock']} title='Decrypt with this passphrase' />\n                            </SettingsButton>\n                            <SettingsButton onClick={this.dropClientCertData}>\n                                <Icon icon={['fas', 'undo']} title='Deselect this certificate' />\n                            </SettingsButton>\n                        </DecryptionInput>\n                    : this.clientCertState === 'error'\n                        ? <DecryptionInput>\n                            <p><WarningIcon /> {this.clientCertError || 'Invalid certificate'}</p>\n                            <SettingsButton onClick={this.dropClientCertData}>\n                                <Icon icon={['fas', 'undo']} title='Deselect this certificate' />\n                            </SettingsButton>\n                        </DecryptionInput>\n                    : unreachableCheck(this.clientCertState)\n                }\n                <SettingsButton\n                    disabled={\n                        !isValidHost(this.clientCertHostInput) ||\n                        this.clientCertState !== 'decrypted' || // Not decrypted yet, or\n                        !!clientCertificateHostMap[this.clientCertHostInput] // Duplicate host\n                    }\n                    onClick={this.addClientCertificate}\n                >\n                    <Icon icon={['fas', 'plus']} />\n                </SettingsButton>\n            </ClientCertificatesList>\n            <SettingsExplanation>\n                These certificates will be used for client TLS authentication, if requested by the server, when\n                connecting to their corresponding hostname.\n            </SettingsExplanation>\n        </>;\n    }\n}\n\nconst AdditionalCertificateList = styled.div`\n    display: grid;\n    grid-template-columns: 1fr min-content;\n    grid-gap: 10px;\n    margin: 10px 0;\n\n    align-items: baseline;\n\n    input[type=file] {\n        display: none;\n    }\n`;\n\nconst CertificateDescription = styled.div`\n    font-style: italic;\n`;\n\nconst AddCertificateButton = styled(SettingsButton)`\n    grid-column: 1 / span 2;\n`;\n\n@observer\nclass AdditionalCAConfig extends React.Component<{ rulesStore: RulesStore }> {\n\n    readonly certFileButtonRef = React.createRef<HTMLButtonElement>();\n\n    addCertificate = flow(function * (this: AdditionalCAConfig) {\n        const { rulesStore } = this.props;\n\n        const button = this.certFileButtonRef.current!;\n\n        try {\n            const rawData: ArrayBuffer = yield uploadFile('arraybuffer', [\n                '.pem',\n                '.crt',\n                '.cert',\n                '.der',\n                'application/x-pem-file',\n                'application/x-x509-ca-cert'\n            ]);\n\n            const certificate: ParsedCertificate = yield parseCert(rawData);\n\n            if (rulesStore.additionalCaCertificates.some(({ rawPEM }) => rawPEM === certificate.rawPEM)) {\n                button.setCustomValidity(`This CA is already trusted.`);\n                button.reportValidity();\n                return;\n            }\n\n            rulesStore.additionalCaCertificates.push(certificate);\n        } catch (error) {\n            console.warn(error);\n\n            const errorMessage = asError(error).message;\n\n            button.setCustomValidity(`Could not load certificate: ${\n                errorMessage\n            }${\n                errorMessage.endsWith('.') ? '' : '.'\n            } File must be a PEM or DER-formatted CA certificate.`);\n            button.reportValidity();\n        }\n    }.bind(this));\n\n    @action.bound\n    removeCertificate(certificate: ParsedCertificate) {\n        const { rulesStore } = this.props;\n        _.pull(rulesStore.additionalCaCertificates, certificate);\n    }\n\n    render() {\n        const { additionalCaCertificates } = this.props.rulesStore;\n\n        return <>\n            <SettingsSubheading>\n                Trusted CA Certificates\n            </SettingsSubheading>\n            <AdditionalCertificateList>\n                { additionalCaCertificates.map((cert) => {\n                    const { subject: { org, name }, serial } = cert;\n\n                    return [\n                        <CertificateDescription key={serial}>{\n                            [\n                                org && (!name || name.length <= 5)\n                                    ? org\n                                    : undefined,\n                                name,\n                                serial\n                                    ? `(serial ${serial})`\n                                    : undefined\n                            ].filter(x => !!x).join(' ')\n                        }</CertificateDescription>,\n\n                        <SettingsButton\n                            key={`delete-${serial}`}\n                            onClick={() => this.removeCertificate(cert)}\n                        >\n                            <Icon icon={['far', 'trash-alt']} />\n                        </SettingsButton>\n                    ]\n                }) }\n                <AddCertificateButton\n                    onClick={this.addCertificate}\n                    type='submit' // Ensures we can show validation messages here\n                    ref={this.certFileButtonRef}\n                >\n                    Load a CA certificate\n                </AddCertificateButton>\n            </AdditionalCertificateList>\n            <SettingsExplanation>\n                These Certificate Authority (CA) certificates will be considered as trusted certificate\n                roots for all HTTPS requests, in addition to the existing set of built-in trusted CAs.\n            </SettingsExplanation>\n        </>;\n    }\n\n}\n\n@inject('rulesStore')\n@observer\nexport class ConnectionSettingsCard extends React.Component<\n    CollapsibleCardProps & {\n        rulesStore?: RulesStore\n    }\n> {\n\n    @action.bound\n    unwhitelistHost(host: string) {\n        const { whitelistedCertificateHosts } = this.props.rulesStore!;\n        const hostIndex = whitelistedCertificateHosts.indexOf(host);\n        if (hostIndex > -1) {\n            whitelistedCertificateHosts.splice(hostIndex, 1);\n        }\n    }\n\n    @action.bound\n    addHostToWhitelist(hostname: string) {\n        this.props.rulesStore!.whitelistedCertificateHosts.push(hostname);\n        trackEvent({ category: \"Config\", action: \"Whitelist Host\" });\n    }\n\n    render() {\n        const { rulesStore, ...cardProps } = this.props;\n        const { whitelistedCertificateHosts } = rulesStore!;\n\n        return <CollapsibleCard {...cardProps}>\n            <header>\n                <CollapsibleCardHeading onCollapseToggled={\n                    cardProps.onCollapseToggled\n                }>\n                    Connection Settings\n                </CollapsibleCardHeading>\n            </header>\n\n            {\n                _.isString(serverVersion.value) &&\n                versionSatisfies(serverVersion.value, PROXY_CONFIG_RANGE) &&\n                    <UpstreamProxyConfig\n                        rulesStore={rulesStore!}\n                    />\n            }\n\n            {\n                _.isString(serverVersion.value) &&\n                versionSatisfies(serverVersion.value, CUSTOM_CA_TRUST_RANGE) &&\n                <AdditionalCAConfig\n                    rulesStore={rulesStore!}\n                />\n            }\n\n            {\n                _.isString(serverVersion.value) &&\n                versionSatisfies(serverVersion.value, CLIENT_CERT_SERVER_RANGE) && <>\n                <ClientCertificateConfig\n                    rulesStore={rulesStore!}\n                />\n            </> }\n\n            <SettingsSubheading>\n                Host HTTPS Whitelist\n            </SettingsSubheading>\n\n            <StringSettingsList\n                placeholder='A host to exclude from strict HTTPS checks'\n                onAdd={this.addHostToWhitelist}\n                onDelete={this.unwhitelistHost}\n                values={whitelistedCertificateHosts}\n\n                validationFn={validateHost}\n            />\n            <SettingsExplanation>\n                Requests to these hosts will skip certificate validation and accept some older\n                TLS configurations. These requests will be successful regardless of any self-signed,\n                expired or otherwise invalid HTTPS configurations.\n            </SettingsExplanation>\n        </CollapsibleCard>\n    }\n}","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { action, flow, observable } from 'mobx';\nimport { observer, inject } from \"mobx-react\";\nimport type { OpenAPIObject } from 'openapi-directory';\nimport * as semver from 'semver';\nimport * as yaml from 'yaml';\nimport * as swagger2OpenApi from 'swagger2openapi';\n\nimport { styled } from '../../styles';\nimport { Icon } from '../../icons';\nimport { uploadFile } from '../../util/ui';\nimport { attempt } from '../../util/promise';\nimport { asError } from '../../util/error';\nimport { trackEvent } from '../../metrics';\n\nimport { buildApiMetadataAsync } from '../../services/ui-worker-api';\n\nimport {\n    CollapsibleCard,\n    CollapsibleCardHeading,\n    CollapsibleCardProps\n} from \"../common/card\";\nimport { SettingsButton, SettingsExplanation } from './settings-components';\nimport { TextInput } from '../common/inputs';\nimport { ApiStore } from '../../model/api/api-store';\nimport { ContentLabel } from '../common/text-content';\nimport { ApiMetadata } from '../../model/api/api-interfaces';\n\nconst UploadSpecButton = styled(SettingsButton).attrs(() => ({\n    type: 'submit'\n}))`\n    grid-column: 1 / span 3;\n`;\n\nconst BaseUrlInput = styled(TextInput)`\n    align-self: stretch;\n`;\n\nconst SavedBaseUrl = styled.div`\n    font-family: ${p => p.theme.monoFontFamily};\n`;\n\nconst Spec = styled.div`\n    grid-column: 2;\n    font-style: italic;\n\n    display: flex;\n    align-items: baseline;\n`;\n\nconst UndoButton = styled(SettingsButton)`\n    margin-left: auto;\n`;\n\nconst AddButton = styled(SettingsButton)``;\n\nconst DeleteButton = styled(SettingsButton)``;\n\nconst ApiRows = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr min-content;\n    grid-gap: 10px;\n    margin: 10px 0;\n    align-items: baseline;\n`;\n\nfunction updateValidationMessage(element: HTMLInputElement | HTMLButtonElement, message?: string) {\n    element.setCustomValidity(message || '');\n    element.reportValidity();\n}\n\n@inject('apiStore')\n@observer\nexport class ApiSettingsCard extends React.Component<\n    CollapsibleCardProps & {\n        apiStore?: ApiStore\n    }\n> {\n\n    @observable.ref\n    private selectedSpec: OpenAPIObject | undefined;\n    private uploadSpecButtonRef = React.createRef<HTMLButtonElement>();\n\n    @observable\n    private specProcessingInProgress = false;\n\n    @observable\n    private enteredBaseUrl = \"\";\n    private baseUrlInputRef = React.createRef<HTMLInputElement>();\n\n    @observable\n    private baseUrlError: Error | undefined;\n\n    render() {\n        const { apiStore, ...cardProps } = this.props;\n\n        return <CollapsibleCard {...cardProps}>\n            <header>\n                <CollapsibleCardHeading onCollapseToggled={\n                    cardProps.onCollapseToggled\n                }>\n                    API Settings\n                </CollapsibleCardHeading>\n            </header>\n\n            <ContentLabel>\n                OpenAPI specifications\n            </ContentLabel>\n\n            <ApiRows>\n                {\n                    _.map(apiStore!.customOpenApiInfo, (spec, baseUrl) =>\n                        <React.Fragment key={baseUrl}>\n                            <SavedBaseUrl>\n                                { baseUrl }\n                            </SavedBaseUrl>\n                            <Spec>\n                                { spec.info.title }\n                            </Spec>\n                            <DeleteButton onClick={() => this.deleteApi(baseUrl)}>\n                                <Icon icon={['far', 'trash-alt']} />\n                            </DeleteButton>\n                        </React.Fragment>\n                    )\n                }\n\n                { !this.selectedSpec\n                    ? <UploadSpecButton\n                        type='submit' // Ensures we can show validation messages here\n                        onClick={this.specProcessingInProgress ? undefined : this.uploadSpec}\n                        ref={this.uploadSpecButtonRef}\n                    >\n                        { this.specProcessingInProgress\n                            ? <Icon icon={['fas', 'spinner']} spin />\n                            : \"Load an OpenAPI or Swagger spec\"\n                        }\n                    </UploadSpecButton>\n                    : <>\n                        <BaseUrlInput\n                            placeholder=\"Base URL for requests to match against this spec\"\n                            value={this.enteredBaseUrl}\n                            onChange={(e) => this.onBaseUrl(e.target.value)}\n                            ref={this.baseUrlInputRef}\n                        />\n                        <Spec>\n                            { this.selectedSpec.info.title }\n                            <UndoButton onClick={this.resetApiInputs}>\n                                <Icon icon={['fas', 'undo']} />\n                            </UndoButton>\n                        </Spec>\n                        <AddButton\n                            disabled={!this.selectedSpec || !this.enteredBaseUrl || !!this.baseUrlError}\n                            onClick={this.saveApi}\n                        >\n                            <Icon icon={['fas', 'save']} />\n                        </AddButton>\n                    </>\n                }\n            </ApiRows>\n\n            <SettingsExplanation>\n                APIs added here will provide documentation and validation for all matching\n                requests within their base URL.\n            </SettingsExplanation>\n            <SettingsExplanation>\n                HTTP Toolkit also includes built-in specifications for 2600+ popular public APIs.\n            </SettingsExplanation>\n        </CollapsibleCard>\n    }\n\n    uploadSpec = flow(function * (this: ApiSettingsCard) {\n        updateValidationMessage(this.uploadSpecButtonRef.current!);\n\n        try {\n            const file: string = yield uploadFile('text', ['.json', '.yaml']);\n            if (!file) return;\n\n            this.specProcessingInProgress = true;\n            let content: any = yield attempt(() =>\n                JSON.parse(file)\n            ).catch(() =>\n                yaml.parse(file)\n            ).catch((e) => {\n                console.warn('OpenAPI spec parsing error:', e);\n                throw new Error('File could not be parsed as either YAML or JSON')\n            });\n\n            let openApiSpec: OpenAPIObject;\n\n            if (content.swagger === \"2.0\") {\n                openApiSpec = yield new Promise((resolve, reject) => {\n                    swagger2OpenApi.convertObj(content, {\n                        patch: true,\n                        resolve: false\n                    }, (error, result) => {\n                        if (error) return reject(error);\n\n                        if (result.warnings && result.warnings.length) {\n                            console.warn(\"Some issues found whilst parsing spec:\");\n                            result.warnings.forEach(w => console.warn(w));\n                        }\n\n                        resolve(result.openapi);\n                    });\n                });\n            } else if (content.openapi && semver.satisfies(content.openapi, '^3')) {\n                openApiSpec = content;\n            } else {\n                throw new Error(\"This file doesn't contain an OpenAPI v3 or Swagger v2 specification\");\n            }\n\n            // Build the API just to test that we *can* (we'll rebuild with the base URL later)\n            yield buildApiMetadataAsync(openApiSpec, [\n                'api.build.example' // Need a default base here in case the spec has no servers\n            ]);\n\n            this.selectedSpec = openApiSpec;\n\n            const { servers } = openApiSpec;\n            if (servers && servers.length >= 1) {\n                let { url, variables } = servers[0];\n\n                if (variables) {\n                    Object.entries(variables).forEach(([variableName, variable]) => {\n                        url = url.replace(`{${variableName}}`, variable.default.toString());\n                    });\n                }\n\n                // Delay because we need the input to appear so that the ref() is set\n                requestAnimationFrame(() => this.onBaseUrl(url));\n            }\n        } catch (e) {\n            console.log(e);\n            updateValidationMessage(this.uploadSpecButtonRef.current!, asError(e).message);\n        } finally {\n            this.specProcessingInProgress = false;\n        }\n    }).bind(this);\n\n    validateBaseUrl(baseUrl: string) {\n        if (baseUrl.startsWith('/')) throw new Error(\"Base URLs must specify a host\");\n\n        if (!baseUrl.startsWith('http://') && !baseUrl.startsWith('https://')) {\n            // We allow users to include a protocol (though we'll ignore it and drop it later)\n            baseUrl = 'https://' + baseUrl;\n        }\n\n        const url = new URL(baseUrl);\n\n        // If you do include a protocol though, it better be HTTP(S)\n        if (!['http:', 'https:'].includes(url.protocol)) throw new Error(\"Base URLs must be HTTP or HTTPS\");\n\n        if (url.search) throw new Error(\"Base URLs can't contain query parameters\");\n        if (url.hash) throw new Error(\"Base URLs can't contain hash fragments\");\n\n        // Verify we don't have the same URL already, or the same URL without a protocol:\n        const existingBaseUrls = Object.keys(this.props.apiStore!.customOpenApiInfo);\n        const protocollessUrl = baseUrl.replace(/^https?:\\/\\//, '');\n        if (existingBaseUrls.includes(protocollessUrl)) {\n            throw new Error(\"This URL is already mapped to an API\");\n        }\n    }\n\n    @action.bound\n    onBaseUrl(baseUrl: string) {\n        this.enteredBaseUrl = baseUrl;\n\n        const input = this.baseUrlInputRef.current!;\n        try {\n            this.validateBaseUrl(baseUrl);\n            this.baseUrlError = undefined;\n            updateValidationMessage(input);\n        } catch (e) {\n            this.baseUrlError = asError(e);\n            updateValidationMessage(input,\n                e instanceof TypeError\n                    ? \"Not a valid URL\"\n                    : asError(e).message\n            );\n        }\n    }\n\n    saveApi = flow(function * (this: ApiSettingsCard) {\n        const baseUrl = this.enteredBaseUrl.replace(/https?:\\/\\//, '');\n\n        const api: ApiMetadata = yield buildApiMetadataAsync(\n            this.selectedSpec!,\n            ['http://' + baseUrl, 'https://' + baseUrl]\n        );\n        this.props.apiStore!.addCustomApi(baseUrl, api);\n        trackEvent({ category: \"Config\", action: \"Add API spec\" });\n\n        this.enteredBaseUrl = \"\";\n        this.selectedSpec = undefined;\n    }).bind(this);\n\n    @action.bound\n    resetApiInputs() {\n        this.enteredBaseUrl = \"\";\n        this.baseUrlError = undefined;\n        this.selectedSpec = undefined;\n    }\n\n    @action.bound\n    deleteApi(baseUrl: string) {\n        this.props.apiStore!.deleteCustomApi(baseUrl);\n    }\n}","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { observer, inject } from \"mobx-react\";\nimport * as dedent from 'dedent';\nimport {\n    distanceInWordsStrict, distanceInWordsToNow, format\n} from 'date-fns';\nimport { SubscriptionPlans } from '@httptoolkit/accounts';\n\nimport { WithInjected } from '../../types';\nimport { styled, Theme, ThemeName } from '../../styles';\nimport { Icon, WarningIcon } from '../../icons';\n\nimport { AccountStore } from '../../model/account/account-store';\nimport { UiStore } from '../../model/ui/ui-store';\nimport { serverVersion, versionSatisfies, PORT_RANGE_SERVER_RANGE } from '../../services/service-versions';\n\nimport { CollapsibleCard, CollapsibleCardHeading } from '../common/card';\nimport { ContentLabel, ContentValue } from '../common/text-content';\nimport { Button } from '../common/inputs';\nimport { TabbedOptionsContainer, Tab, TabsContainer } from '../common/tabbed-options';\nimport { ContainerSizedEditor } from '../editor/base-editor';\n\nimport * as amIUsingHtml from '../../amiusing.html';\n\nimport { ProxySettingsCard } from './proxy-settings-card';\nimport { ConnectionSettingsCard } from './connection-settings-card';\nimport { SettingsButton, SettingsButtonLink } from './settings-components';\nimport { ApiSettingsCard } from './api-settings-card';\n\ninterface SettingsPageProps {\n    accountStore: AccountStore;\n    uiStore: UiStore;\n}\n\nconst SettingsPagePlaceholder = styled.section`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100%;\n`;\n\nconst SettingsPageScrollContainer = styled.div`\n    height: 100%;\n    width: 100%;\n    overflow-y: auto;\n`;\n\nconst SettingPageContainer = styled.section`\n    margin: 0px auto 20px;\n    padding: 40px;\n    max-width: 800px;\n    position: relative;\n\n    * {\n        transition: background-color 0.3s, margin-bottom 0.1s;\n    }\n`;\n\nconst SettingsHeading = styled.h1`\n    font-size: ${p => p.theme.loudHeadingSize};\n    font-weight: bold;\n    margin-bottom: 40px;\n`;\n\nconst AccountDetailsContainer = styled.div`\n    display: grid;\n    grid-template-columns: fit-content(40%) 1fr;\n    grid-gap: 10px;\n`;\n\nconst AccountControls = styled.div`\n    margin-top: 30px;\n\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    gap: 10px;\n`;\n\nconst AccountContactFooter = styled.div`\n    margin-top: 30px;\n\n    strong {\n        user-select: all;\n    }\n`;\n\nconst ThemeColors = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    border: 3px solid #999;\n    margin: auto 20px;\n`;\n\nconst ThemeColorBlock = styled.div<{ themeColor: keyof Theme }>`\n    width: 60px;\n    height: 60px;\n    background-color: ${p => p.theme[p.themeColor]};\n`;\n\nconst EditorContainer = styled.div`\n    border: 3px solid #999;\n    height: 300px;\n    flex-grow: 1;\n    margin: auto 0;\n`;\n\nconst AccountUpdateSpinner = styled(Icon).attrs(() => ({\n    icon: ['fas', 'spinner'],\n    spin: true\n}))`\n    margin: 0 0 0 10px;\n`;\n\n@inject('accountStore')\n@inject('uiStore')\n@observer\nclass SettingsPage extends React.Component<SettingsPageProps> {\n\n    render() {\n        const { uiStore } = this.props;\n        const {\n            isPaidUser,\n            isPastDueUser,\n            userEmail,\n            userSubscription,\n            subscriptionPlans,\n            isAccountUpdateInProcess,\n            getPro,\n            canManageSubscription,\n            logOut\n        } = this.props.accountStore;\n\n        const cardProps = uiStore.settingsCardProps;\n\n        if (!isPaidUser && !isPastDueUser) {\n            // Can only happen if you log out whilst on this page.\n            return <SettingsPagePlaceholder>\n                <Button onClick={() => getPro('settings-page')}>Get Pro</Button>\n            </SettingsPagePlaceholder>;\n        }\n\n        // ! because we know this is set, as we have a paid user\n        const sub = userSubscription!;\n\n        return <SettingsPageScrollContainer>\n            <SettingPageContainer>\n                <SettingsHeading>Settings</SettingsHeading>\n\n                <CollapsibleCard {...cardProps.account}>\n                    <header>\n                        <CollapsibleCardHeading onCollapseToggled={\n                            cardProps.account.onCollapseToggled\n                        }>\n                            Account\n                        </CollapsibleCardHeading>\n                    </header>\n                    <AccountDetailsContainer>\n                        <ContentLabel>\n                            Account email\n                        </ContentLabel>\n                        <ContentValue>\n                            { userEmail }\n                        </ContentValue>\n\n                        <ContentLabel>\n                            Subscription status\n                        </ContentLabel>\n                        <ContentValue>\n                            {\n                                ({\n                                    'active': 'Active',\n                                    'trialing': 'Active (trial)',\n                                    'past_due': <strong\n                                        title={dedent`\n                                            Your subscription payment failed, and will be reattempted.\n                                            If retried payments fail your subscription will be cancelled.\n                                        `}\n                                    >Past due <WarningIcon /></strong>,\n                                    'deleted': 'Cancelled'\n                                }[sub.status]) || 'Unknown'\n                            }\n                            { isAccountUpdateInProcess &&\n                                <AccountUpdateSpinner />\n                            }\n                        </ContentValue>\n\n                        <ContentLabel>\n                            Subscription plan\n                        </ContentLabel>\n                        <ContentValue>\n                            {\n                                subscriptionPlans.state === 'fulfilled'\n                                ? (subscriptionPlans.value as SubscriptionPlans)[sub.plan]?.name\n                                // If the accounts API is unavailable for plan metadata for some reason, we can just\n                                // format the raw SKU to get something workable, no worries:\n                                : _.startCase(sub.plan)\n                            }\n                        </ContentValue>\n\n                        <ContentLabel>\n                            {\n                                ({\n                                    'active': 'Next renews',\n                                    'trialing': 'Renews',\n                                    'past_due': 'Next payment attempt',\n                                    'deleted': 'Ends',\n                                }[sub.status]) || 'Current period ends'\n                            }\n                        </ContentLabel>\n                        <ContentValue>\n                            {\n                                distanceInWordsStrict(new Date(), sub.expiry, {\n                                    addSuffix: true,\n                                    partialMethod: 'round'\n                                })\n                            } ({\n                                format(sub.expiry.toString(), 'Do [of] MMMM YYYY')\n                            })\n                        </ContentValue>\n                    </AccountDetailsContainer>\n\n                    <AccountControls>\n                        { sub.lastReceiptUrl &&\n                            <SettingsButtonLink\n                                href={ sub.lastReceiptUrl }\n                                target='_blank'\n                                rel='noreferrer noopener'\n                            >\n                                View latest invoice\n                            </SettingsButtonLink>\n                        }\n                        { canManageSubscription && <>\n                            { sub.updateBillingDetailsUrl &&\n                                <SettingsButtonLink\n                                    href={sub.updateBillingDetailsUrl}\n                                    target='_blank'\n                                    rel='noreferrer noopener'\n                                    highlight={sub.status === 'past_due'}\n                                >\n                                    Update billing details\n                                </SettingsButtonLink>\n                            }\n                            <SettingsButton\n                                onClick={this.confirmSubscriptionCancellation}\n                                disabled={isAccountUpdateInProcess}\n                            >\n                                Cancel subscription\n                                { isAccountUpdateInProcess &&\n                                    <AccountUpdateSpinner />\n                                }\n                            </SettingsButton>\n                        </> }\n                        <SettingsButton onClick={logOut}>Log out</SettingsButton>\n                    </AccountControls>\n\n                    <AccountContactFooter>\n                        Questions? Email <strong>billing@httptoolkit.com</strong>\n                    </AccountContactFooter>\n                </CollapsibleCard>\n\n                {/*\n                    The above shows for both active paid users, and recently paid users whose most recent\n                    payments failed. For those users, we drop other Pro features, but keep the settings\n                    UI so they can easily log out, update billing details or cancel fully.\n\n                    The rest is active paid users only:\n                 */}\n\n                { isPaidUser && <>\n                    {\n                        _.isString(serverVersion.value) &&\n                        versionSatisfies(serverVersion.value, PORT_RANGE_SERVER_RANGE) && <>\n                            <ProxySettingsCard {...cardProps.proxy} />\n                            <ConnectionSettingsCard {...cardProps.connection} />\n                        </>\n                    }\n\n                    <ApiSettingsCard {...cardProps.api} />\n\n                    <CollapsibleCard {...cardProps.themes}>\n                        <header>\n                            <CollapsibleCardHeading onCollapseToggled={\n                                cardProps.themes.onCollapseToggled\n                            }>\n                                Themes\n                            </CollapsibleCardHeading>\n                        </header>\n                        <TabbedOptionsContainer>\n                            <TabsContainer\n                                onClick={(value: ThemeName | 'automatic' | Theme) => uiStore.setTheme(value)}\n                                isSelected={(value: ThemeName | 'automatic' | Theme) => {\n                                    if (typeof value === 'string') {\n                                        return uiStore.themeName === value;\n                                    } else {\n                                        return _.isEqual(value, uiStore.theme);\n                                    }\n                                }}\n                            >\n                                <Tab\n                                    icon={['fas', 'magic']}\n                                    value='automatic'\n                                >\n                                    Automatic\n                                </Tab>\n                                <Tab\n                                    icon={['fas', 'sun']}\n                                    value='light'\n                                >\n                                    Light\n                                </Tab>\n                                <Tab\n                                    icon={['fas', 'moon']}\n                                    value='dark'\n                                >\n                                    Dark\n                                </Tab>\n                                <Tab\n                                    icon={['fas', 'adjust']}\n                                    value='high-contrast'\n                                >\n                                    High Contrast\n                                </Tab>\n                            </TabsContainer>\n                            <ThemeColors>\n                                <ThemeColorBlock themeColor='mainColor' />\n                                <ThemeColorBlock themeColor='mainBackground' />\n                                <ThemeColorBlock themeColor='highlightColor' />\n                                <ThemeColorBlock themeColor='highlightBackground' />\n                                <ThemeColorBlock themeColor='primaryInputColor' />\n                                <ThemeColorBlock themeColor='primaryInputBackground' />\n                                <ThemeColorBlock themeColor='containerWatermark' />\n                                <ThemeColorBlock themeColor='containerBorder' />\n                                <ThemeColorBlock themeColor='mainLowlightBackground' />\n                                <ThemeColorBlock themeColor='containerBackground' />\n                            </ThemeColors>\n\n                            <EditorContainer>\n                                <ContainerSizedEditor\n                                    contentId={null}\n                                    language='html'\n                                    defaultValue={amIUsingHtml}\n                                />\n                            </EditorContainer>\n                        </TabbedOptionsContainer>\n                    </CollapsibleCard>\n                </> }\n            </SettingPageContainer>\n        </SettingsPageScrollContainer>;\n    }\n\n    confirmSubscriptionCancellation = () => {\n        const subscription = this.props.accountStore.userSubscription;\n        if (!subscription) {\n            throw new Error(\"Can't cancel without a subscription\");\n        }\n\n        const planName = SubscriptionPlans[subscription.plan].name;\n\n        let cancelEffect: string;\n\n        if (subscription.status === 'active') {\n            cancelEffect = `It will remain usable until it expires in ${\n                distanceInWordsToNow(subscription.expiry)\n            } but will not renew.`;\n        } else if (subscription.status === 'past_due') {\n            cancelEffect = 'No more renewals will be attempted and it will deactivate immediately.';\n        } else {\n            throw new Error(`Cannot cancel subscription with status ${subscription.status}`);\n        }\n\n        const confirmed = confirm([\n            `This will cancel your HTTP Toolkit ${planName} subscription.`,\n            cancelEffect,\n            \"Are you sure?\"\n        ].join('\\n\\n'));\n\n        if (!confirmed) return;\n\n        this.props.accountStore.cancelSubscription().catch((e) => {\n            alert(e.message);\n        });\n    };\n}\n\n// Annoying cast required to handle the store prop nicely in our types\nconst InjectedSettingsPage = SettingsPage as unknown as WithInjected<\n    typeof SettingsPage,\n    'accountStore' | 'uiStore'\n>;\nexport { InjectedSettingsPage as SettingsPage };","import { styled } from \"../../styles\";\nimport { SecondaryButton } from '../common/inputs';\n\nexport const ModalOverlay = styled.div<{ opacity?: number }>`\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n\n    background: ${p => p.theme.modalGradient};\n\n    z-index: 10;\n    opacity: ${p => p.opacity || 0.9};\n`;\n\nexport const ModalButton = styled(SecondaryButton)`\n    padding: 5px 20px;\n    margin: 20px auto;\n\n    &:not([disabled]) {\n        color: ${p => p.theme.mainBackground};\n        border-color: ${p => p.theme.mainBackground};\n    }\n\n    border-color: rgba(255, 255, 255, 0.6);\n    font-size: ${p => p.theme.textSize};\n`;","import * as _ from \"lodash\";\nimport * as React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { observable, action, computed } from \"mobx\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport type { SKU, SubscriptionPlans } from \"@httptoolkit/accounts\";\n\nimport { styled, css } from \"../../styles\";\nimport { Icon } from \"../../icons\";\nimport { ObservablePromise } from \"../../util/observable\";\n\nimport { Button, UnstyledButton, ButtonLink, SecondaryButton } from \"../common/inputs\";\nimport { ModalButton } from \"./modal-overlay\";\n\nconst PlanPickerModal = styled.dialog`\n    position: absolute;\n\n    top: 50%;\n    left: 50%;\n\n    /* There's default styling for dialog, so undo it: */\n    bottom: auto;\n    right: auto;\n\n    transform: translate(-50%, -50%);\n    z-index: 99;\n\n    display: flex;\n    flex-direction: row;\n    color: ${p => p.theme.mainBackground};\n\n    background-color: transparent;\n    border: none;\n\n    min-width: 850px;\n    max-width: 980px;\n    width: 90%;\n`;\n\nconst PlanPickerDetails = styled.section`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n\n    padding-right: 20px;\n    max-width: 400px;\n`;\n\nconst PlanPickerHeading = styled.h1`\n    font-size: ${p => p.theme.loudHeadingSize};\n    font-weight: bold;\n    letter-spacing: -1px;\n    text-align: center;\n`;\n\nconst PlanCycleToggle = styled(UnstyledButton)`\n    background: none;\n    border: none;\n\n    margin: 10px auto;\n    padding: 10px 10px;\n\n    font-family: ${p => p.theme.fontFamily};\n    font-size: ${p => p.theme.headingSize};\n    color: ${p => p.theme.mainColor};\n\n    display: flex;\n    align-items: center;\n    flex-direction: row;\n\n    > svg {\n        margin: 0 10px;\n        z-index: 1;\n    }\n`;\n\nconst PlanCycle = styled.span<{selected: boolean}>`\n    padding: 10px 15px;\n    border-radius: 8px;\n\n    &:first-child {\n        padding-right: 40px;\n        margin-right: -40px;\n    }\n\n    &:last-child {\n        padding-left: 40px;\n        margin-left: -40px;\n    }\n\n    ${p => p.selected && css`\n        background-color: ${p => p.theme.mainBackground};\n        border-bottom: 3px solid ${p => p.theme.containerBorder};\n        box-shadow: 0 4px 10px 0 rgba(0,0,0,${p => p.theme.boxShadowAlpha/2});\n    `}\n\n    ${p => !p.selected && css`\n        color: ${p => p.theme.mainBackground};\n        opacity: 0.7;\n    `}\n`;\n\nconst PlanPickerButtons = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n\n    width: 300px;\n    margin: 50px auto 0;\n\n    > p {\n        margin-bottom: 10px;\n        text-align: center;\n        word-break: break-word;\n    }\n`;\n\nconst PlanSecondaryButton = styled(SecondaryButton)`\n    &:not(:last-child) {\n        margin-bottom: 10px;\n    }\n\n    &:not([disabled]) {\n        color: ${p => p.theme.mainBackground};\n        border-color: ${p => p.theme.mainBackground};\n    }\n`;\n\nconst Nowrap = styled.span`\n    white-space: nowrap;\n`;\n\nconst PricingTable = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    color: ${p => p.theme.mainColor};\n    max-width: 830px;\n`;\n\nconst PricingTier = styled.section<{ highlighted?: boolean }>`\n    display: flex;\n    flex-direction: column;\n    box-shadow: 0 4px 10px 0 rgba(0,0,0,${p => p.theme.boxShadowAlpha/2});\n    border-radius: 4px;\n    border: 1px solid ${p => p.theme.containerBorder};\n\n    > * {\n        padding: 0 20px;\n    }\n\n    flex: 1 1;\n\n    ${p => p.highlighted ? css`\n        background-color: ${p => p.theme.mainBackground};\n        color: ${p => p.theme.mainColor};\n\n        z-index: 1;\n        margin: -15px -5px -15px 0;\n\n        flex-basis: 1%;\n\n        > ${TierHeader} {\n            padding: 37.5px 0;\n        }\n    ` : css`\n        background-color: ${p => p.theme.mainLowlightBackground};\n        opacity: 0.9;\n    `}\n`;\n\nconst TierHeader = styled.div`\n    width: 100%;\n    padding: 30px 0;\n    color: ${p => p.theme.popColor};\n    text-align: center;\n    font-weight: bold;\n    font-size: ${p => p.theme.loudHeadingSize};\n`;\n\nconst TierPriceBlock = styled.div`\n    text-align: center;\n    color: ${p => p.theme.mainColor};\n    margin: 0 20px;\n`;\n\nconst TierPrice = styled.div`\n    font-size: ${p => p.theme.largeHeadingSize};\n    color: ${p => p.theme.mainColor};\n    font-weight: bold;\n`;\n\nconst TierPriceCaveats = styled.small`\n    display: block;\n    font-size: 80%;\n    opacity: 0.8;\n`;\n\nconst TierLicense = styled.div`\n    display: block;\n    margin-top: 10px;\n    font-size: ${p => p.theme.headingSize};\n`;\n\nconst TierFeatures = styled.ul`\n    padding: 40px 20px 30px;\n    font-size: ${p => p.theme.textSize};\n    line-height: 1.2;\n`;\n\nconst FeatureHeading = styled.li`\n    margin-top: 20px;\n    margin-left: 0;\n    list-style-type: none;\n\n    &:first-child {\n        margin-top: 0;\n    }\n`;\n\nconst Feature = styled.li`\n    &:not(:first-child) {\n        margin-top: 20px;\n    }\n\n    strong {\n        color: ${p => p.theme.popColor};\n    }\n`;\n\nconst SubFeature = styled(Feature)`\n    list-style: circle;\n    margin-left: 20px;\n`;\n\nconst SubFeatures = styled.ul`\n    margin-top: 15px;\n\n    > ${SubFeature} {\n        margin-top: 4px;\n    }\n`;\n\nconst PricingCTA = styled.div`\n    margin-top: 0;\n    margin-bottom: 20px;\n    font-weight: bold;\n\n    > ${Button} {\n        text-align: center;\n        width: 100%\n    }\n`;\n\nconst PlanSmallPrint = styled.div`\n    color: ${p => p.theme.mainBackground};\n    font-size: ${p => p.theme.textSize};\n\n    margin-top: 10px;\n    text-align: center;\n    line-height: 1.2;\n\n    strong {\n        font-weight: bold;\n    }\n\n    a {\n        color: ${p => p.theme.mainBackground};\n    }\n\n    p {\n        margin-top: 10px;\n    }\n`;\n\nconst SpinnerModal = styled.div`\n    position: absolute;\n\n    top: 50%;\n    left: 50%;\n\n    transform: translate(-50%, -50%) scale(2);\n    z-index: 99;\n\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n\n    > p {\n        max-width: 500px;\n        line-height: 1.2;\n    }\n\n    > p, > svg {\n        color: #fff;\n        margin: 20px auto;\n    }\n\n    a[href] {\n        color: #6e8ff4;\n    }\n`;\n\ntype PlanCycle = 'monthly' | 'annual';\n\ninterface PlanPickerProps {\n    email?: string;\n    plans: ObservablePromise<SubscriptionPlans>;\n    onPlanPicked: (sku: SKU | undefined) => void;\n    logOut: () => void;\n    logIn: () => void;\n}\n\n@observer\nexport class PlanPicker extends React.Component<PlanPickerProps> {\n\n    @observable\n    planCycle: PlanCycle = 'monthly';\n\n    render() {\n        const {\n            isPricingAvailable,\n            planCycle,\n            toggleCycle,\n            buyPlan,\n            closePicker,\n            getPlanMonthlyPrice\n        } = this;\n        const { email, logOut, logIn } = this.props;\n\n        if (!isPricingAvailable) {\n            return <SpinnerModal>\n                <p>\n                    Unable to connect to HTTP Toolkit account servers...\n                </p>\n                <p>\n                    Having problems? Open an issue <a\n                        href=\"https://github.com/httptoolkit/httptoolkit/issues/new/choose\"\n                    >on GitHub</a> or email <strong>billing@httptoolkit.com</strong> to ask for help.\n                </p>\n                <Icon\n                    icon={['fac', 'spinner-arc']}\n                    spin\n                    size='10x'\n                />\n                <ModalButton onClick={closePicker}>\n                    Cancel\n                </ModalButton>\n            </SpinnerModal>\n        }\n\n        return <PlanPickerModal open>\n            <PlanPickerDetails>\n                <PlanPickerHeading>Choose your Plan</PlanPickerHeading>\n                <PlanCycleToggle onClick={toggleCycle}>\n                    <PlanCycle selected={planCycle === 'monthly'}>Monthly</PlanCycle>\n\n                    <FontAwesomeIcon icon={['fas', planCycle === 'annual' ? 'toggle-on' : 'toggle-off']} />\n\n                    <PlanCycle selected={planCycle === 'annual'}>Annual</PlanCycle>\n                </PlanCycleToggle>\n\n                <PlanSmallPrint>\n                    <p>\n                        <strong>Cancel in two clicks, anytime</strong>. <br/>Have questions? <strong><a\n                            href=\"https://httptoolkit.com/docs/guides/subscription-faq\"\n                        >Read the FAQ</a></strong> or email billing@httptoolkit.com.\n                    </p>\n                    <p>\n                        By subscribing to a paid plan, you accept <Nowrap>\n                            <a href=\"https://httptoolkit.com/terms-of-service\">\n                                the HTTP Toolkit Terms of Service\n                            </a>\n                        </Nowrap>.\n                    </p>\n                </PlanSmallPrint>\n\n                <PlanPickerButtons>\n                    { email && <p>\n                        Logged in as <Nowrap>{ email }</Nowrap>.\n                    </p> }\n                    {\n                        email\n                            ? <PlanSecondaryButton onClick={logOut}>Log out</PlanSecondaryButton>\n                            : <PlanSecondaryButton onClick={logIn}>Log into existing account</PlanSecondaryButton>\n                    }\n                    <PlanSecondaryButton onClick={closePicker}>Cancel</PlanSecondaryButton>\n                </PlanPickerButtons>\n            </PlanPickerDetails>\n\n            <PricingTable>\n                <PricingTier highlighted={true}>\n                    <TierHeader>\n                        Professional\n                    </TierHeader>\n                    <TierPriceBlock>\n                        <TierPrice>{getPlanMonthlyPrice('pro')} / month</TierPrice>\n                        <TierPriceCaveats>\n                            plus local tax, paid {this.planCycle === 'annual' ? 'annually' : 'monthly'}\n                        </TierPriceCaveats>\n                        <TierLicense title='Licensed for a specific individual. See the terms of service for full details.'>\n                            Personal user account\n                        </TierLicense>\n                    </TierPriceBlock>\n                    <TierFeatures>\n                        <Feature>\n                            <strong>Automated HTTP mocking & rewriting</strong>, including traffic redirection, mock responses, and errors & timeouts.\n                        </Feature>\n                        <Feature>\n                            <strong>Reusable mock rules</strong>. Persistent by default, plus\n                            import/export so you can store, reuse & share them later.\n                        </Feature>\n                        <Feature>\n                            <strong>Import/export for collected traffic</strong>, as either <a\n                                href=\"https://en.wikipedia.org/wiki/HAR_(file_format)\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                HARs\n                            </a> or ready-to-use code for 20+ tools.\n                        </Feature>\n                        <Feature>\n                            <strong>Advanced HTTP debugging & inspection tools</strong>, including compression & caching performance analysis.\n                        </Feature>\n                        <Feature>\n                            <strong>Validation &amp; API documentation for 2600+ built-in APIs</strong>,\n                            from AWS to GitHub to Stripe, plus your own custom <a\n                                href=\"https://swagger.io/docs/specification/about/\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >OpenAPI</a> specs.\n                        </Feature>\n                        <Feature>\n                            <strong>Advanced customization</strong>, including UI themes,\n                            whitelisted & client certificates, ports, and upstream proxies.\n                        </Feature>\n                        <Feature>\n                            <strong>Support ongoing development!</strong>\n                        </Feature>\n                    </TierFeatures>\n                    <PricingCTA>\n                        <Button onClick={() => buyPlan('pro')}>\n                            Get Pro Now\n                        </Button>\n                    </PricingCTA>\n                </PricingTier>\n\n                <PricingTier>\n                    <TierHeader>\n                        Team\n                    </TierHeader>\n                    <TierPriceBlock>\n                        <TierPrice>{getPlanMonthlyPrice('team')} / user / month</TierPrice>\n                        <TierPriceCaveats>\n                            plus local tax, paid {this.planCycle === 'annual' ? 'annually' : 'monthly'}\n                        </TierPriceCaveats>\n                        <TierLicense title='One team license, linked to many individuals, who can be added and removed. See the terms of service for details.'>\n                            Team account\n                        </TierLicense>\n                    </TierPriceBlock>\n                    <TierFeatures>\n                        <FeatureHeading>\n                            <em>All Professional features, and:</em>\n                        </FeatureHeading>\n                        <Feature>\n                            <strong>Centralized billing</strong> to simplify payment for your team\n                        </Feature>\n                        <Feature>Licensed to your team, rather than individuals</Feature>\n                        <Feature><strong>Centralized control</strong> to easily manage your team members and subscription</Feature>\n                        <Feature>\n                            <strong>Team workspaces</strong> for low-friction collaboration <Nowrap>\n                                (<em>coming soon</em>)\n                            </Nowrap>\n                        </Feature>\n                        <FeatureHeading>\n                            Options available on request:\n                        </FeatureHeading>\n                        <SubFeatures>\n                            <SubFeature>Self-hosted infrastructure</SubFeature>\n                            <SubFeature>Private support</SubFeature>\n                            <SubFeature>Training & consultancy</SubFeature>\n                            <SubFeature>Bulk discounts</SubFeature>\n                        </SubFeatures>\n                    </TierFeatures>\n                    <PricingCTA>\n                        <ButtonLink href='https://httptoolkit.com/contact'>\n                            Get in touch\n                        </ButtonLink>\n                    </PricingCTA>\n                </PricingTier>\n            </PricingTable>\n        </PlanPickerModal>\n    }\n\n    @action.bound\n    toggleCycle() {\n        this.planCycle = this.planCycle === 'annual' ? 'monthly' : 'annual';\n    }\n\n    @computed\n    get isPricingAvailable() {\n        const plans = this.props.plans;\n        return plans.state === 'fulfilled';\n    }\n\n    getPlanMonthlyPrice = (tierCode: string): string => {\n        if (!this.isPricingAvailable) throw new Error(\"Can't query prices if pricing is not available\");\n        const plans = this.props.plans.value as SubscriptionPlans; // Always true once pricing is available\n\n        const sku = this.getSKU(tierCode);\n        const plan = plans[sku];\n        if (plan.prices === 'priceless') throw new Error(\"Can't show price for non-priced plan\");\n        return plan.prices!.monthly;\n    };\n\n    getSKU = (tierCode: string) => {\n        return `${tierCode}-${this.planCycle}` as SKU;\n    }\n\n    buyPlan = (tierCode: string) => {\n        this.props.onPlanPicked(this.getSKU(tierCode));\n    }\n\n    closePicker = () => {\n        this.props.onPlanPicked(undefined);\n    }\n\n}","import * as React from 'react';\n\nimport { styled } from '../../styles';\n\nimport { Icon } from '../../icons';\nimport { ModalButton } from './modal-overlay';\n\nexport const CheckoutSpinner = styled((p: { className?: string, onCancel: () => void }) => (\n    <div className={p.className}>\n        <p>\n            The checkout has been opened in your browser.\n            <br/>\n            Please follow the steps there to complete your subscription.\n        </p>\n        <p>\n            Have questions? Take a look at <a\n                href=\"https://httptoolkit.com/docs/guides/subscription-faq\"\n            >the FAQ</a> or email <strong>billing@httptoolkit.com</strong>.\n        </p>\n        <Icon\n            icon={['fac', 'spinner-arc']}\n            spin\n            size='10x'\n        />\n        <ModalButton onClick={p.onCancel}>\n            Cancel checkout\n        </ModalButton>\n    </div>\n))`\n    > p {\n        max-width: 500px;\n        line-height: 1.2;\n    }\n\n    > p, > svg {\n        color: #fff;\n        margin: 20px auto;\n    }\n\n    a[href] {\n        color: #6e8ff4;\n    }\n\n    text-align: center;\n\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%) scale(2);\n    z-index: 100;\n`;","import * as React from 'react';\nimport { autorun } from 'mobx';\nimport { disposeOnUnmount, observer } from 'mobx-react';\n\nimport {\n    Menu,\n    Submenu,\n    Separator,\n    Item,\n    contextMenu\n} from 'react-contexify';\n\nimport { styled } from '../styles';\n\nimport { UnreachableCheck } from '../util/error';\n\nimport { ContextMenuItem, ContextMenuState } from '../model/ui/context-menu';\n\n@observer\nexport class HtmlContextMenu<T> extends React.Component<{\n    menuState: ContextMenuState<T>,\n    onHidden: () => void\n}> {\n\n    componentDidMount() {\n        // Automatically show the menu when this is rendered:\n        disposeOnUnmount(this, autorun(() => {\n            const menuState = this.props.menuState;\n\n            // Annoyingly, the menu is not listening immediately after the component\n            // is mounted, so we have to delay this slightly:\n            setTimeout(() => {\n                contextMenu.show({\n                    id: 'menu',\n                    event: menuState.event\n                });\n            }, 10);\n        }));\n    }\n\n    render() {\n        return <ThemedMenu\n            id='menu'\n            onVisibilityChange={this.onVisibilityChange}\n        >\n            { this.props.menuState.items.map(this.renderItem) }\n        </ThemedMenu>\n    }\n\n    renderItem = (item: ContextMenuItem<T>, i: number) => {\n        if (item.type === 'separator') {\n            return <Separator key={i} />;\n        } else if (item.type === 'option') {\n            return <Item\n                key={i}\n                onClick={() => item.callback(this.props.menuState.data)}\n                disabled={item.enabled === false}\n            >\n                { item.label }\n            </Item>\n        } else if (item.type === 'submenu') {\n            return <Submenu\n                key={i}\n                label={item.label}\n                disabled={item.enabled === false}\n            >\n                { item.items.map(this.renderItem) }\n            </Submenu>\n        } else throw new UnreachableCheck(item, i => i.type);\n    }\n\n    onVisibilityChange = (visible: boolean) => {\n        if (!visible) this.props.onHidden();\n    };\n\n}\n\nconst ThemedMenu = styled(Menu)`\n    --contexify-menu-bgColor: ${p => p.theme.mainLowlightBackground};\n    --contexify-item-color: ${p => p.theme.mainColor};\n    --contexify-separator-color: ${p => p.theme.containerBorder};\n\n    --contexify-rightSlot-color: ${p => p.theme.containerWatermark};\n    --contexify-activeRightSlot-color: ${p => p.theme.mainColor};\n\n    --contexify-arrow-color: ${p => p.theme.containerWatermark};\n    --contexify-activeArrow-color: ${p => p.theme.mainColor};\n\n    --contexify-activeItem-color: #fff;\n    --contexify-activeItem-bgColor: #3498db;\n`;","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { computed } from 'mobx';\nimport { observer, inject, disposeOnUnmount } from 'mobx-react';\nimport {\n    Router,\n    RouteComponentProps,\n    Redirect,\n    LocationProvider\n} from '@reach/router';\n\nimport { styled } from '../styles';\nimport { WithInjected } from '../types';\nimport { trackPage } from '../metrics';\nimport { appHistory } from '../routing';\nimport { useHotkeys, Ctrl } from '../util/ui';\n\nimport { AccountStore } from '../model/account/account-store';\nimport { UiStore } from '../model/ui/ui-store';\nimport {\n    serverVersion,\n    versionSatisfies,\n    MOCK_SERVER_RANGE,\n    SERVER_SEND_API_SUPPORTED\n} from '../services/service-versions';\n\nimport { Sidebar, SidebarItem, SIDEBAR_WIDTH } from './sidebar';\nimport { InterceptPage } from './intercept/intercept-page';\nimport { ViewPage } from './view/view-page';\nimport { MockPage } from './mock/mock-page';\nimport { SendPage } from './send/send-page';\nimport { SettingsPage } from './settings/settings-page';\n\nimport { PlanPicker } from './account/plan-picker';\nimport { ModalOverlay } from './account/modal-overlay';\nimport { CheckoutSpinner } from './account/checkout-spinner';\nimport { HtmlContextMenu } from './html-context-menu';\n\nconst AppContainer = styled.div<{ inert?: boolean }>`\n    display: flex;\n    height: 100%;\n\n    > :not(:first-child) {\n        flex: 1 1;\n        width: calc(100% - ${SIDEBAR_WIDTH});\n    }\n`;\n\ninterface ExtendProps extends React.PropsWithChildren<any> {\n\tpageComponent: React.ComponentType<{}>;\n}\n\nconst Route = ({ children, ...props }: ExtendProps & RouteComponentProps): React.ReactElement => {\n\tconst { pageComponent, ...otherProps } = props;\n\treturn (\n\t\t<props.pageComponent {...otherProps}>\n\t\t\t{children}\n\t\t</props.pageComponent>\n\t)\n};\n\nconst AppKeyboardShortcuts = (props: {\n    navigate: (path: string) => void,\n    canVisitSettings: boolean\n}) => {\n    useHotkeys('Ctrl+1,Cmd+1', (e) => {\n        props.navigate('/intercept');\n        e.preventDefault();\n    }, [props.navigate]);\n    useHotkeys('Ctrl+2,Cmd+2', (e) => {\n        props.navigate('/view');\n        e.preventDefault();\n    }, [props.navigate]);\n    useHotkeys('Ctrl+3,Cmd+3', (e) => {\n        props.navigate('/mock');\n        e.preventDefault();\n    }, [props.navigate]);\n    useHotkeys('Ctrl+9,Cmd+9', (e) => {\n        if (props.canVisitSettings) props.navigate('/settings');\n        e.preventDefault();\n    }, [props.navigate, props.canVisitSettings]);\n\n    return null;\n};\n\n@inject('accountStore')\n@inject('uiStore')\n@observer\nclass App extends React.Component<{\n    accountStore: AccountStore,\n    uiStore: UiStore\n}> {\n\n    @computed\n    get canVisitSettings() {\n        return this.props.accountStore.isPaidUser || this.props.accountStore.isPastDueUser;\n    }\n\n    @computed\n    get canVisitSend() {\n        return this.props.accountStore.featureFlags.includes('send') && (\n            // Hide Send option if the server is too old for proper support.\n            // We show by default to avoid flicker in the most common case\n            serverVersion.state !== 'fulfilled' ||\n            versionSatisfies(serverVersion.value as string, SERVER_SEND_API_SUPPORTED)\n        );\n    }\n\n    @computed\n    get menuItems() {\n        return [\n            {\n                name: 'Intercept',\n                title: `Connect clients to HTTP Toolkit (${Ctrl}+1)`,\n                icon: ['fas', 'plug'],\n                position: 'top',\n                type: 'router',\n                url: '/intercept'\n            },\n            {\n                name: 'View',\n                title: `View intercepted HTTP traffic (${Ctrl}+2)`,\n                icon: ['fas', 'search'],\n                position: 'top',\n                type: 'router',\n                url: '/view'\n            },\n\n            ...(\n                (\n                    // Hide Mock option if the server is too old for proper support.\n                    // We show by default to avoid flicker in the most common case\n                    serverVersion.state !== 'fulfilled' ||\n                    versionSatisfies(serverVersion.value as string, MOCK_SERVER_RANGE)\n                )\n                ? [{\n                    name: 'Mock',\n                    title: `Add rules to mock & rewrite HTTP traffic (${Ctrl}+3)`,\n                    icon: ['fas', 'theater-masks'],\n                    position: 'top',\n                    type: 'router',\n                    url: '/mock'\n                }]\n                : []\n            ),\n\n            ...(this.canVisitSend\n                ? [{\n                    name: 'Send',\n                    title: `Send HTTP requests directly (${Ctrl}+4)`,\n                    icon: ['far', 'paper-plane'],\n                    position: 'top',\n                    type: 'router',\n                    url: '/send'\n                }]\n                : []\n            ),\n\n            (this.canVisitSettings\n                ? {\n                    name: 'Settings',\n                    title: `Reconfigure HTTP Toolkit and manage your account (${Ctrl}+9)`,\n                    icon: ['fas', 'cog'],\n                    position: 'bottom',\n                    type: 'router',\n                    url: '/settings'\n                }\n                : {\n                    name: 'Get Pro',\n                    title: \"Sign up for HTTP Toolkit Pro\",\n                    icon: ['far', 'star'],\n                    position: 'bottom',\n                    type: 'callback',\n                    onClick: () => this.props.accountStore.getPro('sidebar')\n                }\n            ),\n\n            {\n                name: 'Give feedback',\n                title: \"Suggest features or report issues\",\n                icon: ['far', 'comment'],\n                position: 'bottom',\n                highlight: true,\n                type: 'web',\n                url: 'https://github.com/httptoolkit/httptoolkit/issues/new/choose'\n            }\n        ] as SidebarItem[];\n    }\n\n    componentDidMount() {\n        disposeOnUnmount(this, appHistory.listen(\n            ({ location }) => trackPage(location)\n        ));\n    }\n\n    render() {\n        const {\n            modal,\n            setSelectedPlan,\n            subscriptionPlans,\n            userEmail,\n            logIn,\n            logOut,\n            cancelCheckout\n        } = this.props.accountStore;\n\n        const {\n            contextMenuState,\n            clearHtmlContextMenu\n        } = this.props.uiStore;\n\n        return <LocationProvider history={appHistory}>\n            <AppKeyboardShortcuts\n                navigate={appHistory.navigate}\n                canVisitSettings={this.canVisitSettings}\n            />\n            <AppContainer\n                aria-hidden={!!modal}\n                inert={!!modal}\n                // 'inert' doesn't actually work - it's non-standard, so we need this:\n                ref={node => node && (!!modal ?\n                    node.setAttribute('inert', '') : node.removeAttribute('inert')\n                )}\n            >\n                <Sidebar items={this.menuItems} />\n\n                <Router>\n                    <Redirect noThrow from=\"/\" to={'/intercept'} />\n                    <Route path={'/intercept'} pageComponent={InterceptPage} />\n                    <Route path={'/view'} pageComponent={ViewPage} />\n                    <Route path={'/view/:eventId'} pageComponent={ViewPage} />\n                    <Route path={'/mock'} pageComponent={MockPage} />\n                    <Route path={'/mock/:initialRuleId'} pageComponent={MockPage} />\n                    <Route path={'/send'} pageComponent={SendPage} />\n                    <Route path={'/settings'} pageComponent={SettingsPage} />\n                </Router>\n            </AppContainer>\n\n            { !!modal && <ModalOverlay /> }\n\n            { modal === 'pick-a-plan' &&\n                <PlanPicker\n                    email={userEmail}\n                    onPlanPicked={setSelectedPlan}\n                    logOut={logOut}\n                    logIn={logIn}\n                    plans={subscriptionPlans}\n                />\n            }\n\n            { modal === 'post-checkout' &&\n                <CheckoutSpinner\n                    onCancel={cancelCheckout}\n                />\n            }\n\n            {\n                contextMenuState &&\n                    <HtmlContextMenu\n                        menuState={contextMenuState}\n                        onHidden={clearHtmlContextMenu}\n                    />\n            }\n        </LocationProvider>;\n    }\n}\n\n// Annoying cast required to handle the store prop nicely in our types\nconst AppWithStoreInjected = (\n    App as unknown as WithInjected<typeof App, 'accountStore' | 'uiStore'>\n);\n\nexport { AppWithStoreInjected as App };","import * as React from 'react';\nimport { inject, observer } from 'mobx-react';\n\nimport { ThemeProvider, StyleSheetManager } from '../styles';\nimport { WithInjected } from '../types';\n\nimport { UiStore } from '../model/ui/ui-store';\n\nconst StyleProvider = inject('uiStore')(observer((p: {\n    uiStore: UiStore,\n    children: JSX.Element\n}) => {\n    return <ThemeProvider theme={p.uiStore.theme}>\n        <StyleSheetManager disableVendorPrefixes={true}>\n            { p.children }\n        </StyleSheetManager>\n    </ThemeProvider>\n}));\n\nconst InjectedStyleProvider = StyleProvider as unknown as WithInjected<\n    typeof StyleProvider,\n    'uiStore'\n>;\nexport { InjectedStyleProvider as StyleProvider };","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { observable, action } from 'mobx';\n\nimport { styled } from '../styles';\nimport { Sentry } from '../errors';\nimport { isErrorLike } from '../util/error';\nimport { trackEvent } from '../metrics';\n\nimport { Button, ButtonLink } from './common/inputs';\n\nconst ErrorOverlay = styled((props: {\n    className?: string,\n    children: React.ReactNode\n}) =>\n    <section className={props.className}>\n        { props.children }\n    </section>\n)`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    overflow-y: auto;\n\n    color: ${p => p.theme.mainColor};\n\n    h1 {\n        font-size: ${p => p.theme.screamingHeadingSize};\n        font-weight: bold;\n        margin-bottom: 50px;\n    }\n\n    h2 {\n        font-size: ${p => p.theme.loudHeadingSize};\n        margin-bottom: 50px;\n    }\n\n    button, a {\n        display: block;\n        margin: 40px 40px 0;\n\n        padding: 20px;\n\n        font-size: ${p => p.theme.loudHeadingSize};\n        font-weight: bolder;\n    }\n`;\n\nconst ButtonContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n`;\n\nconst ErrorOutput = styled.code`\n    font-family: ${p => p.theme.monoFontFamily};\n    white-space: preserve;\n`;\n\n@observer\nexport class ErrorBoundary extends React.Component {\n\n    @observable\n    private error: Error | undefined;\n\n    @action\n    componentDidCatch(error: Error, errorInfo: any) {\n        this.error = error;\n\n        Sentry.withScope(scope => {\n            Object.keys(errorInfo).forEach(key => {\n                scope.setExtra(key, errorInfo[key]);\n            });\n            Sentry.captureException(error);\n        });\n\n        trackEvent({\n            category: 'Error',\n            action: 'UI crashed'\n        });\n    }\n\n    render() {\n        return this.error ? (\n            <ErrorOverlay>\n                <h1>\n                    Oh no!\n                </h1>\n                <h2>\n                    Sorry, it's all gone wrong.\n                </h2>\n                { isErrorLike(this.error) && <ErrorOutput>\n                    { this.error.stack ?? this.error.message }\n                </ErrorOutput> }\n                <ButtonContainer>\n                    <ButtonLink href={\n                        `https://github.com/httptoolkit/httptoolkit/issues/new?template=bug.yml&title=[UI Crash]%3A+${\n                            this.error.message || ''\n                        }`\n                    }>\n                        Tell us what happened\n                    </ButtonLink>\n                    <Button onClick={() => window.location.reload()}>\n                        Reload HTTP Toolkit\n                    </Button>\n                </ButtonContainer>\n            </ErrorOverlay>\n        ) : this.props.children;\n    }\n}","document.dispatchEvent(new Event('load:executing'));\n\nimport * as localForage from 'localforage';\nlocalForage.config({ name: \"httptoolkit\", version: 1 });\n\nconst urlParams = new URLSearchParams(window.location.search);\nconst authToken = urlParams.get('authToken');\nlocalForage.setItem('latest-auth-token', authToken);\n\nimport { initSentry, logError } from './errors';\ninitSentry(process.env.SENTRY_DSN);\n\nimport * as _ from 'lodash';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport * as mobx from 'mobx';\nimport { Provider } from 'mobx-react';\n\nimport { GlobalStyles } from './styles';\nimport { delay } from './util/promise';\nimport { initMetrics } from './metrics';\nimport { appHistory } from './routing';\n\nimport { HttpExchange } from './types';\n\nimport { UiStore } from './model/ui/ui-store';\nimport { AccountStore } from './model/account/account-store';\nimport { ProxyStore } from './model/proxy-store';\nimport { EventsStore } from './model/events/events-store';\nimport { RulesStore } from './model/rules/rules-store';\nimport { InterceptorStore } from './model/interception/interceptor-store';\nimport { ApiStore } from './model/api/api-store';\nimport { SendStore } from './model/send/send-store';\n\nimport { serverVersion, lastServerVersion, UI_VERSION } from './services/service-versions';\nimport {\n    attemptServerUpdate,\n    checkForOutdatedComponents,\n    runBackgroundUpdates\n} from './services/update-management';\n\nimport { App } from './components/app';\nimport { StyleProvider } from './components/style-provider';\nimport { ErrorBoundary } from './components/error-boundary';\n\nconsole.log(`Initialising UI (version ${UI_VERSION})`);\n\nconst APP_ELEMENT_SELECTOR = '#app';\n\nmobx.configure({ enforceActions: 'observed' });\n\n// Begin checking for updates and pre-caching UI components we might need, to support\n// background updates & instant offline startup. We slightly delay this to avoid\n// competing for bandwidth/CPU/etc with startup on slow connections.\ndelay(5000).then(runBackgroundUpdates);\ncheckForOutdatedComponents();\n\nconst accountStore = new AccountStore(\n    () => appHistory.navigate('/settings')\n);\nconst apiStore = new ApiStore(accountStore);\nconst uiStore = new UiStore(accountStore);\nconst proxyStore = new ProxyStore(accountStore);\nconst interceptorStore = new InterceptorStore(proxyStore, accountStore);\n\n// Some non-trivial interactions between rules & events stores here. Rules need to use events to\n// handle breakpoints (where rule logic reads from received event data), while events need to use\n// rules to store metadata about the rule that a received event says it matched with:\nconst rulesStore = new RulesStore(accountStore, proxyStore,\n    async function jumpToExchange(exchangeId: string) {\n        await eventsStore.initialized;\n\n        let exchange: HttpExchange;\n        await mobx.when(() => {\n            exchange = _.find(eventsStore.exchanges, { id: exchangeId })!;\n            // Completed -> doesn't fire for initial requests -> no completed/initial req race\n            return !!exchange && exchange.isCompletedRequest();\n        });\n\n        appHistory.navigate(`/view/${exchangeId}`);\n        return exchange!;\n    }\n);\nconst eventsStore = new EventsStore(proxyStore, apiStore, rulesStore);\nconst sendStore = new SendStore(eventsStore, rulesStore);\n\nconst stores = {\n    accountStore,\n    apiStore,\n    uiStore,\n    proxyStore,\n    eventsStore,\n    interceptorStore,\n    rulesStore,\n    sendStore\n};\n\nconst appStartupPromise = Promise.all(\n    Object.values(stores).map(store => store.initialized)\n);\ninitMetrics();\n\n// Once the app is loaded, show the app\nappStartupPromise.then(() => {\n    // We now know that the server is running - tell it to check for updates\n    attemptServerUpdate();\n\n    console.log('App started, rendering');\n\n    document.dispatchEvent(new Event('load:rendering'));\n    ReactDOM.render(\n        <Provider {...stores}>\n            <StyleProvider>\n                <ErrorBoundary>\n                    <GlobalStyles />\n                    <App />\n                </ErrorBoundary>\n            </StyleProvider>\n        </Provider>\n    , document.querySelector(APP_ELEMENT_SELECTOR))\n});\n\nconst STARTUP_TIMEOUT = 10000;\n\n// If loading fails, or we hit a timeout, show an error (but if we timeout,\n// don't stop trying to load in the background anyway). If we do eventually\n// succeed later on, the above render() will still happen and hide the error.\nPromise.race([\n    appStartupPromise,\n    delay(STARTUP_TIMEOUT).then(async () => {\n        console.log('Previous server version was', await lastServerVersion);\n\n        throw Object.assign(\n            new Error('Failed to initialize application'),\n            { isTimeout: true }\n        );\n    })\n]).catch((e) => {\n    const failureEvent = Object.assign(\n        new Event('load:failed'),\n        { error: e }\n    );\n    document.dispatchEvent(failureEvent);\n    logError(e);\n\n    appStartupPromise.then(() => {\n        serverVersion.then(async (currentVersion) => {\n            console.log('Server version was', await lastServerVersion, 'now started late with', currentVersion);\n            logError('Successfully initialized application, but after timeout');\n        });\n    });\n});","import * as _ from 'lodash';\nimport { Headers, RawHeaders } from '../types';\n\n// Based RFC7230, 3.2.6:\nexport const HEADER_NAME_PATTERN = '^[!#$%&\\'*+\\\\-.^_`\\\\|~A-Za-z0-9]+$';\n    // The \\\\| is required here because in 'v' flag regexes (used in HTML patterns by default) the |\n    // character seems to be disallowed unescaped in classes like this.\nexport const HEADER_NAME_REGEX = new RegExp(HEADER_NAME_PATTERN);\n\n// Conversion between headers (map of key to string or string array, used in lots of older/simpler APIs)\n// and raw headers (array of [string, string] pairs, full representation of header reality).\n\nexport const headersToRawHeaders = (headers: Headers): RawHeaders =>\n    Object.entries(headers || {}).reduce(\n        (acc: RawHeaders, [key, value]) => {\n            if (Array.isArray(value)) {\n                acc = acc.concat(value.map(value => [ key, value ]))\n            } else {\n                acc.push([ key, value || '' ]);\n            }\n            return acc;\n        }, []\n    );\n\nexport const rawHeadersToHeaders = (headers: RawHeaders): Headers =>\n    headers.reduce((headersObj: { [k: string]: string | string[] }, [key, value]) => {\n        const headerName = key.toLowerCase();\n\n        const existingValue = headersObj[headerName];\n        if (existingValue === undefined) {\n            headersObj[headerName] = value;\n        } else if (typeof existingValue === 'string') {\n            headersObj[headerName] = [existingValue, value];\n        } else {\n            existingValue.push(value);\n        }\n        return headersObj;\n    }, {});\n\n/**\n * Get the header value for the given header key. Case insensitive. If there are multiple values,\n * this will return the last value. If there are no values this returns undefined.\n */\nexport const getHeaderValue = (headers: Headers | RawHeaders, headerKey: string): string | undefined => {\n    if (Array.isArray(headers)) {\n        headerKey = headerKey.toLowerCase();\n        const headerPair = _.findLast(headers, ([key]) => key.toLowerCase() === headerKey);\n        return headerPair?.[1];\n    } else {\n        const headerValue = headers[headerKey];\n\n        if (Array.isArray(headerValue)) {\n            return headerValue[headerValue.length - 1];\n        } else {\n            return headerValue;\n        }\n    }\n}\n\n/**\n * Get all header values for the given header key. Case insensitive.\n * If there are no values this returns an empty list.\n */\nexport const getHeaderValues = (headers: Headers | RawHeaders, headerKey: string): string[] => {\n    if (Array.isArray(headers)) {\n        headerKey = headerKey.toLowerCase();\n        return headers.filter(([key]) => key.toLowerCase() === headerKey).map(([_, value]) => value);\n    } else {\n        const headerValue = headers[headerKey];\n\n        if (Array.isArray(headerValue)) {\n            return headerValue;\n        } else if (headerValue !== undefined) {\n            return [headerValue];\n        } else {\n            return [];\n        }\n    }\n}\n\n/**\n * Set the value of a given header, overwriting it if present or otherwise adding it as a new header.\n *\n * For header objects, this overwrites all values. For raw headers, this overwrites the last value, so\n * if multiple values are present others may remain. In general you probably don't want to use this\n * for headers that could legally have multiple values present.\n */\nexport const setHeaderValue = (\n    headers: Headers | RawHeaders,\n    headerKey: string,\n    headerValue: string,\n    options: { prepend?: true } = {}\n) => {\n    const lowercaseHeaderKey = headerKey.toLowerCase();\n\n    if (Array.isArray(headers)) {\n        const headerPair = _.findLast(headers, ([key]) => key.toLowerCase() === lowercaseHeaderKey);\n        if (headerPair) {\n            headerPair[1] = headerValue;\n        } else {\n            if (options.prepend) headers.unshift([headerKey, headerValue]);\n            else headers.push([headerKey, headerValue]);\n        }\n    } else {\n        const existingKey = Object.keys(headers).find(k => k.toLowerCase() === lowercaseHeaderKey);\n        headers[existingKey || headerKey] = headerValue;\n    }\n}\n\n/**\n * Clear the value of a given header, or do nothing if not present.\n *\n * For header objects, this clears all values. For raw headers, this clears the last value, so if\n * multiple values are present others may remain. In general you probably don't want to use this\n * for headers that could legally have multiple values present.\n */\nexport const removeHeader = (headers: Headers | RawHeaders, headerKey: string) => {\n    const lowercaseHeaderKey = headerKey.toLowerCase();\n\n    if (Array.isArray(headers)) {\n        const headerIndex = _.findLastIndex(headers, ([key]) => key.toLowerCase() === lowercaseHeaderKey);\n        if (headerIndex !== -1) headers.splice(headerIndex, 1);\n    } else {\n        const existingKey = Object.keys(headers).find(k => k.toLowerCase() === lowercaseHeaderKey);\n        delete headers[existingKey || headerKey];\n    }\n}\n\n/**\n * Returns a clone of the header input, with the value of the given headers set, overwriting values if\n * present or otherwise adding it as a new header (but not mutating the input itself).\n *\n * For header objects, this overwrites all values. For raw headers, this overwrites the first value, so\n * if multiple values are present others may remain. In general you probably don't want to use this\n * for headers that could legally have multiple values present.\n */\nexport const withHeaderValue = <T extends Headers | RawHeaders>(headers: T, headerAdditions: Record<string, string>): T => {\n    headers = _.cloneDeep(headers);\n    Object.entries(headerAdditions).forEach(([key, value]) =>\n        setHeaderValue(headers, key, value)\n    );\n    return headers;\n}\n\n// This fairly meaningless override combo seems to be\n// required to make it ok to use this when T = X | undefined.\nexport function lastHeader<T>(val: T | T[]): T;\nexport function lastHeader<T>(val: T | T[] | undefined): T | undefined;\nexport function lastHeader<T>(val: T | T[] | undefined): T | undefined {\n    if (Array.isArray(val)) return val[val.length - 1];\n    else return val;\n}\n\nexport function asHeaderArray(val: string | string[] | undefined, sep = ','): string[] {\n    if (Array.isArray(val)) {\n        // Split individual values, as multiple headers can still have multiple values\n        return _.flatMap(val, header =>\n            header.split(sep).map(value => value.trim())\n        );\n    } else if (!val) {\n        return [];\n    } else {\n        return val.split(sep).map(value => value.trim());\n    }\n}\n\nexport type FlatHeaders = { [key: string]: string };\n\n/**\n * Flatten headers, i.e. combine any duplicates into comma-separated values. Required for some APIs\n * that don't accept duplicate headers.\n */\nexport function headersToFlatHeaders(headers: Headers): FlatHeaders {\n    return _.mapValues(\n        _.pickBy(headers, (key, value) => key && value),\n        (value) =>\n            _.isArray(value)\n                ? value.join(', ')\n                : value! // We know this is set because of filter above\n    );\n}","import { Method } from 'mockttp';\n\nexport type MethodName = keyof typeof Method;\nexport const MethodNames = Object.values(Method)\n    .filter(\n        value => typeof value === 'string'\n    ) as Array<MethodName>;\n","import * as _ from 'lodash';\nimport * as uuid from 'uuid/v4'\nimport { observable } from 'mobx';\n\nimport { HtkMockRule } from './rules';\n\nexport type HtkMockItem =\n    | HtkMockRule\n    | HtkMockRuleGroup\n    | HtkMockRuleRoot;\n\nexport type HtkMockRuleGroup = {\n    id: string;\n    title: string;\n    items: HtkMockItem[];\n    collapsed?: boolean;\n};\n\nexport interface HtkMockRuleRoot extends HtkMockRuleGroup {\n    id: 'root';\n    title: 'HTTP Toolkit Rules';\n    isRoot: true;\n    items: HtkMockItem[];\n}\n\nexport type ItemPath = number[];\n\nexport function isRuleGroup(item: HtkMockItem | undefined): item is HtkMockRuleGroup {\n    return _.isObject(item) && 'items' in (item || {});\n};\n\nexport function isRuleRoot(item: HtkMockItem): item is HtkMockRuleRoot {\n    return isRuleGroup(item) && 'isRoot' in item && item.isRoot === true;\n}\n\n// 0 means equal, positive means a < b, negative means b < a\nexport function comparePaths(pathA: ItemPath, pathB: ItemPath): number {\n    let index = 0;\n\n    while (pathA[index] !== undefined && pathB[index] !== undefined) {\n        const diff = pathB[index] - pathA[index];\n        if (diff !== 0) return diff;\n        index += 1;\n    }\n\n    if (pathA[index] !== undefined) {\n        return -1; // B shorter than A, so comes first\n    }\n\n    if (pathB[index] !== undefined) {\n        return 1; // A shorter than B, so comes first\n    }\n\n    // Same length, same values, equal\n    return 0;\n}\n\nexport function getItemParentByPath(rules: HtkMockRuleGroup, path: ItemPath) {\n    return getItemAtPath(rules, path.slice(0, -1)) as HtkMockRuleGroup;\n}\n\nexport function getItemAtPath(rules: HtkMockRuleGroup, path: ItemPath): HtkMockItem {\n    return path.reduce<HtkMockItem>((result, step, index) => {\n        if (!isRuleGroup(result)) {\n            throw new Error(`Invalid path ${path} at step #${index}, found ${result}`);\n        }\n        return result.items[step];\n    }, rules);\n};\n\nexport function updateItemAtPath(\n    rules: HtkMockRuleGroup,\n    path: ItemPath,\n    newItem: HtkMockItem\n) {\n    const parentPath = path.slice(0, -1);\n    const childIndex = _.last(path)!;\n\n    const parentItems = parentPath.length\n        ? getItemAtPath(rules, parentPath) as HtkMockRuleGroup\n        : rules;\n\n    parentItems.items[childIndex] = newItem;\n    return parentItems;\n};\n\nexport function deleteItemAtPath(\n    rules: HtkMockRuleGroup,\n    path: ItemPath\n) {\n    const parent = getItemParentByPath(rules, path);\n    const itemIndex = _.last(path)!;\n    parent.items.splice(itemIndex, 1);\n\n    // If the parent is empty, delete them too (recursively, but not the root)\n    if (parent.items.length === 0 && !isRuleRoot(parent)) {\n        deleteItemAtPath(rules, path.slice(0, -1));\n    }\n}\n\nexport function findItem(\n    rules: HtkMockRuleGroup,\n    match: ((value: HtkMockItem) => boolean) | Partial<HtkMockItem>\n): HtkMockItem | undefined {\n    if (_.isMatch(rules, match)) return rules;\n\n    return _.reduce(rules.items, (result: HtkMockItem | undefined, item: HtkMockItem) => {\n        if (result) return result;\n\n        if (isRuleGroup(item)) {\n            return findItem(item, match);\n        } else if (_.isMatch(item, match)) {\n            return item;\n        }\n    }, undefined);\n};\n\nexport function findItemPath(\n    rules: HtkMockRuleGroup,\n    match: ((value: HtkMockItem) => boolean) | Partial<HtkMockItem>,\n    currentPath: ItemPath = []\n): ItemPath | undefined {\n    if (_.isMatch(rules, match)) return currentPath;\n\n    return _.reduce(rules.items, (result: ItemPath | undefined, item: HtkMockItem, index: number) => {\n        if (result) return result;\n\n        if (isRuleGroup(item)) {\n            return findItemPath(item, match, currentPath.concat(index));\n        } else if (_.isMatch(item, match)) {\n            return currentPath.concat(index) as ItemPath;\n        }\n    }, undefined);\n};\n\nexport const flattenRules = (rules: HtkMockRuleGroup) => mapRules(rules, r => r);\n\nexport function mapRules<R>(\n    rules: HtkMockRuleGroup,\n    fn: (rule: HtkMockRule, path: ItemPath, index: number) => R,\n    currentPath: number[] = [],\n    currentIndex = 0\n): Array<R> {\n    return rules.items.reduce<R[]>((result, item, index: number) => {\n        const totalIndex = currentIndex + index;\n        if (isRuleGroup(item)) {\n            return result.concat(\n                mapRules(item, fn, currentPath.concat(index), totalIndex)\n            );\n        } else {\n            return result.concat(\n                [fn(item, currentPath.concat(index) as ItemPath, totalIndex)]\n            );\n        }\n    }, []);\n};\n\nexport function cloneItem<I extends HtkMockRuleGroup | HtkMockRule>(item: I): I {\n    if (isRuleGroup(item)) {\n        return cloneRuleGroup<I & HtkMockRuleGroup>(item);\n    } else {\n        return cloneRule(item as I & HtkMockRule);\n    }\n}\n\nexport function cloneRule<R extends HtkMockRule>(rule: R): R {\n    return observable({\n        ...rule, // All handler/matcher/checker state is immutable\n        matchers: [...rule.matchers], // Except the matcher array itself\n        id: uuid() // And we need a different rule id\n    });\n};\n\nexport function cloneRuleGroup<G extends HtkMockRuleGroup>(group: HtkMockRuleGroup): G {\n    return {\n        ...group,\n        items: group.items.map(i => cloneItem(i)),\n        collapsed: true,\n        id: uuid()\n    } as G;\n}\n\nexport const areItemsEqual = (a: HtkMockItem | undefined, b: HtkMockItem | undefined) => {\n    if (isRuleGroup(a)) {\n        if (isRuleGroup(b)) {\n            return areGroupsEqual(a, b);\n        } else {\n            return false;\n        }\n    } else {\n        if (isRuleGroup(b)) {\n            return false;\n        } else {\n            return areRulesEqual(a, b);\n        }\n    }\n};\n\nconst areGroupsEqual = (a: HtkMockRuleGroup, b: HtkMockRuleGroup) => {\n    return a.id === b.id &&\n        a.title === b.title &&\n        _.isEqualWith(a.items, b.items, areItemsEqual);\n};\n\n// Rules, or any components within them, can use this to override equality checks at\n// a certain point in the tree. Useful e.g. in transforms, where undefined values are\n// meaningful differences, so we need different logic.\nexport const CUSTOM_RULE_EQUALS = Symbol('custom-rule-is-equals');\n\n// A more flexible _.isEqual check. Considers source-equal functions to be\n// equal, and treats undefined properties as missing.\nconst areRulesEqual = (a: any, b: any): boolean | undefined => {\n    if (a && b && a[CUSTOM_RULE_EQUALS] && a[CUSTOM_RULE_EQUALS] === b[CUSTOM_RULE_EQUALS]) {\n        const isEqual = a[CUSTOM_RULE_EQUALS];\n        return isEqual(a, b);\n    }\n\n    // Assume that all function props (e.g. beforeRequest, callbacks)\n    // are equivalent if they're source-equivalent.\n    // Not a 100% safe guarantee, but should usually be true.\n    if (_.isFunction(a) && _.isFunction(b)) {\n        return a.toString() === b.toString();\n    }\n\n    // For objects with undefined props, pretend those props don't exist:\n    if (\n        _.isObject(a) && _.isObject(b) && (\n            Object.values(a).includes(undefined) ||\n            Object.values(b).includes(undefined)\n        )\n    ) {\n        return _.isEqualWith(\n            _.omitBy(a, (value) => value === undefined),\n            _.omitBy(b, (value) => value === undefined),\n            areRulesEqual\n        );\n    }\n\n    // Return undefined -> use standard rules\n}","import * as _ from 'lodash';\nimport {\n    RequestRuleData,\n    Method,\n    matchers as httpMatchers,\n    requestHandlerDefinitions as httpHandlers,\n    completionCheckers\n} from 'mockttp';\nimport * as serializr from 'serializr';\n\nimport { MockttpSerializedBuffer } from '../../../types';\nimport { byteLength, isSerializedBuffer } from '../../../util';\n\nimport { MethodName, MethodNames } from '../../http/methods';\nimport { serializeAsTag, serializeBuffer, serializeWithUndefineds } from '../../serialization';\nimport { RulesStore } from '../rules-store';\nimport { CUSTOM_RULE_EQUALS } from '../rules-structure';\n\n// Create per-method classes (that all serialize to the same MethodMatcher class + param)\n// for each supported HTTP method, as a methodName -> methodClass lookup object.\nexport const MethodMatchers = _.reduce<MethodName, {\n    [K in MethodName]: { new(): TypedMethodMatcher<K> }\n}>(\n    MethodNames,\n    (result, method) => {\n        result[method] = class SpecificMethodMatcher extends httpMatchers.MethodMatcher {\n\n            readonly uiType = method;\n\n            constructor() {\n                super(Method[method]);\n            }\n\n            explain() {\n                return `${Method[this.method]} requests`;\n            }\n        } as any; // Difficult to get TS to infer or accept TypedMethodMatcher<typeof method>\n        return result;\n    },\n    {} as any\n);\n\n// Tiny interface to let us make the METHOD -> methodMatcher{ uiType: METHOD } mapping explicit\ninterface TypedMethodMatcher<R extends MethodName> extends httpMatchers.MethodMatcher {\n    readonly uiType: R;\n}\n\n// Override various specific & actions, so we can inject our own specific\n// explanations for certain cases\n\nexport class WildcardMatcher extends httpMatchers.WildcardMatcher {\n    explain() {\n        return 'Any requests';\n    }\n}\n\nexport class DefaultWildcardMatcher extends httpMatchers.WildcardMatcher {\n\n    readonly uiType = 'default-wildcard';\n\n    explain() {\n        return 'Any other requests';\n    }\n}\n\nexport class AmIUsingMatcher extends httpMatchers.RegexPathMatcher {\n\n    readonly uiType = 'am-i-using';\n\n    constructor() {\n        // Optional slash is for backward compat: for server 0.1.18+ it's always present\n        super(/^https?:\\/\\/amiusing\\.httptoolkit\\.tech\\/?$/);\n    }\n\n    explain() {\n        return 'for amiusing.httptoolkit.tech';\n    }\n}\n\nexport class StaticResponseHandler extends httpHandlers.SimpleHandlerDefinition {\n    explain() {\n        return `respond with status ${this.status}${\n            byteLength(this.data) ? ' and static content' : ''\n        }`;\n    }\n}\n\n// Ensure that JSON-ified buffers deserialize as real buffers\nserializr.createModelSchema(StaticResponseHandler, {\n    data: serializr.custom(\n        (data: StaticResponseHandler['data']): string | MockttpSerializedBuffer | undefined => {\n            if (!data || typeof data === 'string' || isSerializedBuffer(data)) {\n                return data;\n            } else {\n                return { type: 'Buffer', data: [...data] };\n            }\n        },\n        (serializedData: string | MockttpSerializedBuffer | undefined) => {\n            if (!serializedData) {\n                return undefined;\n            } else if (typeof serializedData === 'string') {\n                return serializedData;\n            } else {\n                return Buffer.from(serializedData.data);\n            }\n        },\n    ),\n    '*': Object.assign(\n        serializr.custom(\n            (x) => x,\n            (x) => x\n        ),\n        { pattern: { test: (key: string) => key !== 'data' } }\n    )\n}, () => new StaticResponseHandler(200));\n\n\nexport class FromFileResponseHandler extends httpHandlers.FileHandlerDefinition {\n    explain() {\n        return `respond with status ${this.status} and content from ${this.filePath || 'a file'}`;\n    }\n}\n\nexport class PassThroughHandler extends httpHandlers.PassThroughHandlerDefinition {\n\n    constructor(rulesStore: RulesStore) {\n        super(rulesStore.activePassthroughOptions);\n    }\n\n}\n\nserializr.createModelSchema(PassThroughHandler, {\n    type: serializr.primitive()\n}, (context) => new PassThroughHandler(context.args.rulesStore));\n\nexport class ForwardToHostHandler extends httpHandlers.PassThroughHandlerDefinition {\n\n    readonly uiType = 'forward-to-host';\n\n    constructor(forwardToLocation: string, updateHostHeader: boolean, rulesStore: RulesStore) {\n        super({\n            ...rulesStore.activePassthroughOptions,\n            forwarding: {\n                targetHost: forwardToLocation,\n                updateHostHeader: updateHostHeader\n            }\n        });\n    }\n\n}\n\nserializr.createModelSchema(ForwardToHostHandler, {\n    uiType: serializeAsTag(() => 'forward-to-host'),\n    type: serializr.primitive(),\n    forwarding: serializr.map(serializr.primitive())\n}, (context) => {\n    const data = context.json;\n    return new ForwardToHostHandler(\n        data.forwarding.targetHost,\n        data.forwarding.updateHostHeader,\n        context.args.rulesStore\n    );\n});\n\nexport type RequestTransform = httpHandlers.RequestTransform;\nexport type ResponseTransform = httpHandlers.ResponseTransform;\n\nexport class TransformingHandler extends httpHandlers.PassThroughHandlerDefinition {\n\n    readonly uiType = 'req-res-transformer';\n\n    constructor(\n        rulesStore: RulesStore,\n        transformRequest: RequestTransform,\n        transformResponse: ResponseTransform\n    ) {\n        super({\n            ...rulesStore.activePassthroughOptions,\n            transformRequest,\n            transformResponse\n        });\n    }\n\n    explain() {\n        const activeRequestTransforms = _.pickBy(this.transformRequest || {}, (v) => v !== undefined);\n        const activeResponseTransforms = _.pickBy(this.transformResponse || {}, (v) => v !== undefined);\n\n        if (_.isEmpty(activeRequestTransforms) && _.isEmpty(activeResponseTransforms)) {\n            return super.explain();\n        } else if (!_.isEmpty(activeRequestTransforms) && !_.isEmpty(activeResponseTransforms)) {\n            return \"automatically transform the request and response\";\n        } else if (!_.isEmpty(activeRequestTransforms)) {\n            return \"automatically transform the request then pass it through to the target host\";\n        } else { // Must be response only\n            return \"automatically transform the response from the target host\";\n        }\n    }\n\n    // We override rule equality checks, to simplify them to treat undefined and missing\n    // properties as different, because that matters for various transform properties.\n    [CUSTOM_RULE_EQUALS](handlerA: TransformingHandler, handlerB: TransformingHandler): boolean {\n        return _.isEqual(handlerA.transformRequest, handlerB.transformRequest) &&\n            _.isEqual(handlerA.transformResponse, handlerB.transformResponse);\n    }\n\n}\n\nserializr.createModelSchema(TransformingHandler, {\n    uiType: serializeAsTag(() => 'req-res-transformer'),\n    transformRequest: serializr.object(\n        serializr.createSimpleSchema({\n            updateHeaders: serializeWithUndefineds,\n            updateJsonBody: serializeWithUndefineds,\n            replaceBody: serializeBuffer,\n            '*': Object.assign(serializr.raw(), { pattern: { test: () => true } })\n        })\n    ),\n    transformResponse: serializr.object(\n        serializr.createSimpleSchema({\n            updateHeaders: serializeWithUndefineds,\n            updateJsonBody: serializeWithUndefineds,\n            replaceBody: serializeBuffer,\n            '*': Object.assign(serializr.raw(), { pattern: { test: () => true } })\n        })\n    )\n}, (context) => {\n    const data = context.json;\n    return new TransformingHandler(\n        context.args.rulesStore,\n        data.transformRequest,\n        data.transformResponse\n    );\n});\n\nexport class RequestBreakpointHandler extends httpHandlers.PassThroughHandlerDefinition {\n\n    readonly uiType = 'request-breakpoint';\n\n    constructor(rulesStore: RulesStore) {\n        super({\n            ...rulesStore.activePassthroughOptions,\n            beforeRequest: rulesStore.triggerRequestBreakpoint\n        });\n    }\n\n    explain() {\n        return \"manually rewrite the request before it's forwarded\";\n    }\n}\n\nserializr.createModelSchema(RequestBreakpointHandler, {\n    uiType: serializeAsTag(() => 'request-breakpoint'),\n    type: serializr.primitive()\n}, (context) => new RequestBreakpointHandler(context.args.rulesStore));\n\nexport class ResponseBreakpointHandler extends httpHandlers.PassThroughHandlerDefinition {\n\n    readonly uiType = 'response-breakpoint';\n\n    constructor(rulesStore: RulesStore) {\n        super({\n            ...rulesStore.activePassthroughOptions,\n            beforeResponse: rulesStore.triggerResponseBreakpoint\n        });\n    }\n\n    explain() {\n        return \"manually rewrite the response before it's returned\";\n    }\n}\n\nserializr.createModelSchema(ResponseBreakpointHandler, {\n    uiType: serializeAsTag(() => 'response-breakpoint'),\n    type: serializr.primitive()\n}, (context) => new ResponseBreakpointHandler(context.args.rulesStore));\n\n\nexport class RequestAndResponseBreakpointHandler extends httpHandlers.PassThroughHandlerDefinition {\n\n    readonly uiType = 'request-and-response-breakpoint';\n\n    constructor(rulesStore: RulesStore) {\n        super({\n            ...rulesStore.activePassthroughOptions,\n            beforeRequest: rulesStore.triggerRequestBreakpoint,\n            beforeResponse: rulesStore.triggerResponseBreakpoint\n        });\n    }\n\n    explain() {\n        return \"manually rewrite the request and response\";\n    }\n}\n\nserializr.createModelSchema(RequestAndResponseBreakpointHandler, {\n    uiType: serializeAsTag(() => 'request-and-response-breakpoint'),\n    type: serializr.primitive()\n}, (context) => new RequestAndResponseBreakpointHandler(context.args.rulesStore));\n\nexport type TimeoutHandler = httpHandlers.TimeoutHandlerDefinition;\nexport const TimeoutHandler = httpHandlers.TimeoutHandlerDefinition;\nexport type CloseConnectionHandler = httpHandlers.CloseConnectionHandlerDefinition;\nexport const CloseConnectionHandler = httpHandlers.CloseConnectionHandlerDefinition;\nexport type ResetConnectionHandler = httpHandlers.ResetConnectionHandlerDefinition;\nexport const ResetConnectionHandler = httpHandlers.ResetConnectionHandlerDefinition;\n\nexport const HttpMatcherLookup = {\n    ..._.omit(httpMatchers.MatcherLookup, ['method']), // We skip method to use per-method matchers instead\n    ...MethodMatchers,\n\n    // Replace the built-in wildcard matcher with our own:\n    'wildcard': WildcardMatcher,\n    // Add special types for our built-in matcher explanation overrides:\n    'default-wildcard': DefaultWildcardMatcher,\n    'am-i-using': AmIUsingMatcher\n};\n\nexport const HttpInitialMatcherClasses = [\n    WildcardMatcher,\n    ...Object.values(MethodMatchers)\n];\n\nexport const HttpHandlerLookup = {\n    ...httpHandlers.HandlerDefinitionLookup,\n    'passthrough': PassThroughHandler,\n    'simple': StaticResponseHandler,\n    'file': FromFileResponseHandler,\n    'forward-to-host': ForwardToHostHandler,\n    'req-res-transformer': TransformingHandler,\n    'request-breakpoint': RequestBreakpointHandler,\n    'response-breakpoint': ResponseBreakpointHandler,\n    'request-and-response-breakpoint': RequestAndResponseBreakpointHandler\n};\n\ntype HttpMatcherClass = typeof HttpMatcherLookup[keyof typeof HttpMatcherLookup];\nexport type HttpMatcher = InstanceType<HttpMatcherClass>;\nexport type HttpInitialMatcher = InstanceType<typeof HttpInitialMatcherClasses[number]>;\n\ntype HttpHandlerClass = typeof HttpHandlerLookup[keyof typeof HttpHandlerLookup];\ntype HttpHandler = InstanceType<HttpHandlerClass>;\n\nexport interface HttpMockRule extends Omit<RequestRuleData, 'matchers'> {\n    id: string;\n    type: 'http';\n    activated: boolean;\n    matchers: Array<HttpMatcher> & { 0?: HttpInitialMatcher };\n    handler: HttpHandler;\n    completionChecker: completionCheckers.Always; // HTK rules all *always* match\n};","import * as _ from 'lodash';\nimport { computed, observable, action, runInAction, reaction } from 'mobx';\n\nimport { RawHeaders } from '../../types';\nimport { logError } from \"../../errors\";\nimport { asHeaderArray, getHeaderValues } from \"../../util/headers\";\nimport { observablePromise, ObservablePromise } from '../../util/observable';\n\nimport { encodeBody } from \"../../services/ui-worker-api\";\n\nexport class EditableBody {\n\n    @observable.ref\n    private _decodedBody: Buffer;\n\n    @observable.ref\n    private _encodedBody: Buffer | undefined;\n\n    @observable.ref\n    private _encodingPromise!: ObservablePromise<Buffer>;\n\n    constructor(\n        initialDecodedBody: Buffer,\n        initialEncodedBody: Buffer | undefined,\n        private getHeaders: () => RawHeaders,\n        private options: {\n            throttleDuration?: number\n        } = { }\n    ) {\n        this._decodedBody = initialDecodedBody;\n\n        if (initialEncodedBody) {\n            this._encodedBody = initialEncodedBody;\n            this._encodingPromise = observablePromise(Promise.resolve(initialEncodedBody));\n        } else {\n            this._encodedBody = undefined;\n            this.updateEncodedBody();\n        }\n\n        reaction(() => this._decodedBody, () => this.updateEncodedBody());\n        reaction(() => this.contentEncodings, () => this.updateEncodedBody());\n    }\n\n    @action\n    updateDecodedBody(newBody: Buffer) {\n        this._decodedBody = newBody;\n    }\n\n    @computed.struct\n    private get contentEncodings() {\n        return asHeaderArray(getHeaderValues(this.getHeaders(), 'content-encoding'));\n    }\n\n    private updateEncodedBody = _.throttle(action(() => {\n        const encodeBodyPromise = observablePromise((async () => {\n            const encodings = this.contentEncodings;\n\n            const encodedBody = await encodeBody(this._decodedBody, encodings)\n                .catch((e) => {\n                    logError(e, { encodings });\n                    return this._decodedBody; // If encoding fails, we send raw data instead\n                });\n\n            runInAction(() => {\n                // Update the encoded body, only if we're the latest encoding request\n                if (this._encodingPromise === encodeBodyPromise) {\n                    this._encodedBody = encodedBody;\n                }\n            });\n\n            return encodedBody;\n        })());\n\n        this._encodingPromise = encodeBodyPromise;\n    }), this.options.throttleDuration ?? 500, { leading: true, trailing: true });\n\n    @computed\n    get latestEncodedLength() {\n        return this._encodedBody?.byteLength;\n    }\n\n    get encoded() {\n        return this._encodingPromise;\n    }\n\n    get decoded() {\n        return this._decodedBody;\n    }\n\n}","import * as styledComponents from 'styled-components';\nimport * as polished from 'polished';\nimport type { ThemeProps } from 'styled-components';\nimport type * as monacoTypes from 'monaco-editor';\n\nimport reset from 'styled-reset';\n\nconst fontSizes = {\n    textInputFontSize: '13px',\n    textSize: '15px',\n    subHeadingSize: '18px',\n    headingSize: '20px',\n    largeHeadingSize: '24px',\n    loudHeadingSize: '38px',\n    screamingHeadingSize: '80px'\n};\nimport \"react-contexify/dist/ReactContexify.css\";\n\nexport const NARROW_LAYOUT_BREAKPOINT = 1100;\n\nexport const warningColor = '#f1971f';\nexport const popColor = '#e1421f';\n\nexport const lightTheme = {\n    fontFamily: 'Lato, Arial, sans-serif',\n    monoFontFamily: \"'Fira Mono', monospace\",\n\n    mainBackground: '#fafafa',\n    mainLowlightBackground: '#eaeaea',\n    mainColor: '#222',\n\n    lowlightTextOpacity: 0.65,\n    pillContrast: 0.8,\n    boxShadowAlpha: 0.2,\n\n    primaryInputBackground: '#1076b9',\n    primaryInputColor: '#fafafa',\n\n    secondaryInputBorder: '#7ab2e2',\n    secondaryInputColor: '#1665af',\n\n    inputBackground: '#fafafa',\n    inputHoverBackground: '#eee',\n    inputBorder: '#a0afaf',\n    inputColor: '#222222',\n\n    highlightBackground: '#ffffff',\n    highlightColor: '#222',\n\n    popColor,\n\n    warningColor,\n    warningBackground: '#f1971f40',\n\n    containerBackground: '#d8e2e6',\n    containerWatermark: '#a0afaf',\n    containerBorder: '#888',\n\n    // These are the same as the standard defaults\n    linkColor: '#0000EE',\n    visitedLinkColor: '#551A8B',\n\n    monacoTheme: 'vs-custom',\n\n    modalGradient: 'radial-gradient(#40404b, #111118)',\n\n    ...fontSizes,\n\n    globalCss: ''\n};\n\nexport const darkTheme = {\n    fontFamily: 'Lato, Arial, sans-serif',\n    monoFontFamily: \"'Fira Mono', monospace\",\n\n    mainBackground: '#222222',\n    mainLowlightBackground: '#303030',\n    mainColor: '#efefef',\n\n    lowlightTextOpacity: 0.6,\n    pillContrast: 0.8,\n    boxShadowAlpha: 0.4,\n\n    primaryInputBackground: '#0868c1',\n    primaryInputColor: '#fafafa',\n\n    secondaryInputBorder: '#1b5b96',\n    secondaryInputColor: '#6babe6',\n\n    inputBackground: '#1a1a1a',\n    inputHoverBackground: '#333',\n    inputBorder: '#666',\n    inputColor: '#fafafa',\n\n    highlightBackground: '#111111',\n    highlightColor: '#efefef',\n\n    popColor,\n\n    warningColor,\n    warningBackground: '#f1971f40',\n\n    containerBackground: '#3c3c41',\n    containerWatermark: '#757580',\n    containerBorder: '#000000',\n\n    linkColor: '#8699ff',\n    visitedLinkColor: '#ac7ada',\n\n    monacoTheme: 'vs-dark-custom',\n\n    modalGradient: 'radial-gradient(#ffffff,#9c9c9c)',\n\n    ...fontSizes,\n\n    /* In dark theme, we need to override the scrollbars or they stick out like a sore thumb */\n    globalCss: styledComponents.css`\n        @supports (color-scheme: dark) {\n            :root {\n                color-scheme: dark;\n            }\n        }\n\n        @supports not (color-scheme: dark) {\n            ::-webkit-scrollbar {\n                background-color: ${p => polished.darken(0.2, p.theme.containerBackground)};\n            }\n\n            ::-webkit-scrollbar-thumb {\n                background-color: ${p => polished.lighten(0.2, p.theme.containerBackground)};\n            }\n\n            /* Standard, but poorly supported: */\n            scrollbar-color: dark;\n        }\n    `\n};\n\nexport const highContrastTheme = {\n    fontFamily: 'Lato, Arial, sans-serif',\n    monoFontFamily: \"'Fira Mono', monospace\",\n\n    mainBackground: '#000000',\n    mainLowlightBackground: '#262626',\n    mainColor: '#ffffff',\n\n    lowlightTextOpacity: 0.8,\n    pillContrast: 0.95,\n    boxShadowAlpha: 0.1,\n\n    primaryInputBackground: '#0868c1',\n    primaryInputColor: '#ffffff',\n\n    secondaryInputBorder: '#ffffff',\n    secondaryInputColor: '#ffffff',\n\n    inputBackground: '#ffffff',\n    inputHoverBackground: '#ddd',\n    inputBorder: '#aaa',\n    inputColor: '#000000',\n\n    highlightBackground: '#ffffff',\n    highlightColor: '#000',\n\n    popColor,\n\n    warningColor,\n    warningBackground: '#f1971f40',\n\n    containerBackground: '#404045',\n    containerWatermark: '#a0a0b0',\n    containerBorder: '#000000',\n\n    linkColor: '#8699ff',\n    visitedLinkColor: '#ac7ada',\n\n    monacoTheme: 'hc-black-custom',\n\n    modalGradient: '#c0c0c0',\n\n    ...fontSizes,\n\n    globalCss: ``\n};\n\nexport const Themes = {\n    'light': lightTheme,\n    'dark': darkTheme,\n    'high-contrast': highContrastTheme\n};\n\nexport type ThemeName = keyof typeof Themes;\nexport type Theme = typeof Themes[ThemeName];\n\nconst monacoColorOverrides = {\n    'editorWarning.foreground': '#ff0000',\n};\n\nconst monacoThemes = ['vs', 'vs-dark', 'hc-black'] as const;\n\nexport function defineMonacoThemes(monaco: typeof monacoTypes) {\n    monacoThemes.forEach((themeName) => {\n        monaco.editor.defineTheme(`${themeName}-custom`, {\n            base: themeName,\n            inherit: true,\n            rules: [],\n            colors: monacoColorOverrides\n        });\n    });\n}\n\nconst {\n    default: styled,\n    css,\n    createGlobalStyle,\n    keyframes,\n    ThemeProvider,\n    StyleSheetManager\n} = styledComponents as unknown as styledComponents.ThemedStyledComponentsModule<Theme>;\n\nexport {\n    styled,\n    css,\n    createGlobalStyle,\n    keyframes,\n    ThemeProvider,\n    type ThemeProps,\n    StyleSheetManager\n};\n\nexport const GlobalStyles = createGlobalStyle`\n    ${reset};\n\n    body {\n        font-family: ${p => p.theme.fontFamily};\n        color: ${p => p.theme.mainColor};\n        background-color: ${p => p.theme.containerBackground};\n    }\n\n    input {\n        font-family: ${p => p.theme.fontFamily};\n    }\n\n    em {\n        font-style: italic;\n    }\n\n    strong {\n        font-weight: bold;\n    }\n\n    :active {\n        outline: none;\n    }\n\n    .slow-spin {\n        animation: fa-spin 5s infinite linear;\n    }\n\n    /* Override Auth0's style choices to match the rest of the UI */\n    .auth0-lock {\n        font-family: ${p => p.theme.fontFamily} !important;\n\n        .auth0-lock-overlay {\n            display: none; /* We have our own overlay we'll use instead */\n        }\n\n        .auth0-lock-widget {\n            box-shadow: 0 2px 10px 0 rgba(0,0,0,${p => p.theme.boxShadowAlpha}) !important;\n            overflow: visible !important;\n        }\n\n        .auth0-lock-form {\n            .auth0-lock-name {\n                font-size: ${fontSizes.headingSize} !important;\n            }\n\n            p, .auth0-lock-social-button-text {\n                font-size: ${fontSizes.textSize} !important;\n            }\n        }\n    }\n\n    /* Override some Monaco CSS internals */\n    .monaco-editor {\n        /* Our editors don't have real filenames, so hide that from error popups: */\n        .zone-widget .filename {\n            display: none;\n        }\n    }\n\n    ${p => p.theme.globalCss}\n`;","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { observer } from 'mobx-react';\n\nimport { styled, Theme, ThemeProps, css } from '../../styles';\nimport { Icon } from '../../icons';\n\ninterface CollapseIconProps extends ThemeProps<Theme> {\n    className?: string;\n    onClick: () => void;\n    collapsed: boolean;\n    headerAlignment: 'left' | 'right';\n}\n\nconst CollapseIcon = styled((props: CollapseIconProps) =>\n    <Icon\n        className={props.className}\n        icon={['fas', props.collapsed ? 'chevron-down' : 'chevron-up']}\n        onClick={props.onClick}\n    />\n)`\n    cursor: pointer;\n    user-select: none;\n\n    padding: 4px 10px;\n\n    ${p => p.headerAlignment === 'right'\n        ? 'margin: 0 -10px 0 -3px;'\n        : 'margin: 0 -3px 0 -10px;'\n    }\n\n    &:hover {\n        color: ${p => p.theme.popColor};\n    }\n`;\n\ninterface CardProps extends React.HTMLAttributes<HTMLElement> {\n    className?: string;\n    disabled?: boolean;\n\n    // The header alignment - defaults to right if not set\n    headerAlignment?: 'left' | 'right';\n}\n\nconst Card = styled.section.attrs((p: CardProps) => ({\n    onClick: !p.disabled ? p.onClick : undefined,\n    onKeyDown: !p.disabled ? p.onKeyDown : undefined,\n    tabIndex: !p.disabled ? p.tabIndex : undefined,\n    headerAlignment: p.headerAlignment ?? 'right'\n}))`\n    box-sizing: border-box;\n\n    ${(p: CardProps) => p.disabled && `\n        opacity: 0.5;\n    `}\n\n    ${(p: CardProps) => !p.disabled && p.onClick && css`\n        cursor: pointer;\n\n        &:hover {\n            box-shadow: 0 2px 20px 0 rgba(0,0,0,${p => p.theme.boxShadowAlpha * 2});\n        }\n\n        &:active {\n            box-shadow: unset;\n        }\n    `}\n\n    background-color: ${p => p.theme.mainBackground};\n    border-radius: 4px;\n    box-shadow: 0 2px 10px 0 rgba(0,0,0,${p => p.theme.boxShadowAlpha});\n\n    position: relative;\n\n    > header h1, > h1 {\n        font-size: ${p => p.theme.headingSize};\n        font-weight: bold;\n    }\n\n    > header {\n        display: flex;\n        align-items: center;\n        justify-content: flex-end;\n\n        ${p => p.headerAlignment === 'left' && `\n            flex-direction: row-reverse;\n        `}\n\n        gap: 8px;\n    }\n`;\n\n// Card-like buttons, e.g. mock rule rows & intercept buttons\nexport const LittleCard = styled(Card)`\n    padding: 15px;\n\n    > header:not(:last-child), > h1:not(:last-child) {\n        margin-bottom: 15px;\n    }\n`;\n\n// Normal card size\nexport const MediumCard = styled(Card)`\n    padding: 20px;\n    margin-bottom: 20px;\n\n    > header, > h1 {\n        text-transform: uppercase;\n        text-align: ${p => p.headerAlignment};\n        color: ${p => p.theme.containerWatermark};\n\n        &:not(:last-child) {\n            margin-bottom: 20px;\n        }\n    }\n`;\n\n// Oversized cards for extra info - used for Connected Sources UI\nexport const BigCard = styled(MediumCard)`\n    padding: 30px;\n\n    > header:not(:last-child), > h1:not(:last-child) {\n        margin-bottom: 30px;\n    }\n`;\n\n// Starting is a very brief temporary state, used to show a card as expanded but\n// apply a brief animation, when expansion is first triggered\nexport type ExpandState = boolean | 'starting';\n\nexport interface CollapsibleCardProps {\n    collapsed: boolean;\n    expanded?: ExpandState;\n\n    // The highlighted content direction - shows a border on the\n    // left or right of the whole card to indicate up/downstream\n    direction?: 'left' | 'right';\n\n    // The header alignment - defaults to right if not set\n    headerAlignment?: 'left' | 'right';\n\n    className?: string;\n\n    onCollapseToggled?: () => void;\n}\n\n// A convenient type for always-expandable cards, where relevant properties are strictly required:\nexport interface ExpandableCardProps extends CollapsibleCardProps {\n    expanded: ExpandState;\n    onExpandToggled: () => void;\n}\n\n@observer\nexport class CollapsibleCard extends React.Component<\n    CollapsibleCardProps & React.HTMLAttributes<HTMLDivElement>\n> {\n\n    private cardRef = React.createRef<HTMLElement>();\n\n    render() {\n        return <CollapsibleCardContainer\n            className={this.props.className}\n            collapsed={this.props.collapsed}\n            expanded={this.props.expanded ?? false}\n            direction={this.props.direction}\n            headerAlignment={this.props.headerAlignment ?? 'right'}\n\n            tabIndex={0}\n            ref={this.cardRef}\n            onKeyDown={this.onKeyDown}\n        >{\n            this.renderChildren()\n        }</CollapsibleCardContainer>;\n    }\n\n    renderChildren() {\n        const { children, collapsed, headerAlignment } = this.props;\n\n        const showCollapseIcon = !!this.props.onCollapseToggled;\n\n        return React.Children.map(children as React.ReactElement<any>[], (child, i) => {\n            if (i !== 0) {\n                if (collapsed) return null; // When collapsed, we drop all but the first child\n                else return child;\n            }\n\n            if (!showCollapseIcon) return child;\n\n            // Otherwise: it's the first child and we want to inject a collapse icon.\n\n            if (child.type !== 'header') {\n                throw new Error(`First child of collapsible card must be a header but was ${\n                    typeof child.type === 'string'\n                    ? child.type\n                    : child.type.name\n                }`);\n            }\n\n            // If we have a collapse handler, inject a collapse button as the\n            // last child of our first child:\n            return  React.cloneElement(child, { },\n                React.Children.toArray(child.props.children).concat(\n                    <CollapseIcon\n                        key='collapse-icon'\n                        collapsed={collapsed}\n                        onClick={this.toggleCollapse}\n                        headerAlignment={headerAlignment ?? 'right'}\n                    />\n                )\n            );\n\n        });\n    }\n\n    toggleCollapse = () => {\n        // Should never happen, but guard against it just in case:\n        if (!this.props.onCollapseToggled) return;\n\n        // Scroll the element into view, after giving it a moment to rerender\n        requestAnimationFrame(() => {\n            if (!this.cardRef.current) return;\n\n            this.cardRef.current.scrollIntoView({\n                block: 'nearest',\n                behavior: 'smooth'\n            })\n        });\n\n        this.props.onCollapseToggled();\n    }\n\n    onKeyDown = (event: React.KeyboardEvent) => {\n        if (event.target !== this.cardRef.current) {\n            return;\n        }\n\n        if (event.key === 'Enter') {\n            this.toggleCollapse();\n        }\n    }\n\n}\n\n// Bit of redundancy here, but just because the TS styled plugin\n// gets super confused if you use variables in property names.\nconst cardDirectionCss = (direction?: string) =>\n    direction === 'right' ? css`\n        padding-right: 15px;\n        border-right: solid 5px ${p => p.theme.containerBorder};\n    ` :\n    direction === 'left' ? css`\n        padding-left: 15px;\n        border-left: solid 5px ${p => p.theme.containerBorder};\n    ` : '';\n\nconst CollapsibleCardContainer = styled(MediumCard)<{\n    collapsed: boolean;\n    expanded: ExpandState;\n    direction?: 'left' | 'right';\n}>`\n    display: flex;\n    flex-direction: column;\n\n    transition: margin-bottom 0.1s;\n\n    ${p => p.collapsed && css`\n        :not(:last-child) {\n            margin-bottom: -16px;\n        }\n    `}\n\n    ${p => p.expanded\n        ?  css`\n            /* Override the Send container setting this to 'none', which hides non-expanded parts: */\n            display: flex !important;\n\n            height: 100%;\n            width: 100%;\n            border-radius: 0;\n            margin: 0;\n\n            flex-shrink: 1;\n            min-height: 0;\n\n            ${p.expanded === 'starting'\n                ? `\n                    padding-top: 40px;\n                    padding-bottom: 40px;\n                `\n                : 'transition: padding 0.1s;'\n            }\n        `\n        // Show card direction markers only when not expanded\n        : cardDirectionCss(p.direction)\n    }\n\n    &:focus {\n        ${CollapseIcon} {\n            color: ${p => p.theme.popColor};\n        }\n    }\n\n    &:focus-within {\n        header h1 {\n            color: ${p => p.theme.popColor};\n        }\n\n        outline: none;\n        border-color: ${p => p.theme.popColor};\n    }\n`;\n\nexport const CollapsibleCardHeading = styled((p: {\n    className?: string,\n    onCollapseToggled?: () => void,\n    children: React.ReactNode\n}) => <h1 className={p.className} onClick={p.onCollapseToggled}>\n    { p.children }\n</h1>)`\n    cursor: pointer;\n    user-select: none;\n`;","import * as _ from 'lodash';\nimport { MockttpSerializedBuffer } from '../types';\n\n// Before imports to avoid circular import with server-api\nexport const RUNNING_IN_WORKER = typeof window === 'undefined';\n\nexport type Empty = _.Dictionary<undefined>;\nexport function empty(): Empty {\n    return {};\n}\n\ntype Case<R> = [() => boolean, R | undefined];\n\nexport function firstMatch<R>(...tests: Array<Case<R> | R | undefined>): R | undefined {\n    for (let test of tests) {\n        if (_.isArray(test) && _.isFunction(test[0])) {\n            const [matcher, result] = test;\n            if (matcher() && result) return result;\n        } else {\n            if (test) return <R>test;\n        }\n    }\n}\n\nexport function longestPrefix(baseString: string, ...strings: string[]) {\n    let prefix = \"\";\n    const shortestLength = Math.min(\n        baseString.length,\n        ...strings.map(s => s.length)\n    );\n\n    for (let i = 0; i < shortestLength; i++) {\n        const char = baseString[i];\n        if (!strings.every(s => s[i] === char)) break;\n        prefix += char;\n    }\n\n    return prefix;\n}\n\n// In some places, we need a Buffer in theory, but we know for sure that it'll never\n// be read, we just need to know its size (e.g. calculating compression stats).\n// For those cases, it can be useful to *carefully* provide this fake buffer instead.\n// Could actually allocate an empty buffer, but that's much more expensive if the\n// buffer is large, and probably a waste.\nexport function fakeBuffer(byteLength: number): FakeBuffer {\n    return { byteLength: byteLength };\n}\nexport type FakeBuffer = { byteLength: number };\n\nconst encoder = new TextEncoder();\n\nconst strictDecoder = new TextDecoder('utf8', { fatal: true });\nconst laxDecoder = new TextDecoder('utf8', { fatal: false });\nconst binaryLaxDecoder = new TextDecoder('latin1', { fatal: false });\n\n// Not a perfect or full check, but a quick test to see if the data in a buffer\n// is valid UTF8 (so we should treat it as text) or not (so we should treat it as\n// raw binary data). For viewing content as text we don't care (we just always show\n// as UTF8) but for _editing_ binary data we need a lossless encoding, not utf8.\n// (Monaco isn't perfectly lossless editing binary anyway, but we can try).\nexport function isProbablyUtf8(buffer: Buffer) {\n    try {\n        // Just check the first 1kb, in case it's a huge file\n        const dataToCheck = buffer.slice(0, 1024);\n        strictDecoder.decode(dataToCheck);\n        return true; // Decoded OK, probably safe\n    } catch (e) {\n        return false; // Decoding failed, definitely not valid UTF8\n    }\n}\n\nexport function stringToBuffer(input: string, encoding: 'utf8' | 'binary' = 'utf8') {\n    if (encoding === 'utf8') {\n        return Buffer.from(encoder.encode(input)); // ~4x faster than Buffer.from(input, 'utf8')\n    } else if (encoding === 'binary') {\n        return Buffer.from(input, encoding); // Slower, but we have no option as TextEncoder is UTF8 only\n    } else {\n        throw new Error(`Cannot decode string from unrecogized encoding: ${encoding}`);\n    }\n}\n\nexport function bufferToString(input: Buffer, encoding: 'utf8' | 'binary' = 'utf8') {\n    if (encoding === 'utf8') {\n        return laxDecoder.decode(input); // ~5x faster than buffer.toString('utf8')\n    } else if (encoding === 'binary') {\n        return binaryLaxDecoder.decode(input);\n    } else {\n        throw new Error(`Cannot convert buffer to unrecogized encoding: ${encoding}`);\n    }\n}\n\nexport function isSerializedBuffer(obj: any): obj is MockttpSerializedBuffer {\n    return obj && obj.type === 'Buffer' && !!obj.data;\n}\n\nexport function asBuffer(data: string | Buffer | Uint8Array | MockttpSerializedBuffer | undefined): Buffer {\n    if (!data) {\n        return Buffer.from([]);\n    } else if (Buffer.isBuffer(data)) {\n        return data;\n    } else if (typeof data === 'string') {\n        return stringToBuffer(data);\n    } else if (isSerializedBuffer(data)) {\n        return Buffer.from(data.data);\n    } else {\n        // Extract internal data from uint8array (arrayview):\n        return Buffer.from(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\n\n// Get the length of the given data in bytes, not characters.\n// If that's a buffer, the length is used raw, but if it's a string\n// it returns the length when encoded as UTF8.\nexport function byteLength(input: string | Buffer | MockttpSerializedBuffer | Uint8Array | undefined) {\n    if (!input) {\n        return 0;\n    } else if (typeof input === 'string') {\n        return new Blob([input]).size;\n    } else if (isSerializedBuffer(input)) {\n        return input.data.length;\n    } else {\n        return input.length;\n    }\n}\n\nexport function tryParseJson(input: string): object | undefined {\n    try {\n        return JSON.parse(input);\n    } catch (e) {\n        return undefined;\n    }\n}\n\nexport function recursiveMapValues(\n    input: unknown,\n    fn: (value: unknown, key?: string) => unknown,\n    key: string | undefined = undefined\n): unknown {\n    if (_.isArray(input)) {\n        return input.map((innerObj) => recursiveMapValues(innerObj, fn));\n    } else if (_.isPlainObject(input)) {\n        return _.mapValues(input as {}, (val, key) => recursiveMapValues(val, fn, key));\n    } else {\n        return fn(input, key);\n    }\n}","import * as React from 'react';\nimport { useHotkeys as rawUseHotkeys } from \"react-hotkeys-hook\";\nimport { action, observable } from 'mobx';\n\nimport { desktopVersion } from '../services/service-versions';\nimport { getDeferred, delay } from './promise';\nimport { logError } from '../errors';\n\nexport function isReactElement(node: any): node is React.ReactElement {\n    return node && !!node.$$typeof;\n}\n\nexport const windowSize = observable({\n    height: window.innerHeight,\n    width: window.innerWidth\n});\nwindow.addEventListener('resize', action(() => {\n    windowSize.height = window.innerHeight;\n    windowSize.width = window.innerWidth;\n}));\n\nexport const Ctrl = navigator.platform.startsWith('Mac')\n    ? '⌘'\n    : 'Ctrl';\n\nexport function isCmdCtrlPressed(event: React.KeyboardEvent<unknown>) {\n    return navigator.platform.startsWith('Mac')\n        ? event.metaKey\n        : event.ctrlKey;\n}\n\n// Is the element an editable field, for which we shouldn't add keyboard shortcuts?\n// We don't worry about readonly, because that might still be surprising.\nexport const isEditable = (target: EventTarget | null) => {\n    if (!target) return false;\n    const element = target as HTMLElement;\n    const tagName = element.tagName;\n    return element.isContentEditable ||\n        tagName === 'TEXTAREA' ||\n        tagName === 'INPUT' ||\n        tagName === 'SELECT';\n}\n\nexport const useHotkeys = (keys: string, callback: (event: KeyboardEvent) => void, deps: any[]) =>\n    rawUseHotkeys(keys, callback, { filter: () => true }, deps);\n\nexport function saveFile(\n    filename: string,\n    mimeType: string,\n    content: string | Buffer\n): void {\n    const element = document.createElement('a');\n\n    const data = new Blob([content], { type: mimeType });\n\n    const objectUrl = window.URL.createObjectURL(data);\n    element.setAttribute('href', objectUrl);\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n\n    // Stop persisting the data. In theory we could do this immediately, as the spec says\n    // existing requests will be fine, but let's wait a few seconds to make sure the\n    // request has definitely fired properly:\n    setTimeout(() => window.URL.revokeObjectURL(objectUrl), 10000);\n}\n\ntype FileReaderType = 'text' | 'arraybuffer' | 'path';\n\n// Ask the user for a file of one of the given types, and get the raw arraybuffer data\nexport function uploadFile(type: 'arraybuffer', acceptedMimeTypes?: string[]): Promise<ArrayBuffer | null>\n// Ask the user for a file of one of the given types, and get the utf8 text data\nexport function uploadFile(type: 'text', acceptedMimeTypes?: string[]): Promise<string | null>;\n// Ask the user for a file of one of the given types, and get the file path itself (electron only)\nexport function uploadFile(type: 'path', acceptedMimeTypes?: string[]): Promise<string | null>;\n// Note that in general, in most cases this will not resolve when the picker is cancelled (instead,\n// it'll only resolve as null after a 10 minute time out) so handle accordingly!\nexport function uploadFile(\n    type: FileReaderType = 'arraybuffer',\n    acceptedMimeTypes: string[] = []\n): Promise<ArrayBuffer | string | null> {\n    if (type === 'path' && !desktopVersion.value) {\n        try {\n            const promptResult = window.prompt(\n                \"Path selection can only be used from Electron. Please enter a path manually:\"\n            )\n            return Promise.resolve(promptResult);\n        } catch (e) {\n            if ((e as Error)?.message?.includes(\"prompt() is and will not be supported\")) {\n                // Somehow we've tried to trigger prompt() in Electron - presumably we haven't\n                // detected the desktop app info yet for some reason. Never mind though, in\n                // this case its safe to swallow this, continue, and do Electron things anyway.\n                console.warn(\"Unexpected Electron prompt() error\");\n            } else {\n                return Promise.reject(e);\n            }\n        }\n    }\n\n    const fileInput = document.createElement('input');\n    fileInput.setAttribute('type', 'file');\n    if (acceptedMimeTypes.length > 0) {\n        fileInput.setAttribute('accept', acceptedMimeTypes.join(','));\n    }\n\n    const result = getDeferred<ArrayBuffer | string | null>();\n\n    fileInput.addEventListener('change', () => {\n        if (!fileInput.files || !fileInput.files.length) {\n            // This remains as a backup for cases where this could happen (unclear) but\n            // in modern browsers it seems we don't get a change event at all for cancel,\n            // and there are no reliable workarounds (monitoring focus doesn't help -\n            // pickers are seemingly no longer modal). Assume cancel never resolves.\n            return result.resolve(null);\n        }\n\n        const file = fileInput.files[0];\n\n        if (type === 'path') {\n            // file.path is an Electron-only extra property:\n            // https://github.com/electron/electron/blob/master/docs/api/file-object.md\n            result.resolve((file as unknown as { path: string }).path);\n        } else {\n            const fileReader = new FileReader();\n\n            fileReader.addEventListener('load', () => {\n                result.resolve(fileReader.result);\n            });\n\n            fileReader.addEventListener('error', (error: any) => {\n                result.reject(error);\n            });\n\n            if (type === 'text') {\n                fileReader.readAsText(file);\n            } else {\n                fileReader.readAsArrayBuffer(file);\n            }\n        }\n    });\n\n    fileInput.click();\n\n    // Hack to avoid unexpected GC of file inputs, so far as possible.\n    // See similar issue at https://stackoverflow.com/questions/52103269.\n    // Can't use answer there, as we can't reliably detect 'cancel'.\n    // Hold a reference until we get the data or 10 minutes passes (for cancel)\n    Promise.race([result.promise, delay(1000 * 60 * 10)])\n        .catch(() => {})\n        .then(() => fileInput.remove());\n\n    return result.promise;\n}\n\nexport function useSize(ref: React.RefObject<HTMLElement>, defaultValue: number) {\n    const [spaceAvailable, setSpaceAvailable] = React.useState(defaultValue);\n\n    React.useEffect(() => {\n        const resizeObserver = new ResizeObserver(() => {\n            const container = ref.current;\n\n            if (container) {\n                setSpaceAvailable(container.clientWidth);\n            } else {\n                logError(\"Element resized, but no ref available\");\n            }\n        });\n\n        if (ref.current) {\n            resizeObserver.observe(ref.current);\n        } else {\n            logError(\"No element to observe for resizing!\");\n        }\n\n        return () => resizeObserver.disconnect();\n    }, []);\n\n    return spaceAvailable;\n}\n\nexport async function copyToClipboard(textToCopy: string) {\n    if (navigator.clipboard) {\n        // This will be available on secure domains in supported browsers. It requires\n        // permissions, but not during Electron usage. We ignore permissions here -\n        // if this fails (on secure web usage outside Electron) we'll use the fallback.\n        try {\n            await navigator.clipboard.writeText(textToCopy);\n            return; // If this succeeds, we're done\n        } catch (e) {\n            console.warn('Copy to clipboard with navigator.clipboard failed', e);\n            // Didn't succeed - keep going\n        }\n    }\n\n    // This should work everywhere, as long as this method is called from an\n    // event handler:\n    const textArea = document.createElement(\"textarea\");\n    try {\n        textArea.value = textToCopy;\n        textArea.style.position = \"absolute\";\n        textArea.style.left = \"-9999px\";\n\n        document.body.prepend(textArea);\n        textArea.select();\n        document.execCommand('copy');\n    } catch (e) {\n        console.warn('Copy to clipboard fallback failed', e);\n        throw e;\n    } finally {\n        textArea.remove();\n    }\n}","export type ErrorLike = Partial<Error> & {\n    // Various properties we might want to look for on errors:\n    code?: string;\n    cmd?: string;\n    signal?: string;\n    statusCode?: number;\n    statusMessage?: string;\n};\n\n// Useful to easily cast and then examine errors that are otherwise 'unknown':\nexport function isErrorLike(error: any): error is ErrorLike {\n    return typeof error === 'object' && (\n        error instanceof Error ||\n        error.message ||\n        error.code ||\n        error.stack\n    )\n}\n\nexport function asError(error: any): Error {\n    if (isErrorLike(error)) return error as Error;\n    else {\n        return new Error(error.message || error.toString());\n    }\n}\n\nexport class UnreachableCheck extends Error {\n\n    // getValue is used to allow logging properties (e.g. v.type) on expected-unreachable\n    // values, instead of just logging [object Object].\n    constructor(value: never, getValue: (v: any) => any = (x => x)) {\n        super(`Unhandled case value: ${getValue(value)}`);\n    }\n\n}\n\n// Sometimes useful when you need an expression (when you can't use a 'throws' statement):\nexport const unreachableCheck = (value: never, getValue: (v: any) => any = (x => x)): never => {\n    throw new UnreachableCheck(value, getValue);\n}","import { computed, observable } from 'mobx';\n\nimport { InputStreamMessage } from \"../../types\";\nimport { asBuffer } from '../../util';\n\nexport class StreamMessage {\n\n    @observable\n    private inputMessage: InputStreamMessage;\n\n    public readonly cache = observable.map(new Map<symbol, unknown>(), { deep: false });\n\n    constructor(\n        inputMessage: InputStreamMessage,\n        public readonly messageIndex: number\n    ) {\n        this.inputMessage = inputMessage;\n    }\n\n    /**\n     * The direction the message travelled.\n     *\n     * Note that this may seem reversed! msg.direction is from the perspective\n     * of Mockttp, not the client.\n     *\n     * I.e. 'received' means the client sent it and the proxy received it. Sent\n     * means Mockttp sent it to the client (which typically means an upstream\n     * server sent it to Mockttp, but it depends on the rule setup).\n     */\n    get direction() {\n        return this.inputMessage.direction;\n    }\n\n    @computed\n    get content() {\n        return asBuffer(this.inputMessage.content);\n    }\n\n    get isBinary() {\n        return this.inputMessage.isBinary;\n    }\n\n    get contentType() {\n        if (this.inputMessage.isBinary) return 'raw';\n\n        // prefix+JSON is very common, so we try to parse anything JSON-ish optimistically:\n        const startOfMessage = this.content.slice(0, 10).toString('utf-8');\n        if (startOfMessage.includes('{') || startOfMessage.includes('[')) return 'json';\n        else return 'text';\n    }\n\n    get timestamp() {\n        return this.inputMessage.eventTimestamp;\n    }\n\n    cleanup() {\n        // As with Exchange & WebSocketStream - in some cases, browsers can keep references to\n        // these messages, which causes issues with releasing memory, so we aggressively drop\n        // internal references to potentially large data to compensate.\n        this.inputMessage.content = Buffer.from([]);\n        this.cache.clear();\n    }\n\n}","/*\n * SPDX-FileCopyrightText: 2022 Tim Perry <tim@httptoolkit.com>\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport * as _ from 'lodash';\nimport { defaultAbiCoder } from '@ethersproject/abi';\n\nexport const encodeAbi = defaultAbiCoder.encode.bind(defaultAbiCoder);\n\nexport const NATIVE_ETH_TYPES = [\n    'bool',\n    'int',\n    'uint',\n    ...(_.flatMap(_.range(8, 257, 8), (bits) => [\n        `int${bits}`,\n        `uint${bits}`\n    ])),\n    'address',\n    'string',\n    'bytes',\n    ...(_.range(1, 33).map((n) => `bytes${n}`))\n];","import * as _ from 'lodash';\nimport { get } from 'typesafe-get';\n\nimport type {\n    OpenAPIObject,\n    PathObject,\n    OperationObject,\n    ParameterObject,\n    ResponseObject,\n    RequestBodyObject,\n    SchemaObject\n} from 'openapi-directory';\nimport Ajv from 'ajv';\nimport addFormats from 'ajv-formats';\n\nimport {\n    HttpExchange,\n    ExchangeMessage,\n    HtkRequest,\n    HtkResponse,\n    Html\n} from \"../../types\";\nimport { firstMatch, empty } from '../../util';\nimport { lastHeader } from '../../util/headers';\nimport { formatAjvError } from '../../util/json-schema';\n\nimport {\n    ApiExchange,\n    ApiService,\n    ApiOperation,\n    ApiRequest,\n    ApiResponse,\n    ApiParameter\n} from './api-interfaces';\nimport { OpenApiMetadata } from './build-api-metadata';\nimport { fromMarkdown } from '../ui/markdown';\n\nconst paramValidator = new Ajv({\n    coerceTypes: 'array',\n    strict: false,\n    strictSchema: false,\n    formats: new Proxy({}, {\n        // Return 'true' (ignore) for all undefined formats:\n        get(target: any, name: string) {\n            if (name in target) return target[name];\n            else return true;\n        }\n    })\n});\naddFormats(paramValidator);\n\nfunction getPath(api: OpenApiMetadata, request: HtkRequest): {\n    pathSpec: PathObject,\n    path: string\n} | undefined {\n    const { parsedUrl } = request;\n\n    // Request URL without query params\n    const url = `${parsedUrl.protocol}//${parsedUrl.host}${parsedUrl.pathname}`;\n\n    // Test the base server up front, just to keep things quick\n    if (!api.serverMatcher.exec(url)) return;\n\n    for (let matcher of api.requestMatchers.keys()) {\n        // Check the path matches\n        if (!matcher.pathMatcher.exec(url)) continue;\n\n        // Check the query fragment matches (if there is one)\n        if (!_.every(matcher.queryMatcher, (expectedValue, query) => {\n            const queryValues = parsedUrl.searchParams.getAll(query);\n            if (!expectedValue) {\n                return queryValues.length > 0;\n            } else if (typeof expectedValue === 'string') {\n                return _.includes(queryValues, expectedValue);\n            } else {\n                return _.intersection(queryValues, expectedValue).length === expectedValue.length;\n            }\n        })) continue;\n\n        // First match is the right one (we sort in build-api to\n        // guarantee more specific matches always come first).\n        return api.requestMatchers.get(matcher)!;\n    }\n}\n\nexport function getParameters(\n    path: string,\n    parameters: ParameterObject[],\n    request: HtkRequest\n): ApiParameter[] {\n    if (!parameters) return [];\n\n    const query = request.parsedUrl.searchParams;\n\n    // Need the cast because TS doesn't know we've already dereferenced this\n    return _.uniqBy(<ParameterObject[]>parameters, (param) =>\n        `${param.name}::${param.in}`\n    )\n        .map((param) => {\n            const schema = param.schema as SchemaObject | undefined;\n\n            const commonFields = {\n                specParam: param,\n                name: param.name,\n                in: param.in,\n                description: fromMarkdown(param.description),\n                required: param.required || param.in === 'path',\n                type: schema && schema.type,\n                defaultValue: schema && schema.default,\n                enum: schema && (schema.enum || (schema.items && (schema.items as SchemaObject).enum)),\n                deprecated: param.deprecated || false,\n                warnings: <string[]>[]\n            }\n\n            switch (param.in) {\n                case 'query':\n                    let values: Array<string | boolean> = query.getAll(param.name);\n\n                    // For a boolean field, empty-but-set (?myParam) means true\n                    if (commonFields.type && commonFields.type === 'boolean' && param.allowEmptyValue) {\n                        values = values.map((v) => v === '' ? true : v);\n                    }\n\n                    return {\n                        ...commonFields,\n                        value: firstMatch<Array<string | boolean> | string | boolean | undefined>(\n                            [() => values.length > 1, values],\n                            [() => values.length === 1, values[0]]\n                        )\n                    };\n\n                case 'path':\n                    // If we had regex named groups, we could do this up front\n                    // with one single regex... Alas, not widespread yet.\n                    const paramMatcher = new RegExp(\n                        path\n                            // Add a capturing group for this param\n                            .replace(`{${param.name}}`, '([^/]+)')\n                            // Add a non-capturing group for every other param\n                            .replace(/\\{[^\\}]+\\}/g, '[^/]+')\n                        + '$', // Matched path must be a complete suffix.\n                        'i' // Match paths ignoring case (matters in theory, never in practice)\n                    );\n\n                    const match = paramMatcher.exec(request.parsedUrl.pathname);\n                    return {\n                        ...commonFields,\n                        value: match ? match[1] : undefined\n                    };\n\n                case 'header':\n                    return {\n                        ...commonFields,\n                        value: request.headers[param.name.toLowerCase()]\n                    }\n\n                // TODO: Match in:cookie too (but currently no example in the specs)\n                default:\n                    return {\n                        ...commonFields,\n                        value: undefined\n                    }\n            }\n        })\n        .map((param) => {\n            const { specParam } = param;\n\n            const serializationStyle = specParam.style || ({\n                query: 'form',\n                path: 'simple',\n                header: 'simple',\n                cookie: 'form'\n            }[specParam.in]);\n\n            if (param.type === 'array') {\n                if (\n                    serializationStyle === 'simple' ||\n                    (serializationStyle === 'form' && specParam.explode === false)\n                ) {\n                    param.value = _.isString(param.value) ? param.value.split(',') : param.value;\n                }\n                if (serializationStyle === 'spaceDelimited') {\n                    param.value = _.isString(param.value) ? param.value.split(' ') : param.value;\n                }\n                if (serializationStyle === 'pipeDelimited') {\n                    param.value = _.isString(param.value) ? param.value.split('|') : param.value;\n                }\n            }\n\n            if (param.required && param.value === undefined && param.defaultValue === undefined) {\n                param.warnings.push(\n                    `The '${param.name}' ${specParam.in} parameter is required.`\n                );\n            }\n\n            if (param.deprecated && param.value !== undefined) {\n                param.warnings.push(\n                    `The '${param.name}' ${specParam.in} parameter is deprecated.`\n                );\n            }\n\n            if (specParam.schema && param.value !== undefined) {\n                // Validate against the schema. We wrap the value in an object\n                // so that ajv can mutate the input to coerce to the right type.\n                const valueWrapper = { value: param.value };\n                const validated = paramValidator.validate({\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"value\": specParam.schema\n                    }\n                }, valueWrapper);\n\n                if (!validated && paramValidator.errors) {\n                    param.warnings.push(\n                        ...paramValidator.errors.map(e =>\n                            formatAjvError(valueWrapper, e, (path) => path.replace(/^\\/value/, param.name))\n                        )\n                    );\n                }\n\n                param.value = valueWrapper.value;\n            }\n\n            return {\n                ...param,\n                warnings: param.warnings.map(e => stripTags(e))\n            };\n        });\n}\n\nexport function getBodySchema(\n    spec: OpenAPIObject,\n    bodyDefinition: RequestBodyObject | ResponseObject | undefined,\n    message: ExchangeMessage | 'aborted' | undefined\n): SchemaObject {\n    if (!bodyDefinition || !message || message === 'aborted') return {};\n\n    const contentType = lastHeader(message.headers['content-type']) || '*/*';\n\n    const schemasByType = bodyDefinition.content;\n    if (!schemasByType) return {};\n\n    // Sort the keys by the number of *'s present\n    const mediaTypeKeys = _.sortBy(Object.keys(schemasByType),\n        (key) => _.sumBy(key, (c: string) => c === '*' ? 1 : 0)\n    );\n\n    const schemaKey = _.find<string>(mediaTypeKeys, (key) =>\n        new RegExp('^' + // Must match at the start\n            key.replace(/\\*/g, '.*') // Wildcards to regex wildcard\n                .replace(/;.*/g, '') // Ignore charset etc\n        ).exec(contentType) !== null\n    );\n\n    if (!schemaKey) return {};\n\n    return Object.assign(\n        {\n            description: bodyDefinition.description,\n            components: spec.components\n        },\n        schemasByType[schemaKey].schema\n    );\n}\n\nfunction getDummyPath(api: OpenApiMetadata, request: HtkRequest): string {\n    const { parsedUrl } = request;\n    const url = `${parsedUrl.protocol}//${parsedUrl.hostname}${parsedUrl.pathname}`;\n    const serverMatch = api.serverMatcher.exec(url);\n\n    if (!serverMatch) {\n        return parsedUrl.pathname;\n    }\n\n    // Everything after the server is our API path\n    return url.slice(serverMatch[0].length);\n}\n\n// Rough but effective HTML stripping regex. This is _not_ designed to produce HTML-safe\n// input, it's just designed to turn formatted text into simple text.\nfunction stripTags(input: string): string;\nfunction stripTags(input: undefined): undefined;\nfunction stripTags(input: string | undefined): string | undefined {\n    if (!input) return input;\n    return input.replace(/(<([^>]+)>)/ig, '');\n}\n\nexport class OpenApiExchange implements ApiExchange {\n    constructor(api: OpenApiMetadata, exchange: HttpExchange) {\n        this.isBuiltInApi = api.spec.info['x-httptoolkit-builtin-api'] === true;\n\n        const { request } = exchange;\n        this.service = new OpenApiService(api.spec);\n\n        this._spec = api.spec;\n        this._opSpec = matchOpenApiOperation(api, request);\n\n        this.operation = new OpenApiOperation(this._opSpec);\n        this.request = new OpenApiRequest(api.spec, this._opSpec, request);\n\n        if (exchange.response) {\n            this.updateWithResponse(exchange.response);\n        }\n    }\n\n    private _spec: OpenAPIObject;\n    private _opSpec: MatchedOperation;\n\n    public readonly isBuiltInApi: boolean;\n\n    public readonly service: ApiService;\n    public readonly operation: ApiOperation;\n    public readonly request: ApiRequest;\n\n    public response: ApiResponse | undefined;\n\n    updateWithResponse(response: HtkResponse | 'aborted' | undefined): void {\n        if (response === 'aborted' || response === undefined) return;\n        this.response = new OpenApiResponse(this._spec, this._opSpec, response);\n    }\n\n    matchedOperation() {\n        return this._opSpec.matched;\n    }\n}\n\nclass OpenApiService implements ApiService {\n    constructor(spec: OpenAPIObject) {\n        const { info: service } = spec;\n\n        this.name = service.title;\n        this.shortName = service['x-httptoolkit-short-name']\n            ?? this.name.split(' ')[0];\n\n        this.logoUrl = service['x-logo']?.url;\n        this.description = fromMarkdown(service.description);\n        this.docsUrl = spec?.externalDocs?.url;\n    }\n\n    public readonly shortName: string;\n    public readonly name: string;\n    public readonly logoUrl?: string;\n    public readonly description?: Html;\n    public readonly docsUrl?: string;\n}\n\nexport function matchOpenApiOperation(api: OpenApiMetadata, request: HtkRequest) {\n    const matchingPath = getPath(api, request);\n\n    const { pathSpec, path } = matchingPath || {\n        pathSpec: empty(), path: getDummyPath(api, request)\n    }\n\n    const method = (\n        lastHeader(request.headers['x-http-method-override']) || request.method\n    ).toLowerCase();\n\n    let operation: OperationObject | undefined = get(pathSpec, method);\n    if (!operation && method === 'head') operation = get(pathSpec, 'get');\n\n    return {\n        method,\n        path,\n        pathSpec,\n        spec: operation || empty(),\n        matched: operation !== undefined\n    };\n}\n\ntype MatchedOperation = ReturnType<typeof matchOpenApiOperation>;\n\nclass OpenApiOperation implements ApiOperation {\n    constructor(\n        op: MatchedOperation\n    ) {\n        this.name = stripTags(fromMarkdown(\n            firstMatch<string>(\n                [\n                    () => (get(op.spec, 'summary', 'length') || Infinity) < 40, op.spec.summary!\n                ],\n                get(op.spec, 'operationId'),\n                [\n                    () => (get(op.spec, 'description', 'length') || Infinity) < 40, op.spec.description!\n                ],\n                op.pathSpec.summary\n            ) || `${op.method.toUpperCase()} ${op.path}`\n        ).__html);\n\n        this.description = fromMarkdown(firstMatch<string>(\n            [() => get(op.spec, 'description') !== this.name, get(op.spec, 'description')],\n            [() => get(op.spec, 'summary') !== this.name, get(op.spec, 'summary')],\n            op.pathSpec.description\n        ));\n\n        if (!op.matched) this.warnings.push(\n            `Unknown operation '${this.name}'.`\n        );\n\n        if (op.spec.deprecated) this.warnings.push(\n            `The '${this.name}' operation is deprecated.`\n        );\n\n        this.docsUrl = get(op.spec, 'externalDocs', 'url');\n\n        this.warnings = this.warnings.map(e => stripTags(e));\n    }\n\n    name: string;\n    description?: Html;\n    docsUrl?: string;\n\n    warnings: string[] = [];\n}\n\nclass OpenApiRequest implements ApiRequest {\n    constructor(\n        spec: OpenAPIObject,\n        op: MatchedOperation,\n        request: HtkRequest\n    ) {\n        this.parameters = getParameters(\n            op.path,\n            (op.pathSpec.parameters || []).concat(op.spec.parameters || []),\n            request\n        );\n\n        this.bodySchema = getBodySchema(\n            spec,\n            op.spec.requestBody as RequestBodyObject | undefined,\n            request\n        );\n    }\n\n    parameters: ApiParameter[];\n    bodySchema?: SchemaObject;\n}\n\nclass OpenApiResponse implements ApiResponse {\n    constructor(\n        spec: OpenAPIObject,\n        op: MatchedOperation,\n        response: HtkResponse\n    ) {\n        const bodySpec: RequestBodyObject | undefined = op.spec.responses\n            ? (\n                op.spec.responses[response.statusCode.toString()] ||\n                op.spec.responses.default\n            )\n            : undefined;\n\n        this.description = bodySpec && bodySpec.description !== response.statusMessage\n            ? fromMarkdown(bodySpec.description)\n            : undefined;\n        this.bodySchema = getBodySchema(spec, bodySpec, response);\n    }\n\n    description?: Html;\n    bodySchema?: SchemaObject;\n}","import * as _ from 'lodash';\nimport * as traverse from 'traverse';\nimport * as Ajv from 'ajv';\n\nimport { joinAnd, truncate } from './text';\n\ntype Ref = { $ref: string };\n\nfunction isRef(node: any): node is Ref {\n    return typeof node === 'object' &&\n        node !== null &&\n        // $ref can be { type: ... } if it's a real $ref-named field, as in the github API\n        typeof node['$ref'] === 'string';\n}\n\nfunction derefRef(root: any, node: Ref) {\n    const ref = node.$ref;\n\n    if (!ref.startsWith('#')) {\n        throw new Error(`Cannot resolve external reference ${ref}`);\n    }\n\n    let refParts = ref.slice(1).split('/').filter(p => p.length);\n    let refTarget: any = root;\n\n    while (refParts.length) {\n        const nextPart = refParts.shift()!\n            // Handle JSON pointer escape chars:\n            .replace(/~1/g, '/')\n            .replace(/~0/g, '~');\n        refTarget = refTarget[nextPart];\n        if (!refTarget) {\n            throw new Error(`Could not follow ref ${ref}, failed at ${nextPart}`);\n        }\n    }\n\n    return refTarget;\n}\n/**\n * Removes almost all $refs from the given JS object. Mutates the input,\n * and returns it as well, just for convenience.\n *\n * This doesn't worry about where $ref is legal - treats it as a reference when\n * found anywhere. That could go wrong in theory, but in practice it's unlikely,\n * and easy for now.\n *\n * If this causes problems later, we need to build an OpenAPI-specific deref,\n * which understands where in OpenAPIv3 a $ref is legal, and only uses those.\n * For now though, we ignore all that for drastic simplification.\n */\nexport function dereference<T extends object>(root: T): T {\n    traverse.forEach(root, function (this: traverse.TraverseContext, node) {\n        let wasRef = false;\n\n        while (isRef(node)) {\n            wasRef = true;\n            node = derefRef(root, node);\n        }\n\n        // No need to traverse into refs:\n        const stopHere = wasRef;\n        this.update(node, stopHere);\n    });\n    return root;\n}\n\nconst getValue = (root: any, path: string[]): any => {\n    if (path.length === 0) return root;\n    return getValue(root[path[0]], path.slice(1));\n};\n\nexport function formatAjvError(\n    data: any,\n    e: Ajv.ErrorObject,\n    pathTransform: (path: string) => string = _.identity\n) {\n    const value = e.instancePath?.length\n        ? getValue(data, e.instancePath.slice(1).split('/'))\n        : data;\n\n    return (pathTransform(e.instancePath) || 'Document') + ` (${\n        truncate(JSON.stringify(value), 50)\n    }) ${e.message!}${\n        e.keyword === 'enum' ?\n            ` (${joinAnd(\n                (e.params as any).allowedValues, ', ', ', or ')\n            })` :\n        ''\n    }.`\n}","module.exports = \"<!DOCTYPE html>\\n<html>\\n<head>\\n  <meta charset=\\\"UTF-8\\\">\\n  <link rel='shortcut icon' type='image/x-icon' href='/favicon.ico' />\\n  <script type=\\\"application/json\\\" id=\\\"amiusing\\\">\\n    { \\\"amiusing\\\": true }\\n  </script>\\n  <title>\\n    Are you using HTTP Toolkit? Yes!\\n  </title>\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1, shrink-to-fit=no\\\">\\n  <style>\\n    html {\\n      height: 100%;\\n    }\\n\\n    body {\\n      min-height: 100%;\\n      box-sizing: border-box;\\n      margin: 0;\\n      padding: 8px;\\n\\n      background-color: #d8e2e6;\\n      font-family: Lato;\\n      line-height: 1.3;\\n      display: flex;\\n      flex-direction: column;\\n      align-items: center;\\n      justify-content: center;\\n    }\\n\\n    .content {\\n      max-width: 600px;\\n    }\\n\\n    h1 {\\n      font-size: 36pt;\\n    }\\n\\n    p {\\n      font-size: 18pt;\\n    }\\n\\n    .logo {\\n      display: block;\\n      margin: 40px auto;\\n      height: 200px;\\n      width: 200px;\\n    }\\n  </style>\\n</head>\\n<body>\\n  <div class=\\\"content\\\">\\n    <h1>You're being intercepted by HTTP Toolkit</h1>\\n    <p>\\n      This response came from HTTP Toolkit, which is currently intercepting this connection.\\n    </p>\\n    <p>\\n      All requests made by this browser will be recorded by HTTP Toolkit.\\n      Take a look at the 'View' tab there now to see the request & response\\n      that brought you this page, or start browsing elsewhere to collect more data.\\n    </p>\\n  </div>\\n  <link href=\\\"https://fonts.googleapis.com/css?family=Lato&display=block\\\" rel=\\\"stylesheet\\\" />\\n</body>\\n</html>\"","import * as _ from 'lodash';\nimport * as dedent from 'dedent';\n\nimport { isRuleGroup } from './rules-structure';\nimport { buildDefaultGroupWrapper } from './rule-creation';\n\n// Take some raw serialized rule data, exported from any version of the app since HTTP Mock was\n// launched, and convert it into raw modern rule data, ready to be deserialized.\nexport function migrateRuleData(data: any) {\n    if (!data) return data;\n\n    // Right now all rule data is unversioned, but with this check we can safely\n    // start versioning as soon as it's necessary\n    if (data.version === undefined) {\n        if (data.rules) {\n            data.id = 'root';\n            data.title = \"HTTP Toolkit Rules\";\n            data.isRoot = true;\n\n            const [defaultRules, otherRules] = _.partition(data.rules, (r) => r.id.startsWith('default-'));\n\n            if (defaultRules.length) {\n                data.items = [\n                    ...otherRules,\n                    buildDefaultGroupWrapper(defaultRules)\n                ];\n            } else {\n                data.items = otherRules;\n            }\n            delete data.rules;\n        }\n\n        data.items = data.items.map(migrateRuleItem);\n    } else {\n        throw new Error(dedent`\n            Could not migrate rules from unknown format (${data.version}).\n            Please restart HTTP Toolkit to update.\n        `);\n    }\n\n    return data;\n}\n\nfunction migrateRuleItem(item: any) {\n    if (isRuleGroup(item)) {\n        item.items = item.items.map(migrateRuleItem);\n    } else {\n        item = migrateRule(item);\n    }\n\n    return item;\n}\n\nfunction migrateRule(rule: any) {\n    // Migrate rules from the HTTP-only days into a world with rules for other protocols:\n    if (rule.type === undefined) rule.type = 'http';\n\n    const { handler } = rule;\n\n    if (handler?.type === 'passthrough') {\n        // Handle the targetHost -> forwarding object change from Mockttp 0.18.1:\n        if (handler.forwardToLocation && !handler.forwarding) {\n            handler.forwarding = { targetHost: handler.forwardToLocation, updateHostHeader: true };\n        }\n    }\n\n    return rule;\n}","export function byteStreamToLines(stream: ReadableStream<Uint8Array>) {\n    const newlineMatcher = /\\r?\\n/;\n    const decoder = new TextDecoder();\n\n    let reader: ReadableStreamDefaultReader<Uint8Array>;\n    let currentLine = '';\n\n    return new ReadableStream<string>({\n        start() {\n            reader = stream.getReader();\n        },\n        async pull(controller) {\n            const { done, value } = await reader.read();\n\n            if (done) {\n                // If the stream closes cleanly, all data up to the end\n                // (if there is any) is our final line:\n                if (currentLine.length > 0) {\n                    controller.enqueue(currentLine);\n                }\n                controller.close();\n            }\n\n            const chunk = decoder.decode(value, { stream: true });\n            currentLine += chunk;\n\n            const parts = currentLine.split(newlineMatcher);\n\n            // The last part is incomplete, so becomes our current line:\n            currentLine = parts.pop() ?? '';\n\n            // Every other part is a complete line:\n            for (const part of parts) controller.enqueue(part);\n        },\n        cancel(reason) {\n            reader.cancel(reason);\n        }\n    });\n}\n\nexport function parseJsonLinesStream<T = unknown>(stream: ReadableStream<string>) {\n    let reader: ReadableStreamDefaultReader<string>;\n\n    return new ReadableStream<T>({\n        start() {\n            reader = stream.getReader();\n        },\n        async pull(controller) {\n            const { done, value } = await reader.read();\n\n            if (done) return controller.close();\n            else controller.enqueue(JSON.parse(value));\n        },\n        cancel(reason) {\n            reader.cancel(reason);\n        }\n    });\n}\n\nexport const emptyStream = () => new ReadableStream({\n    start(controller) {\n        controller.close();\n    }\n});","import * as Sentry from '@sentry/browser';\nimport * as uuid from 'uuid/v4';\n\nimport { UI_VERSION, serverVersion, desktopVersion } from './services/service-versions';\nimport { ApiError } from './services/server-api-types';\n\nlet sentryInitialized = false;\n\nexport { Sentry };\n\nexport function initSentry(dsn: string | undefined) {\n    if (!dsn) return;\n\n    Sentry.init({\n        dsn: dsn,\n        release: UI_VERSION,\n        ignoreErrors: [\n            'ResizeObserver loop limit exceeded', // No visible effect: https://stackoverflow.com/a/50387233/68051\n        ],\n        beforeSend: function (event, hint) {\n            const exception = hint?.originalException;\n            if (exception instanceof ApiError) {\n                event.fingerprint = [\n                    \"{{ default }}\",\n                    exception.operationName,\n                    ...(exception.errorCode\n                        ? [exception.errorCode.toString()]\n                        : []\n                    )\n                ];\n            }\n            return event;\n        }\n    });\n    sentryInitialized = true;\n\n    serverVersion.then((version) => addErrorTag('version:server', version));\n    desktopVersion.then((version) => addErrorTag('version:desktop', version));\n\n    // If we're running in the main window (not the SW),\n    // stop reporting errors after the page starts unloading\n    if (typeof window !== 'undefined') {\n        window.addEventListener('beforeunload', () => {\n            Sentry.getCurrentHub().getClient().getOptions().enabled = false;\n            sentryInitialized = false;\n        });\n    }\n\n    Sentry.configureScope((scope) => {\n        // We use a random id to distinguish between many errors in one session vs\n        // one error in many sessions. This isn't persisted and can't be used to\n        // identify anybody between sessions.\n        const randomId = uuid();\n        scope.setUser({\n            id: randomId,\n            username: `anon-${randomId}`\n        });\n    });\n}\n\nexport function logErrorsAsUser(email: string | undefined) {\n    if (!sentryInitialized) return;\n\n    Sentry.configureScope((scope) => {\n        scope.setUser({\n            id: email,\n            email: email\n        });\n    });\n}\n\nfunction addErrorTag(key: string, value: string) {\n    if (!sentryInitialized) return;\n\n    Sentry.configureScope((scope) => {\n        scope.setTag(key, value);\n    });\n}\n\nexport function logError(error: Error | string | unknown, metadata: object = {}) {\n    console.log('Reporting error:', error, metadata);\n    if (!sentryInitialized) return;\n\n    Sentry.withScope((scope) => {\n        Object.entries(metadata).forEach(([key, value]) => {\n            scope.setExtra(key, value);\n        });\n\n        if (typeof error === 'string') {\n            Sentry.captureMessage(error);\n        } else if (error instanceof Error) {\n            Sentry.captureException(error);\n        } else {\n            console.warn('Reporting non-error', error);\n            Sentry.captureMessage(`Non-error thrown: ${error}`);\n        }\n    });\n}","import * as _ from 'lodash';\nimport { observable, action, reaction, observe } from \"mobx\";\nimport dedent from 'dedent';\n\nimport {\n    Headers,\n    MockttpBreakpointedRequest,\n    MockttpBreakpointedResponse,\n    MockttpBreakpointRequestResult,\n    BreakpointRequestResult,\n    BreakpointResponseResult,\n    MockttpBreakpointResponseResult,\n} from \"../../types\";\nimport { logError } from \"../../errors\";\n\nimport { stringToBuffer } from '../../util';\nimport { getDeferred, Deferred } from \"../../util/promise\";\nimport {\n    asHeaderArray,\n    withHeaderValue,\n    getHeaderValue,\n    headersToRawHeaders,\n    rawHeadersToHeaders\n} from '../../util/headers';\n\nimport {\n    RAW_BODY_SUPPORTED,\n    serverVersion,\n    versionSatisfies\n} from '../../services/service-versions';\nimport { decodeBody } from \"../../services/ui-worker-api\";\n\nimport { EditableBody } from './editable-body';\nimport { getStatusMessage } from \"./http-docs\";\n\nfunction getBody(message: MockttpBreakpointedRequest | MockttpBreakpointedResponse) {\n    return decodeBody(\n        message.body.buffer,\n        asHeaderArray(message.headers['content-encoding'])\n    ).catch((e) => {\n        logError(e);\n        const error = dedent`\n            HTTP TOOLKIT ERROR: Could not decode body, \\\n            check content-encoding\n        `;\n        return {\n            encoded: stringToBuffer(error),\n            decoded: stringToBuffer(error)\n        };\n    });\n}\n\nconst omitPsuedoHeaders = (headers: Headers) =>\n    _.omitBy(headers, (_v, key) => key.startsWith(':')) as Headers;\n\nexport async function getRequestBreakpoint(request: MockttpBreakpointedRequest) {\n    const { encoded, decoded } = await getBody(request);\n\n    const headers = observable(request.headers);\n\n    return new RequestBreakpoint(\n        {\n            method: request.method,\n            url: request.url,\n            rawHeaders: request.rawHeaders ?? headersToRawHeaders(request.headers)\n        },\n        decoded,\n        encoded\n    );\n}\n\nexport function getDummyResponseBreakpoint(httpVersion: 1 | 2) {\n    const breakpoint = new ResponseBreakpoint(\n        {\n            statusCode: 200,\n            statusMessage: undefined,\n            rawHeaders: httpVersion === 2 ? [[':status', '200']] : [],\n        },\n        stringToBuffer(''),\n        stringToBuffer('')\n    );\n\n    return breakpoint;\n}\n\nexport async function getResponseBreakpoint(response: MockttpBreakpointedResponse) {\n    const expectedStatusMessage = getStatusMessage(response.statusCode)\n    const statusMessage = expectedStatusMessage === response.statusMessage\n        ? undefined\n        : response.statusMessage;\n    const { encoded, decoded } = await getBody(response);\n\n    return new ResponseBreakpoint(\n        {\n            statusCode: response.statusCode,\n            statusMessage: statusMessage,\n            rawHeaders: response.rawHeaders ?? headersToRawHeaders(response.headers)\n        },\n        decoded,\n        encoded\n    );\n}\n\ntype BreakpointInProgress = BreakpointRequestResult | BreakpointResponseResult;\n\ntype BreakpointMetadata = Omit<BreakpointInProgress, 'body' | 'rawBody'>;\n\ntype BreakpointResumeType<T extends BreakpointInProgress> =\n    T extends BreakpointRequestResult\n        ? MockttpBreakpointRequestResult\n        : MockttpBreakpointResponseResult;\n\n\nexport abstract class Breakpoint<T extends BreakpointInProgress> {\n\n    protected readonly deferred: Deferred<BreakpointResumeType<T>>;\n\n    @observable.shallow\n    private resultMetadata: Omit<T, 'body' | 'rawBody'>;\n    private readonly editableBody: EditableBody;\n\n    constructor(\n        result: Omit<T, 'body' | 'rawBody'>,\n        decodedBody: Buffer,\n        encodedBody: Buffer | undefined\n    ) {\n        this.deferred = getDeferred();\n        this.resultMetadata = result;\n        this.editableBody = new EditableBody(\n            decodedBody,\n            encodedBody,\n            () => this.resultMetadata.rawHeaders\n        );\n\n        // Update the content-length when necessary, if it was previously correct\n        observe(this.editableBody, 'latestEncodedLength', ({\n            oldValue: previousEncodedLength,\n            newValue: newEncodedLength\n        }) => {\n            const { rawHeaders } = this.resultMetadata;\n            const previousContentLength = parseInt(getHeaderValue(rawHeaders, 'Content-Length') || '', 10);\n\n            // If the content-length was previously correct, keep it correct:\n            if (previousContentLength === previousEncodedLength) {\n                this.updateMetadata({\n                    rawHeaders: withHeaderValue(rawHeaders, {\n                        'Content-Length': newEncodedLength?.toString() ?? '0'\n                    })\n                });\n            }\n        });\n\n        // When content-length is first added, default to the correct value\n        let oldContentLength = getHeaderValue(this.resultMetadata.rawHeaders, 'Content-Length');\n        reaction(() => getHeaderValue(this.resultMetadata.rawHeaders, 'Content-Length'), (newContentLength) => {\n            if (oldContentLength === undefined && newContentLength === \"\") {\n                const { rawHeaders } = this.resultMetadata;\n                this.updateMetadata({\n                    rawHeaders: withHeaderValue(rawHeaders, {\n                        'Content-Length': this.editableBody.latestEncodedLength?.toString() ?? '0'\n                    })\n                });\n            }\n\n            oldContentLength = newContentLength;\n        });\n    }\n\n    get inProgressResult(): T {\n        return Object.assign(\n            {\n                body: this.editableBody as EditableBody\n            },\n            this.resultMetadata,\n        ) as T;\n    }\n\n    @action.bound\n    updateMetadata(update: Partial<BreakpointMetadata>) {\n        this.resultMetadata = {\n            ...this.resultMetadata,\n            ..._.omit(update, 'body', 'rawBody')\n        };\n    }\n\n    @action.bound\n    updateBody(body: Buffer) {\n        this.editableBody.updateDecodedBody(body);\n    }\n\n    waitForCompletedResult() {\n        return this.deferred.promise;\n    }\n\n    readonly resume = async () => {\n        this.deferred.resolve({\n            ...this.resultMetadata,\n\n            ...(versionSatisfies(await serverVersion, RAW_BODY_SUPPORTED)\n                // Mockttp v3+ skips auto-encoding only if you use rawBody:\n                ? { rawBody: await this.editableBody.encoded }\n                // Old Mockttp doesn't support rawBody, never auto-encodes:\n                : { body: await this.editableBody.encoded }\n            ),\n\n            // Psuedo-headers those will be generated automatically from the other,\n            // fields, as part of the rest of the request process.\n            headers: omitPsuedoHeaders(rawHeadersToHeaders(this.resultMetadata.rawHeaders))\n        } as unknown as BreakpointResumeType<T>);\n    }\n\n    abstract close(): void;\n\n    reject(error: Error) {\n        this.deferred.reject(error);\n    }\n}\n\nclass RequestBreakpoint extends Breakpoint<BreakpointRequestResult> {\n    respondDirectly(result: MockttpBreakpointResponseResult) {\n        this.deferred.resolve({ response: result });\n    }\n\n    close = () => {\n        this.deferred.resolve({ response: 'close' });\n    }\n}\n\nclass ResponseBreakpoint extends Breakpoint<BreakpointResponseResult> {\n    close = () => {\n        this.deferred.resolve('close');\n    }\n}\n\ntype RequestBreakpointType = RequestBreakpoint;\ntype ResponseBreakpointType = ResponseBreakpoint\n\nexport {\n    RequestBreakpointType as RequestBreakpoint,\n    ResponseBreakpointType as ResponseBreakpoint\n};","import * as Mockttp from 'mockttp';\nimport * as serializr from 'serializr';\nimport { observable } from 'mobx';\n\nimport { RawHeaders } from \"../../types\";\nimport { EditableContentType } from \"../events/content-types\";\nimport { EditableBody } from '../http/editable-body';\n\n// This is our model of a Request for sending. Smilar to the API model,\n// but not identical, as we add extra UI metadata etc.\nexport class RequestInput {\n\n    @observable\n    public method = 'GET';\n\n    @observable\n    public url = '';\n\n    @observable\n    public headers: RawHeaders = [];\n\n    @observable\n    public requestContentType: EditableContentType = 'text';\n\n    @observable\n    public rawBody: EditableBody = new EditableBody(\n        Buffer.from([]),\n        undefined,\n        () => this.headers\n    )\n\n}\n\nexport const requestInputSchema = serializr.createModelSchema(RequestInput, {\n    method: serializr.primitive(),\n    url: serializr.primitive(),\n    headers: serializr.raw(),\n    requestContentType: serializr.primitive(),\n\n    rawBody: serializr.custom(\n        (body: EditableBody) => body.decoded.toString('base64'),\n        (base64Data, context) => {\n            const requestInput = context.target;\n            return new EditableBody(\n                Buffer.from(base64Data, 'base64'),\n                undefined,\n                () => requestInput.headers\n            );\n        }\n    )\n});\n\n// These are the types that the sever client API expects. They are _not_ the same as\n// the Input type above, which is more flexible and includes various UI concerns that\n// we don't need to share with the server to actually send the request.\nexport interface RequestDefinition {\n    method: string;\n    url: string;\n    headers: RawHeaders;\n    rawBody?: Buffer;\n}\n\nexport interface RequestOptions {\n    ignoreHostHttpsErrors?: string[] | boolean;\n    trustAdditionalCAs?: Array<{ cert: string }>;\n    clientCertificate?: { pfx: Buffer, passphrase?: string };\n    proxyConfig?: ClientProxyConfig;\n    lookupOptions?: { servers?: string[] };\n}\n\nexport const RULE_PARAM_REF_KEY = '__rule_param_reference__';\ntype ClientProxyRuleParamReference = { [RULE_PARAM_REF_KEY]: string };\n\nexport type ClientProxyConfig =\n    | undefined // No Docker, no user or system proxy\n    | Mockttp.ProxySetting // User or system proxy\n    | ClientProxyRuleParamReference // Docker proxy (must be dereferenced)\n    | Array<Mockttp.ProxySetting | ClientProxyRuleParamReference> // Both, ordered","import * as _ from 'lodash';\nimport * as React from 'react';\nimport * as polished from 'polished';\n\nimport { styled, Theme, css } from '../../styles';\nimport { UnstyledButton, interactiveMouseoverStyles } from './inputs';\n\n// Given a base colour, returns a constrasting (but related hue) text colour\nfunction getTextColor(baseColor: string, theme: Theme) {\n    // Effective BG colour (as it's very transparent - assume on a main-ish bg)\n    const bgColor = polished.mix(0.3, baseColor, theme.mainBackground);\n\n    const lightOption = polished.setLightness(theme.pillContrast, baseColor);\n    const darkOption = polished.setLightness(1 - theme.pillContrast, baseColor);\n\n    return polished.rgba(polished.readableColor(\n        bgColor,\n        darkOption,\n        lightOption,\n    ), theme.pillContrast);\n}\n\n// Given a base colour, returns a semi-transparent background\nfunction getBackgroundColor(baseColor: string) {\n    return polished.rgba(baseColor, 0.3);\n}\n\nfunction getNonTransparentBackground(baseColor: string, theme: Theme) {\n    return polished.mix(0.3, baseColor, theme.mainBackground);\n}\n\nfunction getDefaultColor(theme: Theme) {\n    if (polished.getLuminance(theme.mainBackground) > 0.5) {\n        return polished.darken(0.4, theme.mainBackground);\n    } else {\n        return polished.lighten(0.4, theme.mainBackground);\n    }\n}\n\nconst pillStyles = css`\n    display: inline-block;\n    border-radius: 4px;\n    padding: 4px 8px;\n\n    text-align: center;\n    text-transform: none;\n    font-weight: bold;\n    word-spacing: 3px;\n\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n\n    color: ${(p: { color?: string, theme?: Theme }) =>\n        getTextColor(p.color || getDefaultColor(p.theme!), p.theme!)\n    };\n\n    background-color: ${(p: { color?: string, theme?: Theme }) =>\n        getBackgroundColor(p.color || getDefaultColor(p.theme!))\n    };\n`;\n\nexport const Pill = styled.span`\n    ${pillStyles}\n`;\n\nexport const PillButton = styled(UnstyledButton)`\n    ${pillStyles}\n    ${interactiveMouseoverStyles}\n\n    line-height: 1;\n\n    &[disabled] {\n        opacity: 0.5;\n    }\n`;\n\nconst Select = styled(Pill.withComponent('select'))`\n    text-align: left;\n    border: none;\n\n    height: 24px;\n    padding: 0 4px 3px 8px;\n\n    font-size: ${p => p.theme.textSize};\n    font-family: ${p => p.theme.fontFamily};\n\n    ${interactiveMouseoverStyles}\n\n    * {\n        background-color: ${(p: { color?: string, theme?: Theme }) =>\n            getNonTransparentBackground(\n                p.color || getDefaultColor(p.theme!),\n                p.theme!\n            )\n        };\n    }\n`;\n\nexport const PillSelector = <\n    T extends {},\n    K extends string = T extends string ? T : string\n>(props: {\n    value: T,\n    onChange: (optionKey: K) => void\n    nameFormatter?: (key: T) => string,\n    keyFormatter?: (key: T) => K,\n} & ({ options: readonly T[] } | { optGroups: { [groupName: string]: T[] } })\n) => {\n    const asKey = props.keyFormatter || ((k: T) => k.toString() as K);\n    const asName = props.nameFormatter || ((k: T) => k.toString());\n\n    return <Select\n        onChange={(e) => props.onChange(e.target.value as K)}\n        value={asKey(props.value)}\n    >\n        {'options' in props\n            ? props.options.map((option: T) =>\n                <option key={asKey(option)} value={asKey(option)}>\n                    { asName(option) }\n                </option>\n            )\n            : _.map(props.optGroups, (options: T[], groupName: string) =>\n                <optgroup key={groupName} label={groupName}>{\n                    options.map((option: T) =>\n                        <option key={asKey(option)} value={asKey(option)}>\n                            { asName(option) }\n                        </option>\n                    )\n                }</optgroup>\n            )\n        }\n    </Select>\n};","import * as _ from 'lodash';\nimport {\n    serverVersion as serverVersionObservable,\n    versionSatisfies,\n    BODY_MATCHING_RANGE,\n    HOST_MATCHER_SERVER_RANGE,\n    FROM_FILE_HANDLER_SERVER_RANGE,\n    PASSTHROUGH_TRANSFORMS_RANGE,\n    WEBSOCKET_MESSAGING_RULES_SUPPORTED,\n    JSONRPC_RESPONSE_RULE_SUPPORTED,\n    RTC_RULES_SUPPORTED,\n    CONNECTION_RESET_SUPPORTED\n} from '../../services/service-versions';\n\nimport {\n    StaticResponseHandler,\n    ForwardToHostHandler,\n    TimeoutHandler,\n    CloseConnectionHandler,\n    ResetConnectionHandler,\n    FromFileResponseHandler,\n    TransformingHandler,\n    HttpMatcherLookup,\n    HttpHandlerLookup,\n    HttpMockRule,\n    HttpInitialMatcherClasses\n} from './definitions/http-rule-definitions';\n\nimport {\n    WebSocketMatcherLookup,\n    WebSocketHandlerLookup,\n    WebSocketMockRule,\n    WebSocketInitialMatcherClasses,\n    EchoWebSocketHandlerDefinition,\n    RejectWebSocketHandlerDefinition,\n    ListenWebSocketHandlerDefinition\n} from './definitions/websocket-rule-definitions';\n\nimport {\n    EthereumMatcherLookup,\n    EthereumHandlerLookup,\n    EthereumInitialMatcherClasses,\n    EthereumMockRule,\n    EthereumMethodMatcher\n} from './definitions/ethereum-rule-definitions';\n\nimport {\n    IpfsMockRule,\n    IpfsMatcherLookup,\n    IpfsInitialMatcherClasses,\n    IpfsHandlerLookup,\n    IpfsInteractionMatcher\n} from './definitions/ipfs-rule-definitions';\n\nimport {\n    RTCMatcherLookup,\n    RTCStepLookup,\n    RTCMockRule,\n    RTCInitialMatcherClasses\n} from './definitions/rtc-rule-definitions';\n\n/// --- Part-generic logic ---\n\nexport const getRulePartKey = (part: {\n    type: string,\n    uiType?: string\n})=>\n    // Mockttp and friends define a 'type' field that's used for (de)serialization.\n    // In addition, we define a uiType, for more specific representations of the\n    // same rule part in some cases, which takes precedence.\n    (part.uiType ?? part.type) as\n        keyof typeof MatcherLookup | keyof typeof HandlerLookup;\n\nconst PartVersionRequirements: {\n    [PartType in keyof typeof MatcherLookup | keyof typeof HandlerLookup]?: string\n} = {\n    // Matchers:\n    'host': HOST_MATCHER_SERVER_RANGE,\n    'raw-body': BODY_MATCHING_RANGE,\n    'raw-body-regexp': BODY_MATCHING_RANGE,\n    'raw-body-includes': BODY_MATCHING_RANGE,\n    'json-body': BODY_MATCHING_RANGE,\n    'json-body-matching': BODY_MATCHING_RANGE,\n\n    'eth-method': JSONRPC_RESPONSE_RULE_SUPPORTED, // Usable without, but a bit pointless\n    'rtc-wildcard': RTC_RULES_SUPPORTED,\n\n    // Handlers:\n    'file': FROM_FILE_HANDLER_SERVER_RANGE,\n    'req-res-transformer': PASSTHROUGH_TRANSFORMS_RANGE,\n    'ws-echo': WEBSOCKET_MESSAGING_RULES_SUPPORTED,\n    'ws-listen': WEBSOCKET_MESSAGING_RULES_SUPPORTED,\n    'ws-reject': WEBSOCKET_MESSAGING_RULES_SUPPORTED,\n    'reset-connection': CONNECTION_RESET_SUPPORTED\n};\n\nconst serverSupports = (versionRequirement: string | undefined) => {\n    if (!versionRequirement || versionRequirement === '*') return true;\n\n    // If we haven't got the server version yet, assume it doesn't support this\n    if (serverVersionObservable.state !== 'fulfilled') return false;\n\n    const version = serverVersionObservable.value as string; // Fulfilled -> string value\n    return versionSatisfies(version, versionRequirement);\n}\n\n/// --- Matchers ---\n\nconst MatchersByType = {\n    'http': HttpMatcherLookup,\n    'websocket': WebSocketMatcherLookup,\n    'ethereum': EthereumMatcherLookup,\n    'ipfs': IpfsMatcherLookup,\n    'webrtc': RTCMatcherLookup\n};\n\n// Define maps to/from matcher keys to matcher classes, and\n// types for the matchers & classes themselves; both the built-in\n// ones and our own extra additions & overrides.\nexport const MatcherLookup = {\n    // These are kept as references to MatchersByType, so the content is always the same:\n    ...MatchersByType['http'],\n    ...MatchersByType['websocket'],\n    ...MatchersByType['ethereum'],\n    ...MatchersByType['ipfs'],\n    ...MatchersByType['webrtc']\n};\n\n// This const isn't used, but the assignment conveniently and clearly checks if\n// any handlers are created without the correct + readonly type/uiType values.\nconst __MATCHER_KEY_CHECK__: {\n    // Enforce that keys match .type or uiType for each matcher class:\n    [K in keyof typeof MatcherLookup]: new (...args: any[]) => { type: K } | { uiType: K }\n} = MatcherLookup;\n\nexport type MatcherClassKey = keyof typeof MatcherLookup;\nexport type MatcherClass = typeof MatcherLookup[MatcherClassKey];\nexport type Matcher = InstanceType<MatcherClass>;\n\nexport const isCompatibleMatcher = (matcher: Matcher, type: RuleType) => {\n    const matcherKey = getRulePartKey(matcher);\n    return !!(MatchersByType[type] as _.Dictionary<MatcherClass>)[matcherKey];\n};\n\n// A runtime map from class to the 'uiType'/'type' key that will be\n// present on constructed instances.\nexport const MatcherClassKeyLookup = new Map<MatcherClass, MatcherClassKey>(\n    Object.entries(MatcherLookup)\n    .map(\n        ([key, matcher]) => [matcher, key]\n    ) as Array<[MatcherClass, MatcherClassKey]>\n);\n\n/// --- Handlers ---\n\nexport const HandlersByType = {\n    'http': HttpHandlerLookup,\n    'websocket': WebSocketHandlerLookup,\n    'ethereum': EthereumHandlerLookup,\n    'ipfs': IpfsHandlerLookup,\n    'webrtc': RTCStepLookup\n};\n\n// Define maps to/from handler keys to handler classes, and\n// types for the handlers & classes themselves; both the built-in\n// ones and our own extra additions & overrides.\nexport const HandlerLookup = {\n    // These are kept as references to HandlersByType, so the content is always the same:\n    ...HandlersByType['http'],\n    ...HandlersByType['websocket'],\n    ...HandlersByType['ethereum'],\n    ...HandlersByType['ipfs'],\n    ...HandlersByType['webrtc']\n};\n\n// This const isn't used, but the assignment conveniently and clearly checks if\n// any handlers are created without the correct + readonly type/uiType values.\nconst __HANDLER_KEY_CHECK__: {\n    // Enforce that keys match .type or uiType for each handler class:\n    [K in keyof typeof HandlerLookup]: new (...args: any[]) => { type: K } | { uiType: K }\n} = HandlerLookup;\n\nexport type HandlerClassKey = keyof typeof HandlerLookup;\nexport type HandlerClass = typeof HandlerLookup[HandlerClassKey];\nexport type Handler = InstanceType<HandlerClass>;\n\n// Steps are a subset of handlers which are allowed to appear in 'steps' arrays on rules, for rule types\n// that support defining a series of steps to execute.\nconst HandlerSteps = {\n    ...RTCStepLookup\n};\nexport type HandlerStepClass = typeof HandlerSteps[keyof typeof HandlerSteps];\nexport type HandlerStep = InstanceType<HandlerStepClass>;\n\nexport const HandlerClassKeyLookup = new Map<HandlerClass, HandlerClassKey>(\n    Object.entries(HandlerLookup)\n    .map(\n        ([key, handler]) => [handler, key]\n    ) as Array<[HandlerClass, HandlerClassKey]>\n);\n\nexport const isCompatibleHandler = (handler: Handler, initialMatcher: InitialMatcher) => {\n    const handlerKey = getRulePartKey(handler) as HandlerClassKey;\n\n    const ruleType = getRuleTypeFromInitialMatcher(initialMatcher);\n    const handlersForType = HandlersByType[ruleType] as _.Dictionary<HandlerClass>\n    const equivalentHandler = handlersForType[handlerKey];\n\n    // Some handlers require a specific initial matcher, or they're not available.\n    // In those cases, we check the initial matcher is valid:\n    const matcherCheck = MatcherLimitedHandlers[handlerKey];\n    if (matcherCheck !== undefined && !matcherCheck(initialMatcher)) return false;\n\n    return equivalentHandler !== undefined;\n};\n\n/// --- Matcher/handler special categories ---\n\nconst InitialMatcherClasses = [\n    ...HttpInitialMatcherClasses,\n    ...WebSocketInitialMatcherClasses,\n    ...EthereumInitialMatcherClasses,\n    ...IpfsInitialMatcherClasses,\n    ...RTCInitialMatcherClasses\n];\n\nexport const getInitialMatchers = () => InitialMatcherClasses.filter((matcherCls) => {\n    const matcherKey = MatcherClassKeyLookup.get(matcherCls)!;\n    return serverSupports(PartVersionRequirements[matcherKey]);\n});\n\nexport type InitialMatcherClass = typeof InitialMatcherClasses[number];\nexport type InitialMatcher = InstanceType<InitialMatcherClass>;\nexport type InitialMatcherKey = {\n    [K in MatcherClassKey]: typeof MatcherLookup[K] extends InitialMatcherClass ? K : never\n}[MatcherClassKey];\n\nexport const getRuleTypeFromInitialMatcher = (matcher: InitialMatcher | MatcherClassKey): RuleType => {\n    const matcherClass = _.isString(matcher)\n        ? MatcherLookup[matcher]\n        : matcher.constructor as any;\n\n    if (HttpInitialMatcherClasses.includes(matcherClass)) {\n        return 'http';\n    } else if (WebSocketInitialMatcherClasses.includes(matcherClass)) {\n        return 'websocket';\n    } else if (EthereumInitialMatcherClasses.includes(matcherClass)) {\n        return 'ethereum';\n    } else if (IpfsInitialMatcherClasses.includes(matcherClass)) {\n        return 'ipfs';\n    } else if (RTCInitialMatcherClasses.includes(matcherClass)) {\n        return 'webrtc';\n    } else {\n        throw new Error(`Unknown type for initial matcher class: ${matcherClass.name}`);\n    }\n}\n\n// Some real matchers aren't shown in the selection dropdowns, either because they're not suitable\n// for use here, or because we just don't support them yet:\nconst HiddenMatchers = [\n    'callback',\n    'am-i-using',\n    'default-wildcard',\n    'default-ws-wildcard',\n    'multipart-form-data',\n    'raw-body-regexp',\n    'hostname',\n    'port',\n    'protocol',\n    'form-data',\n    'cookie',\n\n    'rtc-page-hostname',\n    'rtc-page-regex',\n    'rtc-user-agent-regex'\n] as const;\n\ntype HiddenMatcherKey = typeof HiddenMatchers[number];\n\nexport type AdditionalMatcherKey = Exclude<MatcherClassKey, HiddenMatcherKey | InitialMatcherKey>;\ntype AdditionalMatcher = typeof MatcherLookup[AdditionalMatcherKey];\n\n// The set of non-initial matchers a user can pick for a given rule.\nexport const getAvailableAdditionalMatchers = (ruleType: RuleType): AdditionalMatcher[] => {\n    return Object.values(MatchersByType[ruleType])\n        .filter((matcher: MatcherClass) => {\n            const matcherKey = MatcherClassKeyLookup.get(matcher)!;\n\n            if (HiddenMatchers.includes(matcherKey as HiddenMatcherKey)) return false;\n            if (InitialMatcherClasses.includes(matcher as any)) return false;\n\n            return serverSupports(PartVersionRequirements[matcherKey]);\n        });\n};\n\nexport const isHiddenMatcherKey = (key: MatcherClassKey) =>\n    HiddenMatchers.includes(key as HiddenMatcherKey);\n\nconst HiddenHandlers = [\n    'json-rpc-response', // Only used internally, by Ethereum rules\n    'rtc-peer-proxy', // Not usable interactively\n    'callback',\n    'stream',\n    'wait-for-rtc-track' // Not super useful here I think\n] as const;\n\nconst MatcherLimitedHandlers: {\n    [K in HandlerClassKey]?: ((matcher: InitialMatcher) => boolean)\n} = {\n    // Ethereum interaction-specific handlers:\n    'eth-call-result': (matcher: InitialMatcher) =>\n        matcher instanceof EthereumMethodMatcher &&\n        matcher.methodName === 'eth_call',\n    'eth-number-result': (matcher: InitialMatcher) =>\n        matcher instanceof EthereumMethodMatcher &&\n        [\n            'eth_getBalance',\n            'eth_blockNumber',\n            'eth_gasPrice'\n        ].includes(matcher.methodName),\n    'eth-hash-result': (matcher: InitialMatcher) =>\n        matcher instanceof EthereumMethodMatcher &&\n        [\n            'eth_sendRawTransaction',\n            'eth_sendTransaction'\n        ].includes(matcher.methodName),\n    'eth-receipt-result': (matcher: InitialMatcher) =>\n        matcher instanceof EthereumMethodMatcher &&\n        matcher.methodName === 'eth_getTransactionReceipt',\n    'eth-block-result': (matcher: InitialMatcher) =>\n        matcher instanceof EthereumMethodMatcher &&\n        [\n            'eth_getBlockByHash',\n            'eth_getBlockByNumber'\n        ].includes(matcher.methodName),\n\n    // IPFS interaction-specific handlers:\n    'ipfs-cat-text': (matcher: InitialMatcher) =>\n        matcher instanceof IpfsInteractionMatcher &&\n        matcher.interactionName === 'cat',\n    'ipfs-cat-file': (matcher: InitialMatcher) =>\n        matcher instanceof IpfsInteractionMatcher &&\n        matcher.interactionName === 'cat',\n    'ipfs-add-result': (matcher: InitialMatcher) =>\n        matcher instanceof IpfsInteractionMatcher &&\n        matcher.interactionName === 'add',\n    'ipns-resolve-result': (matcher: InitialMatcher) =>\n        matcher instanceof IpfsInteractionMatcher &&\n        matcher.interactionName === 'name/resolve',\n    'ipns-publish-result': (matcher: InitialMatcher) =>\n        matcher instanceof IpfsInteractionMatcher &&\n        matcher.interactionName === 'name/publish',\n    'ipfs-pins-result': (matcher: InitialMatcher) =>\n        matcher instanceof IpfsInteractionMatcher &&\n        [\n            'pin/add',\n            'pin/rm'\n        ].includes(matcher.interactionName),\n    'ipfs-pin-ls-result': (matcher: InitialMatcher) =>\n        matcher instanceof IpfsInteractionMatcher &&\n        matcher.interactionName === 'pin/ls',\n};\n\ntype HiddenHandlerKey = typeof HiddenHandlers[number];\nexport type AvailableHandlerKey = Exclude<HandlerClassKey, HiddenHandlerKey>;\nexport type AvailableHandler = typeof HandlerLookup[AvailableHandlerKey];\n\nexport const getAvailableHandlers = (\n    ruleType: RuleType,\n    initialMatcher: InitialMatcher | undefined\n): AvailableHandler[] => {\n    return Object.values(HandlersByType[ruleType])\n        .filter((handler) => {\n            const handlerKey = HandlerClassKeyLookup.get(handler)!;\n\n            if (HiddenHandlers.includes(handlerKey as HiddenHandlerKey)) return false;\n\n            // Some handlers require a specific initial matcher, or they're not available.\n            // In those cases, we check the initial matcher is valid:\n            const matcherCheck = MatcherLimitedHandlers[handlerKey];\n            if (\n                matcherCheck !== undefined &&\n                (!initialMatcher || !matcherCheck(initialMatcher))\n            ) return false;\n\n            return serverSupports(PartVersionRequirements[handlerKey]);\n        });\n};\n\nconst FinalHandlerSteps = [\n    'echo-rtc',\n    'rtc-peer-proxy',\n    'rtc-dynamic-proxy',\n    'close-rtc-connection'\n] as const;\n\n// Handlers are final if a) they're not steps, just normal handlers, or b) if they are steps, but\n// they're final steps that preclude any further interactions (e.g. closing a connection).\nexport const isFinalHandler = (handler: Handler) => {\n    const handlerKey = getRulePartKey(handler) as any; // Any -> can't includes() const arrays otherwise\n\n    return !Object.keys(HandlerSteps).includes(handlerKey) ||\n        FinalHandlerSteps.includes(handlerKey);\n}\n\nconst PaidHandlerClasses: HandlerClass[] = [\n    StaticResponseHandler,\n    FromFileResponseHandler,\n    ForwardToHostHandler,\n    TransformingHandler,\n    TimeoutHandler,\n    CloseConnectionHandler,\n    ResetConnectionHandler,\n    EchoWebSocketHandlerDefinition,\n    RejectWebSocketHandlerDefinition,\n    ListenWebSocketHandlerDefinition\n];\n\nexport const isPaidHandler = (\n    ruleType: RuleType,\n    handler: Handler\n) => {\n    if (ruleType !== 'http' && ruleType !== 'websocket') return false;\n    return _.some(PaidHandlerClasses, (cls) => handler instanceof cls);\n}\n\nexport const isPaidHandlerClass = (\n    ruleType: RuleType,\n    handlerClass: HandlerClass\n) => {\n    if (ruleType !== 'http' && ruleType !== 'websocket') return false;\n    return PaidHandlerClasses.includes(handlerClass);\n}\n\n/// --- Rules ---\n\nexport type HtkMockRule = (\n    | HttpMockRule\n    | WebSocketMockRule\n    | EthereumMockRule\n    | IpfsMockRule\n    | RTCMockRule\n) & {\n    title?: string;\n};\n\nexport type RuleType = HtkMockRule['type'];\n\nconst matchRuleType = <T extends RuleType>(\n    ...types: T[]\n) => (type: string): type is T =>\n    types.includes(type as T);\n\nconst matchRule = <T extends RuleType>(\n    matcher: (type: string) => type is T\n) => (rule: HtkMockRule): rule is HtkMockRule & { type: T } =>\n    matcher(rule.type);\n\nexport const isHttpCompatibleType = matchRuleType('http', 'ethereum', 'ipfs');\nexport const isHttpBasedRule = matchRule(isHttpCompatibleType);\nexport const isWebSocketRule = matchRule(matchRuleType('websocket'));\nexport const isRTCRule = matchRule(matchRuleType('webrtc'));\n\nexport const isStepPoweredRule = isRTCRule;","import * as _ from 'lodash';\n\nimport { ExchangeMessage } from '../../types';\nimport { Theme } from '../../styles';\nimport { lastHeader } from '../../util/headers';\n\nimport { getBaseContentType } from './content-types';\n\nimport { HTKEventBase } from './event-base';\nimport { HttpExchange, SuccessfulExchange } from '../http/exchange';\n\nexport const getMessageBaseAcceptTypes = (message: ExchangeMessage) =>\n    (lastHeader(message.headers['accept'])?.split(',') || [])\n        .map((acceptType) => getBaseContentType(acceptType));\n\nexport const getMessageBaseContentType = (message: ExchangeMessage) =>\n    getBaseContentType(lastHeader(message.headers['content-type']));\n\nconst isMutatativeExchange = (exchange: HttpExchange) => _.includes([\n    'POST',\n    'PATCH',\n    'PUT',\n    'DELETE'\n], exchange.request.method);\n\nconst isImageExchange = (exchange: SuccessfulExchange) => {\n    const requestAcceptTypes = getMessageBaseAcceptTypes(exchange.request);\n    if (\n        requestAcceptTypes.length > 0 &&\n        requestAcceptTypes.every(type => type.startsWith('image/'))\n    ) {\n        return true;\n    }\n\n    else if (exchange.request.headers['sec-fetch-dest'] === 'image') return true;\n\n    else return getMessageBaseContentType(exchange.response).startsWith('image/');\n}\n\nconst DATA_CONTENT_TYPES = [\n    'application/json',\n    'application/xml',\n    'application/rss',\n    'text/plain', // Not formally 'data', but usually used as such in practice\n    'text/xml',\n    'text/json',\n    'multipart/form-data',\n    'application/x-www-form-urlencoded',\n    'application/x-protobuf'\n];\n\nconst isDataExchange = (exchange: SuccessfulExchange) => {\n    const requestAcceptTypes = getMessageBaseAcceptTypes(exchange.request)\n    if (\n        requestAcceptTypes.length > 0 &&\n        requestAcceptTypes.every(type => DATA_CONTENT_TYPES.includes(type))\n    ) {\n        return true;\n    }\n\n    return _.includes(DATA_CONTENT_TYPES, getMessageBaseContentType(exchange.response));\n}\n\nconst isJSExchange = (exchange: SuccessfulExchange) =>\n    exchange.request.headers['sec-fetch-dest'] === 'script' ||\n    _.includes([\n        'text/javascript',\n        'application/javascript',\n        'application/x-javascript',\n        'application/ecmascript'\n    ], getMessageBaseContentType(exchange.response));\n\nconst isCSSExchange = (exchange: SuccessfulExchange) =>\n    exchange.request.headers['sec-fetch-dest'] === 'style' ||\n    _.includes([\n        'text/css'\n    ], getMessageBaseContentType(exchange.response));\n\nconst isHTMLExchange = (exchange: SuccessfulExchange) =>\n    exchange.request.headers['sec-fetch-dest'] === 'document' ||\n    getMessageBaseContentType(exchange.response) === 'text/html';\n\nconst isFontExchange = (exchange: SuccessfulExchange) =>\n    exchange.request.headers['sec-fetch-dest'] === 'font' ||\n    getMessageBaseContentType(exchange.response).startsWith('font/') ||\n    _.includes([\n        'application/font-woff',\n        'application/x-font-woff',\n        'application/font-otf',\n        'application/font',\n        'application/vnd.ms-fontobject',\n        'application/x-font-ttf',\n        'application/x-font-typetype',\n        'application/x-font-opentype',\n    ], getMessageBaseContentType(exchange.response));\n\nexport const EventCategories = [\n    'image',\n    'js',\n    'css',\n    'html',\n    'font',\n    'data',\n    'rtc-data',\n    'rtc-media',\n    'mutative',\n    'websocket',\n    'incomplete',\n    'aborted',\n    'unknown'\n] as const;\nexport type EventCategory = typeof EventCategories[number];\n\nexport function getEventCategory(event: HTKEventBase): EventCategory {\n    if (event.isHttp()) {\n        if (!event.isCompletedExchange()) {\n            if (isMutatativeExchange(event)) {\n                return 'mutative';\n            } else {\n                return 'incomplete';\n            }\n        } else if (!event.isSuccessfulExchange()) {\n            return 'aborted';\n        } else if (event.isWebSocket()) {\n            return 'websocket';\n        } else if (isMutatativeExchange(event)) {\n            return 'mutative';\n        } else if (isImageExchange(event)) {\n            return 'image';\n        } else if (isJSExchange(event)) {\n            return 'js';\n        } else if (isCSSExchange(event)) {\n            return 'css';\n        } else if (isHTMLExchange(event)) {\n            return 'html';\n        } else if (isFontExchange(event)) {\n            return 'font';\n        } else if (isDataExchange(event)) {\n            return 'data';\n        }\n    } else if (event.isRTCDataChannel()) {\n        return 'rtc-data';\n    } else if (event.isRTCMediaTrack()) {\n        return 'rtc-media';\n    }\n\n    return 'unknown';\n};\n\nexport function describeEventCategory(category: EventCategory) {\n    const categoryColour = getSummaryColour(category);\n    const colourName = _.startCase(_.findKey(highlights, (c) => c === categoryColour)!);\n\n    return `${colourName}: ${({\n        \"mutative\": \"a request that might affect the server state (unlike a GET request)\",\n        \"incomplete\": \"an incomplete request\",\n        \"aborted\": \"an aborted request\",\n        \"image\": \"a request for an image\",\n        \"js\": \"a request for JavaScript\",\n        \"css\": \"a request for CSS\",\n        \"html\": \"a request for HTML\",\n        \"font\": \"a request for a font file\",\n        \"data\": \"an API request\",\n        \"websocket\": \"a WebSocket stream\",\n        \"rtc-data\": \"a WebRTC data stream\",\n        \"rtc-media\": \"a WebRTC media stream\",\n        \"unknown\": \"an unknown type of request\"\n    } as const)[category]}`;\n}\n\nconst highlights = {\n    black: '#000',\n    grey: '#888',\n    red: '#ce3939',\n    lightGreen: '#4caf7d',\n    brightGreen: '#409309',\n    orange: '#ff8c38',\n    yellow: '#e9f05b',\n    lightBlue: '#2fb4e0',\n    darkBlue: '#5a80cc',\n    purple: '#6e40aa',\n    pink: '#dd3a96'\n};\n\nexport function getSummaryColour(exchangeOrCategory: HttpExchange | EventCategory): string {\n    const category = typeof exchangeOrCategory === 'string' ?\n        exchangeOrCategory : exchangeOrCategory.category;\n\n    switch (category) {\n        case 'incomplete':\n        case 'aborted':\n            return highlights.black;\n        case 'mutative':\n            return highlights.red;\n        case 'data':\n        case 'rtc-data':\n            return highlights.purple;\n        case 'websocket':\n            return highlights.lightBlue;\n        case 'image':\n            return highlights.lightGreen;\n        case 'font':\n        case 'rtc-media':\n            return highlights.brightGreen;\n        case 'js':\n            return highlights.orange;\n        case 'css':\n            return highlights.yellow;\n        case 'html':\n            return highlights.darkBlue;\n        case 'unknown':\n            return highlights.grey;\n    }\n}\n\nexport function getStatusColor(status: undefined | 'aborted' | number, theme: Theme): string {\n    if (!status || status === 'aborted' || status < 100 || status >= 600) {\n        // All odd undefined/unknown cases\n        return theme.mainColor;\n    } else if (status >= 500) {\n        return highlights.red;\n    } else if (status >= 400) {\n        return highlights.orange;\n    } else if (status >= 300) {\n        return highlights.darkBlue;\n    } else if (status >= 200) {\n        return highlights.lightGreen;\n    } else if (status === 101) {\n        return highlights.lightBlue; // Almost always a websocket, so special case to match\n    } else if (status >= 100) {\n        return highlights.grey;\n    }\n\n    // Anything else weird.\n    return highlights.black;\n}\n\nexport function getWebSocketCloseColor(closeCode: undefined | 'aborted' | number, theme: Theme): string {\n    // See https://datatracker.ietf.org/doc/html/rfc6455#section-7.4.1 for definitions\n    if (!closeCode || closeCode === 'aborted') {\n        // All odd undefined/unknown cases\n        return theme.mainColor;\n    } else if (closeCode === 1000 || closeCode === 1001) {\n        // Closed OK or due to clean client/server shutdown\n        return highlights.lightGreen;\n    } else if (closeCode >= 1002 && closeCode <= 3000) {\n        // Closed due to some protocol errors\n        return highlights.red;\n    } else if (closeCode >= 3000) {\n        return highlights.orange;\n    }\n\n    // Anything else weird.\n    return highlights.black;\n}\n\nexport function getMethodColor(method: string): string {\n    if (method === 'GET') {\n        return highlights.lightGreen;\n    } else if (method === 'POST') {\n        return highlights.orange;\n    } else if (method === 'DELETE') {\n        return highlights.red;\n    } else if (method === 'PUT') {\n        return highlights.purple;\n    } else if (method === 'PATCH') {\n        return highlights.pink;\n    } else if (method === 'HEAD') {\n        return highlights.darkBlue;\n    } else if (method === 'OPTIONS') {\n        return highlights.lightBlue;\n    } else {\n        return highlights.grey;\n    }\n}","import * as _ from 'lodash';\n\nimport {\n    byteStreamToLines,\n    emptyStream,\n    parseJsonLinesStream\n} from '../util/streams';\n\nimport { RawHeaders } from '../types';\nimport {\n    ServerConfig,\n    NetworkInterfaces,\n    ServerInterceptor,\n    ApiError\n} from './server-api-types';\n\nimport {\n    RequestDefinition,\n    RequestOptions\n} from '../model/send/send-request-model';\nimport {\n    ResponseStreamEvent\n} from '../model/send/send-response-model';\n\nexport class RestApiClient {\n\n    constructor(\n        private authToken?: string\n    ) {}\n\n    private async apiRequest(\n        method: string,\n        path: string,\n        query: Record<string, number | string> = {},\n        body?: object\n    ) {\n        const operationName = `${method} ${path}`;\n\n        const response = await fetch(`http://127.0.0.1:45457${path}${\n            Object.keys(query).length\n                ? '?' + new URLSearchParams(_.mapValues(query, (v) => v.toString())).toString()\n                : ''\n        }`, {\n            method,\n            headers: {\n                ...(this.authToken ? {\n                    'Authorization': `Bearer ${this.authToken}`,\n                } : {}),\n                'content-type': 'application/json'\n            },\n            body: body\n                ? JSON.stringify(body)\n                : undefined\n        }).catch((e) => {\n            throw new ApiError(`fetch failed with '${e.message ?? e}'`, operationName);\n        });\n\n        if (!response.ok) {\n            const errorBody: {\n                error?: {\n                    message?: string,\n                    code?: string\n                }\n            } | null = await response.json().catch(e => null);\n\n            console.error(response.status, errorBody);\n\n            throw new ApiError(\n                `unexpected ${response.status} ${response.statusText} - ${\n                    errorBody?.error?.code\n                        ? `${errorBody?.error?.code} -`\n                        : ''\n                }${\n                    errorBody?.error?.message ?? '[unknown]'\n                }`,\n                operationName,\n                response.status\n            );\n        }\n\n        return response;\n    }\n\n    private async apiJsonRequest<T extends {}>(\n        method: string,\n        path: string,\n        query: Record<string, number | string> = {},\n        body?: object\n    ): Promise<T> {\n        return await (\n            await this.apiRequest(method, path, query, body)\n        ).json() as T;\n    }\n\n    private async apiNdJsonRequest<T extends {}>(\n        method: string,\n        path: string,\n        query: Record<string, number | string> = {},\n        body?: object\n    ): Promise<ReadableStream<T>> {\n        const response = await this.apiRequest(method, path, query, body);\n\n        if (!response.body) return emptyStream();\n\n        return parseJsonLinesStream(\n            byteStreamToLines(response.body)\n        );\n    }\n\n    async getServerVersion(): Promise<string> {\n        const response = await this.apiJsonRequest<{\n            version: string\n        }>('get', '/version');\n        return response.version;\n    }\n\n    async getConfig(proxyPort: number) {\n        const response = await this.apiJsonRequest<{\n            config: ServerConfig\n        }>('GET', '/config', { proxyPort: proxyPort });\n\n        return response.config;\n    }\n\n    async getNetworkInterfaces() {\n        const response = await this.apiJsonRequest<{\n            networkInterfaces: NetworkInterfaces\n        }>('GET', '/config/network-interfaces');\n\n        return response.networkInterfaces;\n    }\n\n    async getInterceptors(proxyPort: number) {\n        const response = await this.apiJsonRequest<{\n            interceptors: ServerInterceptor[]\n        }>('GET', '/interceptors', { proxyPort });\n\n        return response.interceptors;\n    }\n\n    async getDetailedInterceptorMetadata<M extends unknown>(id: string): Promise<M | undefined> {\n        const response = await this.apiJsonRequest<{\n            interceptorMetadata: M\n        }>('GET', `/interceptors/${id}/metadata`);\n\n        return response.interceptorMetadata;\n    }\n\n    async activateInterceptor(id: string, proxyPort: number, options?: any) {\n        const response = await this.apiJsonRequest<{\n            result: { success: boolean, metadata: unknown }\n        }>('POST', `/interceptors/${id}/activate/${proxyPort}`, {}, options);\n\n        return response.result;\n    }\n\n    async sendRequest(\n        requestDefinition: RequestDefinition,\n        requestOptions: RequestOptions\n    ) {\n        const requestDefinitionData = {\n            ...requestDefinition,\n            rawBody: requestDefinition.rawBody?.toString('base64')\n        }\n\n        const requestOptionsData = {\n            ...requestOptions,\n            ...(requestOptions.clientCertificate ? {\n                clientCertificate: {\n                    ...requestOptions.clientCertificate,\n                    pfx: requestOptions.clientCertificate.pfx.toString('base64')\n                }\n            } : {})\n        }\n\n        const responseDataStream = await this.apiNdJsonRequest<ResponseStreamEventData>(\n            'POST', '/client/send', {}, {\n                request: requestDefinitionData,\n                options: requestOptionsData\n            }\n        );\n\n        const dataStreamReader = responseDataStream.getReader();\n        return new ReadableStream<ResponseStreamEvent>({\n            async pull(controller) {\n                const { done, value } = await dataStreamReader.read();\n                if (done) return controller.close();\n\n                if (value.type === 'response-body-part') {\n                    controller.enqueue({\n                        ...value,\n                        rawBody: Buffer.from(value.rawBody, 'base64')\n                    });\n                } else {\n                    controller.enqueue(value);\n                }\n            },\n            cancel(reason) {\n                responseDataStream.cancel(reason);\n            }\n        });\n    }\n\n    async triggerServerUpdate() {\n        await this.apiJsonRequest<{}>('POST', '/update');\n    }\n}\n\ntype ResponseStreamEventData =\n    | RequestStartData\n    | ResponseHeadData\n    | ResponseBodyPartData\n    | ResponseEndData;\n\ninterface RequestStartData {\n    type: 'request-start';\n    startTime: number;\n    timestamp: number;\n}\n\ninterface ResponseHeadData {\n    type: 'response-head';\n    statusCode: number;\n    statusMessage?: string;\n    headers: RawHeaders;\n    timestamp: number;\n}\n\ninterface ResponseBodyPartData {\n    type: 'response-body-part';\n    rawBody: string; // base64\n    timestamp: number;\n}\n\ninterface ResponseEndData {\n    type: 'response-end';\n    timestamp: number;\n}\n\n","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { observable, autorun, action } from 'mobx';\nimport { disposeOnUnmount, observer } from 'mobx-react';\nimport type { SchemaObject } from 'openapi-directory';\nimport * as portals from 'react-reverse-portal';\n\nimport { ExchangeMessage } from '../../../types';\n\nimport { ErrorLike } from '../../../util/error';\nimport { getHeaderValue, lastHeader } from '../../../util/headers';\n\nimport { ViewableContentType, getCompatibleTypes } from '../../../model/events/content-types';\n\nimport { CollapsibleCard, ExpandableCardProps } from '../../common/card';\n\nimport {\n    EditorCardContent,\n    ReadonlyBodyCardHeader,\n    getBodyDownloadFilename,\n    BodyDecodingErrorBanner\n} from '../../editor/body-card-components';\n\nimport { LoadingCard } from '../../common/loading-card';\nimport { ContentViewer } from '../../editor/content-viewer';\nimport { SelfSizedEditor } from '../../editor/base-editor';\n\n// A selection of content types you might want to try out, to explore your encoded data:\nconst ENCODED_DATA_CONTENT_TYPES = ['text', 'raw', 'base64', 'image'] as Array<ViewableContentType>;\n\n@observer\nexport class HttpBodyCard extends React.Component<ExpandableCardProps & {\n    title: string,\n    direction?: 'left' | 'right',\n    onCollapseToggled: () => void,\n\n    isPaidUser: boolean,\n    url: string,\n    message: ExchangeMessage,\n    apiBodySchema?: SchemaObject,\n    editorNode: portals.HtmlPortalNode<typeof SelfSizedEditor>\n}> {\n\n    @observable\n    private selectedContentType: ViewableContentType | undefined;\n\n    componentDidMount() {\n        disposeOnUnmount(this, autorun(() => {\n            const message = this.props.message;\n\n            if (!message) {\n                this.onChangeContentType(undefined);\n                return;\n            }\n        }));\n    }\n\n    @action.bound\n    onChangeContentType(contentType: ViewableContentType | undefined) {\n        if (contentType === this.props.message.contentType) {\n            this.selectedContentType = undefined;\n        } else {\n            this.selectedContentType = contentType;\n        }\n    }\n\n    render() {\n        const {\n            title,\n            url,\n            message,\n            apiBodySchema,\n            direction,\n            isPaidUser,\n            collapsed,\n            expanded,\n            onCollapseToggled,\n            onExpandToggled\n        } = this.props;\n\n        const compatibleContentTypes = getCompatibleTypes(\n            message.contentType,\n            lastHeader(message.headers['content-type']),\n            message.body\n        );\n        const decodedContentType = compatibleContentTypes.includes(this.selectedContentType!)\n            ? this.selectedContentType!\n            : message.contentType;\n\n        const decodedBody = message.body.decoded;\n\n        if (decodedBody) {\n            // We have successfully decoded the body content, show it:\n            return <CollapsibleCard\n                direction={direction}\n                collapsed={collapsed}\n                onCollapseToggled={onCollapseToggled}\n                expanded={expanded}\n            >\n                <header>\n                    <ReadonlyBodyCardHeader\n                        body={decodedBody}\n                        mimeType={getHeaderValue(message.headers, 'content-type')}\n                        downloadFilename={getBodyDownloadFilename(url, message.headers)}\n\n                        title={title}\n                        expanded={!!expanded}\n                        onExpandToggled={onExpandToggled}\n                        onCollapseToggled={onCollapseToggled}\n\n                        selectedContentType={decodedContentType}\n                        contentTypeOptions={compatibleContentTypes}\n                        onChangeContentType={this.onChangeContentType}\n\n                        isPaidUser={isPaidUser}\n                    />\n                </header>\n                <EditorCardContent>\n                    <ContentViewer\n                        contentId={`${message.id}-${direction}`}\n                        editorNode={this.props.editorNode}\n                        rawContentType={lastHeader(message.headers['content-type'])}\n                        contentType={decodedContentType}\n                        schema={apiBodySchema}\n                        expanded={!!expanded}\n                        cache={message.cache}\n                    >\n                        {decodedBody}\n                    </ContentViewer>\n                </EditorCardContent>\n            </CollapsibleCard>;\n        } else if (!decodedBody && message.body.decodingError) {\n            // We have failed to decode the body content! Show the error & raw encoded data instead:\n            const error = message.body.decodingError as ErrorLike;\n            const encodedBody = Buffer.isBuffer(message.body.encoded)\n                ? message.body.encoded\n                : undefined;\n\n            const encodedDataContentType = ENCODED_DATA_CONTENT_TYPES.includes(this.selectedContentType!)\n                ? this.selectedContentType!\n                : 'text';\n\n            return <CollapsibleCard\n                direction={direction}\n                collapsed={collapsed}\n                onCollapseToggled={onCollapseToggled}\n                expanded={expanded}\n            >\n                <header>\n                    <ReadonlyBodyCardHeader\n                        body={encodedBody}\n                        mimeType={'application/octet-stream'} // Ignore content type, as it's encoded\n                        downloadFilename={getBodyDownloadFilename(url, message.headers)}\n\n                        title={title}\n                        expanded={expanded}\n                        onExpandToggled={onExpandToggled}\n                        onCollapseToggled={onCollapseToggled}\n\n                        selectedContentType={encodedDataContentType}\n                        contentTypeOptions={ENCODED_DATA_CONTENT_TYPES}\n                        onChangeContentType={this.onChangeContentType}\n\n                        isPaidUser={isPaidUser}\n                    />\n                </header>\n                <BodyDecodingErrorBanner\n                    direction={this.props.direction}\n                    error={error}\n                    headers={message.rawHeaders}\n                />\n                { encodedBody &&\n                    <EditorCardContent>\n                        <ContentViewer\n                            contentId={`${message.id}-${direction}`}\n                            editorNode={this.props.editorNode}\n                            contentType={encodedDataContentType}\n                            expanded={!!expanded}\n                            cache={message.cache}\n                        >\n                            { encodedBody }\n                        </ContentViewer>\n                    </EditorCardContent>\n                }\n            </CollapsibleCard>;\n        } else {\n            // No body content, but no error yet, show a loading spinner:\n            return <LoadingCard\n                direction={direction}\n                collapsed={collapsed}\n                onCollapseToggled={onCollapseToggled}\n                expanded={expanded}\n            >\n                <header>\n                    <ReadonlyBodyCardHeader\n                        body={undefined}\n\n                        title={title}\n                        expanded={!!expanded}\n                        onExpandToggled={onExpandToggled}\n                        onCollapseToggled={onCollapseToggled}\n\n                        selectedContentType={decodedContentType}\n                        contentTypeOptions={compatibleContentTypes}\n                        onChangeContentType={this.onChangeContentType}\n                        isPaidUser={isPaidUser}\n                    />\n                </header>\n            </LoadingCard>;\n        }\n    }\n\n}","import { observable, createAtom, IAtom, computed, IComputedValueOptions, IComputedValue } from 'mobx';\nimport { IPromiseBasedObservable, fromPromise, PromiseState } from 'mobx-utils';\n\nimport { Omit } from '../types';\nimport { getDeferred } from './promise';\n\nexport type ObservablePromise<T> =\n    Omit<\n        IPromiseBasedObservable<T>,\n        'then' | 'catch' | 'value'\n    > & {\n        value: T | Error | undefined,\n        then<TResult1 = T, TResult2 = never>(\n            onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,\n            onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null\n        ): ObservablePromise<TResult1 | TResult2>;\n        catch<TResult = never>(\n            onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null\n        ): ObservablePromise<T | TResult>;\n    };\n\nexport function observablePromise<T>(p: Promise<T> |  ObservablePromise<T>): ObservablePromise<T> {\n    const observable = fromPromise(p) as ObservablePromise<T>;\n\n    const originalThen = observable.then;\n    observable.then = function (this: ObservablePromise<T>): any {\n        const result = originalThen.apply(this, arguments as any);\n        return observablePromise(result);\n    }\n\n    const originalCatch = observable.catch;\n    observable.catch = <any>function (this: ObservablePromise<T>) {\n        const result = originalCatch.apply(this, arguments as any);\n        return observablePromise(result);\n    }\n\n    return observable;\n}\n\nexport function isObservablePromise<T>(p: any): p is ObservablePromise<T> {\n    return typeof p === 'object' &&\n        'then' in p &&\n        'catch' in p &&\n        'case' in p &&\n        'value' in p &&\n        'state' in p;\n}\n\n// Creates an observable promise which doesn't run until somebody tries\n// to check the value or wait for it to resolve somehow.\nexport function lazyObservablePromise<T>(p: () => PromiseLike<T>): ObservablePromise<T> {\n    const { resolve: trigger, promise: triggerPromise } = getDeferred();\n\n    const lazyPromise = observablePromise(triggerPromise.then(p));\n\n    ([\n        'then',\n        'catch',\n        'case'\n    ] as Array<'then' | 'catch' | 'case'>).forEach((methodName) => {\n        const originalMethod = lazyPromise[methodName] as Function;\n        lazyPromise[methodName] = function (this: ObservablePromise<T>): any {\n            trigger();\n            return originalMethod.apply(this, arguments);\n        };\n    });\n\n    let value = observable.box<T | Error | undefined>();\n    Object.defineProperty(lazyPromise, 'value', {\n        get: () => {\n            trigger();\n            return value.get();\n        },\n        set: (newValue) => {\n            trigger();\n            value.set(newValue);\n        }\n    });\n\n    let state = observable.box<PromiseState>();\n    Object.defineProperty(lazyPromise, 'state', {\n        get: () => {\n            trigger();\n            return state.get();\n        },\n        set: (newState) => {\n            trigger();\n            state.set(newState);\n        }\n    });\n\n    return lazyPromise;\n}\n\nfunction debounced<T>(fn: () => T, timeoutMs: number): () => T {\n    let cachedValue: { value: T, atom: IAtom } | undefined;\n\n    return function (this: any) {\n        if (cachedValue) {\n            cachedValue.atom.reportObserved();\n        } else {\n            // Calculate and cache the result:\n            cachedValue = {\n                value: fn.apply(this),\n                atom: createAtom(\"DebounceAtom\")\n            };\n\n            // Batch subsequent runs for the next timeoutMs:\n            setTimeout(() => {\n                const { atom } = cachedValue!;\n                cachedValue = undefined;\n                atom.reportChanged(); // Ping subscribers to update\n            }, timeoutMs);\n        }\n        return cachedValue.value;\n    }\n}\n\nexport function debounceComputed<T>(timeoutMs: number, computedOptions?: IComputedValueOptions<T>): MethodDecorator;\nexport function debounceComputed<T>(callback: () => T, timeoutMs: number, computedOptions?: IComputedValueOptions<T>): IComputedValue<T>;\nexport function debounceComputed<T>(\n    cbOrTimeout: number | (() => T),\n    optionsOrTimeout?: IComputedValueOptions<T> | number,\n    maybeOptions?: IComputedValueOptions<T>\n): MethodDecorator | IComputedValue<T> {\n    let fn: () => T;\n    let timeoutMs: number;\n    let computedOptions: IComputedValueOptions<T>;\n\n    if (typeof cbOrTimeout === 'number') {\n        timeoutMs = cbOrTimeout;\n        computedOptions = (optionsOrTimeout as IComputedValueOptions<T>) ?? {};\n\n        return <T>(target: any, key: string | symbol, descriptor: TypedPropertyDescriptor<T>): void => {\n            if (!descriptor.get) throw new Error('debounceComputed requires a getter');\n            return computed(computedOptions)(target, key, {\n                ...descriptor,\n                get: debounced(descriptor.get, timeoutMs)\n            });\n        };\n    } else {\n        fn = cbOrTimeout;\n        timeoutMs = optionsOrTimeout as number;\n        computedOptions = maybeOptions ?? {};\n\n        return computed(debounced(fn, timeoutMs), computedOptions);\n    }\n}","/*\n * SPDX-FileCopyrightText: 2022 Tim Perry <tim@httptoolkit.com>\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport _ from 'lodash';\nimport {\n    matchers,\n    completionCheckers,\n    RequestRuleData\n} from 'mockttp';\nimport * as serializr from 'serializr';\n\nimport { byteLength } from '../../../util';\nimport {\n    HttpHandlerLookup\n} from './http-rule-definitions';\n\nexport const IpfsInteractions = {\n    'cat': \"Read IPFS content\",\n    'add': 'Add a file or directory to IPFS',\n    'name/resolve': 'Resolve an IPNS name',\n    'name/publish': 'Publish an IPNS name',\n    'pin/add': 'Pin some IPFS content',\n    'pin/rm': 'Unpin some IPFS content',\n    'pin/ls': 'List the pinned IPFS content'\n};\n\nexport type IpfsInteraction = keyof typeof IpfsInteractions;\n\nexport class IpfsInteractionMatcher extends matchers.SimplePathMatcher {\n\n    readonly uiType = 'ipfs-interaction';\n\n    constructor(\n        public readonly interactionName: IpfsInteraction = 'cat',\n    ) {\n        super(`/api/v0/${interactionName}`);\n    }\n\n    explain() {\n        return `IPFS ${this.interactionName} requests`;\n    }\n\n}\n\nexport const IpfsArgDescription: {\n    [I in IpfsInteraction]?: { argType: string, placeholder: string }\n} = {\n    'cat': {\n        argType: 'IPFS path',\n        placeholder: 'The path to the IPFS object(s) to be read'\n    },\n    'name/resolve': {\n        // ^ Technically not required, but very unusual to not specify I think\n        argType: 'IPNS name',\n        placeholder: 'The IPNS name to resolve'\n    },\n    'name/publish': {\n        argType: 'IPFS path',\n        placeholder: 'The IPFS path of the object to be published'\n    },\n    'pin/add': {\n        argType: 'IPFS path',\n        placeholder: 'The IPFS path to the object(s) to be pinned',\n    },\n    'pin/rm': {\n        argType: 'IPFS path',\n        placeholder: 'The IPFS path to the object(s) to be unpinned'\n    }\n};\n\nexport const shouldSuggestArgMatcher = (interaction: IpfsInteraction) =>\n    Object.keys(IpfsArgDescription).includes(interaction);\n\nexport class IpfsArgMatcher extends matchers.QueryMatcher {\n\n    readonly uiType = 'ipfs-arg';\n\n    constructor(\n        public readonly interaction: IpfsInteraction,\n        public readonly argValue: string | undefined = undefined,\n    ) {\n        super(argValue ? { arg: argValue } : {});\n    }\n\n    explain() {\n        return `for ${\n            this.argValue\n            ?? `any ${IpfsArgDescription[this.interaction]?.argType ?? 'value'}`\n        }`;\n    }\n\n}\n\nconst buildIpfsFixedValueDefaultHeaders = (body?: string | Buffer) => ({\n    'cache-control': 'no-cache',\n    'connection': 'close',\n    'date': new Date().toUTCString(),\n    'content-type': 'application/json; charset=utf-8',\n    ...(body !== undefined\n        ? { 'content-length': byteLength(body).toString() }\n        : {}\n    )\n});\n\nconst buildIpfsStreamDefaultHeaders = () => ({\n    'cache-control': 'no-cache',\n    'connection': 'close',\n    'date': new Date().toUTCString(),\n    'content-type': 'application/json; charset=utf-8',\n    'transfer-encoding': 'chunked',\n    // 'trailer': 'X-Stream-Error',\n    // ^ This is normally present but we skip it for now, since it causes issues with Node 18:\n    // https://github.com/nodejs/undici/issues/1418\n    'x-chunked-output': '1'\n});\n\n// When extending simple handlers, we need to provide a schema to avoid this being deserialized using\n// StaticResponseHandler's explicit schema, which is required to handle buffers nicely, but results\n// in the wrong class for the deserialized instances.\nconst simpleHandlerSchema = serializr.getDefaultModelSchema(HttpHandlerLookup['simple']);\n\nexport class IpfsCatTextHandler extends HttpHandlerLookup['simple'] {\n\n    readonly uiType = 'ipfs-cat-text';\n\n    constructor(\n        public readonly result: string | Buffer\n    ) {\n        super(\n            200,\n            undefined,\n            result,\n            buildIpfsFixedValueDefaultHeaders(result)\n        );\n    }\n\n    explain() {\n        return `Return fixed IPFS content`;\n    }\n\n}\nserializr.createModelSchema(IpfsCatTextHandler, simpleHandlerSchema.props, () => new IpfsCatTextHandler(''));\n\nexport class IpfsCatFileHandler extends HttpHandlerLookup['file'] {\n\n    readonly uiType = 'ipfs-cat-file';\n\n    constructor(\n        public readonly path: string\n    ) {\n        super(\n            200,\n            undefined,\n            path,\n            buildIpfsFixedValueDefaultHeaders()\n        );\n    }\n\n    explain() {\n        return `Return IPFS content from ${this.path || 'a file'}`;\n    }\n\n}\n\nexport class IpfsAddResultHandler extends HttpHandlerLookup['simple'] {\n\n    readonly uiType = 'ipfs-add-result';\n\n    constructor(\n        public readonly result: Array<{ Name: string, Hash: string }> = [{\n            Name: 'uploaded-file.txt',\n            Hash: 'QmXoypizjW3WknFiJnKLwHCnL72vedxjQkDDP1mXWo6uco'\n        }]\n    ) {\n        super(\n            200,\n            undefined,\n            result.map(json => JSON.stringify(json)).join('\\n'),\n            buildIpfsStreamDefaultHeaders()\n        )\n    }\n\n    explain() {\n        return `Return ${\n            this.result.length === 0\n                ? 'an empty'\n                : 'fixed'\n         } IPFS add result${\n            this.result.length > 1\n                ? 's'\n                : ''\n        }`;\n    }\n\n}\n\nserializr.createModelSchema(IpfsAddResultHandler, simpleHandlerSchema.props, () => new IpfsAddResultHandler());\n\nexport class IpnsResolveResultHandler extends HttpHandlerLookup['simple'] {\n\n    readonly uiType = 'ipns-resolve-result';\n\n    constructor(\n        public readonly result: object = {\n            Path: '/ipfs/QmXoypizjW3WknFiJnKLwHCnL72vedxjQkDDP1mXWo6uco'\n        }\n    ) {\n        super(\n            200,\n            undefined,\n            JSON.stringify(result),\n            buildIpfsFixedValueDefaultHeaders(JSON.stringify(result))\n        )\n    }\n\n    explain() {\n        return `Return a fixed IPNS resolved address`;\n    }\n\n}\n\nserializr.createModelSchema(IpnsResolveResultHandler, simpleHandlerSchema.props, () => new IpnsResolveResultHandler());\n\nexport class IpnsPublishResultHandler extends HttpHandlerLookup['simple'] {\n\n    readonly uiType = 'ipns-publish-result';\n\n    constructor(\n        public readonly result: object = {\n            Name: 'QmY7Yh4UquoXHLPFo2XbhXkhBvFoPwmQUSa92pxnxjQuPU',\n            Value: '/ipfs/QmXoypizjW3WknFiJnKLwHCnL72vedxjQkDDP1mXWo6uco'\n        }\n    ) {\n        super(\n            200,\n            undefined,\n            JSON.stringify(result),\n            buildIpfsFixedValueDefaultHeaders(JSON.stringify(result))\n        )\n    }\n\n    explain() {\n        return `Return a fixed IPNS resolve result`;\n    }\n\n}\n\nserializr.createModelSchema(IpnsPublishResultHandler, simpleHandlerSchema.props, () => new IpnsPublishResultHandler());\n\nexport class IpfsPinsResultHandler extends HttpHandlerLookup['simple'] {\n\n    readonly uiType = 'ipfs-pins-result';\n\n    constructor(\n        public readonly result: object = {\n            Pins: [\n                'QmXoypizjW3WknFiJnKLwHCnL72vedxjQkDDP1mXWo6uco'\n            ]\n        }\n    ) {\n        super(\n            200,\n            undefined,\n            JSON.stringify(result),\n            buildIpfsFixedValueDefaultHeaders(JSON.stringify(result))\n        )\n    }\n\n    explain() {\n        return `Return fixed IPFS pinning results`;\n    }\n\n}\n\nserializr.createModelSchema(IpfsPinsResultHandler, simpleHandlerSchema.props, () => new IpfsPinsResultHandler());\n\nexport class IpfsPinLsResultHandler extends HttpHandlerLookup['simple'] {\n\n    readonly uiType = 'ipfs-pin-ls-result';\n\n    constructor(\n        public readonly result: Array<{ Type: string, Cid: string }> = [\n            { Type: 'direct', Cid: 'QmXoypizjW3WknFiJnKLwHCnL72vedxjQkDDP1mXWo6uco' }\n        ]\n    ) {\n        super(\n            200,\n            undefined,\n            result.map(json => JSON.stringify(json)).join('\\n'),\n            buildIpfsStreamDefaultHeaders()\n        )\n    }\n\n    explain() {\n        return `Return fixed list of IPFS pins`;\n    }\n\n}\n\nserializr.createModelSchema(IpfsPinLsResultHandler, simpleHandlerSchema.props, () => new IpfsPinLsResultHandler());\n\nexport const IpfsMatcherLookup = {\n    'ipfs-interaction': IpfsInteractionMatcher,\n    'ipfs-arg': IpfsArgMatcher,\n    'query': matchers.QueryMatcher,\n    'exact-query-string': matchers.ExactQueryMatcher,\n\n    // The subset of relevant HTTP matchers:\n    'protocol': matchers.ProtocolMatcher,\n    'host': matchers.HostMatcher,\n    'hostname': matchers.HostnameMatcher,\n    'port': matchers.PortMatcher,\n    'header': matchers.HeaderMatcher,\n    'cookie': matchers.CookieMatcher\n};\n\nexport const IpfsInitialMatcherClasses = [\n    IpfsInteractionMatcher\n];\n\nexport const IpfsHandlerLookup = {\n    'ipfs-cat-text': IpfsCatTextHandler,\n    'ipfs-cat-file': IpfsCatFileHandler,\n    'ipfs-add-result': IpfsAddResultHandler,\n    'ipns-publish-result': IpnsPublishResultHandler,\n    'ipns-resolve-result': IpnsResolveResultHandler,\n    'ipfs-pins-result': IpfsPinsResultHandler,\n    'ipfs-pin-ls-result': IpfsPinLsResultHandler,\n\n    'passthrough': HttpHandlerLookup['passthrough'],\n    'forward-to-host': HttpHandlerLookup['forward-to-host'],\n    'timeout': HttpHandlerLookup['timeout'],\n    'close-connection': HttpHandlerLookup['close-connection'],\n    'request-breakpoint': HttpHandlerLookup['request-breakpoint'],\n    'response-breakpoint': HttpHandlerLookup['response-breakpoint'],\n    'request-and-response-breakpoint': HttpHandlerLookup['request-and-response-breakpoint']\n};\n\ntype IpfsMatcherClass = typeof IpfsMatcherLookup[keyof typeof IpfsMatcherLookup];\nexport type IpfsMatcher = InstanceType<IpfsMatcherClass>;\nexport type IpfsInitialMatcher = InstanceType<typeof IpfsInitialMatcherClasses[number]>;\n\ntype IpfsHandlerClass = typeof IpfsHandlerLookup[keyof typeof IpfsHandlerLookup];\ntype IpfsHandler = InstanceType<IpfsHandlerClass>;\n\nexport interface IpfsMockRule extends Omit<RequestRuleData, 'matchers'> {\n    id: string;\n    type: 'ipfs';\n    activated: boolean;\n    matchers: Array<IpfsMatcher> & { 0?: IpfsInteractionMatcher };\n    handler: IpfsHandler;\n    completionChecker: completionCheckers.Always; // HTK rules all *always* match\n}","import * as React from 'react';\n\nimport { styled } from '../../styles'\nimport { Icon, IconProp } from '../../icons';\n\nimport { UnstyledButton, UnstyledButtonLink } from './inputs';\n\nexport const IconButton = styled((p: {\n    className?: string,\n    title: string,\n    icon: IconProp,\n    disabled?: boolean,\n    fixedWidth?: boolean,\n    onClick: (e: React.MouseEvent<HTMLButtonElement>) => void\n}) =>\n    <UnstyledButton\n        className={p.className}\n        title={p.title}\n        tabIndex={p.disabled ? -1 : 0}\n        disabled={p.disabled}\n        onClick={p.onClick}\n    >\n        <Icon\n            icon={p.icon}\n            fixedWidth={p.fixedWidth ? true : false}\n        />\n    </UnstyledButton>\n)`\n    color: ${p => p.theme.mainColor};\n    font-size: ${p => p.theme.textSize};\n    padding: 5px 10px;\n\n    &:disabled {\n        opacity: 0.5;\n    }\n\n    &:not([disabled]) {\n        &:hover, &:focus {\n            outline: none;\n            color: ${p => p.theme.popColor};\n        }\n    }\n`;\n\nexport const IconButtonLink = styled((p: {\n    className?: string,\n    title: string,\n    icon: IconProp,\n    fixedWidth?: boolean,\n    href: string,\n    target?: string,\n    rel?: string\n}) =>\n    <UnstyledButtonLink\n        className={p.className}\n        title={p.title}\n        href={p.href}\n        target={p.target}\n        rel={p.rel}\n    >\n        <Icon\n            icon={p.icon}\n            fixedWidth={p.fixedWidth ? true : false}\n        />\n    </UnstyledButtonLink>\n)`\n    color: ${p => p.theme.mainColor};\n    font-size: ${p => p.theme.textSize};\n    padding: 5px 10px;\n\n    &:hover, &:focus {\n        outline: none;\n        color: ${p => p.theme.popColor};\n    }\n`;","/*\n * SPDX-FileCopyrightText: 2022 Tim Perry <tim@httptoolkit.com>\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport _ from 'lodash';\nimport {\n    matchers,\n    completionCheckers,\n    RequestRuleData\n} from 'mockttp';\nimport {\n    HttpHandlerLookup\n} from './http-rule-definitions';\nimport { encodeAbi } from './ethereum-abi';\n\nexport const EthereumMethods = {\n    'eth_call': 'Call a contract method (without a transaction)',\n    'eth_sendRawTransaction': 'Submit a signed transaction',\n    'eth_sendTransaction': 'Submit an unsigned transaction',\n    'eth_getTransactionReceipt': 'Return the receipt of a submitted transaction',\n    'eth_getBalance': 'Return the balance of an account',\n    'eth_gasPrice': 'Return the current gas price',\n    'eth_blockNumber': 'Return the latest block number',\n    'eth_getBlockByNumber': 'Return information about a block by number',\n    'eth_getBlockByHash': 'Return information about a block by hash'\n};\n\nexport type EthereumMethod = keyof typeof EthereumMethods;\n\nexport class EthereumMethodMatcher extends matchers.JsonBodyFlexibleMatcher {\n\n    readonly uiType = 'eth-method';\n\n    constructor(\n        public readonly methodName: EthereumMethod = 'eth_call'\n    ) {\n        super({\n            jsonrpc: '2.0',\n            method: methodName\n        });\n    }\n\n    explain() {\n        return `Ethereum ${this.methodName} requests`;\n    }\n\n}\n\nexport class EthereumParamsMatcher extends matchers.JsonBodyFlexibleMatcher {\n\n    readonly uiType = 'eth-params';\n\n    constructor(\n        public readonly params: any[]\n    ) {\n        super({ params });\n    }\n\n    explain() {\n        return `matching ${JSON.stringify(this.params)}`;\n    }\n\n}\n\nexport class EthereumCallResultHandler extends HttpHandlerLookup['json-rpc-response'] {\n\n    readonly uiType = 'eth-call-result';\n\n    constructor(\n        public readonly outputTypes: string[],\n        public readonly values: unknown[]\n    ) {\n        super({\n            result: encodeAbi(outputTypes, values)\n        });\n    }\n\n    explain() {\n        if (!this.values.length) {\n            return `Return an empty eth_call result`;\n        } else {\n            return `Return an eth_call result of ${this.values.join(', ')}`;\n        }\n    }\n\n}\n\nexport class EthereumNumberResultHandler extends HttpHandlerLookup['json-rpc-response'] {\n\n    readonly uiType = 'eth-number-result';\n\n    constructor(\n        public readonly value: number\n    ) {\n        super({\n            result: `0x${value.toString(16)}`\n        });\n    }\n\n    explain() {\n        return `Return ${this.value}`;\n    }\n\n}\n\nexport class EthereumHashResultHandler extends HttpHandlerLookup['json-rpc-response'] {\n\n    readonly uiType = 'eth-hash-result';\n\n    constructor(\n        public readonly value: string\n    ) {\n        super({\n            result: value\n        });\n    }\n\n    explain() {\n        return `Return transaction hash ${this.value}`;\n    }\n\n}\n\nexport class EthereumReceiptResultHandler extends HttpHandlerLookup['json-rpc-response'] {\n\n    readonly uiType = 'eth-receipt-result';\n\n    constructor(\n        public readonly receiptValue: object = {\n            // Default value, used to initialize a helpful placeholder\n            status: '0x1',\n            transactionHash: '012345',\n            blockNumber: '0x100',\n            blockHash: '0x1',\n            from: '0x0',\n            to: '0x0',\n            cumulativeGasUsed: '0x1',\n            gasUsed: '0x1',\n            effectiveGasPrice: '0x0',\n            contractAddress: null,\n            logs: [],\n            logsBloom: '0x0',\n            type: '0x0'\n        }\n    ) {\n        super({\n            result: receiptValue\n        });\n    }\n\n    explain() {\n        return `Return a fixed transaction receipt`;\n    }\n\n}\n\nexport class EthereumBlockResultHandler extends HttpHandlerLookup['json-rpc-response'] {\n\n    readonly uiType = 'eth-block-result';\n\n    constructor(\n        public readonly blockValue: object = {\n            // Default value, used to initialize a helpful placeholder\n            \"difficulty\": \"0x1\",\n            \"extraData\": \"0x0\",\n            \"gasLimit\": \"0x1\",\n            \"gasUsed\": \"0x1\",\n            \"hash\": \"0x1234\",\n            \"logsBloom\": \"0x0\",\n            \"miner\": \"0x1\",\n            \"mixHash\": \"0x0\",\n            \"nonce\": \"0x0\",\n            \"number\": \"0x0\",\n            \"parentHash\": \"0x1\",\n            \"receiptsRoot\": \"0x1\",\n            \"sha3Uncles\": \"0x1\",\n            \"size\": \"0x1\",\n            \"stateRoot\": \"0x1\",\n            \"timestamp\": \"0x1\",\n            \"totalDifficulty\": \"0x1\",\n            \"transactions\": [\n                \"0x1234\"\n            ],\n            \"transactionsRoot\": \"0x1\",\n            \"uncles\": []\n        }\n    ) {\n        super({\n            result: blockValue\n        });\n    }\n\n    explain() {\n        return `Return fixed block data`;\n    }\n\n}\n\nexport class EthereumErrorHandler extends HttpHandlerLookup['json-rpc-response'] {\n\n    readonly uiType = 'eth-error';\n\n    constructor(\n        public readonly message: string,\n        public readonly data = '0x',\n        public readonly code = -32099,\n        public readonly name: string | undefined = undefined\n    ) {\n        super({\n            error: {\n                message,\n                data,\n                code,\n                name\n            }\n        });\n    }\n\n    explain() {\n        return `Fail with ${this.message\n            ? `\"${this.message}\"`\n            : `code ${this.code}`\n        }`;\n    }\n\n}\n\nexport const EthereumMatcherLookup = {\n    'eth-method': EthereumMethodMatcher, // N.b. this is JSON-RPC method, not HTTP method\n    'eth-params': EthereumParamsMatcher,\n\n    // The subset of relevant HTTP matchers:\n    'protocol': matchers.ProtocolMatcher,\n    'host': matchers.HostMatcher,\n    'hostname': matchers.HostnameMatcher,\n    'port': matchers.PortMatcher,\n    'simple-path': matchers.SimplePathMatcher,\n    'regex-path': matchers.RegexPathMatcher,\n    'header': matchers.HeaderMatcher,\n    'query': matchers.QueryMatcher,\n    'exact-query-string': matchers.ExactQueryMatcher,\n    'cookie': matchers.CookieMatcher\n};\n\nexport const EthereumInitialMatcherClasses = [\n    EthereumMethodMatcher\n];\n\nexport const EthereumHandlerLookup = {\n    'eth-call-result': EthereumCallResultHandler,\n    'eth-number-result': EthereumNumberResultHandler,\n    'eth-hash-result': EthereumHashResultHandler,\n    'eth-receipt-result': EthereumReceiptResultHandler,\n    'eth-block-result': EthereumBlockResultHandler,\n    'eth-error': EthereumErrorHandler,\n\n    'passthrough': HttpHandlerLookup['passthrough'],\n    'forward-to-host': HttpHandlerLookup['forward-to-host'],\n    'timeout': HttpHandlerLookup['timeout'],\n    'close-connection': HttpHandlerLookup['close-connection'],\n    'request-breakpoint': HttpHandlerLookup['request-breakpoint'],\n    'response-breakpoint': HttpHandlerLookup['response-breakpoint'],\n    'request-and-response-breakpoint': HttpHandlerLookup['request-and-response-breakpoint']\n};\n\ntype EthereumMatcherClass = typeof EthereumMatcherLookup[keyof typeof EthereumMatcherLookup];\nexport type EthereumMatcher = InstanceType<EthereumMatcherClass>;\nexport type EthereumInitialMatcher = InstanceType<typeof EthereumInitialMatcherClasses[number]>;\n\ntype EthereumHandlerClass = typeof EthereumHandlerLookup[keyof typeof EthereumHandlerLookup];\ntype EthereumHandler = InstanceType<EthereumHandlerClass>;\n\nexport interface EthereumMockRule extends Omit<RequestRuleData, 'matchers'> {\n    id: string;\n    type: 'ethereum';\n    activated: boolean;\n    matchers: Array<EthereumMatcher> & { 0?: EthereumMethodMatcher };\n    handler: EthereumHandler;\n    completionChecker: completionCheckers.Always; // HTK rules all *always* match\n}","export function clear() {\n    return new Promise((resolve, reject) => {\n        try {\n            window.localStorage.clear()\n            resolve(null)\n        } catch (err) {\n            reject(err)\n        }\n    })\n}\n\nexport function getItem(key: string): Promise<string | null> {\n    return new Promise((resolve, reject) => {\n        try {\n            const value = window.localStorage.getItem(key)\n            resolve(value)\n        } catch (err) {\n            reject(err)\n        }\n    })\n}\n\nexport function removeItem(key: string) {\n    return new Promise((resolve, reject) => {\n        try {\n            window.localStorage.removeItem(key)\n            resolve(null)\n        } catch (err) {\n            reject(err)\n        }\n    })\n}\n\nexport function setItem(key: string, value: string) {\n    return new Promise((resolve, reject) => {\n        try {\n            window.localStorage.setItem(key, value)\n            resolve(null)\n        } catch (err) {\n            reject(err)\n        }\n    })\n}","import {\n    list as _list,\n    map as _map,\n    object as _object,\n    custom\n} from 'serializr'\n\nfunction _walk(v: any) {\n    if (typeof v === 'object' && v) Object.keys(v).map(k => _walk(v[k]))\n    return v\n}\n\nfunction _default() {\n    return custom(_walk, (v: any) => v)\n}\n\nfunction object(s: any) {\n    return s ? _object(s) : _default()\n}\n\nfunction list(s: any) {\n    return _list(object(s))\n}\n\nfunction map(s: any) {\n    return _map(object(s))\n}\n\nexport type Types = 'object' | 'list' | 'map'\nexport const types: { [key: string]: ((s?: any) => any) } = { object, list, map }","import {\n    createSimpleSchema, setDefaultModelSchema,\n} from 'serializr';\n\nimport { types } from './types';\n\nexport function persistObject(target: any, schema: any) {\n    const model = createModel(schema);\n    setDefaultModelSchema(target, model);\n    return target;\n}\n\nfunction createModel(params: any) {\n    const schema: { [key: string]: any } = {};\n    Object.keys(params).forEach(key => {\n        if (typeof params[key] === 'object') {\n            if (params[key].type in types) {\n                if (typeof params[key].schema === 'object') {\n                    schema[key] = types[params[key].type](createModel(params[key].schema));\n                } else {\n                    schema[key] = types[params[key].type](params[key].schema);\n                }\n            }\n        } else if (params[key] === true) {\n            schema[key] = true;\n        }\n    });\n\n    return createSimpleSchema(schema);\n}","// Based on mobx-persist: https://github.com/pinqy520/mobx-persist\n// Sadly now unmaintained.\n\nimport * as _ from 'lodash';\nimport {\n    reaction,\n    runInAction\n} from 'mobx';\nimport {\n    serialize,\n    update,\n    serializable,\n    getDefaultModelSchema\n} from 'serializr';\nimport * as Storage from './storage';\nimport { types, Types } from './types';\nimport { persistObject } from './persist-object';\n\n// @persist decorator:\nexport function persist(type: Types, schema?: any): (target: Object, key: string, baseDescriptor?: PropertyDescriptor) => void // two\nexport function persist(target: Object, key: string, baseDescriptor?: PropertyDescriptor): void // method decorator\nexport function persist(schema: Object): <T>(target: T) => T // object\nexport function persist(...args: any[]): any {\n    const [a, b] = args\n    if (a in types) {\n        return serializable(types[a](b));\n    } else if (args.length === 1) {\n        return (target: any) => persistObject(target, a);\n    } else {\n        return serializable.apply(null, args as any);\n    }\n}\n\n// Rehydration function:\nexport async function hydrate<T extends Object>(options: {\n    key: string,\n    store: T,\n    storage?: typeof Storage,\n    jsonify?: boolean,\n    dataTransform?: (data: any) => any,\n    customArgs?: any\n}): Promise<void> {\n    const { key, store, storage, jsonify, dataTransform, customArgs } = _.defaults(options, {\n        customArgs: {},\n        storage: Storage,\n        jsonify: true,\n        dataTransform: _.identity\n    });\n\n    const schema = getDefaultModelSchema(store as any);\n\n    // Load existing data, if available, and apply it to the store\n    const rawData = await storage.getItem(key);\n    if (rawData) {\n        const data = jsonify ? JSON.parse(rawData) : rawData;\n\n        if (data && typeof data === 'object') {\n            runInAction(() => {\n                update(schema, store, dataTransform(data), undefined, customArgs);\n            });\n        }\n    }\n\n    // Whenever the serialized result changes, store it:\n    reaction(\n        () => serialize(schema, store),\n        (data: any) => storage.setItem(\n            key,\n            jsonify ? JSON.stringify(data) : data\n        )\n    );\n}\n\n","\nimport { styled } from '../../styles';\n\nimport { Content } from './text-content';\n\nexport const CardErrorBanner = styled(Content)<{\n    direction?: 'left' | 'right'\n}>`\n    ${p => p.direction === 'left'\n            ? 'margin: 0 -20px 0 -15px;'\n        : p.direction === 'right'\n            ? 'margin: 0 -15px 0 -20px;'\n        : 'margin: 0 -20px 0 -20px;'\n    }\n\n    padding: 10px 30px 0;\n\n    font-size: ${p => p.theme.textSize};\n    color: ${p => p.theme.mainColor};\n    background-color: ${p => p.theme.warningBackground};\n    border-top: solid 1px ${p => p.theme.containerBorder};\n\n    svg {\n        margin-left: 0;\n    }\n`;","import * as _ from 'lodash';\nimport * as React from 'react';\n\nimport { Headers, RawHeaders } from '../../types';\nimport { styled } from '../../styles';\nimport { WarningIcon } from '../../icons';\n\nimport { getHeaderValue } from '../../util/headers';\nimport { saveFile } from '../../util/ui';\nimport { ErrorLike } from '../../util/error';\n\nimport {\n    EditableContentType,\n    ViewableContentType,\n    getContentEditorName\n} from '../../model/events/content-types';\nimport { getReadableSize } from '../../model/events/bodies';\n\nimport { CollapsibleCardHeading, ExpandState } from '../common/card';\nimport { CollapsingButtons } from '../common/collapsing-buttons';\nimport { Pill, PillSelector } from '../common/pill';\nimport { ExpandShrinkButton } from '../common/expand-shrink-button';\nimport { IconButton } from '../common/icon-button';\nimport { CardErrorBanner } from '../common/card-error-banner';\nimport { ContentMonoValue } from '../common/text-content';\nimport { FormatButton } from '../common/format-button';\n\n// This contains all the components of a card that shows a body viewer (typically for\n// HTTP, but not always) but exported individually so they can be recombined & tweaked\n// in slightly different ways in each case.\n\nexport const EditorCardContent = styled.div`\n    margin: 0 -20px -20px -20px;\n    border-top: solid 1px ${p => p.theme.containerBorder};\n    background-color: ${p => p.theme.highlightBackground};\n    color: ${p => p.theme.highlightColor};\n\n    .monaco-editor-overlaymessage {\n        display: none;\n    }\n\n    position: relative;\n    flex-grow: 1;\n\n    /*\n    Allows shrinking smaller than content, to allow scrolling overflow e.g. for\n    scrollable URL param content\n    */\n    min-height: 0;\n`;\n\nexport const ContainerSizedEditorCardContent = styled(EditorCardContent)`\n    flex-shrink: 1;\n`;\n\nexport function getBodyDownloadFilename(url: string, headers: Headers | RawHeaders): string | undefined {\n    const contentDisposition = getHeaderValue(headers, 'content-disposition') || \"\";\n    const filenameMatch = / filename=\"([^\"]+)\"/.exec(contentDisposition);\n\n    if (filenameMatch) {\n        const suggestedFilename = filenameMatch[1];\n        return _.last(_.last(suggestedFilename.split('/') as string[])!.split('\\\\')); // Strip any path info\n    }\n\n    const urlBaseName = _.last(url.split('/'));\n    if (urlBaseName?.includes(\".\")) return urlBaseName;\n}\n\nexport const ReadonlyBodyCardHeader = (props: {\n    body: Buffer | undefined,\n    mimeType?: string,\n    downloadFilename?: string,\n\n    title: string,\n    expanded: ExpandState,\n    onExpandToggled: () => void,\n    onCollapseToggled?: () => void,\n\n    selectedContentType: ViewableContentType,\n    contentTypeOptions: readonly ViewableContentType[],\n    onChangeContentType: (contentType: ViewableContentType) => void,\n\n    isPaidUser: boolean\n}) => {\n    const { body } = props;\n\n    return <>\n        { body && /* Body may be undefined during decoding */ <>\n            <CollapsingButtons>\n                <ExpandShrinkButton\n                    expanded={props.expanded}\n                    onClick={props.onExpandToggled}\n                />\n                <IconButton\n                    icon={['fas', 'download']}\n                    title={\n                        props.isPaidUser\n                            ? \"Save this body as a file\"\n                            : \"With Pro: Save this body as a file\"\n                    }\n                    disabled={!props.isPaidUser}\n                    onClick={() => saveFile(\n                        props.downloadFilename || \"\",\n                        props.mimeType || 'application/octet-stream',\n                        body\n                    )}\n                />\n            </CollapsingButtons>\n            <Pill>{ getReadableSize(body.byteLength) }</Pill>\n        </> }\n        <PillSelector<ViewableContentType>\n            onChange={props.onChangeContentType}\n            value={props.selectedContentType}\n            options={props.contentTypeOptions}\n            nameFormatter={getContentEditorName}\n        />\n        <CollapsibleCardHeading onCollapseToggled={props.onCollapseToggled}>\n            { props.title }\n        </CollapsibleCardHeading>\n    </>;\n};\n\nexport const EditableBodyCardHeader = (props: {\n    body: Buffer,\n    onBodyFormatted: (bodyString: string) => void,\n\n    title: string,\n    expanded: ExpandState,\n    onExpandToggled: () => void,\n    onCollapseToggled?: () => void,\n\n    selectedContentType: EditableContentType,\n    contentTypeOptions: readonly EditableContentType[],\n    onChangeContentType: (contentType: EditableContentType) => void\n}) => {\n    const { body } = props;\n\n    return <>\n        <CollapsingButtons>\n            <ExpandShrinkButton\n                expanded={props.expanded}\n                onClick={props.onExpandToggled}\n            />\n            <FormatButton\n                format={props.selectedContentType}\n                content={body}\n                onFormatted={props.onBodyFormatted}\n            />\n        </CollapsingButtons>\n\n        <Pill>{ getReadableSize(body) }</Pill>\n        <PillSelector<EditableContentType>\n            onChange={props.onChangeContentType}\n            value={props.selectedContentType}\n            options={props.contentTypeOptions}\n            nameFormatter={getContentEditorName}\n        />\n\n        <CollapsibleCardHeading onCollapseToggled={props.onCollapseToggled}>\n            { props.title }\n        </CollapsibleCardHeading>\n    </>;\n};\n\nconst EncodingErrorMessage = styled(ContentMonoValue)`\n    padding: 0;\n    margin: 10px 0;\n`;\n\nexport const BodyDecodingErrorBanner = (props: {\n    direction?: 'left' | 'right',\n    error: ErrorLike,\n    headers: Headers | RawHeaders\n}) => <CardErrorBanner direction={props.direction}>\n    <p>\n        <WarningIcon/> Body decoding failed for encoding '{\n            getHeaderValue(props.headers, 'content-encoding')\n        }' due to:\n    </p>\n    <EncodingErrorMessage>\n        { props.error.code\n            ? `${props.error.code}: `\n            : ''\n        }{ props.error.message || props.error.toString() }\n    </EncodingErrorMessage>\n    <p>\n        This typically means either the <code>content-encoding</code> header is incorrect or\n        unsupported, or the body was corrupted. The raw content (not decoded) is shown below.\n    </p>\n</CardErrorBanner>","/**\n * The docs included here come from MDN content, originally distributed under their\n * CC-BY-SA 2.5 license: https://creativecommons.org/licenses/by-sa/2.5/\n *\n * This license permits usage and derivative works under later equivalent versions\n * of the same license, and as such the original content used here is used under\n * the terms of CC-BY-SA 4.0: https://creativecommons.org/licenses/by-sa/4.0/.\n *\n * CC-BY-SA 4.0 allows derivative works to be licensed under other BY-SA compatible\n * licenses, and Creative Commons have approved GPLv3 as being an essentially\n * equivalent compatible license. As such, this derivative work is published here\n * under GPLv3 license: https://www.gnu.org/licenses/gpl-3.0.html\n *\n * This doesn't match the rest of this repository (licensed under AGPLv3), but\n * the AGPLv3 license has a specific clause that makes it compatible with\n * GPLv3 content, allowing us to combine both in a single project.\n */\n\ninterface MdnDocsData {\n    mdnSlug: string;\n    name: string;\n    summary: string;\n}\n\n/*\n * https://developer.mozilla.org/en-US/docs/Web/HTTP/Status$children?expand&summary\n * Transformed with:\n *\n * let _ = require('lodash');\n * let statuses = require('./statuses.json');\n *\n * let output = (_(statuses.subpages)\n * .keyBy(p => p.label.split(' ')[0])\n * .mapValues((p, k) => ({\n *     name: p.title,\n *     mdnSlug: p.slug,\n *     summary: p.summary\n *     .replace(/<(.|\\n)*?>/g, '')\n *     .replace(/&lt;/g, '<')\n *     .replace(/&gt;/g, '>')\n *     .replace('HyperText Transfer Protocol (HTTP)', 'HTTP')\n * }))\n * .value())\n * console.log(JSON.stringify(output, null, 4));\n */\nconst STATUSES: { [key: string]: MdnDocsData | undefined } = {\n    \"100\": {\n        \"name\": \"100 Continue\",\n        \"mdnSlug\": \"Web/HTTP/Status/100\",\n        \"summary\": \"The HTTP 100 Continue informational status response code indicates that everything so far is OK and that the client should continue with the request or ignore it if it is already finished.\"\n    },\n    \"101\": {\n        \"name\": \"101 Switching Protocols\",\n        \"mdnSlug\": \"Web/HTTP/Status/101\",\n        \"summary\": \"The HTTP 101 Switching Protocols response code indicates the protocol the server is switching to as requested by a client which sent the message including the Upgrade request header.\"\n    },\n    \"103\": {\n        \"name\": \"103 Early Hints\",\n        \"mdnSlug\": \"Web/HTTP/Status/103\",\n        \"summary\": \"The HTTP 103 Early Hints information response status code is primarily intended to be used with the Link header to allow the user agent to start preloading resources while the server is still preparing a response.\"\n    },\n    \"200\": {\n        \"name\": \"200 OK\",\n        \"mdnSlug\": \"Web/HTTP/Status/200\",\n        \"summary\": \"The HTTP 200 OK success status response code indicates that the request has succeeded. A 200 response is cacheable by default.\"\n    },\n    \"201\": {\n        \"name\": \"201 Created\",\n        \"mdnSlug\": \"Web/HTTP/Status/201\",\n        \"summary\": \"The HTTP 201 Created success status response code indicates that the request has succeeded and has led to the creation of a resource. The new resource is effectively created before this response is sent back and the new resource is returned in the body of the message, its location being either the URL of the request, or the content of the Location header.\"\n    },\n    \"202\": {\n        \"name\": \"202 Accepted\",\n        \"mdnSlug\": \"Web/HTTP/Status/202\",\n        \"summary\": \"The HTTP 202 Accepted response status code indicates that the request has been accepted for processing, but the processing has not been completed; in fact, processing may not have started yet. The request might or might not eventually be acted upon, as it might be disallowed when processing actually takes place.\"\n    },\n    \"203\": {\n        \"name\": \"203 Non-Authoritative Information\",\n        \"mdnSlug\": \"Web/HTTP/Status/203\",\n        \"summary\": \"The HTTP 203 Non-Authoritative Information response status indicates that the request was successful but the enclosed payload has been modified by a transforming proxy from that of the origin server's 200 (OK) response .\"\n    },\n    \"204\": {\n        \"name\": \"204 No Content\",\n        \"mdnSlug\": \"Web/HTTP/Status/204\",\n        \"summary\": \"The HTTP 204 No Content success status response code indicates that the request has succeeded, but that the client doesn't need to go away from its current page. A 204 response is cacheable by default. An ETag header is included in such a response.\"\n    },\n    \"205\": {\n        \"name\": \"205 Reset Content\",\n        \"mdnSlug\": \"Web/HTTP/Status/205\",\n        \"summary\": \"The HTTP 205 Reset Content response status tells the client to reset the document view, so for example to clear the content of a form, reset a canvas state, or to refresh the UI.\"\n    },\n    \"206\": {\n        \"name\": \"206 Partial Content\",\n        \"mdnSlug\": \"Web/HTTP/Status/206\",\n        \"summary\": \"The HTTP 206 Partial Content success status response code indicates that the request has succeeded and has the body contains the requested ranges of data, as described in the Range header of the request.\"\n    },\n    \"300\": {\n        \"name\": \"300 Multiple Choices\",\n        \"mdnSlug\": \"Web/HTTP/Status/300\",\n        \"summary\": \"The HTTP 300 Multiple Choices redirect status response code indicates that the request has more than one possible responses. The user-agent or the user should choose one of them. As there is no standardized way of choosing one of the responses, this response code is very rarely used.\"\n    },\n    \"301\": {\n        \"name\": \"301 Moved Permanently\",\n        \"mdnSlug\": \"Web/HTTP/Status/301\",\n        \"summary\": \"The HTTP 301 Moved Permanently redirect status response code indicates that the resource requested has been definitively moved to the URL given by the Location headers. A browser redirects to this page and search engines update their links to the resource (in 'SEO-speak', it is said that the 'link-juice' is sent to the new URL).\"\n    },\n    \"302\": {\n        \"name\": \"302 Found\",\n        \"mdnSlug\": \"Web/HTTP/Status/302\",\n        \"summary\": \"The HTTP 302 Found redirect status response code indicates that the resource requested has been temporarily moved to the URL given by the Location header. A browser redirects to this page but search engines don't update their links to the resource (in 'SEO-speak', it is said that the 'link-juice' is not sent to the new URL).\"\n    },\n    \"303\": {\n        \"name\": \"303 See Other\",\n        \"mdnSlug\": \"Web/HTTP/Status/303\",\n        \"summary\": \"The HTTP 303 See Other redirect status response code indicates that the redirects don't link to the newly uploaded resources, but to another page (such as a confirmation page or an upload progress page). This response code is usually sent back as a result of PUT or POST. The method used to display this redirected page is always GET.\"\n    },\n    \"304\": {\n        \"name\": \"304 Not Modified\",\n        \"mdnSlug\": \"Web/HTTP/Status/304\",\n        \"summary\": \"The HTTP 304 Not Modified client redirection response code indicates that there is no need to retransmit the requested resources. It is an implicit redirection to a cached resource. This happens when the request method is safe, like a GET or a HEAD request, or when the request is conditional and uses a If-None-Match or a If-Modified-Since header.\"\n    },\n    \"307\": {\n        \"name\": \"307 Temporary Redirect\",\n        \"mdnSlug\": \"Web/HTTP/Status/307\",\n        \"summary\": \"The method and the body of the original request are reused to perform the redirected request. In the cases where you want the method used to be changed to GET, use 303 See Other instead. This is useful when you want to give an answer to a PUT method that is not the uploaded resources, but a confirmation message (like \\\"You successfully uploaded XYZ\\\").\"\n    },\n    \"308\": {\n        \"name\": \"308 Permanent Redirect\",\n        \"mdnSlug\": \"Web/HTTP/Status/308\",\n        \"summary\": \"The request method and the body will not be altered, whereas 301 may incorrectly sometimes be changed to a GET method.\"\n    },\n    \"400\": {\n        \"name\": \"400 Bad Request\",\n        \"mdnSlug\": \"Web/HTTP/Status/400\",\n        \"summary\": \"The HTTP 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).\"\n    },\n    \"401\": {\n        \"name\": \"401 Unauthorized\",\n        \"mdnSlug\": \"Web/HTTP/Status/401\",\n        \"summary\": \"The HTTP 401 Unauthorized client error status response code indicates that the request has not been applied because it lacks valid authentication credentials for the target resource.\"\n    },\n    \"402\": {\n        \"name\": \"402 Payment Required\",\n        \"mdnSlug\": \"Web/HTTP/Status/402\",\n        \"summary\": \"The HTTP 402 Payment Required is a nonstandard client error status response code that is reserved for future use.\"\n    },\n    \"403\": {\n        \"name\": \"403 Forbidden\",\n        \"mdnSlug\": \"Web/HTTP/Status/403\",\n        \"summary\": \"The HTTP 403 Forbidden client error status response code indicates that the server understood the request but refuses to authorize it.\"\n    },\n    \"404\": {\n        \"name\": \"404 Not Found\",\n        \"mdnSlug\": \"Web/HTTP/Status/404\",\n        \"summary\": \"The HTTP 404 Not Found client error response code indicates that the server can't find the requested resource. Links that lead to a 404 page are often called broken or dead links and can be subject to link rot.\"\n    },\n    \"405\": {\n        \"name\": \"405 Method Not Allowed\",\n        \"mdnSlug\": \"Web/HTTP/Status/405\",\n        \"summary\": \"The HTTP 405 Method Not Allowed response status code indicates that the request method is known by the server but is not supported by the target resource.\"\n    },\n    \"406\": {\n        \"name\": \"406 Not Acceptable\",\n        \"mdnSlug\": \"Web/HTTP/Status/406\",\n        \"summary\": \"The HTTP 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.\"\n    },\n    \"407\": {\n        \"name\": \"407 Proxy Authentication Required\",\n        \"mdnSlug\": \"Web/HTTP/Status/407\",\n        \"summary\": \"The HTTP 407 Proxy Authentication Required  client error status response code indicates that the request has not been applied because it lacks valid authentication credentials for a proxy server that is between the browser and the server that can access the requested resource.\"\n    },\n    \"408\": {\n        \"name\": \"408 Request Timeout\",\n        \"mdnSlug\": \"Web/HTTP/Status/408\",\n        \"summary\": \"The HTTP 408 Request Timeout response status code means that the server would like to shut down this unused connection. It is sent on an idle connection by some servers, even without any previous request by the client.\"\n    },\n    \"409\": {\n        \"name\": \"409 Conflict\",\n        \"mdnSlug\": \"Web/HTTP/Status/409\",\n        \"summary\": \"The HTTP 409 Conflict response status code indicates a request conflict with current state of the target resource.\"\n    },\n    \"410\": {\n        \"name\": \"410 Gone\",\n        \"mdnSlug\": \"Web/HTTP/Status/410\",\n        \"summary\": \"The HTTP 410 Gone client error response code indicates that access to the target resource is no longer available at the origin server and that this condition is likely to be permanent.\"\n    },\n    \"411\": {\n        \"name\": \"411 Length Required\",\n        \"mdnSlug\": \"Web/HTTP/Status/411\",\n        \"summary\": \"The HTTP 411 Length Required client error response code indicates that the server refuses to accept the request without a defined Content-Length header.\"\n    },\n    \"412\": {\n        \"name\": \"412 Precondition Failed\",\n        \"mdnSlug\": \"Web/HTTP/Status/412\",\n        \"summary\": \"The HTTP 412 Precondition Failed client error response code indicates that access to the target resource has been denied. This happens with conditional requests on methods other than GET or HEAD when the condition defined by the If-Unmodified-Since or If-None-Match headers is not fulfilled. In that case, the request, usually an upload or a modification of a resource, cannot be made and this error response is sent back.\"\n    },\n    \"413\": {\n        \"name\": \"413 Payload Too Large\",\n        \"mdnSlug\": \"Web/HTTP/Status/413\",\n        \"summary\": \"The HTTP 413 Payload Too Large response status code indicates that the request entity is larger than limits defined by server; the server might close the connection or return a Retry-After header field.\"\n    },\n    \"414\": {\n        \"name\": \"414 URI Too Long\",\n        \"mdnSlug\": \"Web/HTTP/Status/414\",\n        \"summary\": \"The HTTP 414 URI Too Long response status code indicates that the URI requested by the client is longer than the server is willing to interpret.\"\n    },\n    \"415\": {\n        \"name\": \"415 Unsupported Media Type\",\n        \"mdnSlug\": \"Web/HTTP/Status/415\",\n        \"summary\": \"The HTTP 415 Unsupported Media Type client error response code indicates that the server refuses to accept the request because the payload format is in an unsupported format.\"\n    },\n    \"416\": {\n        \"name\": \"416 Range Not Satisfiable\",\n        \"mdnSlug\": \"Web/HTTP/Status/416\",\n        \"summary\": \"The HTTP 416 Range Not Satisfiable error response code indicates that a server cannot serve the requested ranges. The most likely reason is that the document doesn't contain such ranges, or that the Range header value, though syntactically correct, doesn't make sense.\"\n    },\n    \"417\": {\n        \"name\": \"417 Expectation Failed\",\n        \"mdnSlug\": \"Web/HTTP/Status/417\",\n        \"summary\": \"The HTTP 417 Expectation Failed client error response code indicates that the expectation given in the request's Expect header could not be met.\"\n    },\n    \"418\": {\n        \"name\": \"418 I'm a teapot\",\n        \"mdnSlug\": \"Web/HTTP/Status/418\",\n        \"summary\": \"The HTTP 418 I'm a teapot client error response code indicates that the server refuses to brew coffee because it is, permanently, a teapot. A combined coffee/tea pot that is temporarily out of coffee should instead return 503. This error is a reference to Hyper Text Coffee Pot Control Protocol defined in April Fools' jokes in 1998 and 2014.\"\n    },\n    \"422\": {\n        \"name\": \"422 Unprocessable Entity\",\n        \"mdnSlug\": \"Web/HTTP/Status/422\",\n        \"summary\": \"The HTTP 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.\"\n    },\n    \"425\": {\n        \"name\": \"425 Too Early\",\n        \"mdnSlug\": \"Web/HTTP/Status/425\",\n        \"summary\": \"The HTTP 425 Too Early response status code indicates that the server is unwilling to risk processing a request that might be replayed, which creates the potential for a replay attack.\"\n    },\n    \"426\": {\n        \"name\": \"426 Upgrade Required\",\n        \"mdnSlug\": \"Web/HTTP/Status/426\",\n        \"summary\": \"The HTTP 426 Upgrade Required client error response code indicates that the server refuses to perform the request using the current protocol but might be willing to do so after the client upgrades to a different protocol.\"\n    },\n    \"428\": {\n        \"name\": \"428 Precondition Required\",\n        \"mdnSlug\": \"Web/HTTP/Status/428\",\n        \"summary\": \"The HTTP 428 Precondition Required response status code indicates that the server requires the request to be conditional.\"\n    },\n    \"429\": {\n        \"name\": \"429 Too Many Requests\",\n        \"mdnSlug\": \"Web/HTTP/Status/429\",\n        \"summary\": \"The HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\\\"rate limiting\\\").\"\n    },\n    \"431\": {\n        \"name\": \"431 Request Header Fields Too Large\",\n        \"mdnSlug\": \"Web/HTTP/Status/431\",\n        \"summary\": \"The HTTP 431 Request Header Fields Too Large response status code indicates that the server refuses to process the request because the request’s HTTP headers are too long.\"\n    },\n    \"451\": {\n        \"name\": \"451 Unavailable For Legal Reasons\",\n        \"mdnSlug\": \"Web/HTTP/Status/451\",\n        \"summary\": \"The HTTP 451 Unavailable For Legal Reasons client error response code indicates that the user requested a resource that is not available due to legal reasons, such as a web page for which a legal action has been issued.\"\n    },\n    \"500\": {\n        \"name\": \"500 Internal Server Error\",\n        \"mdnSlug\": \"Web/HTTP/Status/500\",\n        \"summary\": \"The HTTP 500 Internal Server Error server error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.\"\n    },\n    \"501\": {\n        \"name\": \"501 Not Implemented\",\n        \"mdnSlug\": \"Web/HTTP/Status/501\",\n        \"summary\": \"The HTTP 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.\"\n    },\n    \"502\": {\n        \"name\": \"502 Bad Gateway\",\n        \"mdnSlug\": \"Web/HTTP/Status/502\",\n        \"summary\": \"The HTTP 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.\"\n    },\n    \"503\": {\n        \"name\": \"503 Service Unavailable\",\n        \"mdnSlug\": \"Web/HTTP/Status/503\",\n        \"summary\": \"The HTTP 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.\"\n    },\n    \"504\": {\n        \"name\": \"504 Gateway Timeout\",\n        \"mdnSlug\": \"Web/HTTP/Status/504\",\n        \"summary\": \"The HTTP 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.\"\n    },\n    \"505\": {\n        \"name\": \"505 HTTP Version Not Supported\",\n        \"mdnSlug\": \"Web/HTTP/Status/505\",\n        \"summary\": \"The HTTP 505 HTTP Version Not Supported response status code indicates that the HTTP version used in the request is not supported by the server.\"\n    },\n    \"506\": {\n        \"name\": \"506 Variant Also Negotiates\",\n        \"mdnSlug\": \"Web/HTTP/Status/506\",\n        \"summary\": \"The HTTP 506 Variant Also Negotiates response status code may be given in the context of Transparent Content Negotiation (see RFC 2295). This protocol enables a client to retrieve the best variant of a given resource, where the server supports multiple variants.\"\n    },\n    \"507\": {\n        \"name\": \"507 Insufficient Storage\",\n        \"mdnSlug\": \"Web/HTTP/Status/507\",\n        \"summary\": \"The HTTP 507 Insufficient Storage response status code may be given in the context of the Web Distributed Authoring and Versioning (WebDAV) protocol (see RFC 4918).\"\n    },\n    \"508\": {\n        \"name\": \"508 Loop Detected\",\n        \"mdnSlug\": \"Web/HTTP/Status/508\",\n        \"summary\": \"The HTTP 508 Loop Detected response status code may be given in the context of the Web Distributed Authoring and Versioning (WebDAV) protocol.\"\n    },\n    \"510\": {\n        \"name\": \"510 Not Extended\",\n        \"mdnSlug\": \"Web/HTTP/Status/510\",\n        \"summary\": \"The HTTP  510 Not Extended response status code is sent in the context of the HTTP Extension Framework, defined in RFC 2774.\"\n    },\n    \"511\": {\n        \"name\": \"511 Network Authentication Required\",\n        \"mdnSlug\": \"Web/HTTP/Status/511\",\n        \"summary\": \"The HTTP 511 Network Authentication Required response status code indicates that the client needs to authenticate to gain network access.\"\n    }\n};\n\ninterface RawDocsData {\n    name: string;\n    summary: string;\n}\n\n// Manually paraphrased from the RFC: https://www.rfc-editor.org/rfc/rfc6455.html#section-7.4.1\nconst WEBSOCKET_CLOSE_CODES: { [key: string]: RawDocsData } = {\n    1000: {\n        \"name\": \"Normal Closure\",\n        \"summary\": \"A normal WebSocket closure, meaning that the purpose for which the connection was established has been fulfilled.\"\n    },\n    1001: {\n        \"name\": \"Going Away\",\n        \"summary\": \"An endpoint is \\\"going away\\\", such as a server going down or a browser having navigated away from a page.\"\n    },\n    1002: {\n        \"name\": \"Protocol Error\",\n        \"summary\": \"An endpoint terminated the connection due to a protocol error\"\n    },\n    1003: {\n        \"name\": \"Unsupported Data\",\n        \"summary\": \"An endpoint is terminating the connection because it has received a type of data it cannot accept (e.g., an endpoint that understands only text data MAY send this if it receives a binary message).\"\n    },\n    1004: {\n        \"name\": \"Reserved\",\n        \"summary\": \"This close code is not used. A specific meaning might be defined in future.\"\n    },\n    1005: {\n        \"name\": \"No Close Code Received\",\n        \"summary\": \"This is a reserved value that must not be sent by an endpoint. It is designated for use in applications expecting a status code, to indicate that no status code was actually present.\"\n    },\n    1006: {\n        \"name\": \"Abnormal Closure\",\n        \"summary\": \"This is a reserved value that must not be sent by an endpoint. It is designated for use in applications expecting a status code, to indicate that the connection was closed abnormally, e.g., without sending or receiving a Close control frame.\"\n    },\n    1007: {\n        \"name\": \"Invalid Frame Payload Data\",\n        \"summary\": \"An endpoint is terminating the connection because it has received data within a message that was not consistent with the type of the message (e.g., non-UTF-8 data within a text message).\"\n    },\n    1008: {\n        \"name\": \"Policy Violation\",\n        \"summary\": \"An endpoint is terminating the connection because it has received a message that violates its policy. This is a generic status code that can be returned when there is no other more suitable status code (e.g., 1003 or 1009) or if there is a need to hide specific details about the policy.\"\n    },\n    1009: {\n        \"name\": \"Message Too Large\",\n        \"summary\": \"An endpoint is terminating the connection because it has received a message that is too big for it to process.\"\n    },\n    1010: {\n        \"name\": \"Mandatory Extension\",\n        \"summary\": \"The client is terminating the connection because it has expected the server to negotiate one or more extensions, but the server didn't return them in the response message of the WebSocket handshake.  The list of extensions that are needed SHOULD appear in the /reason/ part of the Close frame.\"\n    },\n    1011: {\n        \"name\": \"Internal Error\",\n        \"summary\": \"The server is terminating the connection because it encountered an unexpected condition that prevented it from fulfilling the request.\"\n    },\n    1012: {\n        \"name\": \"Service Restart\",\n        \"summary\": \"The server is terminating the connection because it is restarting.\"\n    },\n    1013: {\n        \"name\": \"Try Again Later\",\n        \"summary\": \"The server is terminating the connection due to a temporary condition, such as being overloaded.\"\n    },\n    1014: {\n        \"name\": \"Bad Gateway\",\n        \"summary\": \"The server was acting as a gateway or proxy, and received an invalid response from an upstream server.\"\n    },\n    1015: {\n        \"name\": \"TLS Handshake\",\n        \"summary\": \"This is a reserved value that must not be sent by an endpoint. It is designated for use in applications expecting a status code, to indicate that the connection was closed due to a failure to perform a TLS handshake (e.g., the server certificate can't be verified).\"\n    }\n};\n\n/*\n * Taken from https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers$children?expand\n * Transformed with:\n *\n * let _ = require('lodash');\n * let headers = require('./headers.json');\n *\n * let output = (_(headers.subpages)\n * .filter(p => p.title !== 'Index')\n * .keyBy(p => p.title.toLowerCase())\n * .mapValues((p, k) => ({\n *   mdnSlug: p.slug,\n *   name: p.title,\n *   summary: p.summary\n *   .replace(/<(.|\\n)*?>/g, '')\n *   .replace(/&lt;/g, '<')\n *   .replace(/&gt;/g, '>')\n *   .split(/\\.( |$)/)[0] + '.'\n * }))\n * .value())\n * console.log(JSON.stringify(output, null, 4));\n */\nconst HEADERS: { [key: string]: MdnDocsData | undefined } = {\n    \"accept\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Accept\",\n        \"name\": \"Accept\",\n        \"summary\": \"The Accept request HTTP header advertises which content types, expressed as MIME types, the client is able to understand.\"\n    },\n    \"accept-ch\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Accept-CH\",\n        \"name\": \"Accept-CH\",\n        \"summary\": \"The Accept-CH header is set by the server to specify which Client Hints headers a client should include in subsequent requests.\"\n    },\n    \"accept-ch-lifetime\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Accept-CH-Lifetime\",\n        \"name\": \"Accept-CH-Lifetime\",\n        \"summary\": \"The Accept-CH-Lifetime header is set by the server to specify the persistence of Accept-CH header value that specifies for which Client Hints headers client should include in subsequent requests.\"\n    },\n    \"accept-charset\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Accept-Charset\",\n        \"name\": \"Accept-Charset\",\n        \"summary\": \"The Accept-Charset request HTTP header advertises which character encodings the client understands.\"\n    },\n    \"accept-encoding\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Accept-Encoding\",\n        \"name\": \"Accept-Encoding\",\n        \"summary\": \"The Accept-Encoding request HTTP header advertises which content encoding, usually a compression algorithm, the client is able to understand.\"\n    },\n    \"accept-language\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Accept-Language\",\n        \"name\": \"Accept-Language\",\n        \"summary\": \"The Accept-Language request HTTP header advertises which languages the client is able to understand, and which locale variant is preferred.\"\n    },\n    \"accept-patch\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Accept-Patch\",\n        \"name\": \"Accept-Patch\",\n        \"summary\": \"The Accept-Patch response HTTP header advertises which media-type the server is able to understand.\"\n    },\n    \"accept-ranges\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Accept-Ranges\",\n        \"name\": \"Accept-Ranges\",\n        \"summary\": \"The Accept-Ranges response HTTP header is a marker used by the server to advertise its support of partial requests.\"\n    },\n    \"access-control-allow-credentials\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Access-Control-Allow-Credentials\",\n        \"name\": \"Access-Control-Allow-Credentials\",\n        \"summary\": \"The Access-Control-Allow-Credentials response header tells browsers whether to expose the response to frontend JavaScript code when the request's credentials mode (Request.credentials) is include.\"\n    },\n    \"access-control-allow-headers\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Access-Control-Allow-Headers\",\n        \"name\": \"Access-Control-Allow-Headers\",\n        \"summary\": \"The Access-Control-Allow-Headers response header is used in response to a preflight request which includes the Access-Control-Request-Headers to indicate which HTTP headers can be used during the actual request.\"\n    },\n    \"access-control-allow-methods\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Access-Control-Allow-Methods\",\n        \"name\": \"Access-Control-Allow-Methods\",\n        \"summary\": \"The Access-Control-Allow-Methods response header specifies the method or methods allowed when accessing the resource in response to a preflight request.\"\n    },\n    \"access-control-allow-origin\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Access-Control-Allow-Origin\",\n        \"name\": \"Access-Control-Allow-Origin\",\n        \"summary\": \"The Access-Control-Allow-Origin response header indicates whether the response can be shared with requesting code from the given origin.\"\n    },\n    \"access-control-expose-headers\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Access-Control-Expose-Headers\",\n        \"name\": \"Access-Control-Expose-Headers\",\n        \"summary\": \"The Access-Control-Expose-Headers response header indicates which headers can be exposed as part of the response by listing their names.\"\n    },\n    \"access-control-max-age\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Access-Control-Max-Age\",\n        \"name\": \"Access-Control-Max-Age\",\n        \"summary\": \"The Access-Control-Max-Age response header indicates how long the results of a preflight request (that is the information contained in the Access-Control-Allow-Methods and Access-Control-Allow-Headers headers) can be cached.\"\n    },\n    \"access-control-request-headers\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Access-Control-Request-Headers\",\n        \"name\": \"Access-Control-Request-Headers\",\n        \"summary\": \"The Access-Control-Request-Headers request header is used by browsers when issuing a preflight request, to let the server know which HTTP headers the client might send when the actual request is made.\"\n    },\n    \"access-control-request-method\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Access-Control-Request-Method\",\n        \"name\": \"Access-Control-Request-Method\",\n        \"summary\": \"The Access-Control-Request-Method request header is used by browsers when issuing a preflight request, to let the server know which HTTP method will be used when the actual request is made.\"\n    },\n    \"age\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Age\",\n        \"name\": \"Age\",\n        \"summary\": \"The Age header contains the time in seconds the object has been in a proxy cache.\"\n    },\n    \"allow\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Allow\",\n        \"name\": \"Allow\",\n        \"summary\": \"The Allow header lists the set of methods supported by a resource.\"\n    },\n    \"alt-svc\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Alt-Svc\",\n        \"name\": \"Alt-Svc\",\n        \"summary\": \"The Alt-Svc HTTP response header is used to advertise alternative services through which the same resource can be reached.\"\n    },\n    \"authorization\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Authorization\",\n        \"name\": \"Authorization\",\n        \"summary\": \"The HTTP Authorization request header contains the credentials to authenticate a user agent with a server, usually, but not necessarily, after the server has responded with a 401 Unauthorized status and the WWW-Authenticate header.\"\n    },\n    \"cache-control\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Cache-Control\",\n        \"name\": \"Cache-Control\",\n        \"summary\": \"The Cache-Control HTTP header holds directives (instructions) for caching in both requests and responses.\"\n    },\n    \"clear-site-data\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Clear-Site-Data\",\n        \"name\": \"Clear-Site-Data\",\n        \"summary\": \"The Clear-Site-Data header clears browsing data (cookies, storage, cache) associated with the requesting website.\"\n    },\n    \"connection\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Connection\",\n        \"name\": \"Connection\",\n        \"summary\": \"The Connection general header controls whether or not the network connection stays open after the current transaction finishes.\"\n    },\n    \"content-disposition\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Content-Disposition\",\n        \"name\": \"Content-Disposition\",\n        \"summary\": \"In a regular HTTP response, the Content-Disposition response header is a header indicating if the content is expected to be displayed inline in the browser, that is, as a Web page or as part of a Web page, or as an attachment, that is downloaded and saved locally.\"\n    },\n    \"content-encoding\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Content-Encoding\",\n        \"name\": \"Content-Encoding\",\n        \"summary\": \"The Content-Encoding entity header is used to compress the media-type.\"\n    },\n    \"content-language\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Content-Language\",\n        \"name\": \"Content-Language\",\n        \"summary\": \"The Content-Language entity header is used to describe the language(s) intended for the audience, so that it allows a user to differentiate according to the users' own preferred language.\"\n    },\n    \"content-length\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Content-Length\",\n        \"name\": \"Content-Length\",\n        \"summary\": \"The Content-Length entity header indicates the size of the entity-body, in bytes, sent to the recipient.\"\n    },\n    \"content-location\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Content-Location\",\n        \"name\": \"Content-Location\",\n        \"summary\": \"The Content-Location header indicates an alternate location for the returned data.\"\n    },\n    \"content-range\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Content-Range\",\n        \"name\": \"Content-Range\",\n        \"summary\": \"The Content-Range response HTTP header indicates where in a full body message a partial message belongs.\"\n    },\n    \"content-security-policy\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Content-Security-Policy\",\n        \"name\": \"Content-Security-Policy\",\n        \"summary\": \"The HTTP Content-Security-Policy response header allows web site administrators to control resources the user agent is allowed to load for a given page.\"\n    },\n    \"content-security-policy-report-only\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Content-Security-Policy-Report-Only\",\n        \"name\": \"Content-Security-Policy-Report-Only\",\n        \"summary\": \"The HTTP Content-Security-Policy-Report-Only response header allows web developers to experiment with policies by monitoring (but not enforcing) their effects.\"\n    },\n    \"content-type\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Content-Type\",\n        \"name\": \"Content-Type\",\n        \"summary\": \"The Content-Type entity header is used to indicate the media type of the resource.\"\n    },\n    \"cookie\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Cookie\",\n        \"name\": \"Cookie\",\n        \"summary\": \"The Cookie HTTP request header contains stored HTTP cookies previously sent by the server with the Set-Cookie header.\"\n    },\n    \"cookie2\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Cookie2\",\n        \"name\": \"Cookie2\",\n        \"summary\": \"The obsolete Cookie2 HTTP request header used to advise the server that the user agent understands \\\"new-style\\\" cookies, but nowadays user agents will use the Cookie header instead, not this one.\"\n    },\n    \"cross-origin-embedder-policy\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Cross-Origin-Embedder-Policy\",\n        \"name\": \"Cross-Origin-Embedder-Policy\",\n        \"summary\": \"The HTTP Cross-Origin-Embedder-Policy (COEP) response header prevents a document from loading any cross-origin resources that don't explicitly grant the document permission (using CORP or CORS).\"\n    },\n    \"cross-origin-opener-policy\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Cross-Origin-Opener-Policy\",\n        \"name\": \"Cross-Origin-Opener-Policy\",\n        \"summary\": \"The HTTP Cross-Origin-Opener-Policy (COOP) response header allows you to ensure a top-level document does not share a browsing context group with cross-origin documents.\"\n    },\n    \"cross-origin-resource-policy\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Cross-Origin-Resource-Policy\",\n        \"name\": \"Cross-Origin-Resource-Policy\",\n        \"summary\": \"The HTTP Cross-Origin-Resource-Policy response header conveys a desire that the browser blocks no-cors cross-origin/cross-site requests to the given resource.\"\n    },\n    \"dnt\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/DNT\",\n        \"name\": \"DNT\",\n        \"summary\": \"The DNT (Do Not Track) request header indicates the user's tracking preference.\"\n    },\n    \"dpr\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/DPR\",\n        \"name\": \"DPR\",\n        \"summary\": \"The DPR header is a Client Hints headers which represents the client device pixel ratio (DPR), which is the the number of physical device pixels corresponding to every CSS pixel.\"\n    },\n    \"date\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Date\",\n        \"name\": \"Date\",\n        \"summary\": \"The Date general HTTP header contains the date and time at which the message was originated.\"\n    },\n    \"device-memory\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Device-Memory\",\n        \"name\": \"Device-Memory\",\n        \"summary\": \"The Device-Memory header is a Device Memory API header that works like Client Hints header which represents the approximate amount of RAM client device has.\"\n    },\n    \"digest\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Digest\",\n        \"name\": \"Digest\",\n        \"summary\": \"The Digest response HTTP header provides a digest of the requested resource.\"\n    },\n    \"etag\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/ETag\",\n        \"name\": \"ETag\",\n        \"summary\": \"The ETag HTTP response header is an identifier for a specific version of a resource.\"\n    },\n    \"early-data\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Early-Data\",\n        \"name\": \"Early-Data\",\n        \"summary\": \"The Early-Data header is set by an intermediary to indicate that the request has been conveyed in TLS early data, and also indicates that the intermediary understands the 425 (Too Early) status code.\"\n    },\n    \"expect\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Expect\",\n        \"name\": \"Expect\",\n        \"summary\": \"The Expect HTTP request header indicates expectations that need to be fulfilled by the server in order to properly handle the request.\"\n    },\n    \"expect-ct\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Expect-CT\",\n        \"name\": \"Expect-CT\",\n        \"summary\": \"The Expect-CT header lets sites opt in to reporting and/or enforcement of Certificate Transparency requirements, to prevent the use of misissued certificates for that site from going unnoticed.\"\n    },\n    \"expires\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Expires\",\n        \"name\": \"Expires\",\n        \"summary\": \"The Expires header contains the date/time after which the response is considered stale.\"\n    },\n    \"feature-policy\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Feature-Policy\",\n        \"name\": \"Feature-Policy\",\n        \"summary\": \"The HTTP Feature-Policy header provides a mechanism to allow and deny the use of browser features in its own frame, and in content within any <iframe> elements in the document.\"\n    },\n    \"forwarded\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Forwarded\",\n        \"name\": \"Forwarded\",\n        \"summary\": \"The Forwarded header contains information from the reverse proxy servers that is altered or lost when a proxy is involved in the path of the request.\"\n    },\n    \"from\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/From\",\n        \"name\": \"From\",\n        \"summary\": \"The From request header contains an Internet email address for a human user who controls the requesting user agent.\"\n    },\n    \"host\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Host\",\n        \"name\": \"Host\",\n        \"summary\": \"The Host request header specifies the host and port number of the server to which the request is being sent.\"\n    },\n    \"if-match\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/If-Match\",\n        \"name\": \"If-Match\",\n        \"summary\": \"The If-Match HTTP request header makes the request conditional.\"\n    },\n    \"if-modified-since\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/If-Modified-Since\",\n        \"name\": \"If-Modified-Since\",\n        \"summary\": \"The If-Modified-Since request HTTP header makes the request conditional: the server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.\"\n    },\n    \"if-none-match\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/If-None-Match\",\n        \"name\": \"If-None-Match\",\n        \"summary\": \"The If-None-Match HTTP request header makes the request conditional.\"\n    },\n    \"if-range\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/If-Range\",\n        \"name\": \"If-Range\",\n        \"summary\": \"The If-Range HTTP request header makes a range request conditional: if the condition is fulfilled, the range request will be issued and the server sends back a 206 Partial Content answer with the appropriate body.\"\n    },\n    \"if-unmodified-since\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/If-Unmodified-Since\",\n        \"name\": \"If-Unmodified-Since\",\n        \"summary\": \"The If-Unmodified-Since request HTTP header makes the request conditional: the server will send back the requested resource, or accept it in the case of a POST or another non-safe method, only if it has not been last modified after the given date.\"\n    },\n    \"keep-alive\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Keep-Alive\",\n        \"name\": \"Keep-Alive\",\n        \"summary\": \"The Keep-Alive general header allows the sender to hint about how the connection may be used to set a timeout and a maximum amount of requests.\"\n    },\n    \"large-allocation\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Large-Allocation\",\n        \"name\": \"Large-Allocation\",\n        \"summary\": \"The non-standard Large-Allocation response header tells the browser that the page being loaded is going to want to perform a large allocation.\"\n    },\n    \"last-modified\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Last-Modified\",\n        \"name\": \"Last-Modified\",\n        \"summary\": \"The Last-Modified response HTTP header contains the date and time at which the origin server believes the resource was last modified.\"\n    },\n    \"link\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Link\",\n        \"name\": \"Link\",\n        \"summary\": \"The HTTP Link entity-header field provides a means for serialising one or more links in HTTP headers.\"\n    },\n    \"location\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Location\",\n        \"name\": \"Location\",\n        \"summary\": \"The Location response header indicates the URL to redirect a page to.\"\n    },\n    \"nel\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/NEL\",\n        \"name\": \"NEL\",\n        \"summary\": \"The HTTP NEL response header is used to configure network request logging.\"\n    },\n    \"origin\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Origin\",\n        \"name\": \"Origin\",\n        \"summary\": \"The Origin request header indicates where a fetch originates from.\"\n    },\n    \"pragma\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Pragma\",\n        \"name\": \"Pragma\",\n        \"summary\": \"The Pragma HTTP/1.0 general header is an implementation-specific header that may have various effects along the request-response chain.\"\n    },\n    \"proxy-authenticate\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Proxy-Authenticate\",\n        \"name\": \"Proxy-Authenticate\",\n        \"summary\": \"The HTTP Proxy-Authenticate response header defines the authentication method that should be used to gain access to a resource behind a proxy server.\"\n    },\n    \"proxy-authorization\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Proxy-Authorization\",\n        \"name\": \"Proxy-Authorization\",\n        \"summary\": \"The HTTP Proxy-Authorization request header contains the credentials to authenticate a user agent to a proxy server, usually after the server has responded with a 407 Proxy Authentication Required status and the Proxy-Authenticate header.\"\n    },\n    \"public-key-pins\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Public-Key-Pins\",\n        \"name\": \"Public-Key-Pins\",\n        \"summary\": \"The HTTP Public-Key-Pins response header used to associate a specific cryptographic public key with a certain web server to decrease the risk of MITM attacks with forged certificates, however, it has been removed from modern browsers and is no longer supported.\"\n    },\n    \"public-key-pins-report-only\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Public-Key-Pins-Report-Only\",\n        \"name\": \"Public-Key-Pins-Report-Only\",\n        \"summary\": \"The HTTP Public-Key-Pins-Report-Only response header was used to send reports of pinning violation to the report-uri specified in the header but, unlike Public-Key-Pins still allows browsers to connect to the server if the pinning is violated.\"\n    },\n    \"range\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Range\",\n        \"name\": \"Range\",\n        \"summary\": \"The Range HTTP request header indicates the part of a document that the server should return.\"\n    },\n    \"referer\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Referer\",\n        \"name\": \"Referer\",\n        \"summary\": \"The Referer request header contains the address of the page making the request.\"\n    },\n    \"referrer-policy\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Referrer-Policy\",\n        \"name\": \"Referrer-Policy\",\n        \"summary\": \"The Referrer-Policy HTTP header controls how much referrer information (sent via the Referer header) should be included with requests.\"\n    },\n    \"retry-after\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Retry-After\",\n        \"name\": \"Retry-After\",\n        \"summary\": \"The Retry-After response HTTP header indicates how long the user agent should wait before making a follow-up request.\"\n    },\n    \"save-data\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Save-Data\",\n        \"name\": \"Save-Data\",\n        \"summary\": \"The Save-Data header field is a boolean which, in requests, indicates the client's preference for reduced data usage.\"\n    },\n    \"sec-fetch-dest\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Sec-Fetch-Dest\",\n        \"name\": \"Sec-Fetch-Dest\",\n        \"summary\": \"The Sec-Fetch-Dest fetch metadata header indicates the request's destination, that is how the fetched data will be used.\"\n    },\n    \"sec-fetch-mode\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Sec-Fetch-Mode\",\n        \"name\": \"Sec-Fetch-Mode\",\n        \"summary\": \"The Sec-Fetch-Mode fetch metadata header indicates the request's mode.\"\n    },\n    \"sec-fetch-site\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Sec-Fetch-Site\",\n        \"name\": \"Sec-Fetch-Site\",\n        \"summary\": \"The Sec-Fetch-Site fetch metadata header indicates the relationship between a request initiator's origin and the origin of the resource.\"\n    },\n    \"sec-fetch-user\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Sec-Fetch-User\",\n        \"name\": \"Sec-Fetch-User\",\n        \"summary\": \"The Sec-Fetch-User fetch metadata header indicates whether or not a navigation request was triggered by a user activation.\"\n    },\n    \"sec-websocket-accept\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Sec-WebSocket-Accept\",\n        \"name\": \"Sec-WebSocket-Accept\",\n        \"summary\": \"The Sec-WebSocket-Accept header is used in the websocket opening handshake.\"\n    },\n    \"server\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Server\",\n        \"name\": \"Server\",\n        \"summary\": \"The Server header describes the software used by the origin server that handled the request — that is, the server that generated the response.\"\n    },\n    \"server-timing\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Server-Timing\",\n        \"name\": \"Server-Timing\",\n        \"summary\": \"The Server-Timing header communicates one or more metrics and descriptions for a given request-response cycle.\"\n    },\n    \"set-cookie\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Set-Cookie\",\n        \"name\": \"Set-Cookie\",\n        \"summary\": \"The Set-Cookie HTTP response header is used to send a cookie from the server to the user agent, so the user agent can send it back to the server later.\"\n    },\n    \"set-cookie2\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Set-Cookie2\",\n        \"name\": \"Set-Cookie2\",\n        \"summary\": \"The obsolete Set-Cookie2 HTTP response header used to send cookies from the server to the user agent, but has been deprecated by the specification.\"\n    },\n    \"sourcemap\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/SourceMap\",\n        \"name\": \"SourceMap\",\n        \"summary\": \"The SourceMap HTTP response header links generated code to a source map, enabling the browser to reconstruct the original source and present the reconstructed original in the debugger.\"\n    },\n    \"strict-transport-security\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Strict-Transport-Security\",\n        \"name\": \"Strict-Transport-Security\",\n        \"summary\": \"The HTTP Strict-Transport-Security response header (often abbreviated as HSTS) lets a web site tell browsers that it should only be accessed using HTTPS, instead of using HTTP.\"\n    },\n    \"te\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/TE\",\n        \"name\": \"TE\",\n        \"summary\": \"The TE request header specifies the transfer encodings the user agent is willing to accept.\"\n    },\n    \"timing-allow-origin\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Timing-Allow-Origin\",\n        \"name\": \"Timing-Allow-Origin\",\n        \"summary\": \"The Timing-Allow-Origin response header specifies origins that are allowed to see values of attributes retrieved via features of the Resource Timing API, which would otherwise be reported as zero due to cross-origin restrictions.\"\n    },\n    \"tk\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Tk\",\n        \"name\": \"Tk\",\n        \"summary\": \"The Tk response header indicates the tracking status that applied to the corresponding request.\"\n    },\n    \"trailer\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Trailer\",\n        \"name\": \"Trailer\",\n        \"summary\": \"The Trailer response header allows the sender to include additional fields at the end of chunked messages in order to supply metadata that might be dynamically generated while the message body is sent, such as a message integrity check, digital signature, or post-processing status.\"\n    },\n    \"transfer-encoding\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Transfer-Encoding\",\n        \"name\": \"Transfer-Encoding\",\n        \"summary\": \"The Transfer-Encoding header specifies the form of encoding used to safely transfer the payload body to the user.\"\n    },\n    \"upgrade-insecure-requests\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Upgrade-Insecure-Requests\",\n        \"name\": \"Upgrade-Insecure-Requests\",\n        \"summary\": \"The HTTP Upgrade-Insecure-Requests request header sends a signal to the server expressing the client’s preference for an encrypted and authenticated response, and that it can successfully handle the upgrade-insecure-requests CSP directive.\"\n    },\n    \"user-agent\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/User-Agent\",\n        \"name\": \"User-Agent\",\n        \"summary\": \"The User-Agent request header is a characteristic string that lets servers and network peers identify the application, operating system, vendor, and/or version of the requesting user agent.\"\n    },\n    \"vary\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Vary\",\n        \"name\": \"Vary\",\n        \"summary\": \"The Vary HTTP response header determines how to match future request headers to decide whether a cached response can be used rather than requesting a fresh one from the origin server.\"\n    },\n    \"via\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Via\",\n        \"name\": \"Via\",\n        \"summary\": \"The Via general header is added by proxies, both forward and reverse proxies, and can appear in the request headers and the response headers.\"\n    },\n    \"www-authenticate\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/WWW-Authenticate\",\n        \"name\": \"WWW-Authenticate\",\n        \"summary\": \"The HTTP WWW-Authenticate response header defines the authentication method that should be used to gain access to a resource.\"\n    },\n    \"want-digest\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Want-Digest\",\n        \"name\": \"Want-Digest\",\n        \"summary\": \"The Want-Digest HTTP header is primarily used in a HTTP request, to ask the responder to provide a digest of the requested resource using the Digest response header.\"\n    },\n    \"warning\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/Warning\",\n        \"name\": \"Warning\",\n        \"summary\": \"The Warning general HTTP header contains information about possible problems with the status of the message.\"\n    },\n    \"x-content-type-options\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/X-Content-Type-Options\",\n        \"name\": \"X-Content-Type-Options\",\n        \"summary\": \"The X-Content-Type-Options response HTTP header is a marker used by the server to indicate that the MIME types advertised in the Content-Type headers should not be changed and be followed.\"\n    },\n    \"x-dns-prefetch-control\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/X-DNS-Prefetch-Control\",\n        \"name\": \"X-DNS-Prefetch-Control\",\n        \"summary\": \"The X-DNS-Prefetch-Control HTTP response header controls DNS prefetching, a feature by which browsers proactively perform domain name resolution on both links that the user may choose to follow as well as URLs for items referenced by the document, including images, CSS, JavaScript, and so forth.\"\n    },\n    \"x-forwarded-for\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/X-Forwarded-For\",\n        \"name\": \"X-Forwarded-For\",\n        \"summary\": \"The X-Forwarded-For (XFF) header is a de-facto standard header for identifying the originating IP address of a client connecting to a web server through an HTTP proxy or a load balancer.\"\n    },\n    \"x-forwarded-host\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/X-Forwarded-Host\",\n        \"name\": \"X-Forwarded-Host\",\n        \"summary\": \"The X-Forwarded-Host (XFH) header is a de-facto standard header for identifying the original host requested by the client in the Host HTTP request header.\"\n    },\n    \"x-forwarded-proto\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/X-Forwarded-Proto\",\n        \"name\": \"X-Forwarded-Proto\",\n        \"summary\": \"The X-Forwarded-Proto (XFP) header is a de-facto standard header for identifying the protocol (HTTP or HTTPS) that a client used to connect to your proxy or load balancer.\"\n    },\n    \"x-frame-options\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/X-Frame-Options\",\n        \"name\": \"X-Frame-Options\",\n        \"summary\": \"The X-Frame-Options HTTP response header can be used to indicate whether or not a browser should be allowed to render a page in a <frame>, <iframe>, <embed> or <object>.\"\n    },\n    \"x-xss-protection\": {\n        \"mdnSlug\": \"Web/HTTP/Headers/X-XSS-Protection\",\n        \"name\": \"X-XSS-Protection\",\n        \"summary\": \"The HTTP X-XSS-Protection response header is a feature of Internet Explorer, Chrome and Safari that stops pages from loading when they detect reflected cross-site scripting (XSS) attacks.\"\n    }\n};\n\n/*\n * Taken from https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods$children?expand\n * Transformed with:\n *\n * let _ = require('lodash');\n * let methods = require('./methods.json');\n * let output = (_(methods.subpages)\n * .keyBy(p => p.title.toLowerCase())\n * .mapValues((p, k) => ({\n *     mdnSlug: p.slug,\n *     name: p.title,\n *     summary: p.summary\n *     .replace(/<(.|\\n)*?>/g, '')\n *     .replace(/&lt;/g, '<')\n *     .replace(/&gt;/g, '>')\n *     .split(/\\.( |$)/)[0] + '.'\n * }))\n * .value())\n * console.log(JSON.stringify(output, null, 4));\n */\nconst METHODS: { [key: string]: MdnDocsData | undefined } = {\n    \"connect\": {\n        \"mdnSlug\": \"Web/HTTP/Methods/CONNECT\",\n        \"name\": \"CONNECT\",\n        \"summary\": \"The HTTP CONNECT method starts two-way communications with the requested resource.\"\n    },\n    \"delete\": {\n        \"mdnSlug\": \"Web/HTTP/Methods/DELETE\",\n        \"name\": \"DELETE\",\n        \"summary\": \"The HTTP DELETE request method deletes the specified resource.\"\n    },\n    \"get\": {\n        \"mdnSlug\": \"Web/HTTP/Methods/GET\",\n        \"name\": \"GET\",\n        \"summary\": \"The HTTP GET method requests a representation of the specified resource.\"\n    },\n    \"head\": {\n        \"mdnSlug\": \"Web/HTTP/Methods/HEAD\",\n        \"name\": \"HEAD\",\n        \"summary\": \"The HTTP HEAD method requests the headers that would be returned if the HEAD request's URL was instead requested with the HTTP GET method.\"\n    },\n    \"options\": {\n        \"mdnSlug\": \"Web/HTTP/Methods/OPTIONS\",\n        \"name\": \"OPTIONS\",\n        \"summary\": \"The HTTP OPTIONS method requests permitted communication options for a given URL or server.\"\n    },\n    \"patch\": {\n        \"mdnSlug\": \"Web/HTTP/Methods/PATCH\",\n        \"name\": \"PATCH\",\n        \"summary\": \"The HTTP PATCH request method applies partial modifications to a resource.\"\n    },\n    \"post\": {\n        \"mdnSlug\": \"Web/HTTP/Methods/POST\",\n        \"name\": \"POST\",\n        \"summary\": \"The HTTP POST method sends data to the server.\"\n    },\n    \"put\": {\n        \"mdnSlug\": \"Web/HTTP/Methods/PUT\",\n        \"name\": \"PUT\",\n        \"summary\": \"The HTTP PUT request method creates a new resource or replaces a representation of the target resource with the request payload.\"\n    },\n    \"trace\": {\n        \"mdnSlug\": \"Web/HTTP/Methods/TRACE\",\n        \"name\": \"TRACE\",\n        \"summary\": \"The HTTP TRACE method performs a message loop-back test along the path to the target resource, providing a useful debugging mechanism.\"\n    }\n};\n\ntype DocsInfo = {\n    url: string,\n    name: string;\n    summary: string;\n};\n\nfunction getDocs(\n    data: { [key: string]: MdnDocsData | undefined },\n    key: string\n): DocsInfo | undefined {\n    const docsInfo = data[key];\n\n    if (!docsInfo) return undefined;\n    return {\n        url: `https://developer.mozilla.org/en-US/docs/${docsInfo.mdnSlug}`,\n        name: docsInfo.name,\n        summary: docsInfo.summary\n    };\n}\n\nexport function getHeaderDocs(headerName: string) {\n    return getDocs(HEADERS, headerName.toLowerCase());\n}\n\ntype StatusDocsInfo = DocsInfo & { message: string };\n\nexport function getStatusDocs(statusCode: string | number) {\n    const statusDocs = getDocs(STATUSES, statusCode.toString()) as Partial<StatusDocsInfo>;\n    if (!statusDocs) return;\n\n    statusDocs.message = statusDocs.name!.split(' ').slice(1).join(' ');\n    return statusDocs as StatusDocsInfo;\n}\n\nexport function getWebSocketCloseCodeDocs(closeCode: string | number | undefined) {\n    if (!closeCode) return;\n    return WEBSOCKET_CLOSE_CODES[closeCode.toString()];\n}\n\nexport function getMethodDocs(methodName: string) {\n    return getDocs(METHODS, methodName.toLowerCase());\n}\n\nexport function getStatusMessage(statusCode: number | undefined) {\n    if (!statusCode) return '';\n\n    const statusData = STATUSES[statusCode.toString()];\n\n    if (!statusData) return '';\n    return statusData.name.slice(4); // Drop the 'XXX ' prefix.\n}","import * as _ from 'lodash';\nimport { MessageBody } from '../../types';\n\n// Simplify a mime type as much as we can, without throwing any errors\nexport const getBaseContentType = (mimeType: string | undefined) => {\n    const typeWithoutParams = (mimeType || '').split(';')[0];\n    const [type, combinedSubTypes] = typeWithoutParams.split(/\\/(.+)/);\n\n    if (!combinedSubTypes) return type;\n\n    // A list of types from most specific to most generic: [svg, xml] for image/svg+xml\n    const subTypes = combinedSubTypes.split('+');\n\n    const possibleTypes = subTypes.map(st => type + '/' + st);\n    return _.find(possibleTypes, t => !!mimeTypeToContentTypeMap[t]) ||\n        _.last(possibleTypes)!; // If we recognize none - return the most generic\n}\n\nexport type ViewableContentType =\n    | 'raw'\n    | 'text'\n    | 'url-encoded'\n    | 'base64'\n    | 'json'\n    | 'xml'\n    | 'html'\n    | 'css'\n    | 'javascript'\n    | 'markdown'\n    | 'yaml'\n    | 'image';\n\nexport const EditableContentTypes = [\n    'text',\n    'json',\n    'xml',\n    'html',\n    'css',\n    'javascript'\n] as const;\n\nexport type EditableContentType = (\n    typeof EditableContentTypes\n) extends ReadonlyArray<infer T> ? T : never;\n\nconst mimeTypeToContentTypeMap: { [mimeType: string]: ViewableContentType } = {\n    'application/json': 'json',\n    'text/json': 'json',\n\n    'application/xml': 'xml',\n    'text/xml': 'xml',\n    'application/rss': 'xml',\n\n    'application/javascript': 'javascript',\n    'application/x-javascript': 'javascript',\n    'application/ecmascript': 'javascript',\n    'text/javascript': 'javascript',\n\n    'text/plain': 'text',\n    'text/csv': 'text',\n\n    'application/x-www-form-urlencoded': 'url-encoded',\n\n    'text/markdown': 'markdown',\n    'text/x-markdown': 'markdown',\n\n    'text/x-yaml': 'yaml',\n    'text/yaml': 'yaml',\n    'application/yaml': 'yaml',\n\n    'image/png': 'image',\n    'image/gif': 'image',\n    'image/jpg': 'image',\n    'image/jpeg': 'image',\n    'image/svg': 'image',\n    'image/tiff': 'image',\n    'image/webp': 'image',\n    'image/avif': 'image',\n    'image/x-icon': 'image',\n    'image/vnd.microsoft.icon': 'image',\n\n    'text/css': 'css',\n\n    'text/html': 'html',\n    'application/xhtml': 'html',\n\n    'application/octet-stream': 'raw'\n} as const;\n\nexport function getContentType(mimeType: string | undefined): ViewableContentType | undefined {\n    const baseContentType = getBaseContentType(mimeType);\n    return mimeTypeToContentTypeMap[baseContentType!];\n}\n\nexport function getEditableContentType(mimeType: string | undefined): EditableContentType | undefined {\n    const baseContentType = getBaseContentType(mimeType);\n    const viewableContentType = mimeTypeToContentTypeMap[baseContentType!];\n\n    if (EditableContentTypes.includes(viewableContentType as any)) {\n        return viewableContentType as EditableContentType;\n    }\n}\n\nexport function getContentEditorName(contentType: ViewableContentType): string {\n    return contentType === 'raw' ? 'Hex'\n        : contentType === 'json' ? 'JSON'\n        : contentType === 'url-encoded' ? 'URL-Encoded'\n        : _.capitalize(contentType);\n}\n\nexport function getDefaultMimeType(contentType: ViewableContentType): string {\n    // Uses the *first* mime type listed for this key in our map\n    return _.findKey(mimeTypeToContentTypeMap, (c) => c === contentType)!;\n}\n\nfunction isValidBase64Byte(byte: number) {\n    return (byte >= 65 && byte <= 90) || // A-Z\n        (byte >= 97 && byte <= 122) ||   // a-z\n        (byte >= 48 && byte <= 57) ||    // 0-9\n        byte === 43 ||                   // +\n        byte === 47 ||                   // /\n        byte === 61;                     // =\n}\n\nexport function getCompatibleTypes(\n    contentType: ViewableContentType,\n    rawContentType: string | undefined,\n    body: MessageBody | Buffer | undefined\n): ViewableContentType[] {\n    let types = new Set([contentType]);\n\n    if (body && !Buffer.isBuffer(body)) {\n        body = body.decoded;\n    }\n\n    // Examine the first char of the body, assuming it's ascii\n    const firstChar = body && body.slice(0, 1).toString('ascii');\n\n    // Allow optionally formatting non-JSON as JSON, if it looks like it might be\n    if (firstChar === '{' || firstChar === '[') {\n        types.add('json');\n    }\n\n    // Allow optionally formatting non-XML as XML, if it looks like it might be\n    if (firstChar === '<') {\n        types.add('xml');\n    }\n\n    // SVGs can always be shown as XML\n    if (rawContentType && rawContentType.startsWith('image/svg')) {\n        types.add('xml');\n    }\n\n    if (\n        body &&\n        body.length > 0 &&\n        body.length % 4 === 0 && // Multiple of 4 bytes\n        body.length < 1000 * 100 && // < 100 KB of content\n        body.every(isValidBase64Byte)\n    ) {\n        types.add('base64');\n    }\n\n    // Lastly, anything can be shown raw or as text, if you like:\n    types.add('text');\n    types.add('raw');\n\n    return Array.from(types);\n}","import * as serializr from 'serializr';\nimport { asBuffer, recursiveMapValues } from '../util';\n\nexport const serializeAsTag = (getTag: (value: any) => any) =>\n    serializr.custom(\n        getTag,\n        () => serializr.SKIP\n    );\n\nexport const serializeRegex = serializr.custom(\n    (value: RegExp) => ({ source: value.source, flags: value.flags }),\n    (value: { source: string, flags: string }) => new RegExp(value.source, value.flags)\n);\n\nexport const serializeBuffer = serializr.custom(\n    (buffer: string | Buffer | Uint8Array | undefined): string | undefined => buffer !== undefined\n        ? asBuffer(buffer).toString('base64')\n        : undefined,\n    (data: string | undefined): Buffer | undefined => data !== undefined\n        ? Buffer.from(data, 'base64')\n        : undefined\n);\n\nconst undefinedPlaceholder = \"__http_toolkit_undefined_placeholder__\";\nexport const serializeWithUndefineds = serializr.custom(\n    (value: {}): string | undefined => value\n        ? JSON.stringify(value, (k, v) =>\n            v === undefined ? undefinedPlaceholder : v\n        )\n        : undefined,\n    (data: string): unknown => !!data\n        ? recursiveMapValues(\n            JSON.parse(data),\n            (v) => v === undefinedPlaceholder ? undefined : v // Can't do this in parse - it drops undef values\n        )\n        : undefined\n);\n\n// Bit of a hack to let us call propSchema.deserializer easily in sync code,\n// without having to fight to collate values from callbacks. Only works for\n// propSchemas that call the callback synchronously.\nfunction syncDeserialize(\n    propSchema: serializr.PropSchema,\n    value: any,\n    context: any\n) {\n    let result: any;\n    let error: any;\n\n    propSchema.deserializer(value, (err, data) => {\n        if (err) error = err;\n        else result = data;\n    }, context, undefined);\n\n    // Requires that the callback was already called!\n    if (error) {\n        throw error;\n    } else {\n        return result;\n    }\n}\n\nexport const serializeMap = (keySchema: serializr.PropSchema, valueSchema: serializr.PropSchema) =>\n    serializr.custom(\n        (map: Map<any, any>) => Array.from(map.entries()).map((entry) =>\n            [\n                keySchema.serializer(entry[0]),\n                valueSchema.serializer(entry[1])\n            ]\n        ),\n        (\n            mapAsArray: any[],\n            context: any,\n            _oldValue: any,\n            callback: (err: any, result: any) => void\n        ) => callback(null,\n            new Map(\n                mapAsArray.map((entry) => [\n                    syncDeserialize(keySchema, entry[0], context),\n                    syncDeserialize(valueSchema, entry[1], context),\n                ]\n            )\n        ))\n    )\n\nexport const hasSerializrSchema = (obj: any) => !!serializr.getDefaultModelSchema(obj);\n\nexport const rawSchema = serializr.createSimpleSchema({ \"*\": true });","import { IObservableValue, observable, action } from 'mobx';\n\nimport { testEncodingsAsync } from '../../services/ui-worker-api';\nimport { ExchangeMessage } from '../../types';\n\nexport function getReadableSize(input: number | Buffer | string, siUnits = true) {\n    const bytes = Buffer.isBuffer(input)\n            ? input.byteLength\n        : typeof input === 'string'\n            ? input.length\n        : input;\n\n    let thresh = siUnits ? 1000 : 1024;\n\n    let units = siUnits\n        ? ['bytes', 'kB','MB','GB','TB','PB','EB','ZB','YB']\n        : ['bytes', 'KiB','MiB','GiB','TiB','PiB','EiB','ZiB','YiB'];\n\n    let unitIndex = bytes === 0 ? 0 :\n        Math.floor(Math.log(bytes) / Math.log(thresh));\n\n    let unitName = bytes === 1 ? 'byte' : units[unitIndex];\n\n    return (bytes / Math.pow(thresh, unitIndex)).toFixed(1).replace(/\\.0$/, '') + ' ' + unitName;\n}\n\nconst EncodedSizesCacheKey = Symbol('encoded-body-test');\ntype EncodedBodySizes = { [encoding: string]: number };\ntype EncodedSizesCache = Map<typeof EncodedSizesCacheKey,\n    IObservableValue<EncodedBodySizes | undefined> | undefined\n>;\n\nexport function testEncodings(message: ExchangeMessage): EncodedBodySizes | undefined {\n    if (!message.body.decoded) return;\n\n    const encodedSizesCache = <EncodedSizesCache> message.cache;\n    const existingObservable = encodedSizesCache.get(EncodedSizesCacheKey);\n\n    if (existingObservable) return existingObservable.get();\n    else {\n        const sizesObservable = observable.box<EncodedBodySizes | undefined>();\n        encodedSizesCache.set(EncodedSizesCacheKey, sizesObservable);\n\n        testEncodingsAsync(message.body.decoded)\n        .then(action((testResults: EncodedBodySizes) => {\n            sizesObservable.set(testResults)\n        }))\n        // Ignore errors for now - we just never resolve if testing something unencodable\n        .catch(() => {});\n\n        // Will be undefined, but ensures we're subscribed to the observable\n        return sizesObservable.get();\n    }\n}","import * as _ from 'lodash';\nimport {\n    WebSocketRuleData,\n    webSocketHandlerDefinitions as wsHandlers,\n    matchers,\n    completionCheckers,\n    Method\n} from 'mockttp';\nimport * as serializr from 'serializr';\n\nimport { RulesStore } from '../rules-store';\n\nimport { MethodNames } from '../../http/methods';\nimport { serializeAsTag } from '../../serialization';\nimport {\n    HttpMatcherLookup,\n    HttpMatcher,\n    WildcardMatcher\n} from './http-rule-definitions';\n\n// Convenient re-export for various built-in handler definitions:\nexport const {\n    EchoWebSocketHandlerDefinition,\n    RejectWebSocketHandlerDefinition,\n    ListenWebSocketHandlerDefinition\n} = wsHandlers;\nexport type EchoWebSocketHandlerDefinition = wsHandlers.EchoWebSocketHandlerDefinition;\nexport type RejectWebSocketHandlerDefinition = wsHandlers.RejectWebSocketHandlerDefinition;\nexport type ListenWebSocketHandlerDefinition = wsHandlers.ListenWebSocketHandlerDefinition;\n\nexport class WebSocketWildcardMatcher extends WildcardMatcher {\n\n    readonly uiType = 'ws-wildcard';\n\n    explain() {\n        return 'Any WebSocket';\n    }\n\n}\n\nexport class DefaultWebSocketWildcardMatcher extends WildcardMatcher {\n\n    readonly uiType = 'default-ws-wildcard';\n\n    explain() {\n        return 'Any other WebSockets';\n    }\n}\n\nexport class WebSocketMethodMatcher extends matchers.MethodMatcher {\n\n    explain() {\n        return `started with ${Method[this.method]}`;\n    }\n\n}\n\nexport class WebSocketPassThroughHandler extends wsHandlers.PassThroughWebSocketHandlerDefinition {\n\n    constructor(rulesStore: RulesStore) {\n        super(rulesStore.activePassthroughOptions);\n    }\n\n}\n\nserializr.createModelSchema(WebSocketPassThroughHandler, {\n    type: serializr.primitive()\n}, (context) => new WebSocketPassThroughHandler(context.args.rulesStore));\n\nexport class WebSocketForwardToHostHandler extends wsHandlers.PassThroughWebSocketHandlerDefinition {\n\n    readonly uiType = 'ws-forward-to-host';\n\n    constructor(forwardToLocation: string, updateHostHeader: boolean, rulesStore: RulesStore) {\n        super({\n            ...rulesStore.activePassthroughOptions,\n            forwarding: {\n                targetHost: forwardToLocation,\n                updateHostHeader: updateHostHeader\n            }\n        });\n    }\n\n}\n\nserializr.createModelSchema(WebSocketForwardToHostHandler, {\n    uiType: serializeAsTag(() => 'ws-forward-to-host'),\n    type: serializr.primitive(),\n    forwarding: serializr.map(serializr.primitive())\n}, (context) => {\n    const data = context.json;\n    return new WebSocketForwardToHostHandler(\n        data.forwarding.targetHost,\n        data.forwarding.updateHostHeader,\n        context.args.rulesStore\n    );\n});\n\nexport const WebSocketMatcherLookup = {\n    ..._.omit(HttpMatcherLookup, MethodNames),\n    'method': WebSocketMethodMatcher, // Unlike HTTP rules, WS uses a single method matcher\n\n    // Replace the wildcard matchers with our own WebSocket versions:\n    'ws-wildcard': WebSocketWildcardMatcher,\n    'default-ws-wildcard': DefaultWebSocketWildcardMatcher\n};\n\nexport const WebSocketInitialMatcherClasses = [\n    WebSocketWildcardMatcher\n];\n\nexport const WebSocketHandlerLookup = {\n    ...wsHandlers.WsHandlerDefinitionLookup,\n    'ws-passthrough': WebSocketPassThroughHandler,\n    'ws-forward-to-host': WebSocketForwardToHostHandler\n};\n\ntype WebSocketHandlerClass = typeof WebSocketHandlerLookup[keyof typeof WebSocketHandlerLookup];\ntype WebSocketHandler = InstanceType<WebSocketHandlerClass>;\n\nexport interface WebSocketMockRule extends Omit<WebSocketRuleData, 'matchers'> {\n    id: string;\n    type: 'websocket';\n    activated: boolean;\n    // WebSockets use the same HTTP matchers, but require an initial WebSocket matcher:\n    matchers: Array<HttpMatcher> & {\n        0?: WebSocketWildcardMatcher | DefaultWebSocketWildcardMatcher\n    };\n    handler: WebSocketHandler;\n    completionChecker: completionCheckers.Always; // HTK rules all *always* match\n};","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"app.worker.js\");\n}\n","/*\n * SPDX-FileCopyrightText: 2022 Tim Perry <tim@httptoolkit.com>\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport {\n    PluggableAdmin\n} from 'mockttp';\nimport {\n    MatcherDefinitions,\n    HandlerStepDefinitions\n} from 'mockrtc';\n\nexport const { Serializable } = PluggableAdmin.Serialization;\n\nexport class RTCWildcardMatcher extends Serializable {\n\n    readonly type = 'rtc-wildcard';\n\n    explain() {\n        return 'WebRTC connections';\n    }\n\n}\n\n// Convenient re-export for various built-in matcher definitions:\nexport const {\n    HasDataChannelMatcherDefinition,\n    HasVideoTrackMatcherDefinition,\n    HasAudioTrackMatcherDefinition,\n    HasMediaTrackMatcherDefinition\n} = MatcherDefinitions;\nexport type HasDataChannelMatcherDefinition = MatcherDefinitions.HasDataChannelMatcherDefinition;\nexport type HasVideoTrackMatcherDefinition = MatcherDefinitions.HasVideoTrackMatcherDefinition;\nexport type HasAudioTrackMatcherDefinition = MatcherDefinitions.HasAudioTrackMatcherDefinition;\nexport type HasMediaTrackMatcherDefinition = MatcherDefinitions.HasMediaTrackMatcherDefinition;\n\nexport const RTCMatcherLookup = {\n    ...MatcherDefinitions.MatcherDefinitionLookup,\n\n    'rtc-wildcard': RTCWildcardMatcher\n};\n\nexport const RTCInitialMatcherClasses = [\n    RTCWildcardMatcher\n];\n\n// Convenient re-export for various built-in step definitions:\nexport const {\n    DynamicProxyStepDefinition,\n    EchoStepDefinition,\n    CloseStepDefinition,\n    WaitForMediaStepDefinition,\n    WaitForDurationStepDefinition,\n    WaitForChannelStepDefinition,\n    WaitForMessageStepDefinition,\n    CreateChannelStepDefinition,\n    SendStepDefinition\n} = HandlerStepDefinitions;\nexport type DynamicProxyStepDefinition = HandlerStepDefinitions.DynamicProxyStepDefinition;\nexport type EchoStepDefinition = HandlerStepDefinitions.EchoStepDefinition;\nexport type CloseStepDefinition = HandlerStepDefinitions.CloseStepDefinition;\nexport type WaitForMediaStepDefinition = HandlerStepDefinitions.WaitForMediaStepDefinition;\nexport type WaitForDurationStepDefinition = HandlerStepDefinitions.WaitForDurationStepDefinition;\nexport type WaitForChannelStepDefinition = HandlerStepDefinitions.WaitForChannelStepDefinition;\nexport type WaitForMessageStepDefinition = HandlerStepDefinitions.WaitForMessageStepDefinition;\nexport type CreateChannelStepDefinition = HandlerStepDefinitions.CreateChannelStepDefinition;\nexport type SendStepDefinition = HandlerStepDefinitions.SendStepDefinition;\n\nexport const RTCStepLookup = {\n    ...HandlerStepDefinitions.StepDefinitionLookup\n};\n\ntype RTCMatcherClass = typeof RTCMatcherLookup[keyof typeof RTCMatcherLookup];\nexport type RTCMatcher = InstanceType<RTCMatcherClass>;\nexport type RTCInitialMatcher = InstanceType<typeof RTCInitialMatcherClasses[number]>;\n\nexport type RTCStepClass = typeof RTCStepLookup[keyof typeof RTCStepLookup];\nexport type RTCStep = InstanceType<RTCStepClass>;\n\nexport interface RTCMockRule {\n    id: string;\n    type: 'webrtc';\n    activated: boolean;\n    matchers: Array<RTCMatcher> & { 0?: RTCInitialMatcher };\n    steps: RTCStep[];\n};","export function delay(numberMs: number) {\n    return new Promise((resolve) => setTimeout(resolve, numberMs));\n}\n\nexport function attempt<T>(fn: () => T): Promise<T> {\n    try {\n        const result = fn();\n        return Promise.resolve(result);\n    } catch (e) {\n        return Promise.reject(e);\n    }\n}\n\nexport interface Deferred<T> {\n    resolve: (arg: T) => void,\n    reject: (e?: Error) => void,\n    promise: Promise<T>\n}\n\nexport function getDeferred<T = void>(): Deferred<T> {\n    let resolve: undefined | ((arg: T) => void) = undefined;\n    let reject: undefined | ((e?: Error) => void) = undefined;\n\n    let promise = new Promise<T>((resolveCb, rejectCb) => {\n        resolve = resolveCb;\n        reject = rejectCb;\n    });\n\n    // TS thinks we're using these before they're assigned, which is why\n    // we need the undefined types, and the any here.\n    return { resolve, reject, promise } as any;\n}","import deserializeError from 'deserialize-error';\nimport { EventEmitter } from 'events';\nimport type { SUPPORTED_ENCODING } from 'http-encoding';\n\nimport type {\n    BackgroundRequest,\n    BackgroundResponse,\n    DecodeRequest,\n    DecodeResponse,\n    BuildApiResponse,\n    BuildApiRequest,\n    TestEncodingsRequest,\n    TestEncodingsResponse,\n    EncodeRequest,\n    EncodeResponse,\n    ValidatePKCSRequest,\n    ValidatePKCSResponse,\n    FormatRequest,\n    FormatResponse,\n    ParseCertRequest,\n    ParseCertResponse\n} from './ui-worker';\nimport Worker from 'worker-loader!./ui-worker';\n\nimport { Omit } from '../types';\nimport type { ApiMetadata, ApiSpec } from '../model/api/api-interfaces';\nimport { WorkerFormatterKey } from './ui-worker-formatters';\n\nconst worker = new Worker();\n\nlet messageId = 0;\nfunction getId() {\n    return messageId++;\n}\n\nconst emitter = new EventEmitter();\n\nworker.addEventListener('message', (event) => {\n    emitter.emit(event.data.id.toString(), event.data);\n});\n\nfunction callApi<\n    T extends BackgroundRequest,\n    R extends BackgroundResponse\n>(request: Omit<T, 'id'>, transfer: any[] = []): Promise<R> {\n    const id = getId();\n\n    return new Promise<R>((resolve, reject) => {\n        worker.postMessage(Object.assign({ id }, request), transfer);\n\n        emitter.once(id.toString(), (data: R) => {\n            if (data.error) {\n                reject(deserializeError(data.error));\n            } else {\n                resolve(data);\n            }\n        });\n    });\n}\n\n/**\n * Takes a body, asynchronously decodes it and returns the decoded buffer.\n *\n * Note that this requires transferring the _encoded_ body to a web worker,\n * so after this is run the encoded the buffer will become empty, if any\n * decoding is actually required.\n *\n * The method returns an object containing the new decoded buffer and the\n * original encoded data (transferred back) in a new buffer.\n */\nexport async function decodeBody(encodedBuffer: Buffer, encodings: string[]) {\n    if (\n        encodings.length === 0 || // No encoding\n        (encodings.length === 1 && encodings[0] === 'identity') || // No-op only encoding\n        encodedBuffer.length === 0 // Empty body (e.g. HEAD, 204, etc)\n    ) {\n        // Shortcut to skip decoding when we know it's not required:\n        return { encoded: encodedBuffer, decoded: encodedBuffer };\n    }\n\n    try {\n        const result = await callApi<DecodeRequest, DecodeResponse>({\n            type: 'decode',\n            buffer: encodedBuffer.buffer as ArrayBuffer,\n            encodings\n        }, [encodedBuffer.buffer]);\n\n        return {\n            encoded: Buffer.from(result.inputBuffer),\n            decoded: Buffer.from(result.decodedBuffer)\n        };\n    } catch (e: any) {\n        // In general, the worker should return the original encoded buffer to us, so we can\n        // show it to the user to help them debug encoding issues:\n        if (e.inputBuffer) {\n            e.inputBuffer = Buffer.from(e.inputBuffer);\n        }\n        throw e;\n    }\n}\n\nexport async function encodeBody(decodedBuffer: Buffer, encodings: string[]) {\n    if (\n        encodings.length === 0 ||\n        (encodings.length === 1 && encodings[0] === 'identity')\n    ) {\n        // Shortcut to skip encoding when we know it's not required\n        return decodedBuffer;\n    }\n\n    const result = await callApi<EncodeRequest, EncodeResponse>({\n        type: 'encode',\n        buffer: decodedBuffer.buffer as ArrayBuffer,\n        encodings: encodings as SUPPORTED_ENCODING[]\n    });\n\n    return Buffer.from(result.encodedBuffer);\n}\n\nexport async function testEncodingsAsync(decodedBuffer: Buffer) {\n    return (await callApi<TestEncodingsRequest, TestEncodingsResponse>({\n        type: 'test-encodings',\n        decodedBuffer: decodedBuffer\n    })).encodingSizes;\n}\n\nexport async function buildApiMetadataAsync(\n    spec: ApiSpec,\n    baseUrlOverrides?: string[]\n): Promise<ApiMetadata> {\n    return (await callApi<BuildApiRequest, BuildApiResponse>({\n        type: 'build-api',\n        spec,\n        baseUrlOverrides\n    })).api;\n}\n\nexport async function validatePKCS(buffer: ArrayBuffer, passphrase: string | undefined) {\n    return (await callApi<ValidatePKCSRequest, ValidatePKCSResponse>({\n        type: 'validate-pkcs12',\n        buffer,\n        passphrase\n    })).result;\n}\n\nexport async function parseCert(buffer: ArrayBuffer) {\n    return (await callApi<ParseCertRequest, ParseCertResponse>({\n        type: 'parse-cert',\n        buffer\n    })).result;\n}\n\nexport async function formatBufferAsync(buffer: ArrayBuffer, format: WorkerFormatterKey) {\n    return (await callApi<FormatRequest, FormatResponse>({\n        type: 'format',\n        buffer,\n        format\n    })).formatted;\n}","/*\n * SPDX-FileCopyrightText: 2022 Tim Perry <tim@httptoolkit.com>\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport {\n    ContentDescriptorObject,\n    JSONSchemaObject,\n    MethodObject,\n    OpenrpcDocument\n} from \"@open-rpc/meta-schema\";\nimport { SchemaObject } from \"openapi-directory\";\nimport { HtkResponse, Html, HttpExchange } from \"../../types\";\nimport { ErrorLike, isErrorLike } from \"../../util/error\";\nimport { fromMarkdown } from \"../ui/markdown\";\nimport {\n    ApiExchange,\n    ApiOperation,\n    ApiParameter,\n    ApiRequest,\n    ApiResponse,\n    ApiService\n} from \"./api-interfaces\";\n\nexport type OpenRpcDocument = OpenrpcDocument;\n\nexport interface OpenRpcMetadata {\n    type: 'openrpc';\n    spec: OpenRpcDocument;\n    serverMatcher: RegExp;\n    requestMatchers: { [methodName: string] : MethodObject }; // JSON-RPC method name to method\n}\n\nexport async function parseRpcApiExchange(\n    api: OpenRpcMetadata,\n    exchange: HttpExchange\n): Promise<JsonRpcApiExchange> {\n    try {\n        const body = await exchange.request.body.decodedPromise;\n\n        if (!body?.length) throw new Error(`No JSON-RPC request body`);\n\n        let parsedBody: any;\n        let methodName: string;\n        try {\n            parsedBody = JSON.parse(body?.toString());\n            if (parsedBody.jsonrpc !== '2.0') throw new Error(\n                `JSON-RPC request body had bad 'jsonrpc' field: ${parsedBody.jsonrpc}`\n            );\n\n            methodName = parsedBody.method;\n        } catch (e) {\n            console.warn(e);\n            throw new Error('Could not parse JSON-RPC request body');\n        }\n\n        const methodSpec = api.requestMatchers[methodName];\n        if (!methodSpec) throw new Error(`Unrecognized JSON-RPC method name: ${methodName}`);\n\n        const operation = {\n            methodSpec,\n            parsedBody\n        };\n\n        return new JsonRpcApiExchange(api, exchange, operation);\n    } catch (error) {\n        return new JsonRpcApiExchange(api, exchange, error as ErrorLike);\n    }\n}\n\ninterface MatchedOperation {\n    methodSpec: MethodObject;\n    parsedBody: any;\n}\n\nexport class JsonRpcApiExchange implements ApiExchange {\n\n    constructor(\n        _api: OpenRpcMetadata,\n        _exchange: HttpExchange,\n        private _rpcMethod: MatchedOperation | ErrorLike\n    ) {\n        this.isBuiltInApi = _api.spec.info['x-httptoolkit-builtin-api'] === true;\n\n        this.service = new JsonRpcApiService(_api);\n\n        if (isErrorLike(_rpcMethod)) {\n            this.operation = {\n                name: 'Unrecognized request to JSON-RPC API',\n                warnings: [_rpcMethod.message ?? _rpcMethod.toString()]\n            };\n            this.request = { parameters: [] };\n        } else {\n            this.operation = new JsonRpcApiOperation(\n                _rpcMethod,\n                _api.spec.externalDocs?.['x-method-base-url'] // Custom extension\n            );\n            this.request = new JsonRpcApiRequest(_rpcMethod, _exchange);\n        }\n    }\n\n    readonly isBuiltInApi: boolean;\n\n    readonly service: ApiService;\n    readonly operation: ApiOperation;\n    readonly request: ApiRequest;\n    response: ApiResponse | undefined;\n\n    updateWithResponse(response: HtkResponse | \"aborted\" | undefined): void {\n        if (\n            response === 'aborted' ||\n            response === undefined ||\n            isErrorLike(this._rpcMethod)\n        ) return;\n\n        this.response = new JsonRpcApiResponse(this._rpcMethod);\n    }\n\n    matchedOperation(): boolean {\n        return this._rpcMethod && !isErrorLike(this._rpcMethod);\n    }\n\n}\n\nexport class JsonRpcApiService implements ApiService {\n\n    constructor(api: OpenRpcMetadata) {\n        this.name = api.spec.info.title;\n        this.shortName = api.spec.info['x-httptoolkit-short-name']\n            ?? this.name.split(' ')[0];\n\n        this.logoUrl = api.spec.info['x-logo']?.url;\n        this.description = fromMarkdown(api.spec.info.description);\n        this.docsUrl = api.spec.externalDocs?.url;\n    }\n\n    readonly shortName: string;\n    readonly name: string;\n    readonly logoUrl?: string | undefined;\n    readonly description?: Html | undefined;\n    readonly docsUrl?: string | undefined;\n\n}\n\nexport class JsonRpcApiOperation implements ApiOperation {\n\n    constructor(\n        rpcMethod: MatchedOperation,\n        methodDocsBaseUrl: string | undefined\n    ) {\n        const { methodSpec } = rpcMethod;\n\n        this.name = methodSpec.name;\n        this.description = fromMarkdown([\n            methodSpec.summary,\n            methodSpec.description\n        ].filter(x => !!x).join('\\n\\n'));\n        this.docsUrl = methodSpec.externalDocs?.url\n            ?? (methodDocsBaseUrl\n                ? methodDocsBaseUrl + methodSpec.name.toLowerCase()\n                : undefined\n            );\n\n        if (methodSpec.deprecated) {\n            this.warnings.push(`The '${this.name}' method is deprecated.`);\n        }\n    }\n\n    name: string;\n    description?: Html | undefined;\n    docsUrl?: string | undefined;\n    warnings: string[] = [];\n\n}\n\nconst capitalizeFirst = (input: string | undefined) =>\n    input\n    ? input.charAt(0).toUpperCase() + input.slice(1)\n    : undefined;\n\nexport class JsonRpcApiRequest implements ApiRequest {\n\n    constructor(rpcMethod: MatchedOperation, exchange: HttpExchange) {\n        const { methodSpec, parsedBody } = rpcMethod;\n\n        this.parameters = (methodSpec.params as ContentDescriptorObject[])\n            .map((param: ContentDescriptorObject, i: number) => {\n                const schema = param.schema as JSONSchemaObject | undefined;\n\n                return {\n                    name: param.name,\n                    description: fromMarkdown([\n                        param.summary,\n                        param.description,\n                        capitalizeFirst(schema?.title),\n                        ...(schema?.oneOf?.length\n                            ? [\n                                'One of:',\n                                (schema.oneOf as JSONSchemaObject[]).map(subschema =>\n                                    `* ${capitalizeFirst(subschema.title)}: ${\n                                        subschema.description || subschema.type || 'unknown'\n                                    }`\n                                ).join('\\n')\n                            ]\n                            : []\n                        )\n                    ].filter(x => !!x).join('\\n\\n')),\n                    in: 'body',\n                    required: !!param.required,\n                    deprecated: !!param.deprecated,\n                    type: schema?.type,\n                    value: parsedBody.params[i],\n                    defaultValue: schema?.default,\n                    enum: schema?.enum || (schema?.items as SchemaObject | undefined)?.enum,\n                    warnings: [\n                        ...(param.deprecated ? [`The '${param.name}' parameter is deprecated.`] : []),\n                        ...(param.required &&\n                            parsedBody.params[i] === undefined &&\n                            (schema && schema.default === undefined)\n                            ? [`The '${param.name}' parameter is required.`]\n                            : []\n                        )\n                    ]\n                };\n            });\n    }\n\n    parameters: ApiParameter[];\n\n}\n\nexport class JsonRpcApiResponse implements ApiResponse {\n\n    constructor(rpcMethod: MatchedOperation) {\n        const resultSpec = rpcMethod.methodSpec.result as ContentDescriptorObject;\n\n        this.description = fromMarkdown(resultSpec.description);\n        this.bodySchema = {\n            type: 'object',\n            properties: {\n                id: { type: 'number' },\n                jsonrpc: { type: 'string', enum: ['2.0'] },\n                result: resultSpec.schema as SchemaObject,\n                error: {\n                    type: 'object',\n                    properties: {\n                        code: { type: 'number' },\n                        message: { type: 'string' }\n                    }\n                }\n            },\n            required: ['id', 'jsonrpc']\n        };\n    }\n\n    description?: Html;\n    bodySchema?: SchemaObject;\n\n}\n","import * as _ from 'lodash';\n\nimport {\n    requestHandlers,\n    MOCKTTP_PARAM_REF,\n    ProxyConfig,\n    ProxySetting,\n    RuleParameterReference,\n    ProxySettingSource\n} from 'mockttp';\nimport * as MockRTC from 'mockrtc';\n\nimport {\n    observable,\n    action,\n    flow,\n    computed,\n    observe,\n    when,\n    reaction,\n    runInAction\n} from 'mobx';\nimport * as uuid from 'uuid/v4';\nimport * as serializr from 'serializr';\nimport { encode as encodeBase64, decode as decodeBase64 } from 'base64-arraybuffer';\nimport * as semver from 'semver';\n\nimport {\n    HttpExchange,\n    MockttpBreakpointedRequest,\n    MockttpBreakpointedResponse\n} from '../../types';\nimport { lazyObservablePromise } from '../../util/observable';\nimport { persist, hydrate } from '../../util/mobx-persist/persist';\nimport { logError } from '../../errors';\n\nimport { AccountStore } from '../account/account-store';\nimport { ProxyStore } from '../proxy-store';\nimport { getDesktopInjectedValue } from '../../services/desktop-api';\nimport { RTC_RULES_SUPPORTED, WEBSOCKET_RULE_RANGE } from '../../services/service-versions';\n\nimport {\n    HtkMockRule,\n    isHttpBasedRule,\n    isWebSocketRule,\n    isRTCRule\n} from './rules';\nimport {\n    HtkMockRuleGroup,\n    flattenRules,\n    ItemPath,\n    isRuleGroup,\n    getItemAtPath,\n    getItemParentByPath,\n    updateItemAtPath,\n    deleteItemAtPath,\n    findItem,\n    findItemPath,\n    HtkMockRuleRoot,\n    isRuleRoot,\n    HtkMockItem,\n    areItemsEqual,\n} from './rules-structure';\nimport {\n    buildDefaultGroupRules,\n    buildDefaultGroupWrapper,\n    buildDefaultRulesRoot,\n    buildForwardingRuleIntegration,\n} from './rule-creation';\nimport {\n    serializeRules,\n    deserializeRules,\n    MockRulesetSchema,\n    DeserializationArgs\n} from './rule-serialization';\nimport { migrateRuleData } from './rule-migrations';\nimport { ParsedCertificate } from '../crypto';\n\nexport type ClientCertificate = {\n    readonly pfx: ArrayBuffer,\n    readonly passphrase?: string,\n    readonly filename: string\n};\n\nconst clientCertificateSchema = serializr.createSimpleSchema({\n    passphrase: serializr.primitive(),\n    filename: serializr.primitive(),\n    pfx: serializr.custom(encodeBase64, decodeBase64)\n});\n\nconst reloadRules = (ruleRoot: HtkMockRuleRoot, rulesStore: RulesStore) => {\n    return deserializeRules(serializeRules(ruleRoot), { rulesStore });\n};\n\nconst dockerProxyRuleParamName = (port: number) =>\n    `docker-tunnel-proxy-${port}`;\n\nexport type UpstreamProxyType =\n    | 'system'\n    | 'direct'\n    | 'http'\n    | 'https'\n    | 'socks4'\n    | 'socks4a'\n    | 'socks5'\n    | 'socks5h';\n\nexport class RulesStore {\n\n    constructor(\n        private readonly accountStore: AccountStore,\n        private readonly proxyStore: ProxyStore,\n        private readonly jumpToExchange: (exchangeId: string) => Promise<HttpExchange>\n    ) { }\n\n    readonly initialized = lazyObservablePromise(async () => {\n        await Promise.all([\n            this.accountStore.initialized,\n            this.proxyStore.initialized\n        ]);\n\n        await this.loadSettings();\n\n        const {\n            setRequestRules,\n            setWebSocketRules,\n            setRTCRules,\n            serverVersion\n        } = this.proxyStore;\n\n        // When the general config options change, reload all rules to re-inject the config\n        // into all the rules that need it.\n        reaction(\n            () => {\n                return this.activePassthroughOptions;\n            },\n            () => {\n                this.rules = reloadRules(this.rules, this);\n                this.draftRules = reloadRules(this.draftRules, this);\n            }\n        );\n\n        // Reset the proxy host if the type is changed to one where no host is required\n        reaction(\n            () => this.upstreamProxyType,\n            (type) => {\n                if (type === 'direct' || type === 'system') {\n                    this.upstreamProxyHost = undefined;\n                }\n            }\n        );\n\n        // Set the server rules, and subscribe future rule changes to update them later.\n        await new Promise<void>((resolve) => {\n            reaction(\n                () => _.cloneDeep( // Clone to retain the pre-serialization definitions.\n                    flattenRules(this.rules)\n                    // Drop inactive or never-matching rules\n                    .filter(r => r.activated && r.matchers.length),\n                ),\n                async (rules) => {\n                    try {\n                        await Promise.all([\n                            setRequestRules(...rules.filter(isHttpBasedRule)),\n                            ...(semver.satisfies(serverVersion, WEBSOCKET_RULE_RANGE)\n                                ? [\n                                    setWebSocketRules(...rules.filter(isWebSocketRule))\n                                ] : []\n                            ),\n                            ...(semver.satisfies(serverVersion, RTC_RULES_SUPPORTED)\n                                ? [\n                                    setRTCRules(...rules.filter(isRTCRule).map(({ matchers, steps }) => ({\n                                        // We skip the first matcher, which is always an unused wildcard:\n                                        matchers: matchers.slice(1) as MockRTC.MatcherDefinitions.MatcherDefinition[],\n                                        steps\n                                    })))\n                                ] : []\n                            )\n                        ]);\n                        resolve();\n                    } catch (e) {\n                        console.log('Failed to activate stored rules', e, JSON.stringify(rules));\n                        logError('Failed to activate configured ruleset');\n                        alert(`Configured rules could not be activated, so were reset to default.`);\n\n                        this.resetRulesToDefault(); // Should trigger the reaction above again, and thereby resolve().\n                    }\n                },\n                { fireImmediately: true }\n            )\n        })\n\n        console.log('Rules store initialized');\n    });\n\n    private async loadSettings() {\n        const { accountStore } = this;\n\n        // Load rule configuration settings from storage\n        await hydrate({\n            key: 'rules-store',\n            store: this,\n            dataTransform: (data: {}) => _.omit(data, 'rules'),\n        });\n\n        try {\n            // Backward compatibility for the previous 'draft' data fields.\n            const rawStoreData = JSON.parse(localStorage.getItem('rules-store') ?? '{}');\n            runInAction(() => {\n                if ('draftWhitelistedCertificateHosts' in rawStoreData) {\n                    this.whitelistedCertificateHosts = rawStoreData.draftWhitelistedCertificateHosts;\n                }\n                if ('draftClientCertificateHostMap' in rawStoreData) {\n                    this.clientCertificateHostMap = rawStoreData.draftClientCertificateHostMap;\n                }\n            });\n        } catch (e) {\n            logError(e);\n        }\n\n        if (accountStore.mightBePaidUser) {\n            // Load the actual rules from storage (separately, so deserialization can use settings loaded above)\n            await hydrate({\n                key: 'rules-store',\n                store: this,\n                dataTransform: (data: { rules: any }) => ({\n                    rules: migrateRuleData(data.rules)\n                }),\n                customArgs: { rulesStore: this } as DeserializationArgs\n            }).catch((err) => {\n                console.log('Failed to load last-run rules',\n                    err,\n                    // Log the full rule data for debugging:\n                    JSON.parse(localStorage.getItem('rules-store') ?? '{}')?.rules\n                );\n\n                logError(err);\n                alert(`Could not load rules from last run.\\n\\n${err}`);\n                // We then continue, which resets the rules exactly as if this was the user's first run.\n            });\n\n            if (!this.rules) {\n                // If rules are somehow undefined (not sure, but seems it can happen, maybe odd data?) reset them:\n                this.resetRulesToDefault();\n            } else {\n                // Drafts are never persisted, so always need resetting to match the just-loaded data:\n                this.resetRuleDrafts();\n\n                // Recreate default rules on startup, even if we're restoring persisted rules\n                const defaultRules = buildDefaultGroupRules(this, this.proxyStore);\n                defaultRules.forEach(r => this.ensureRuleExists(r));\n            }\n        } else {\n            // For free users, reset rules to default (separately, so defaults can use settings loaded above)\n            this.resetRulesToDefault();\n        }\n\n        // Support injection of a default forwarding rule by the desktop app, for integrations\n        this.ensureRuleDoesNotExist('default-forwarding-rule');\n        getDesktopInjectedValue('httpToolkitForwardingDefault').then(action((forwardingConfig: string) => {\n            const [sourceHost, targetHost] = forwardingConfig.split('|');\n            const forwardingRule = buildForwardingRuleIntegration(sourceHost, targetHost, this);\n            this.ensureRuleExists(forwardingRule);\n        }));\n\n        if ((this.upstreamProxyType as string) === 'socks') {\n            runInAction(() => {\n                // Backward compat from when we only supported generic 'socks' proxies, not individual types.\n                this.upstreamProxyType = 'socks5h';\n            });\n        }\n\n        // Every time the user account data is updated from the server, consider resetting\n        // paid settings to the free defaults. This ensures that they're reset on\n        // logout & subscription expiration (even if that happened while the app was\n        // closed), but don't get reset when the app starts with stale account data.\n        observe(accountStore, 'accountDataLastUpdated', () => {\n            if (!accountStore.isPaidUser) {\n                this.whitelistedCertificateHosts = ['localhost'];\n                this.clientCertificateHostMap = {};\n                this.upstreamProxyType = 'system';\n                this.upstreamNoProxyHosts = [];\n\n                // We don't reset the rules on expiry/log out, e.g. to remove paid rule types, but\n                // they won't persist, so they'll disappear next time the app is started up.\n            }\n        });\n    }\n\n    // This is live updated as the corresponding fields change, and so the resulting rules are\n    // updated immediately as this changes too.\n    @computed.struct\n    get activePassthroughOptions(): requestHandlers.PassThroughHandlerOptions {\n        const options: requestHandlers.PassThroughHandlerOptions = { // Check the type to catch changes\n            ignoreHostHttpsErrors: this.whitelistedCertificateHosts,\n            trustAdditionalCAs: this.additionalCaCertificates.map((cert) => ({ cert: cert.rawPEM })),\n            clientCertificateHostMap: _.mapValues(this.clientCertificateHostMap, (cert) => ({\n                pfx: Buffer.from(cert.pfx),\n                passphrase: cert.passphrase\n            })),\n            proxyConfig: this.proxyConfig,\n            lookupOptions: this.proxyStore.dnsServers.length\n                ? { servers: this.proxyStore.dnsServers }\n                : undefined,\n            simulateConnectionErrors: true\n        };\n\n        // Clone to ensure we touch & subscribe to everything here\n        return _.cloneDeep(options);\n    }\n\n    @persist @observable\n    upstreamProxyType: UpstreamProxyType = 'system';\n\n    @persist @observable\n    upstreamProxyHost: string | undefined = undefined;\n\n    @persist('list') @observable\n    upstreamNoProxyHosts: string[] = [];\n\n    @computed\n    get effectiveSystemProxyConfig(): ProxySetting | 'ignored' | 'unparseable' | undefined {\n        const { systemProxyConfig } = this.proxyStore;\n\n        if (!systemProxyConfig) return undefined;\n\n        const { proxyUrl } = systemProxyConfig;\n        try {\n            const parsedProxyUrl = new URL(proxyUrl);\n            const { hostname } = parsedProxyUrl;\n            if (hostname === 'localhost' || hostname.startsWith('127.0.0')) {\n                // Localhost proxy config is ignored\n                return 'ignored';\n            } else {\n                return systemProxyConfig;\n            }\n        } catch (e) {\n            console.log(\"Could not parse proxy\", proxyUrl);\n            logError(e);\n            return 'unparseable';\n        }\n    }\n\n    @computed.struct\n    get userProxyConfig(): ProxySetting | undefined {\n        if (this.upstreamProxyType === 'direct') {\n            return undefined;\n        } else if (this.upstreamProxyType === 'system') {\n            const systemConfig = this.effectiveSystemProxyConfig;\n\n            if (!systemConfig || _.isString(systemConfig)) return undefined;\n            else return systemConfig;\n        } else {\n            return {\n                proxyUrl: `${this.upstreamProxyType}://${this.upstreamProxyHost!}`,\n                noProxy: this.upstreamNoProxyHosts\n            };\n        }\n    }\n\n    @computed.struct\n    get proxyConfig():\n        | ProxySetting\n        | RuleParameterReference<ProxySettingSource>\n        | Array<ProxySetting | RuleParameterReference<ProxySettingSource>>\n        | undefined\n    {\n        const { userProxyConfig } = this;\n        const { httpProxyPort } = this.proxyStore;\n\n        if (this.proxyStore.ruleParameterKeys.includes(dockerProxyRuleParamName(httpProxyPort))) {\n            const dockerProxyConfig = { [MOCKTTP_PARAM_REF]: dockerProxyRuleParamName(httpProxyPort) };\n\n            return userProxyConfig\n                ? [dockerProxyConfig, userProxyConfig]\n                : dockerProxyConfig;\n        } else {\n            return userProxyConfig;\n        }\n    }\n\n    // The currently active list\n    @persist('list') @observable\n    whitelistedCertificateHosts: string[] = ['localhost'];\n\n    // The currently active client certificates\n    @persist('map', clientCertificateSchema) @observable\n    clientCertificateHostMap: { [host: string]: ClientCertificate } = {};\n\n    // The currently active additional CA certificates\n    @persist('list') @observable\n    additionalCaCertificates: Array<ParsedCertificate> = [];\n\n    @persist('object', MockRulesetSchema) @observable\n    rules!: HtkMockRuleRoot;\n\n    @observable\n    draftRules!: HtkMockRuleRoot;\n\n    @action.bound\n    saveRules() {\n        this.rules = this.draftRules;\n        this.resetRuleDrafts();\n    }\n\n    @action.bound\n    resetRuleDrafts() {\n        // Set the rules back to the latest saved version\n        this.draftRules = _.cloneDeep(this.rules);\n    }\n\n    @action.bound\n    resetRulesToDefault() {\n        // Set the rules back to the default settings\n        this.rules = buildDefaultRulesRoot(this, this.proxyStore);\n        this.resetRuleDrafts();\n    }\n\n    @computed\n    get areSomeRulesUnsaved() {\n        return !_.isEqualWith(this.draftRules, this.rules, areItemsEqual);\n    }\n\n    @computed\n    get areSomeRulesNonDefault() {\n        const defaultRules = buildDefaultRulesRoot(this, this.proxyStore);\n        return !_.isEqualWith(this.draftRules, defaultRules, areItemsEqual);\n    }\n\n    @action.bound\n    resetRule(draftItemPath: ItemPath) {\n        // To reset a single rule, we reset the group & content of that rule, resetting only the\n        // position of this one rule (different to save rule: see below). The difference is because\n        // this is a clear & visible change, so doing the smaller move is easy & makes more sense.\n\n        const { draftRules, rules: activeRules } = this;\n\n        const draftRule = getItemAtPath(draftRules, draftItemPath);\n        if (isRuleGroup(draftRule)) throw new Error(\"Can't reset single rule group\");\n        const id = draftRule.id;\n\n        const activeRulePath = findItemPath(activeRules, { id });\n        if (!activeRulePath) throw new Error(\"Can't reset a new rule\");\n\n        const activeRule = getItemAtPath(activeRules, activeRulePath);\n\n        // Update the rule content:\n\n        const activeParent = getItemParentByPath(activeRules, activeRulePath);\n        const currentDraftParent = getItemParentByPath(draftRules, draftItemPath);\n        let targetDraftParent = findItem(draftRules, { id: activeParent.id }) as HtkMockRuleGroup;\n\n        if (!targetDraftParent) {\n            let missingParents = [activeParent];\n            // Loop up until we find a parent that _does_ exist, and then insert all\n            // missing parents from that point.\n            while (missingParents.length) {\n                const missingParentsActivePath = activeRulePath.slice(0, -missingParents.length);\n                const nextActiveParent = getItemParentByPath(activeRules, missingParentsActivePath);\n\n                const targetDraftParentParent = findItem(draftRules, { id: nextActiveParent.id }) as HtkMockRuleGroup;\n\n                if (targetDraftParentParent) {\n                    targetDraftParent = missingParents.reduce(({ draftParent, activeParent }, missingGroup) => {\n                        const newGroup = observable(_.clone({ ...missingGroup, items: [] }));\n\n                        const draftCommonSiblings = _.intersectionBy(draftParent.items, activeParent.items, 'id');\n                        const activeCommonSiblings = _.intersectionBy(activeParent.items, draftParent.items.concat(missingGroup), 'id');\n\n                        const targetSiblingIndex = _.findIndex(activeCommonSiblings, { id: missingGroup.id });\n\n                        if (targetSiblingIndex > 0) {\n                            const targetPredecessor = draftCommonSiblings[targetSiblingIndex - 1];\n                            const targetIndex = _.findIndex(draftParent.items, { id: targetPredecessor.id }) + 1;\n                            draftParent.items.splice(targetIndex, 0, newGroup);\n                        } else {\n                            draftParent.items.unshift(newGroup);\n                        }\n\n                        return {\n                            draftParent: newGroup,\n                            activeParent: missingGroup\n                        };\n                    }, {\n                        draftParent: targetDraftParentParent,\n                        activeParent: nextActiveParent\n                    }).draftParent;\n                    missingParents = [];\n                } else {\n                    missingParents.unshift(nextActiveParent);\n                }\n            }\n        }\n\n        // We now have the active & draft rules, and the draft parent that _should_ contain the draft rule\n\n        const resetRule = _.cloneDeep(activeRule);\n\n        // Update & potentially reparent the rule:\n\n        if (currentDraftParent.id === targetDraftParent.id) {\n            updateItemAtPath(draftRules, draftItemPath, resetRule);\n        } else {\n            // We're moving parent. Before rearranging it, we need to reparent the draft element.\n            _.remove(currentDraftParent.items, { id: resetRule.id });\n            targetDraftParent.items.splice(0, 0, resetRule); // Put it at the start: we'll rearrange below\n            if (currentDraftParent.items.length === 0 && !isRuleRoot(currentDraftParent)) {\n                this.deleteDraftItem(findItemPath(this.draftRules, { id: currentDraftParent.id })!);\n            }\n        }\n\n        // Check the rule's position relative to its siblings, reset it if necessary:\n\n        const draftSiblings = targetDraftParent.items;\n        const activeSiblings = activeParent.items;\n\n        // Find the common (still present in active & draft) items in this group, in two sets:\n        // one by their order in the draft rules, one by their order in the active rules.\n        const draftCommonSiblings = _.intersectionBy(draftSiblings, activeSiblings, 'id');\n        const activeCommonSiblings = _.intersectionBy(activeSiblings, draftSiblings, 'id');\n\n        const targetCommonIndex = _.findIndex(activeCommonSiblings, { id });\n\n        // If this rule is in the right place already, we're done\n        if (_.findIndex(draftCommonSiblings, { id }) === targetCommonIndex) return;\n\n        // Otherwise, the rule is in the wrong group/place in its group.\n\n        // Remove it from its current position:\n        _.remove(draftSiblings, { id });\n        _.remove(draftCommonSiblings, { id });\n\n        // The tricky bit: place it into the first position that gives it the same position\n        // within the common siblings as it has in the set of active rules.\n        if (targetCommonIndex > 0) {\n            const draftItemToFollow = draftCommonSiblings[targetCommonIndex - 1];\n            const targetSiblingIndex = _.findIndex(draftSiblings, { id: draftItemToFollow.id }) + 1;\n            draftSiblings.splice(targetSiblingIndex, 0, resetRule);\n        } else {\n            draftSiblings.unshift(resetRule);\n        }\n    }\n\n    @action.bound\n    saveItem(draftItemPath: ItemPath) {\n        // To update a single item, we update the content of that single item, but if its\n        // position has changed then we update the position of all items. It's very hard\n        // to update the position of one predictably, and the saved state is invisible,\n        // so it's better to just give consistency.\n        // This should do what you expect for simple states (one or two moves), and\n        // is at least predictable & transparent in pathological cases.\n\n        const { draftRules, rules: activeRules } = this;\n\n        const draftItem = getItemAtPath(draftRules, draftItemPath);\n        const draftParent = getItemParentByPath(draftRules, draftItemPath);\n\n        let targetActiveParent = findItem(activeRules, { id: draftParent.id }) as HtkMockRuleGroup;\n        if (!targetActiveParent) {\n            targetActiveParent = this.saveItem(draftItemPath.slice(0, -1)) as HtkMockRuleGroup;\n        }\n\n        const id = draftItem.id;\n        const activeItemPath = findItemPath(activeRules, { id });\n\n        const updatedItem = observable(_.cloneDeep(_.omit(draftItem, 'items')) as HtkMockItem);\n\n        // When saving a single group, save the group itself, don't change the contents\n        if (isRuleGroup(draftItem)) {\n            if (activeItemPath) {\n                const activeItem = getItemAtPath(activeRules, activeItemPath) as HtkMockRuleGroup;\n                (updatedItem as HtkMockRuleGroup).items = _.cloneDeep(activeItem.items);\n            } else {\n                (updatedItem as HtkMockRuleGroup).items = [];\n            }\n        }\n\n        // Insert/update the item in the tree:\n\n        if (activeItemPath) {\n            // The item is active, but maybe moved.\n            const currentActiveParent = getItemParentByPath(activeRules, activeItemPath);\n            if (currentActiveParent === targetActiveParent) {\n                // Update in place, we'll sort below\n                updateItemAtPath(activeRules, activeItemPath, updatedItem);\n            } else {\n                // Parent changed - move the rule, we'll sort it to the exact correct position below\n                const currentIndex = _.last(activeItemPath)!;\n                currentActiveParent.items.splice(currentIndex, 1);\n                targetActiveParent.items.push(updatedItem);\n\n                if (currentActiveParent.items.length === 0 && !isRuleRoot(currentActiveParent)) {\n                    // Parent path may have changed, if target parent an ancestor of the current parent\n                    const updatedCurrentParentPath = findItemPath(activeRules, { id: currentActiveParent.id })!;\n                    deleteItemAtPath(activeRules, updatedCurrentParentPath);\n                }\n            }\n        } else {\n            // The item doesn't exist yet. For now, just append it, and we'll sorted it\n            // into the right position below\n            targetActiveParent.items.push(updatedItem);\n        }\n\n        // Reorder this rule & all its siblings, to match the draft order:\n\n        const draftDeletedRules = _.differenceBy(targetActiveParent.items, draftParent.items, 'id');\n        const activeCommonSiblings = _.intersectionBy(targetActiveParent.items, draftParent.items, 'id');\n        const draftCommonSiblings = _.intersectionBy(draftParent.items, targetActiveParent.items, 'id');\n\n        if (_.findIndex(draftCommonSiblings, { id }) === _.findIndex(activeCommonSiblings, { id })) {\n            // If this rule is effectively in the right place already, we're done\n            return updatedItem;\n        }\n\n        // Sort the existing siblings by their updated positions\n        const sortedItems = _.sortBy(activeCommonSiblings,\n            rule => _.findIndex(draftParent.items, { id: rule.id })\n        );\n\n        // Reinsert draft-deleted rules:\n        draftDeletedRules.forEach((rule) => {\n            const previousIndex = Math.min(\n                targetActiveParent.items.indexOf(rule),\n                targetActiveParent.items.length\n            );\n            sortedItems.splice(previousIndex, 0, rule);\n        });\n\n        targetActiveParent.items = sortedItems;\n\n        return updatedItem;\n    }\n\n    @action.bound\n    addDraftItem(draftItem: HtkMockItem, targetPath?: ItemPath) {\n        if (!targetPath) {\n            // By default, we just append them at the top level\n            this.draftRules.items.unshift(draftItem);\n            return;\n        }\n\n        // Alternatively, we want to insert them at a specific position.\n        const parent = getItemParentByPath(this.draftRules, targetPath);\n        const childPosition = _.last(targetPath)!;\n        parent.items.splice(childPosition, 0, draftItem);\n    }\n\n    @action.bound\n    deleteDraftItem(draftItemPath: ItemPath) {\n        deleteItemAtPath(this.draftRules, draftItemPath);\n    }\n\n    @action.bound\n    moveDraftRule(currentPath: ItemPath, targetPath: ItemPath) {\n        const currentParent = getItemParentByPath(this.draftRules, currentPath);\n        const targetParent = getItemParentByPath(this.draftRules, targetPath);\n\n        const currentIndex = _.last(currentPath)!;\n        const targetIndex = _.last(targetPath)!;\n\n        const [item] = currentParent.items.splice(currentIndex, 1);\n        targetParent.items.splice(targetIndex, 0, item);\n\n        // If the source parent is empty, delete them completely\n        if (currentParent.items.length === 0 && !isRuleRoot(currentParent)) {\n            this.deleteDraftItem(findItemPath(this.draftRules, { id: currentParent.id })!);\n        }\n    }\n\n    @action.bound\n    combineDraftRulesAsGroup(sourcePath: ItemPath, targetPath: ItemPath) {\n        const sourceItem = getItemAtPath(this.draftRules, sourcePath);\n\n        const targetParent = getItemParentByPath(this.draftRules, targetPath);\n        const targetIndex = _.last(targetPath)!;\n        const targetItem = targetParent.items[targetIndex];\n\n        targetParent.items[targetIndex] = {\n            id: uuid(),\n            title: \"New group\",\n            items: [\n                targetItem,\n                sourceItem\n            ]\n        };\n        this.deleteDraftItem(sourcePath);\n    }\n\n    @action.bound\n    updateGroupTitle(groupId: string, newTitle: string) {\n        const draftGroup = findItem(this.draftRules, { id: groupId }) as HtkMockRuleGroup;\n        const activeGroup = findItem(this.rules, { id: groupId }) as (\n            HtkMockRuleGroup | undefined\n        );\n\n        draftGroup.title = newTitle;\n        if (activeGroup) activeGroup.title = newTitle;\n    }\n\n    @action.bound\n    ensureRuleExists(rule: HtkMockItem) {\n        const activeRulePath = findItemPath(this.rules, { id: rule.id });\n        const activeRule = activeRulePath\n            ? getItemAtPath(this.rules, activeRulePath) as HtkMockRule\n            : undefined;\n\n        const draftRulePath = findItemPath(this.draftRules, { id: rule.id });\n        const draftRule = draftRulePath\n            ? getItemAtPath(this.draftRules, draftRulePath) as HtkMockRule\n            : undefined;\n\n        if (areItemsEqual(rule, activeRule) && areItemsEqual(rule, draftRule)) {\n            // Rule is already happily in place.\n            return;\n        }\n\n        if (draftRulePath) {\n            // The draft rule exists, and active doesn't or has changed.\n            updateItemAtPath(this.draftRules, draftRulePath, rule);\n            this.saveItem(draftRulePath);\n            return;\n        }\n\n        // No draft rule at all: build one (creating the default rules group if necessary),\n        // and save it, to update both the active & draft rules.\n\n        let draftDefaultGroupPath = findItemPath(this.draftRules, { id: 'default-group' });\n        if (!draftDefaultGroupPath) {\n            // If there's no draft default rules at all, build one\n            this.draftRules.items.push(buildDefaultGroupWrapper([rule]));\n            draftDefaultGroupPath = [this.draftRules.items.length - 1];\n        } else {\n            const draftDefaultGroup = getItemAtPath(this.draftRules, draftDefaultGroupPath) as HtkMockRuleGroup;\n            draftDefaultGroup.items.unshift(rule);\n        }\n\n        this.saveItem(draftDefaultGroupPath.concat(0));\n    }\n\n    @action.bound\n    ensureRuleDoesNotExist(ruleId: string) {\n        const activeRulePath = findItemPath(this.rules, { id: ruleId });\n        if (activeRulePath) {\n            deleteItemAtPath(this.rules, activeRulePath);\n        }\n\n        const draftRulePath = findItemPath(this.draftRules, { id: ruleId });\n        if (draftRulePath) {\n            deleteItemAtPath(this.draftRules, draftRulePath);\n        }\n    }\n\n    @action.bound\n    loadSavedRules(savedData: any) {\n        this.rules = deserializeRules(savedData, { rulesStore: this });\n        this.resetRuleDrafts();\n    }\n\n    readonly triggerRequestBreakpoint = (request: MockttpBreakpointedRequest) => {\n        return this.triggerBreakpoint(\n            request.id,\n            (exchange: HttpExchange) => exchange.triggerRequestBreakpoint(request)\n        );\n    }\n\n    readonly triggerResponseBreakpoint = (response: MockttpBreakpointedResponse) => {\n        return this.triggerBreakpoint(\n            response.id,\n            (exchange: HttpExchange) => exchange.triggerResponseBreakpoint(response)\n        );\n    }\n\n    private triggerBreakpoint = flow(function * <T>(\n        this: RulesStore,\n        eventId: string,\n        getEditedEvent: (exchange: HttpExchange) => Promise<T>\n    ) {\n        // Jump to the exchange, once the request is completed:\n        const exchange: HttpExchange = yield this.jumpToExchange(eventId);\n\n        // Mark the exchange as breakpointed, and wait for an edited version.\n        // UI will make it editable, add a save button, save will resolve this promise\n        return (yield getEditedEvent(exchange!)) as T;\n    });\n\n}","import * as _ from 'lodash';\nimport { action, autorun, flow, observable, runInAction } from 'mobx';\nimport * as uuid from 'uuid/v4';\nimport {\n    MOCKTTP_PARAM_REF,\n    ProxySetting,\n    ProxySettingSource,\n    RuleParameterReference,\n    TimingEvents\n} from 'mockttp';\n\nimport { logError } from '../../errors';\nimport { lazyObservablePromise } from '../../util/observable';\nimport { persist, hydrate } from '../../util/mobx-persist/persist';\nimport { ErrorLike, UnreachableCheck } from '../../util/error';\nimport { rawHeadersToHeaders } from '../../util/headers';\n\nimport { EventsStore } from '../events/events-store';\nimport { RulesStore } from '../rules/rules-store';\nimport * as ServerApi from '../../services/server-api';\n\nimport { HttpExchange } from '../http/exchange';\nimport { ResponseHeadEvent, ResponseStreamEvent } from './send-response-model';\nimport {\n    ClientProxyConfig,\n    RequestInput,\n    requestInputSchema,\n    RULE_PARAM_REF_KEY\n} from './send-request-model';\n\nexport class SendStore {\n\n    constructor(\n        private eventStore: EventsStore,\n        private rulesStore: RulesStore\n    ) {}\n\n    readonly initialized = lazyObservablePromise(async () => {\n        await Promise.all([\n            this.eventStore.initialized,\n            this.rulesStore.initialized\n        ]);\n\n        await hydrate({\n            key: 'send-store',\n            store: this\n        });\n\n        autorun(() => {\n            if (this.requestInputs.length === 0) this.addRequestInput();\n        })\n\n        console.log('Send store initialized');\n    });\n\n    @persist('list', requestInputSchema) @observable\n    requestInputs: RequestInput[] = [];\n\n    @action.bound\n    addRequestInput(): RequestInput {\n        const requestInput = new RequestInput();\n        this.requestInputs.push(requestInput);\n        return requestInput;\n    }\n\n    @observable\n    sentExchange: HttpExchange | undefined;\n\n    readonly sendRequest = async (requestInput: RequestInput) => {\n        const exchangeId = uuid();\n\n        const passthroughOptions = this.rulesStore.activePassthroughOptions;\n\n        const url = new URL(requestInput.url);\n        const effectivePort = getEffectivePort(url);\n        const hostWithPort = `${url.hostname}:${effectivePort}`;\n        const clientCertificate = passthroughOptions.clientCertificateHostMap?.[hostWithPort] ||\n            passthroughOptions.clientCertificateHostMap?.[url.hostname!] ||\n            undefined;\n\n        const requestOptions = {\n            ignoreHostHttpsErrors: passthroughOptions.ignoreHostHttpsErrors,\n            trustAdditionalCAs: this.rulesStore.additionalCaCertificates.map((cert) =>\n                ({ cert: cert.rawPEM })\n            ),\n            clientCertificate,\n            proxyConfig: getProxyConfig(this.rulesStore.proxyConfig),\n            lookupOptions: passthroughOptions.lookupOptions\n        };\n\n        const responseStream = await ServerApi.sendRequest({\n            url: requestInput.url,\n            method: requestInput.method,\n            headers: requestInput.headers,\n            rawBody: await requestInput.rawBody.encoded\n        }, requestOptions);\n\n        const exchange = this.eventStore.recordSentRequest({\n            id: exchangeId,\n            matchedRuleId: false,\n            method: requestInput.method,\n            url: requestInput.url,\n            protocol: url.protocol.slice(0, -1),\n            path: url.pathname,\n            hostname: url.hostname,\n            headers: rawHeadersToHeaders(requestInput.headers),\n            rawHeaders: requestInput.headers,\n            body: { buffer: await requestInput.rawBody.encoded },\n            timingEvents: {} as TimingEvents,\n            tags: ['httptoolkit:manually-sent-request']\n        });\n\n        // Keep the exchange up to date as response data arrives:\n        trackResponseEvents(responseStream, exchange)\n        .catch(action((error: ErrorLike) => {\n            exchange.markAborted({\n                id: exchange.id,\n                error: error,\n                timingEvents: {\n                    ...exchange.timingEvents as TimingEvents,\n                    abortedTimestamp: performance.now()\n                },\n                tags: error.code ? [`passthrough-error:${error.code}`] : []\n            });\n        }));\n\n        runInAction(() => {\n            this.sentExchange = exchange;\n        });\n    }\n\n}\n\nconst trackResponseEvents = flow(function * (\n    responseStream: ReadableStream<ResponseStreamEvent>,\n    exchange: HttpExchange\n) {\n    const reader = responseStream.getReader();\n\n    const timingEvents = { ...exchange.timingEvents } as TimingEvents;\n\n    let responseHead: ResponseHeadEvent | undefined;\n    let responseBodyParts: Buffer[] = [];\n\n    while (true) {\n        const { done, value } = (\n            yield reader.read()\n        ) as ReadableStreamReadResult<ResponseStreamEvent>;\n        if (done) return;\n\n        const messageType = value.type;\n        switch (messageType) {\n            case 'request-start':\n                timingEvents.startTime = Date.now();\n                timingEvents.startTimestamp = value.timestamp;\n                timingEvents.bodyReceivedTimestamp = value.timestamp;\n                break;\n            case 'response-head':\n                responseHead = value;\n                timingEvents.headersSentTimestamp = value.timestamp;\n                break;\n            case 'response-body-part':\n                responseBodyParts.push(value.rawBody);\n                break;\n            case 'response-end':\n                if (!responseHead) throw new Error(`Received response-end before response-head!`);\n\n                timingEvents.responseSentTimestamp = value.timestamp;\n\n                exchange.setResponse({\n                    id: exchange.id,\n                    statusCode: responseHead.statusCode,\n                    statusMessage: responseHead.statusMessage ?? '',\n                    headers: rawHeadersToHeaders(responseHead.headers),\n                    rawHeaders: responseHead.headers,\n                    body: { buffer: Buffer.concat(responseBodyParts) },\n                    tags: [],\n                    timingEvents\n                });\n\n                break;\n            case 'error':\n                if (value.error.message) {\n                    throw new Error(value.error.message + (\n                        value.error.code ? ` (${value.error.code})` : ''\n                    ));\n                } else {\n                    logError(`Unknown response error for sent request: ${\n                        JSON.stringify(value.error)\n                    }`);\n                    throw new Error('Unknown response error');\n                }\n            default:\n                throw new UnreachableCheck(messageType);\n        }\n    }\n});\n\nexport const getEffectivePort = (url: { protocol: string | null, port: string | null }) => {\n    if (url.port) {\n        return parseInt(url.port, 10);\n    } else if (url.protocol === 'https:' || url.protocol === 'wss:') {\n        return 443;\n    } else {\n        return 80;\n    }\n}\n\nfunction getProxyConfig(proxyConfig: RulesStore['proxyConfig']): ClientProxyConfig {\n    if (!proxyConfig) return undefined;\n\n    if (_.isArray(proxyConfig)) {\n        return proxyConfig.map((config) => getProxyConfig(config)) as ClientProxyConfig;\n    }\n\n    if (MOCKTTP_PARAM_REF in proxyConfig) {\n        const paramRef = (proxyConfig as RuleParameterReference<ProxySettingSource>)[MOCKTTP_PARAM_REF];\n        return { [RULE_PARAM_REF_KEY]: paramRef };\n    }\n\n    return proxyConfig as ProxySetting;\n}","module.exports = __webpack_public_path__ + \"339233e471b772666625b377b42622f3.svg\";","import * as _ from 'lodash';\nimport type { ProxySetting } from 'mockttp';\n\nimport {\n    serverVersion,\n    versionSatisfies,\n    DETAILED_CONFIG_RANGE,\n    INTERCEPTOR_METADATA,\n    DETAILED_METADATA,\n    PROXY_CONFIG_RANGE,\n    DNS_AND_RULE_PARAM_CONFIG_RANGE\n} from './service-versions';\n\nimport {\n    ServerConfig,\n    NetworkInterfaces,\n    ServerInterceptor,\n    ApiError\n} from './server-api-types';\n\ninterface GraphQLError {\n    locations: Array<{ line: number, column: number }>;\n    message: string;\n    path: Array<string>\n}\n\nexport class GraphQLApiClient {\n\n    constructor(\n        private authToken?: string\n    ) {}\n\n    async graphql<T extends {}>(operationName: string, query: string, variables: unknown) {\n        const response = await fetch('http://127.0.0.1:45457', {\n            method: 'POST',\n            headers: {\n                ...(this.authToken ? {\n                    'Authorization': `Bearer ${this.authToken}`,\n                } : {}),\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify({\n                operationName,\n                query,\n                variables\n            })\n        }).catch((e) => {\n            throw new ApiError(`fetch failed with '${e.message ?? e}'`, operationName);\n        });\n\n        if (!response.ok) {\n            console.error(response);\n            throw new ApiError(\n                `unexpected status ${response.status} ${response.statusText}`,\n                operationName,\n                response.status\n            );\n        }\n\n        const { data, errors } = await response.json() as { data: T, errors?: GraphQLError[] };\n\n        if (errors && errors.length) {\n            console.error(errors);\n\n            const errorCount = errors.length > 1 ? `s (${errors.length})` : '';\n\n            throw new ApiError(\n                `GraphQL error${errorCount}: ${errors.map(e =>\n                    `${e.message} at ${e.path.join('.')}`\n                ).join(', ')}`,\n                operationName\n            );\n        }\n\n        return data;\n    }\n\n    async getServerVersion(): Promise<string> {\n        const response = await this.graphql<{ version: string }>('getVersion', `\n            query getVersion {\n                version\n            }\n        `, {});\n\n        return response.version;\n    }\n\n    async getConfig(proxyPort: number): Promise<ServerConfig> {\n        const response = await this.graphql<{\n            config: {\n                certificatePath: string;\n                certificateContent?: string;\n                certificateFingerprint?: string;\n            }\n            networkInterfaces?: NetworkInterfaces;\n            systemProxy?: ProxySetting;\n            dnsServers?: string[];\n            ruleParameterKeys?: string[];\n        }>('getConfig', `\n            ${versionSatisfies(await serverVersion, DNS_AND_RULE_PARAM_CONFIG_RANGE)\n                ? `query getConfig($proxyPort: Int!) {`\n                : 'query getConfig {'\n            }\n                config {\n                    certificatePath\n                    ${versionSatisfies(await serverVersion, DETAILED_CONFIG_RANGE)\n                    ?  `\n                        certificateContent\n                        certificateFingerprint\n                    ` : ''}\n                }\n\n                ${versionSatisfies(await serverVersion, DETAILED_CONFIG_RANGE)\n                ? `networkInterfaces`\n                : ''}\n\n                ${versionSatisfies(await serverVersion, PROXY_CONFIG_RANGE)\n                ? `systemProxy {\n                    proxyUrl\n                    noProxy\n                }` : ''}\n\n                ${versionSatisfies(await serverVersion, DNS_AND_RULE_PARAM_CONFIG_RANGE)\n                ? `\n                    dnsServers(proxyPort: $proxyPort)\n                    ruleParameterKeys\n                `\n                : ''}\n            }\n        `, { proxyPort: proxyPort });\n\n        return {\n            ...response.config,\n            networkInterfaces: response.networkInterfaces || {},\n            systemProxy: response.systemProxy,\n            dnsServers: response.dnsServers || [],\n            ruleParameterKeys: response.ruleParameterKeys || []\n        }\n    }\n\n    async getNetworkInterfaces(): Promise<NetworkInterfaces> {\n        if (!versionSatisfies(await serverVersion, DETAILED_CONFIG_RANGE)) return {};\n\n        const response = await this.graphql<{\n            networkInterfaces: NetworkInterfaces\n        }>('getNetworkInterfaces', `\n            query getNetworkInterfaces {\n                networkInterfaces\n            }\n        `, {});\n\n        return response.networkInterfaces;\n    }\n\n    async getInterceptors(proxyPort: number): Promise<ServerInterceptor[]> {\n        const response = await this.graphql<{\n            interceptors: ServerInterceptor[]\n        }>('getInterceptors', `\n            query getInterceptors($proxyPort: Int!) {\n                interceptors {\n                    id\n                    version\n                    isActive(proxyPort: $proxyPort)\n                    isActivable\n\n                    ${versionSatisfies(await serverVersion, INTERCEPTOR_METADATA)\n                        ? 'metadata'\n                        : ''\n                    }\n                }\n            }\n        `, { proxyPort });\n\n        return response.interceptors;\n    }\n\n    async getDetailedInterceptorMetadata<M extends unknown>(id: string): Promise<M | undefined> {\n        if (!versionSatisfies(await serverVersion, DETAILED_METADATA)) return undefined;\n\n        const response = await this.graphql<{\n            interceptor: { metadata: M }\n        }>('getDetailedInterceptorMetadata', `\n            query getDetailedInterceptorMetadata($id: ID!) {\n                interceptor(id: $id) {\n                    metadata(type: DETAILED)\n                }\n            }\n        `, { id });\n\n        return response.interceptor.metadata;\n    }\n\n    async activateInterceptor(id: string, proxyPort: number, options?: any) {\n        const response = await this.graphql<{\n            activateInterceptor: boolean | { success: boolean, metadata: unknown }\n        }>('Activate', `\n            mutation Activate($id: ID!, $proxyPort: Int!, $options: Json) {\n                activateInterceptor(id: $id, proxyPort: $proxyPort, options: $options)\n            }\n        `, { id, proxyPort, options });\n\n        const activationResult = response.activateInterceptor;\n\n        if (_.isBoolean(activationResult)) {\n            // Backward compat for a < v0.1.28 server that returns booleans:\n            return { success: activationResult, metadata: undefined };\n        } else {\n            // Modern server that return an object with a success prop:\n            return activationResult;\n        }\n    }\n\n    async triggerServerUpdate() {\n        await this.graphql<{}>('TriggerUpdate', `\n            mutation TriggerUpdate {\n                triggerUpdate\n            }\n        `, { });\n    }\n}","import * as localForage from 'localforage';\n\nimport { RUNNING_IN_WORKER } from '../util';\nimport { delay, getDeferred } from '../util/promise';\nimport {\n    versionSatisfies,\n    SERVER_REST_API_SUPPORTED\n} from './service-versions';\n\nimport { type ServerConfig, type NetworkInterfaces, type ServerInterceptor, ApiError } from './server-api-types';\nexport type { ServerConfig, NetworkInterfaces, ServerInterceptor };\n\nimport { GraphQLApiClient } from './server-graphql-api';\nimport { RestApiClient } from './server-rest-api';\nimport { RequestDefinition, RequestOptions } from '../model/send/send-request-model';\n\nasync function getAuthToken() {\n    if (!RUNNING_IN_WORKER) {\n        return Promise.resolve(\n            new URLSearchParams(window.location.search).get('authToken') ?? undefined\n        );\n    }\n\n    // For workers, the UI shares the auth token with SW via IDB:\n    const authToken = await localForage.getItem<string>('latest-auth-token')\n    if (authToken) return authToken;\n}\n\nconst serverReady = getDeferred();\nexport const announceServerReady = () => serverReady.resolve();\nexport const waitUntilServerReady = () => serverReady.promise;\n\nconst apiClient = (async (): Promise<GraphQLApiClient | RestApiClient> => {\n    // Delay checking, just to avoid spamming requests that we know won't work. Doesn't work in\n    // the update SW, which doesn't get a server-ready ping, so just wait a bit:\n    if (!RUNNING_IN_WORKER) await waitUntilServerReady();\n    else await delay(5000);\n\n    // To work out which API is supported, we loop trying to get the version from\n    // each one (may take a couple of tries as the server starts up), and then\n    // check the resulting version to see what's supported.\n\n    let version: string | undefined;\n    while (!version) {\n        // Reload auth token each time. For main UI it'll never change (but load is instant),\n        // while for SW there's a race so we need to reload just in case:\n        const authToken = await getAuthToken();\n\n        const restClient = new RestApiClient(authToken);\n        const graphQLClient = new GraphQLApiClient(authToken);\n\n        version = await restClient.getServerVersion().catch(() => {\n            console.log(\"Couldn't get version from REST API\");\n\n            return graphQLClient.getServerVersion().catch(() => {\n                console.log(\"Couldn't get version from GraphQL API\");\n                return undefined;\n            });\n        });\n\n        if (version) {\n            if (versionSatisfies(version, SERVER_REST_API_SUPPORTED)) {\n                return restClient;\n            } else {\n                return graphQLClient;\n            }\n        } else {\n            // Wait a little then try again:\n            await delay(100);\n        }\n    }\n\n    throw new Error(`Unreachable error: got version ${version} but couldn't pick an API client`);\n})();\n\nexport async function getServerVersion(): Promise<string> {\n    return (await apiClient).getServerVersion();\n}\n\nexport async function getConfig(proxyPort: number): Promise<ServerConfig> {\n    return (await apiClient).getConfig(proxyPort);\n}\n\nexport async function getNetworkInterfaces(): Promise<NetworkInterfaces> {\n    return (await apiClient).getNetworkInterfaces();\n}\n\nexport async function getInterceptors(proxyPort: number): Promise<ServerInterceptor[]> {\n    return (await apiClient).getInterceptors(proxyPort);\n}\n\nexport async function getDetailedInterceptorMetadata<M extends unknown>(id: string): Promise<M | undefined> {\n    return (await apiClient).getDetailedInterceptorMetadata(id);\n}\n\nexport async function activateInterceptor(id: string, proxyPort: number, options?: any): Promise<unknown> {\n    const result = await (await apiClient).activateInterceptor(id, proxyPort, options);\n\n    if (result.success) {\n        return result.metadata;\n    } else {\n        // Some kind of failure:\n        console.log('Activation result', JSON.stringify(result));\n\n        const error = Object.assign(\n            new ApiError(`failed to activate interceptor ${id}`, `activate-interceptor-${id}`),\n            result\n        );\n\n        throw error;\n    }\n}\n\nexport async function sendRequest(\n    requestDefinition: RequestDefinition,\n    requestOptions: RequestOptions\n) {\n    const client = (await apiClient);\n    if (!(client instanceof RestApiClient)) {\n        throw new Error(\"Requests cannot be sent via the GraphQL API client\");\n    }\n\n    return client.sendRequest(requestDefinition, requestOptions);\n}\n\nexport async function triggerServerUpdate() {\n    return (await apiClient).triggerServerUpdate()\n        // We ignore all errors, this trigger is just advisory\n        .catch(console.log);\n}\n","export function truncate(str: string, length: number) {\n    if (str.length <= length) {\n        return str;\n    } else {\n        return str.slice(0, length - 3) + \"...\";\n    }\n}\n\nexport function joinAnd(val: string[], initialSep = ', ', finalSep = ' and ') {\n    if (val.length === 1) return val[0];\n\n    return val.slice(0, -1).join(initialSep) + finalSep + val[val.length - 1];\n}\n\nconst VOWEL_ISH = ['a', 'e', 'i', 'o', 'u', 'y'];\nexport function aOrAn(value: string) {\n    if (VOWEL_ISH.includes(value[0])) return 'an';\n    else return 'a';\n}\n\nexport function uppercaseFirst(value: string) {\n    return value[0].toUpperCase() + value.slice(1);\n}","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { observable, autorun, action } from 'mobx';\nimport { disposeOnUnmount, observer } from 'mobx-react';\nimport * as portals from 'react-reverse-portal';\n\nimport { ExchangeMessage } from '../../types';\n\nimport { ErrorLike } from '../../util/error';\nimport { getHeaderValue, lastHeader } from '../../util/headers';\n\nimport { ViewableContentType, getCompatibleTypes } from '../../model/events/content-types';\n\nimport { ExpandableCardProps } from '../common/card';\nimport { LoadingCard } from '../common/loading-card';\n\nimport {\n    ContainerSizedEditorCardContent,\n    ReadonlyBodyCardHeader,\n    getBodyDownloadFilename,\n    BodyDecodingErrorBanner\n} from '../editor/body-card-components';\nimport { ContentViewer } from '../editor/content-viewer';\n\nimport { SendBodyCardSection } from './send-card-section';\nimport { ContainerSizedEditor } from '../editor/base-editor';\n\n// A selection of content types you might want to try out, to explore your encoded data:\nconst ENCODED_DATA_CONTENT_TYPES = ['text', 'raw', 'base64', 'image'] as const;\n\n// Closely based on the HTTP body card, but not identical (notably: different card container,\n// different editor sizing logic within, and no directions)\n@observer\nexport class SentResponseBodyCard extends React.Component<ExpandableCardProps & {\n    onCollapseToggled: () => void,\n\n    isPaidUser: boolean,\n    url: string,\n    message: ExchangeMessage,\n    editorNode: portals.HtmlPortalNode<typeof ContainerSizedEditor>\n}> {\n\n    @observable\n    private selectedContentType: ViewableContentType | undefined;\n\n    componentDidMount() {\n        disposeOnUnmount(this, autorun(() => {\n            const message = this.props.message;\n\n            if (!message) {\n                this.onChangeContentType(undefined);\n                return;\n            }\n        }));\n    }\n\n    @action.bound\n    onChangeContentType(contentType: ViewableContentType | undefined) {\n        if (contentType === this.props.message.contentType) {\n            this.selectedContentType = undefined;\n        } else {\n            this.selectedContentType = contentType;\n        }\n    }\n\n    render() {\n        const {\n            url,\n            message,\n            isPaidUser,\n            collapsed,\n            expanded,\n            onCollapseToggled,\n            onExpandToggled\n        } = this.props;\n\n        const compatibleContentTypes = getCompatibleTypes(\n            message.contentType,\n            lastHeader(message.headers['content-type']),\n            message.body\n        );\n        const decodedContentType = _.includes(compatibleContentTypes, this.selectedContentType)\n            ? this.selectedContentType!\n            : message.contentType;\n\n        const decodedBody = message.body.decoded;\n\n        if (decodedBody) {\n            // We have successfully decoded the body content, show it:\n            return <SendBodyCardSection\n                collapsed={collapsed}\n                onCollapseToggled={onCollapseToggled}\n                expanded={expanded}\n            >\n                <header>\n                    <ReadonlyBodyCardHeader\n                        body={decodedBody}\n                        mimeType={getHeaderValue(message.headers, 'content-type')}\n                        downloadFilename={getBodyDownloadFilename(url, message.headers)}\n\n                        title='Response body'\n                        expanded={expanded}\n                        onExpandToggled={onExpandToggled}\n                        onCollapseToggled={onCollapseToggled}\n\n                        selectedContentType={decodedContentType}\n                        contentTypeOptions={compatibleContentTypes}\n                        onChangeContentType={this.onChangeContentType}\n\n                        isPaidUser={isPaidUser}\n                    />\n                </header>\n                <ContainerSizedEditorCardContent>\n                    <ContentViewer\n                        contentId={message.id}\n                        editorNode={this.props.editorNode}\n                        rawContentType={lastHeader(message.headers['content-type'])}\n                        contentType={decodedContentType}\n                        expanded={!!expanded}\n                        cache={message.cache}\n                    >\n                        {decodedBody}\n                    </ContentViewer>\n                </ContainerSizedEditorCardContent>\n            </SendBodyCardSection>;\n        } else if (!decodedBody && message.body.decodingError) {\n            // We have failed to decode the body content! Show the error & raw encoded data instead:\n            const error = message.body.decodingError as ErrorLike;\n            const encodedBody = Buffer.isBuffer(message.body.encoded)\n                ? message.body.encoded\n                : undefined;\n\n            const encodedDataContentType = _.includes(ENCODED_DATA_CONTENT_TYPES, this.selectedContentType)\n                ? this.selectedContentType!\n                : 'text';\n\n            return <SendBodyCardSection\n                collapsed={collapsed}\n                onCollapseToggled={onCollapseToggled}\n                expanded={expanded}\n            >\n                <header>\n                    <ReadonlyBodyCardHeader\n                        body={encodedBody}\n                        mimeType={'application/octet-stream'} // Ignore content type, as it's encoded\n                        downloadFilename={getBodyDownloadFilename(url, message.headers)}\n\n                        title='Response body'\n                        expanded={expanded}\n                        onExpandToggled={onExpandToggled}\n                        onCollapseToggled={onCollapseToggled}\n\n                        selectedContentType={encodedDataContentType}\n                        contentTypeOptions={ENCODED_DATA_CONTENT_TYPES}\n                        onChangeContentType={this.onChangeContentType}\n\n                        isPaidUser={isPaidUser}\n                    />\n                </header>\n                <BodyDecodingErrorBanner\n                    error={error}\n                    headers={message.rawHeaders}\n                />\n                { encodedBody &&\n                    <ContainerSizedEditorCardContent>\n                        <ContentViewer\n                            contentId={message.id}\n                            editorNode={this.props.editorNode}\n                            contentType={encodedDataContentType}\n                            expanded={!!expanded}\n                            cache={message.cache}\n                        >\n                            { encodedBody }\n                        </ContentViewer>\n                    </ContainerSizedEditorCardContent>\n                }\n            </SendBodyCardSection>;\n        } else {\n            // No body content, but no error yet, show a loading spinner:\n            return <LoadingCard\n                collapsed={collapsed}\n                onCollapseToggled={onCollapseToggled}\n                expanded={expanded}\n            >\n                <header>\n                    <ReadonlyBodyCardHeader\n                        body={undefined}\n\n                        title='Response body'\n                        expanded={expanded}\n                        onExpandToggled={onExpandToggled}\n                        onCollapseToggled={onCollapseToggled}\n\n                        selectedContentType={decodedContentType}\n                        contentTypeOptions={compatibleContentTypes}\n                        onChangeContentType={this.onChangeContentType}\n                        isPaidUser={isPaidUser}\n                    />\n                </header>\n            </LoadingCard>;\n        }\n    }\n\n}","import * as _ from 'lodash';\nimport * as uuid from 'uuid/v4'\nimport { observable } from 'mobx';\nimport {\n    matchers,\n    completionCheckers\n} from 'mockttp';\nimport * as querystring from 'querystring';\n\nimport {\n    HttpExchange,\n    HtkRequest,\n    HtkResponse,\n    Headers,\n} from '../../types';\nimport { byteLength, tryParseJson } from '../../util';\nimport * as amIUsingHtml from '../../amiusing.html';\n\nimport { ProxyStore } from '../proxy-store';\nimport { versionSatisfies, FROM_FILE_HANDLER_SERVER_RANGE } from '../../services/service-versions';\nimport { MethodName } from '../http/methods';\nimport { getStatusMessage } from '../http/http-docs';\n\nimport { RulesStore } from './rules-store';\nimport {\n    Handler,\n    HandlerStep,\n    HtkMockRule,\n    InitialMatcher,\n    Matcher,\n    RuleType,\n    isCompatibleMatcher,\n    getRulePartKey\n} from './rules';\nimport {\n    HtkMockItem,\n    HtkMockRuleGroup,\n    HtkMockRuleRoot\n} from './rules-structure';\nimport * as HttpRule from './definitions/http-rule-definitions';\nimport * as WsRule from './definitions/websocket-rule-definitions';\nimport * as EthRule from './definitions/ethereum-rule-definitions';\nimport * as IpfsRule from './definitions/ipfs-rule-definitions';\nimport * as RtcRule from './definitions/rtc-rule-definitions';\n\nexport function getNewRule(rulesStore: RulesStore): HtkMockRule {\n    return observable({\n        id: uuid(),\n        type: 'http', // New rules default to HTTP (i.e. they show HTTP handler options)\n        activated: true,\n        matchers: [],\n        completionChecker: new completionCheckers.Always(),\n        handler: getRuleDefaultHandler('http', rulesStore)\n    });\n}\n\nexport function getRuleDefaultMatchers(\n    type: RuleType,\n    initialMatcher: InitialMatcher,\n    existingMatchers?: Matcher[]\n) {\n    return [\n        initialMatcher, // No need to check type - this must match by definition\n        ...(existingMatchers || [])\n            .slice(1)\n            .filter(m => isCompatibleMatcher(m, type))\n    ];\n}\n\nexport function updateRuleAfterInitialMatcherChange(\n    rule: HtkMockRule\n) {\n    if (rule.type !== 'ipfs') return;\n\n    const ipfsInteraction = rule.matchers[0]?.interactionName;\n    if (!ipfsInteraction) return;\n\n    const argMatcherIndex = rule.matchers.findIndex(m => getRulePartKey(m) === 'ipfs-arg');\n\n    if (IpfsRule.shouldSuggestArgMatcher(ipfsInteraction)) {\n        const newArgMatcher = new IpfsRule.IpfsArgMatcher(ipfsInteraction, undefined);\n        if (argMatcherIndex === -1) {\n            rule.matchers.splice(1, 0, newArgMatcher);\n        } else {\n            rule.matchers.splice(argMatcherIndex, 1, newArgMatcher);\n        }\n    } else if (argMatcherIndex !== -1) {\n        rule.matchers.splice(argMatcherIndex, 1); // Remove the unnecessary arg matcher\n    }\n}\n\nexport function getRuleDefaultHandler(type: 'http', ruleStore: RulesStore): HttpRule.HttpMockRule['handler'];\nexport function getRuleDefaultHandler(type: 'websocket', ruleStore: RulesStore): WsRule.WebSocketMockRule['handler'];\nexport function getRuleDefaultHandler(type: 'ethereum', ruleStore: RulesStore): EthRule.EthereumMockRule['handler'];\nexport function getRuleDefaultHandler(type: 'ipfs', ruleStore: RulesStore): IpfsRule.IpfsMockRule['handler'];\nexport function getRuleDefaultHandler(type: 'webrtc', ruleStore: RulesStore): RtcRule.RTCMockRule['steps'][0];\nexport function getRuleDefaultHandler(type: RuleType, ruleStore: RulesStore): Handler;\nexport function getRuleDefaultHandler(type: RuleType, ruleStore: RulesStore): Handler {\n    switch (type) {\n        case 'http':\n            return new HttpRule.PassThroughHandler(ruleStore);\n        case 'websocket':\n            return new WsRule.WebSocketPassThroughHandler(ruleStore);\n        case 'ethereum':\n            return new HttpRule.PassThroughHandler(ruleStore);\n        case 'ipfs':\n            return new HttpRule.PassThroughHandler(ruleStore);\n        case 'webrtc':\n           return new RtcRule.DynamicProxyStepDefinition();\n    }\n};\n\nfunction buildRequestMatchers(request: HtkRequest) {\n    const hasBody = !!request.body.decoded &&\n        request.body.decoded.length < 10_000;\n    const hasJsonBody = hasBody &&\n        request.contentType === 'json' &&\n        !!tryParseJson(request.body.decoded!.toString());\n\n    const bodyMatcher = hasJsonBody\n        ? [new matchers.JsonBodyMatcher(\n            tryParseJson(request.body.decoded!.toString())!\n        )]\n    : hasBody\n        ? [new matchers.RawBodyMatcher(request.body.decoded!.toString())]\n    : [];\n\n    const urlParts = request.parsedUrl.toString().split('?');\n    const path = urlParts[0];\n    const query = urlParts.slice(1).join('?');\n\n    return [\n        new (HttpRule.MethodMatchers[request.method as MethodName] || HttpRule.WildcardMatcher)(),\n        new matchers.SimplePathMatcher(path),\n        new matchers.QueryMatcher(\n            querystring.parse(query) as ({ [key: string]: string | string[] })\n        ),\n        ...bodyMatcher\n    ];\n}\n\nexport function buildRuleFromRequest(rulesStore: RulesStore, request: HtkRequest): HtkMockRule {\n    return {\n        id: uuid(),\n        type: 'http',\n        activated: true,\n        matchers: buildRequestMatchers(request),\n        handler: new HttpRule.RequestBreakpointHandler(rulesStore),\n        completionChecker: new completionCheckers.Always(),\n    };\n}\n\nexport function buildRuleFromExchange(exchange: HttpExchange): HtkMockRule {\n    const { statusCode, statusMessage, headers } = exchange.isSuccessfulExchange()\n        ? exchange.response\n        : { statusCode: 200, statusMessage: \"OK\", headers: {} as Headers };\n\n    const useResponseBody = (\n        exchange.isSuccessfulExchange() &&\n        // Don't include automatically include the body if it's too large\n        // for manual editing (> 1MB), just for UX reasons\n        exchange.response.body.encoded.byteLength <= 1024 * 1024 &&\n        !!exchange.response.body.decoded // If we can't decode it, don't include it\n    );\n\n    const bodyContent = useResponseBody\n        ? (exchange.response as HtkResponse).body.decoded!\n        : \"A mock response\";\n\n    // Copy headers so we can mutate them independently:\n    const mockRuleHeaders = Object.assign({}, headers);\n\n    delete mockRuleHeaders['date'];\n    delete mockRuleHeaders['expires'];\n    delete mockRuleHeaders[':status']; // Pseudoheaders aren't set directly\n\n    // Problematic for the mock rule UI, so skip for now:\n    delete mockRuleHeaders['content-encoding'];\n\n    if (mockRuleHeaders['content-length']) {\n        mockRuleHeaders['content-length'] = byteLength(bodyContent).toString();\n    }\n\n    return {\n        id: uuid(),\n        type: 'http',\n        activated: true,\n        matchers: buildRequestMatchers(exchange.request),\n        handler: new HttpRule.StaticResponseHandler(\n            statusCode,\n            statusMessage || getStatusMessage(statusCode),\n            bodyContent,\n            mockRuleHeaders\n        ),\n        completionChecker: new completionCheckers.Always(),\n    };\n}\n\nexport const buildDefaultGroupWrapper = (items: HtkMockItem[]): HtkMockRuleGroup => ({\n    id: 'default-group',\n    title: \"Default rules\",\n    collapsed: true,\n    items: items\n});\n\nexport const buildDefaultGroupRules = (\n    rulesStore: RulesStore,\n    proxyStore: ProxyStore\n): HtkMockItem[] => [\n    // Respond to amiusing.httptoolkit.tech with an emphatic YES\n    {\n        id: 'default-amiusing',\n        type: 'http',\n        activated: true,\n        matchers: [\n            new HttpRule.MethodMatchers.GET(),\n            new HttpRule.AmIUsingMatcher()\n        ],\n        completionChecker: new completionCheckers.Always(),\n        handler: new HttpRule.StaticResponseHandler(200, undefined, amIUsingHtml, {\n            'content-type': 'text/html',\n            'cache-control': 'no-store',\n            'httptoolkit-active': 'true'\n        })\n    },\n\n    // Share the server certificate on a convenient URL, assuming it supports that\n    ...(versionSatisfies(proxyStore.serverVersion, FROM_FILE_HANDLER_SERVER_RANGE)\n        ? [{\n            id: 'default-certificate',\n            type: 'http' as 'http',\n            activated: true,\n            matchers: [\n                new HttpRule.MethodMatchers.GET(),\n                new matchers.SimplePathMatcher(\"amiusing.httptoolkit.tech/certificate\")\n            ],\n            completionChecker: new completionCheckers.Always(),\n            handler: new HttpRule.FromFileResponseHandler(200, undefined, proxyStore.certPath, {\n                'content-type': 'application/x-x509-ca-cert'\n            })\n        }] : []\n    ),\n\n    // Pass through all other traffic to the real target\n    {\n        id: 'default-wildcard',\n        type: 'http',\n        activated: true,\n        matchers: [new HttpRule.DefaultWildcardMatcher()],\n        completionChecker: new completionCheckers.Always(),\n        handler: new HttpRule.PassThroughHandler(rulesStore)\n    },\n    {\n        id: 'default-ws-wildcard',\n        type: 'websocket',\n        activated: true,\n        matchers: [new WsRule.DefaultWebSocketWildcardMatcher()],\n        completionChecker: new completionCheckers.Always(),\n        handler: new WsRule.WebSocketPassThroughHandler(rulesStore)\n    }\n];\n\nexport const buildDefaultRulesRoot = (rulesStore: RulesStore, proxyStore: ProxyStore) => ({\n    id: 'root',\n    title: \"HTTP Toolkit Rules\",\n    isRoot: true,\n    items: [\n        buildDefaultGroupWrapper(\n            buildDefaultGroupRules(rulesStore, proxyStore)\n        )\n    ]\n} as HtkMockRuleRoot);\n\nexport const buildForwardingRuleIntegration = (\n    sourceHost: string,\n    targetHost: string,\n    rulesStore: RulesStore\n): HtkMockRule => ({\n    id: 'default-forwarding-rule',\n    type: 'http',\n    activated: true,\n    matchers: [\n        new HttpRule.WildcardMatcher(),\n        new matchers.HostMatcher(sourceHost)\n    ],\n    completionChecker: new completionCheckers.Always(),\n    handler: new HttpRule.ForwardToHostHandler(targetHost, true, rulesStore)\n});","import * as React from 'react';\nimport { styled, warningColor } from './styles';\n\n// Import required FA icons:\nimport {\n    library,\n    IconPrefix,\n    IconName,\n    IconLookup,\n    icon,\n    IconParams,\n    IconProp,\n    SizeProp\n} from '@fortawesome/fontawesome-svg-core';\n\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons/faSpinner';\nimport { faTrashAlt } from '@fortawesome/free-regular-svg-icons/faTrashAlt';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons/faArrowLeft';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons/faSearch';\nimport { faPlug } from '@fortawesome/free-solid-svg-icons/faPlug';\nimport { faNetworkWired } from '@fortawesome/free-solid-svg-icons/faNetworkWired';\nimport { faDesktop } from '@fortawesome/free-solid-svg-icons/faDesktop';\nimport { faTerminal } from '@fortawesome/free-solid-svg-icons/faTerminal';\nimport { faQuestion } from '@fortawesome/free-solid-svg-icons/faQuestion';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons/faTimes';\nimport { faChevronUp } from '@fortawesome/free-solid-svg-icons/faChevronUp';\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons/faChevronDown';\nimport { faBan } from '@fortawesome/free-solid-svg-icons/faBan';\nimport { faComment } from '@fortawesome/free-regular-svg-icons/faComment';\nimport { faToggleOn } from '@fortawesome/free-solid-svg-icons/faToggleOn';\nimport { faToggleOff } from '@fortawesome/free-solid-svg-icons/faToggleOff';\nimport { faCopy } from '@fortawesome/free-regular-svg-icons/faCopy';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons/faExternalLinkAlt';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons/faPlus';\nimport { faMinus } from '@fortawesome/free-solid-svg-icons/faMinus';\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons/faExclamationTriangle';\nimport { faLightbulb } from '@fortawesome/free-solid-svg-icons/faLightbulb';\nimport { faCog } from '@fortawesome/free-solid-svg-icons/faCog';\nimport { faStar } from '@fortawesome/free-regular-svg-icons/faStar';\nimport { faMagic } from '@fortawesome/free-solid-svg-icons/faMagic';\nimport { faSun } from '@fortawesome/free-solid-svg-icons/faSun';\nimport { faMoon } from '@fortawesome/free-solid-svg-icons/faMoon';\nimport { faAdjust } from '@fortawesome/free-solid-svg-icons/faAdjust';\nimport { faUpload } from '@fortawesome/free-solid-svg-icons/faUpload';\nimport { faDownload } from '@fortawesome/free-solid-svg-icons/faDownload';\nimport { faPlay } from '@fortawesome/free-solid-svg-icons/faPlay';\nimport { faPause } from '@fortawesome/free-solid-svg-icons/faPause';\nimport { faGem } from '@fortawesome/free-solid-svg-icons/faGem';\nimport { faTheaterMasks } from '@fortawesome/free-solid-svg-icons/faTheaterMasks';\nimport { faGripVertical } from '@fortawesome/free-solid-svg-icons/faGripVertical';\nimport { faUndo } from '@fortawesome/free-solid-svg-icons/faUndo';\nimport { faSave } from '@fortawesome/free-solid-svg-icons/faSave';\nimport { faFolderOpen } from '@fortawesome/free-solid-svg-icons/faFolderOpen';\nimport { faUnlock } from '@fortawesome/free-solid-svg-icons/faUnlock';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons/faEdit';\nimport { faWindowMaximize } from '@fortawesome/free-regular-svg-icons/faWindowMaximize';\nimport { faMobileAlt } from '@fortawesome/free-solid-svg-icons/faMobileAlt';\nimport { faExpand } from '@fortawesome/free-solid-svg-icons/faExpand';\nimport { faCompressArrowsAlt } from '@fortawesome/free-solid-svg-icons/faCompressArrowsAlt';\nimport { faThumbtack } from '@fortawesome/free-solid-svg-icons/faThumbtack';\nimport { faEye } from '@fortawesome/free-solid-svg-icons/faEye';\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons/faCaretDown';\nimport { faAlignLeft } from '@fortawesome/free-solid-svg-icons/faAlignLeft';\nimport { faClone } from '@fortawesome/free-regular-svg-icons/faClone';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons/faCheck';\nimport { faLevelDownAlt } from '@fortawesome/free-solid-svg-icons/faLevelDownAlt';\nimport { faPaperPlane } from '@fortawesome/free-regular-svg-icons/faPaperPlane';\n\nimport { faChrome } from '@fortawesome/free-brands-svg-icons/faChrome';\nimport { faFirefox } from '@fortawesome/free-brands-svg-icons/faFirefox';\nimport { faDocker } from '@fortawesome/free-brands-svg-icons/faDocker';\nimport { faAndroid } from '@fortawesome/free-brands-svg-icons/faAndroid';\nimport { faApple } from '@fortawesome/free-brands-svg-icons/faApple';\nimport { faSafari } from '@fortawesome/free-brands-svg-icons/faSafari';\nimport { faEdge } from '@fortawesome/free-brands-svg-icons/faEdge';\nimport { faInternetExplorer } from '@fortawesome/free-brands-svg-icons/faInternetExplorer';\nimport { faOpera } from '@fortawesome/free-brands-svg-icons/faOpera';\nimport { faCodeBranch } from '@fortawesome/free-solid-svg-icons/faCodeBranch';\nimport { faNpm } from '@fortawesome/free-brands-svg-icons/faNpm';\nimport { faNodeJs } from '@fortawesome/free-brands-svg-icons/faNodeJs';\nimport { faPhp } from '@fortawesome/free-brands-svg-icons/faPhp';\nimport { faPython } from '@fortawesome/free-brands-svg-icons/faPython';\nimport { faAtom } from '@fortawesome/free-solid-svg-icons/faAtom';\nimport { faGlobe } from '@fortawesome/free-solid-svg-icons/faGlobe';\nimport { faJava } from '@fortawesome/free-brands-svg-icons/faJava';\n\nimport { customSpinnerArc } from './images/custom-spinner';\nimport { braveBrowser } from './images/brave-browser-logo';\nimport { arcBrowser } from './images/arc-browser-logo';\n\nlibrary.add(\n    customSpinnerArc,\n\n    faArrowLeft,\n    faSpinner,\n    faTrashAlt,\n    faSearch,\n    faPlug,\n    faNetworkWired,\n    faDesktop,\n    faTerminal,\n    faQuestion,\n    faTimes,\n    faChevronUp,\n    faChevronDown,\n    faBan,\n    faComment,\n    faToggleOn,\n    faToggleOff,\n    faCopy,\n    faExternalLinkAlt,\n    faPlus,\n    faMinus,\n    faExclamationTriangle,\n    faLightbulb,\n    faCog,\n    faStar,\n    faMagic,\n    faSun,\n    faMoon,\n    faAdjust,\n    faUpload,\n    faDownload,\n    faPlay,\n    faPause,\n    faGem,\n    faTheaterMasks,\n    faGripVertical,\n    faUndo,\n    faSave,\n    faFolderOpen,\n    faUnlock,\n    faEdit,\n    faWindowMaximize,\n    faMobileAlt,\n    faExpand,\n    faCompressArrowsAlt,\n    faThumbtack,\n    faEye,\n    faCaretDown,\n    faAlignLeft,\n    faClone,\n    faCheck,\n    faLevelDownAlt,\n    faPaperPlane,\n\n    faChrome,\n    faFirefox,\n    faDocker,\n    faAndroid,\n    faApple,\n    faSafari,\n    faEdge,\n    faInternetExplorer,\n    faOpera,\n    braveBrowser,\n    arcBrowser,\n    faCodeBranch,\n    faNpm,\n    faNodeJs,\n    faPhp,\n    faPython,\n    faAtom,\n    faGlobe,\n    faJava\n);\n\nexport interface IconProps {\n    icon: ExtendedIconProp;\n    color: string;\n    size?: SizeProp;\n}\n\nexport type SourceIconName = keyof typeof SourceIcons;\n\nexport const SourceIcons = {\n    Chrome: { icon: ['fab', 'chrome'], color: '#1da462' },\n    Chromium: { icon: ['fab', 'chrome'], color: '#4489f4' },\n    Firefox: { icon: ['fab', 'firefox'], color: '#e66000' },\n    Safari: { icon: ['fab', 'safari'], color: '#448aff' },\n    Edge: { icon: ['fab', 'edge'], color: '#2c75be' },\n    IE: { icon: ['fab', 'internet-explorer'], color: '#00baf0' },\n    Opera: { icon: ['fab', 'opera'], color: '#cb0b1e' },\n    Brave: { icon: ['fac', 'brave-browser'], color: '#fb542b' },\n    Arc: { icon: ['fac', 'arc-browser'], color: '#ff536a' },\n    Git: { icon: ['fas', 'code-branch'], color: '#f05033' },\n    Php: { icon: ['fab', 'php'], color: '#8892bf' },\n\n    Ruby: { icon: ['fas', 'gem'], color: '#CC342D' },\n    Faraday: { icon: ['fas', 'gem'], color: '#CC342D' }, // Popular Ruby HTTP lib\n    Excon: { icon: ['fas', 'gem'], color: '#CC342D' }, // Popular Ruby HTTP lib\n    Typhoeus: { icon: ['fas', 'gem'], color: '#CC342D' }, // Popular Ruby HTTP lib\n    Rubybindings: { icon: ['fas', 'gem'], color: '#CC342D' }, // Stripe's Ruby HTTP lib\n\n    Npm: { icon: ['fab', 'npm'], color: '#cc3534' },\n    Node: { icon: ['fab', 'node-js'], color: '#3c873a' },\n    Got: { icon: ['fab', 'node-js'], color: '#3c873a' }, // Popular Node.js HTTP lib\n    Axios: { icon: ['fab', 'node-js'], color: '#3c873a' }, // Popular Node.js HTTP lib\n    Nodebindings: { icon: ['fab', 'node-js'], color: '#3c873a' }, // Stripe's Node.js HTTP lib\n\n    Pip: { icon: ['fab', 'python'], color: '#646464' },\n    Python: { icon: ['fab', 'python'], color: '#4584b6' },\n    Urlfetch: { icon: ['fab', 'python'], color: '#4584b6' }, // Popular Python HTTP lib\n    Pycurl: { icon: ['fab', 'python'], color: '#4584b6' }, // Popular Python HTTP lib\n    Pythonbindings: { icon: ['fab', 'python'], color: '#4584b6' }, // Stripe's Python HTTP lib\n\n    Java: { icon: ['fab', 'java'], color: '#007396' },\n    Reactornetty: { icon: ['fab', 'java'], color: '#007396' }, // Popular Java lib\n    Jetty: { icon: ['fab', 'java'], color: '#007396' }, // Popular Java lib\n    Jakarta: { icon: ['fab', 'java'], color: '#007396' }, // Old name for Apache HttpClient, popular lib\n    Akka: { icon: ['fab', 'java'], color: '#007396' }, // Popular Scala lib\n    Intellij: { icon: ['fab', 'java'], color: '#007396' }, // Java IDE, common target\n    Ktor: { icon: ['fab', 'java'], color: '#007396' }, // Kotlin lib\n    Ahc: { icon: ['fab', 'java'], color: '#007396' }, // AsyncHttpClient, popular Java lib\n\n    Android: { icon: ['fab', 'android'], color: '#78C257' },\n    Okhttp: { icon: ['fab', 'android'], color: '#78C257' }, // Popular Android HTTP lib\n    Fbandroidsdk: { icon: ['fab', 'android'], color: '#78C257' }, // FB Android SDK\n\n    Iphone: { icon: ['fab', 'apple'], color: '#000' },\n    iOS: { icon: ['fab', 'apple'], color: '#000' },\n    Ios: { icon: ['fab', 'apple'], color: '#000' },\n    Ipad: { icon: ['fab', 'apple'], color: '#000' },\n    Darwin: { icon: ['fab', 'apple'], color: '#000' },\n\n    Docker: { icon: ['fab', 'docker'], color: '#0db7ed' },\n    Terminal: { icon: ['fas', 'terminal'], color: '#20c20e' },\n    Network: { icon: ['fas', 'network-wired'], color: '#888' },\n    Electron: { icon: ['fas', 'atom'], color: '#9FEAF9' },\n\n    Desktop: { icon: ['fas', 'desktop'], color: '#888' },\n    Unknown: { icon: ['fas', 'question'], color: '#888' }\n} as const;\n\nimport { FontAwesomeIcon, Props as FAIProps } from '@fortawesome/react-fontawesome';\ntype ExtendedIconProp = IconProp | readonly ['fac', string] | readonly [IconPrefix, IconName];\nexport const Icon = React.memo(\n    FontAwesomeIcon as (props: Omit<FAIProps, 'icon'> & {\n        icon: ExtendedIconProp,\n        onClick?: (event: React.MouseEvent) => void,\n        onKeyPress?: (event: React.KeyboardEvent) => void\n    }) => JSX.Element\n);\nexport type { ExtendedIconProp as IconProp, SizeProp };\n\nexport const SuggestionIcon = styled(Icon).attrs(() => ({\n    icon: ['fas', 'lightbulb']\n}))`\n    margin: 0 6px;\n    color: #2fb4e0;\n`;\n\nexport const suggestionIconHtml = iconHtml(\n    { prefix: 'fas', iconName: 'lightbulb' },\n    {\n        styles: {\n            margin: '0 6px',\n            color: '#2fb4e0'\n        }\n    }\n);\n\nexport const WarningIcon = styled(Icon).attrs(() => ({\n    icon: ['fas', 'exclamation-triangle']\n}))`\n    margin: 0 6px;\n    color: ${p => p.theme.warningColor};\n`;\n\nexport const warningIconHtml = iconHtml(\n    { prefix: 'fas', iconName: 'exclamation-triangle' },\n    {\n        styles: {\n            margin: '0 6px',\n            color: warningColor\n        }\n    }\n);\n\nexport const ArrowIcon = styled(Icon).attrs(() => ({\n    fixedWidth: true,\n    icon: ['fas', 'arrow-left']\n}))`\n    ${(p: { direction: 'left' | 'right' }) =>\n        p.direction === 'right'\n        ? 'transform: rotate(180deg);'\n        : ''\n    }\n    padding: 0 15px;\n`;\n\nfunction iconHtml(iconLookup: IconLookup, options?: IconParams): string {\n    return icon(iconLookup, options).html.join('');\n}","import {\n    IconPrefix,\n    IconDefinition,\n    IconName\n} from '@fortawesome/fontawesome-svg-core';\n\nexport const customSpinnerArc: IconDefinition = {\n    // Based on https://codepen.io/aurer/pen/jEGbA\n    prefix: <IconPrefix>'fac',\n    iconName: <IconName>'spinner-arc',\n    icon: [\n        // height x width\n        50, 50,\n        [],\n        '',\n        // SVG path\n        'M25.251,6.461c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615V6.461z'\n    ]\n};","import {\n    IconPrefix,\n    IconDefinition,\n    IconName\n} from '@fortawesome/fontawesome-svg-core';\n\nexport const braveBrowser: IconDefinition = {\n    prefix: <IconPrefix>'fac',\n    iconName: <IconName>'brave-browser',\n    icon: [\n        // height x width\n        11.1, 13.23,\n        [],\n        '',\n        // SVG path\n        'm 5.53752561206,8.23273389478 c 0.07589,0 0.562136,0.174874 0.952332,0.380547 0.39017,0.205699 0.672941,0.351155 0.76334,0.408778 0.09038,0.05764 0.03526,0.166326 -0.04706,0.225614 -0.08235,0.05928 -1.188755,0.932071 -1.296127,1.028532 -0.107394,0.09649 -0.265189,0.255822 -0.372477,0.255822 -0.107288,0 -0.265105,-0.159332 -0.372478,-0.255822 -0.107393,-0.09646 -1.213784,-0.969245 -1.296127,-1.028532 -0.08235,-0.05928 -0.137439,-0.167962 -0.04706,-0.225614 0.09041,-0.05761 0.37317,-0.203079 0.763368,-0.408778 0.390141,-0.205673 0.876414,-0.380547 0.952305,-0.380547 z m 0.0059,-6.216331 c 0.03726,0.001 0.247208,0.01141 0.547814,0.113516 0.332248,0.112822 0.692182,0.253848 0.858305,0.253848 0.166126,0 1.398212,-0.239745 1.398212,-0.239745 0,0 1.460117,1.798085 1.460117,2.182382 0,0.384295 -0.183677,0.485723 -0.368352,0.6855 -0.184673,0.199778 -0.991233,1.072279 -1.094811,1.18431 -0.103578,0.112061 -0.319207,0.28194 -0.192371,0.587712 0.126834,0.305775 0.313945,0.694866 0.105872,1.089514 -0.208099,0.394647 -0.564572,0.658056 -0.792993,0.614507 -0.228419,-0.04357 -0.764862,-0.329155 -0.962134,-0.459604 -0.197272,-0.130452 -0.822508,-0.655744 -0.822508,-0.856734 0,-0.200962 0.646305,-0.561821 0.765694,-0.643814 0.119441,-0.08196 0.664051,-0.399302 0.67521,-0.523856 0.01115,-0.124579 0.0069,-0.161108 -0.153831,-0.468883 -0.160725,-0.307805 -0.450169,-0.71853 -0.401992,-0.991811 0.04818,-0.273252 0.514985,-0.415351 0.848119,-0.543515 0.333078,-0.128132 0.974454,-0.370165 1.054553,-0.407791 0.08015,-0.03766 0.05946,-0.07349 -0.183289,-0.09695 -0.24268,-0.02344 -0.93143,-0.11657 -1.241942,-0.0284 -0.310514,0.08816 -0.841003,0.222315 -0.883974,0.293448 -0.04297,0.07114 -0.08088,0.07353 -0.03675,0.318918 0.0441,0.245385 0.271308,1.422841 0.293347,1.631983 0.02206,0.209143 0.06521,0.347404 -0.156157,0.398964 -0.221387,0.05155 -0.594031,0.141082 -0.722085,0.141082 -0.128053,0 -0.500724,-0.08953 -0.722085,-0.141082 -0.221388,-0.05155 -0.178251,-0.189821 -0.156185,-0.398964 0.02207,-0.209142 0.249242,-1.386598 0.293376,-1.631983 0.0441,-0.245386 0.0061,-0.247783 -0.03675,-0.318918 -0.04297,-0.07114 -0.573487,-0.205278 -0.884001,-0.293448 -0.310513,-0.08816 -0.999234,0.005 -1.241942,0.0284 -0.242707,0.02344 -0.263418,0.05928 -0.18329,0.09695 0.08012,0.03762 0.721504,0.279654 1.054581,0.407791 0.333108,0.128171 0.799944,0.270263 0.848119,0.543515 0.04818,0.273281 -0.241294,0.684006 -0.401992,0.991811 -0.160724,0.307775 -0.164988,0.3443 -0.153829,0.468883 0.01115,0.124552 0.555766,0.441892 0.675182,0.523856 0.119415,0.08199 0.765693,0.442852 0.765693,0.643814 0,0.20099 -0.625209,0.726284 -0.822481,0.856734 -0.197272,0.130452 -0.733713,0.416028 -0.962134,0.459604 -0.22842,0.04355 -0.584894,-0.21986 -0.792992,-0.614507 -0.20807,-0.394648 -0.02096,-0.783739 0.105846,-1.089514 0.126835,-0.305772 -0.08877,-0.475652 -0.192372,-0.587712 -0.103552,-0.112035 -0.910138,-0.984532 -1.094811,-1.18431 -0.184675,-0.199777 -0.368325,-0.301205 -0.368325,-0.6855 0,-0.384297 1.460119,-2.182382 1.460119,-2.182382 0,0 1.232086,0.239745 1.39821,0.239745 0.166123,0 0.526058,-0.141026 0.858306,-0.253848 0.300606,-0.102072 0.510551,-0.112467 0.547815,-0.113516 z m 5.143909,1.157116 0.304561,-0.761542 c 0,0 -0.387622,-0.423078 -0.858308,-0.902568 -0.470683,-0.479489 -1.467428,-0.197436 -1.467428,-0.197436 l -1.135179,-1.311968 h -1.993525 -1.993488 l -1.135179,1.311968 c 0,0 -0.996745,-0.282053 -1.467428,0.197436 -0.470686,0.47949 -0.858308,0.902568 -0.858308,0.902568 l 0.304561,0.761542 -0.387622,1.128209 c 0,0 1.140025,4.398751 1.273616,4.935921 0.263029,1.057696 0.442998,1.466672 1.190555,2.002574 0.747558,0.535898 2.104237,1.466672 2.325735,1.607698 0.221498,0.141026 0.498373,0.38125 0.747558,0.38125 0.249185,0 0.52606,-0.240224 0.747558,-0.38125 0.221498,-0.141026 1.578177,-1.0718 2.325735,-1.607698 0.747557,-0.535902 0.927525,-0.944878 1.190555,-2.002574 0.133563,-0.53717 1.273616,-4.935921 1.273616,-4.935921 z'\n    ]\n};","import {\n    IconPrefix,\n    IconDefinition,\n    IconName\n} from '@fortawesome/fontawesome-svg-core';\n\nexport const arcBrowser: IconDefinition = {\n    prefix: <IconPrefix>'fac',\n    iconName: <IconName>'arc-browser',\n    icon: [\n        // height x width\n        56.4, 67.36,\n        [],\n        '',\n        // SVG path\n        'm 58.458706,45.75 -3.5,-7.36 -6.63,-13.95 -0.01,0.01 c 0,0 0,-0.01 0.01,-0.01 l -9.64,-20.28 a 7.292,7.292 0 0 0 -6.58,-4.16 c -2.81,0 -5.37,1.62 -6.58,4.16 l -9.83,20.68 c 2.76,3.65 7.64,6.65 12.49,7.68 l 3.18,-6.68 c 0.3,-0.63 1.2,-0.63 1.5,0 l 3.11,6.54 h 0.02 -0.02 l 6.33,13.32 3.11,6.54 a 7.28,7.28 0 0 0 6.59,4.16 c 0.65,0 1.3,-0.09 1.94,-0.27 4.39,-1.21 6.47,-6.26 4.51,-10.38 m -22.49,-13.37 c -1.42,0.34 -2.87,0.52 -4.32,0.52 -1.13,0 -2.3,-0.13 -3.47,-0.38 -4.85,-1.03 -9.73,-4.03 -12.49,-7.68 -0.69,-0.91 -1.25,-1.86 -1.64,-2.83 -1.51,-3.73 -5.7600005,-5.53 -9.4900005,-4.03 -3.73000009,1.51 -5.53000009,5.76 -4.03000009,9.49 C 2.2387054,31.71 5.2587055,35.6 9.0487055,38.8 a 37.84,37.84 0 0 0 12.7700005,7.08 c 3.21,1.03 6.54,1.6 9.82,1.6 3.64,0 7.23,-0.63 10.65,-1.78 z m 25.54,-23.1800005 a 7.29,7.29 0 0 0 -8.58,5.7200005 c -0.7,3.5 -2.34,6.759999 -4.6,9.53 l 6.63,13.96 c 6.12,-5.31 10.64,-12.54 12.26,-20.63 0.79,-3.96 -1.77,-7.8000005 -5.71,-8.5800005 M 9.0487055,38.8 l -3.32,6.98 c -1.69,3.549999 -0.42,7.92 3.06,9.769999 3.6900005,1.96 8.2300005,0.43 10.0100005,-3.299999 l 3.03,-6.37 A 37.885,37.885 0 0 1 9.0487055,38.8'\n    ]\n};","import * as Remarkable from 'remarkable';\nimport * as DOMPurify from 'dompurify';\n\nimport { Html } from '../../types';\n\nconst md = new Remarkable({\n    html: true,\n    linkify: true,\n    linkTarget: '_blank' // Links should always open elsewhere\n});\n\n// Add an extra hook to DOMPurify to enforce link target. Without this, DOMPurify strips\n// every link target entirely.\nDOMPurify.addHook('afterSanitizeAttributes', function (node: Element | HTMLElement) {\n    // Closely based on example from https://github.com/cure53/DOMPurify/tree/main/demos#hook-to-open-all-links-in-a-new-window-link\n\n    // Set all elements owning target to target=_blank\n    if (node.hasAttribute('target') || 'target' in node) {\n        node.setAttribute('target', '_blank');\n        node.setAttribute('rel', 'noreferrer'); // Disables both referrer & opener\n    }\n\n    // set non-HTML/MathML links to xlink:show=new\n    if (\n        !node.hasAttribute('target') &&\n        (node.hasAttribute('xlink:href') || node.hasAttribute('href'))\n    ) {\n        node.setAttribute('xlink:show', 'new');\n    }\n});\n\n// Add an extra hook to strip relative URLs (markdown largely comes from external sources,\n// and so should never include relative paths!)\nDOMPurify.addHook('afterSanitizeAttributes', function (node: Element | HTMLElement) {\n    if (node.hasAttribute('href')) {\n        const target = node.getAttribute('href');\n        if (target?.startsWith('/')) node.removeAttribute('href');\n    }\n});\n\nexport function fromMarkdown(input: string): Html;\nexport function fromMarkdown(input: string | undefined): Html | undefined;\nexport function fromMarkdown(input: string | undefined): Html | undefined {\n    if (!input) return undefined;\n    else {\n        const unsafeMarkdown = md.render(input).replace(/\\n$/, '');\n        const safeHtml = DOMPurify.sanitize(unsafeMarkdown);\n        return { __html: safeHtml };\n    }\n}","import * as localForage from 'localforage';\nimport * as semver from 'semver';\n\nimport { RUNNING_IN_WORKER } from '../util';\nimport { lazyObservablePromise } from \"../util/observable\";\nimport { getServerVersion, waitUntilServerReady } from \"./server-api\";\nimport { getDesktopInjectedValue } from \"./desktop-api\";\n\nexport const UI_VERSION = process.env.UI_VERSION || \"Unknown\";\n\nexport const desktopVersion = lazyObservablePromise(async () => {\n    return getDesktopInjectedValue('httpToolkitDesktopVersion');\n    // Note that if we're running in a browser, not the desktop shell, this _never_ resolves.\n});\n\n// The current server version, directly checked against the running\n// server, not available until it starts up.\nexport const serverVersion = lazyObservablePromise(() =>\n    waitUntilServerReady()\n        .then(getServerVersion)\n        .then((version) => {\n            localForage.setItem('last-server-version', version);\n            return version;\n        })\n);\n\n// The last known service version - immediately available (though still async),\n// but reports the previous startup version, not necessarily the latest one.\n// May be undefined if the app has never yet started successfully.\nexport const lastServerVersion =\n    localForage.getItem<string>('last-server-version')\n    // Fallback to previous localStorage data approach, just in case\n    .then((version) => {\n        if (!version && !RUNNING_IN_WORKER) {\n            return localStorage.getItem('last-server-version')\n        }\n        else return version;\n    });\n\nexport function versionSatisfies(version: string | Error | undefined, range: string) {\n    return (typeof version === 'string') &&\n        semver.satisfies(version, range, { includePrerelease: true });\n}\n\n// Notable desktop versions:\nexport const DESKTOP_HEADER_LIMIT_CONFIGURABLE = \"^0.1.20 || ^1.0.0\";\n\n// Notable server versions:\nexport const PORT_RANGE_SERVER_RANGE = '^0.1.14 || ^1.0.0';\nexport const MOCK_SERVER_RANGE = '^0.1.21 || ^1.0.0';\nexport const HOST_MATCHER_SERVER_RANGE = '^0.1.22 || ^1.0.0';\nexport const CLIENT_CERT_SERVER_RANGE = '^0.1.26 || ^1.0.0';\nexport const FROM_FILE_HANDLER_SERVER_RANGE = '^0.1.28 || ^1.0.0';\nexport const DETAILED_CONFIG_RANGE = '^0.1.30 || ^1.0.0';\nexport const INTERCEPTOR_METADATA = '^0.1.31 || ^1.0.0';\nexport const INITIAL_HTTP2_RANGE = '^0.1.44 || ^1.0.0';\nexport const BODY_MATCHING_RANGE = '^1.1.4';\nexport const WEBSOCKET_RULE_RANGE = '^1.1.3';\nexport const DETAILED_METADATA = '^1.2.0';\nexport const PASSTHROUGH_TRANSFORMS_RANGE = '^1.4.0';\nexport const PROXY_CONFIG_RANGE = '^1.4.1';\nexport const CLOSE_IN_BREAKPOINT = '^1.4.2';\nexport const DNS_AND_RULE_PARAM_CONFIG_RANGE = '^1.5.0';\nexport const DOCKER_INTERCEPTION_RANGE = '^1.5.0';\nexport const CUSTOM_CA_TRUST_RANGE = '^1.7.0';\nexport const MULTIPLE_EXISTING_TERMINAL_RANGE = '^1.8.0';\nexport const RAW_BODY_SUPPORTED = '^1.9.0';\nexport const WEBSOCKET_MESSAGING_RULES_SUPPORTED = '^1.9.0';\nexport const WEBRTC_GLOBALLY_ENABLED = '^1.10.3';\nexport const JSONRPC_RESPONSE_RULE_SUPPORTED = '^1.11.0';\nexport const RTC_RULES_SUPPORTED = '^1.11.0';\nexport const TLS_PASSTHROUGH_SUPPORTED = '^1.12.0';\nexport const CONNECTION_RESET_SUPPORTED = '^1.12.0';\nexport const SERVER_REST_API_SUPPORTED = '^1.13.0';\nexport const SERVER_SEND_API_SUPPORTED = '^1.13.0';","import { observable, computed } from 'mobx';\n\nimport {\n    FailedTlsConnection,\n    TlsTunnel,\n    HttpExchange,\n    RTCConnection,\n    RTCDataChannel,\n    RTCMediaTrack,\n    WebSocketStream\n} from '../../types';\n\nimport { getEventCategory } from './categorization';\n\nexport abstract class HTKEventBase {\n\n    abstract get id(): string;\n\n    // These can be overriden by subclasses to allow easy type narrowing:\n    isHttp(): this is HttpExchange { return false; }\n    isWebSocket(): this is WebSocketStream { return false; }\n\n    isTlsFailure(): this is FailedTlsConnection { return false; }\n    isTlsTunnel(): this is TlsTunnel { return false; }\n\n    isRTCConnection(): this is RTCConnection { return false; }\n    isRTCDataChannel(): this is RTCDataChannel { return false; }\n    isRTCMediaTrack(): this is RTCMediaTrack { return false; }\n\n    @computed\n    public get category() {\n        return getEventCategory(this);\n    }\n\n    @observable\n    public searchIndex: string = '';\n\n    @observable\n    public pinned: boolean = false;\n\n    // Logic elsewhere can put values into these caches to cache calculations\n    // about this event weakly, so they GC with the event.\n    // Keyed by symbols only, so we know we never have conflicts.\n    public cache = observable.map(new Map<symbol, unknown>(), { deep: false });\n\n}","import * as _ from 'lodash';\nimport * as React from 'react';\n\nimport { styled } from '../../styles';\nimport { Icon } from '../../icons';\nimport { useSize } from '../../util/ui';\n\nconst VisibleButtonsContainer = styled.div`\n    overflow: hidden;\n    display: flex;\n    flex-direction: inherit;\n`;\n\nconst HiddenButtonsWrapper = styled.div`\n    position: relative;\n`;\n\nconst HiddenButtonsContainer = styled.div`\n    position: absolute;\n    left: 0;\n    top: 100%;\n    z-index: 1;\n    display: flex;\n    flex-direction: column;\n\n    background-color: ${p => p.theme.mainBackground};\n    padding-bottom: 2px;\n\n    opacity: 0;\n    pointer-events: none;\n    &:hover, &:focus-within {\n        opacity: 1;\n        pointer-events: auto;\n    }\n`;\n\nconst ButtonContainer = styled.div`\n    flex-grow: 1;\n    flex-shrink: 1;\n    min-width: 0;\n\n    position: relative;\n    display: flex;\n\n    /* Try to avoid button padding expanding outer containers */\n    margin: -5px -9px;\n\n    /* Match the parent (typically card header) flex direction, but justify\n       content in the opposite direction */\n    flex-direction: inherit;\n    justify-content: flex-start;\n`;\n\nconst MenuButton = styled(Icon)`\n    color: ${p => p.theme.mainColor};\n    font-size: ${p => p.theme.textSize};\n    padding: 5px 10px;\n\n    &:hover + ${HiddenButtonsContainer} {\n        opacity: 1;\n        pointer-events: auto;\n    }\n`;\n\nfunction unfocus() {\n    if ('blur' in (document.activeElement || {})) {\n        (document.activeElement as HTMLElement).blur();\n    }\n}\n\nexport const CollapsingButtons = (p: { children: React.ReactNode, className?: string }) => {\n    const containerRef = React.useRef<HTMLDivElement>(null);\n    const spaceAvailable = useSize(containerRef, Infinity);\n\n    containerRef.current?.children\n\n    const childElements = Array.from(\n        containerRef.current?.querySelectorAll('button') || []\n    );\n    const itemWidth = _.max(childElements.map(c => c.clientWidth));\n    const itemSpacesAvailable = itemWidth\n        ? Math.max(Math.floor(spaceAvailable / itemWidth), 1) // Always show at least one button\n        : Infinity;\n\n    const children = React.Children.toArray(p.children);\n\n    const [visibleChildren, hiddenChildren] = itemSpacesAvailable >= children.length\n        ? [children, []]\n        : [children.slice(0, itemSpacesAvailable - 1), children.slice(itemSpacesAvailable - 1)]\n\n    return <ButtonContainer ref={containerRef} className={p.className}>\n        <VisibleButtonsContainer>\n            { visibleChildren }\n        </VisibleButtonsContainer>\n        { hiddenChildren.length > 0 && <HiddenButtonsWrapper>\n            <MenuButton\n                icon={['fas', 'caret-down']}\n                title=\"Show more\"\n            />\n            <HiddenButtonsContainer\n                // Need to ensure that the menu doesn't stick open if you click an item\n                onClick={unfocus}\n            >\n                { hiddenChildren }\n            </HiddenButtonsContainer>\n        </HiddenButtonsWrapper> }\n    </ButtonContainer>\n};","import * as React from 'react';\n\nimport { IconButton } from './icon-button';\nimport { ExpandState } from './card';\n\nexport const ExpandShrinkButton = (p: {\n    expanded: ExpandState | undefined,\n    onClick: () => void\n}) =>\n    <IconButton\n        icon={[\n            'fas',\n            p.expanded ? 'compress-arrows-alt' : 'expand'\n        ]}\n        onClick={p.onClick}\n        title={\n            p.expanded\n                ? \"Shrink this area, so you can see other details\"\n                : \"Expand this area to view it in more detail, hiding other areas\"\n        }\n    />"],"sourceRoot":""}